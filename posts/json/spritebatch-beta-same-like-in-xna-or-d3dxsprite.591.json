{"post_stream":{"posts":[{"id":3271,"name":"","username":"simple","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/e36b37/{size}.png","created_at":"2014-11-27T10:40:39.000Z","cooked":"\u003cp\u003eHello i made SpriteBatch class which are almost same like in XNA or D3DXSprite.\u003c/p\u003e\n\u003cp\u003eHow to use this:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003espritebatch = new SpriteBatch(context);\nspritebatch-\u0026gt;Initialize();\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003ethese lines you must have to write somewhere in Start();\u003cbr\u003e\nInitialize(numBatchs,numQuads); just create vertexbuffers and adding events.\u003cbr\u003e\nnumBatchs - maximum of texture changes.\u003cbr\u003e\nnumQuads - maximum of quads, possible maximum is 16300.\u003c/p\u003e\n\u003cp\u003eHow to render (write this somewhere in OnHandleSceneUpdate):\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003e// start draw\nspritebatch-\u0026gt;Begin();\n// set a blend\nspritebatch-\u0026gt;SetBlendMode(BLEND_ALPHA);\n// draw a texture\nspritebatch-\u0026gt;Draw(texture,Rect(0,0,100,100),Rect(0,0,256,256),color);\nspritebatch-\u0026gt;Draw(texture,Rect(100,100,200,200),Rect(0,0,256,256),rotation,origin,scale,color,SpriteBatch::SBFX_NONE);\n// draw a text\nspritebatch-\u0026gt;DrawString(font,24,Vector2(10,10),\"Hello World\",11,color,SpriteBatch::TFX_NONE);\n// draw a center text\nspritebatch-\u0026gt;DrawString(font,24,Vector2(400,10),\"Hello World\",11,color,SpriteBatch::TFX_HCENTER);\n// draw a text using L\"\u0026lt;text\u0026gt;\" thing, because use TFX_UNICODE16.\nspritebatch-\u0026gt;DrawString(font,24,Vector2(10,10),L\"Hello World\",11,color,SpriteBatch::TFX_UNICODE16);\n// draw a frame from texture from rect (0,0,96,96) and with borders (32,32,32,32)\nspritebatch-\u0026gt;DrawFrame(texture,Rect(200,200,300,300),Rect(0,0,96,96),Rect(32,32,32,32),color);\n// end of draw\nspritebatch-\u0026gt;End();\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eDraw() - function draw a texture.\u003cbr\u003e\nDrawString() - function draw a text (ttf working weird, only works with bitmapfonts 32bit).\u003cbr\u003e\nDrawFrame() - draw a frame.\u003c/p\u003e\n\u003cp\u003eAuto rescaling functions: (write somewhere around initialize() )\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003e// now sprites will be rescaled to 800,600 and centrize if needed (similar like in flashplayer).\nspritebatch-\u0026gt;SetScreenSize(800,600);\n// convert screen positions to rescaled position\nVector2 rs = spritebatch-\u0026gt;GetPointTo(Vector2(mousex,mousey));\n// convert rescaled position to screen position\nVector2 s = spritebatch-\u0026gt;GetPointFrom(Vector2(0,0));\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eModifying exist draw() functions.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003espritebatch-\u0026gt;PushModifier();\nspritebatch-\u0026gt;Draw(texture,Rect(0,0,100,100),Rect(0,0,256,256),color);\n// do gradient\nspritebatch-\u0026gt;ModifyGradientH(Color::WHITE,Color::RED);\n// transformations\nspritebatch-\u0026gt;ModifyPRS(position,rotation,scale);\n// etc\nspritebatch-\u0026gt;PopModifier();\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003esorry for english.\u003cbr\u003e\n\u003ca href=\"https://drive.google.com/file/d/0B-0l276DEh6XTVBCZTUzR19kNFk/view\" rel=\"nofollow noopener\"\u003edrive.google.com/file/d/0B-0l27 … 9kNFk/view\u003c/a\u003e\u003c/p\u003e","post_number":1,"post_type":1,"updated_at":"2017-01-02T01:01:33.587Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":108,"reads":34,"readers_count":33,"score":561.8,"yours":false,"topic_id":591,"topic_slug":"spritebatch-beta-same-like-in-xna-or-d3dxsprite","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"link_counts":[{"url":"https://drive.google.com/file/d/0B-0l276DEh6XTVBCZTUzR19kNFk/view","internal":false,"reflection":false,"title":"UrhoSpriteBatch.zip - Google Drive","clicks":9},{"url":"https://discourse.urho3d.io/t/curved-text/2034/15","internal":true,"reflection":true,"title":"Curved Text","clicks":0},{"url":"https://discourse.urho3d.io/t/terraria-like-game-in-urho3d/1698","internal":true,"reflection":true,"title":"Terraria-like game in Urho3D","clicks":0},{"url":"http://discourse.urho3d.io/t/draw-on-sprites/1652/7","internal":true,"reflection":true,"title":"Draw on sprites","clicks":0},{"url":"http://discourse.urho3d.io/t/draw-on-sprites/1652/6","internal":true,"reflection":true,"title":"Draw on sprites","clicks":0}],"read":true,"user_title":null,"bookmarked":false,"actions_summary":[{"id":2,"count":1}],"moderator":false,"admin":false,"staff":false,"user_id":142,"hidden":false,"trust_level":1,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":3807,"name":"","username":"v0van1981","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/v/13edae/{size}.png","created_at":"2014-12-29T10:54:35.000Z","cooked":"\u003cp\u003eHow to drawing under UI? Is there any way draw 3d model over SpriteBatch?\u003c/p\u003e","post_number":2,"post_type":1,"updated_at":"2017-01-02T01:02:14.881Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":0,"reads":27,"readers_count":26,"score":5.4,"yours":false,"topic_id":591,"topic_slug":"spritebatch-beta-same-like-in-xna-or-d3dxsprite","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":183,"hidden":false,"trust_level":1,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":3814,"name":"","username":"Hevedy","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/h/7feea3/{size}.png","created_at":"2014-12-29T17:09:24.000Z","cooked":"\u003caside class=\"quote no-group\" data-username=\"v0van1981\"\u003e\n\u003cdiv class=\"title\"\u003e\n\u003cdiv class=\"quote-controls\"\u003e\u003c/div\u003e\n\u003cimg alt=\"\" width=\"20\" height=\"20\" src=\"https://avatars.discourse-cdn.com/v4/letter/v/13edae/40.png\" class=\"avatar\"\u003e v0van1981:\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003eHow to drawing under UI? Is there any way draw 3d model over SpriteBatch?\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/aside\u003e\n\u003cp\u003eThis looks like a problem with vector3 z ?\u003cbr\u003e\nNo idea, but looks like the engine use z in 2D like a depth pos and all vector3 in this code point to 0 and the camera is in -10.0f ?\u003c/p\u003e","post_number":3,"post_type":1,"updated_at":"2017-01-02T01:02:15.382Z","reply_count":0,"reply_to_post_number":null,"quote_count":1,"incoming_link_count":0,"reads":31,"readers_count":30,"score":6.2,"yours":false,"topic_id":591,"topic_slug":"spritebatch-beta-same-like-in-xna-or-d3dxsprite","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":25,"hidden":false,"trust_level":1,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":6530,"name":"","username":"v0van1981","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/v/13edae/{size}.png","created_at":"2015-06-23T18:57:25.000Z","cooked":"\u003cp\u003eI’m trying to modify the code so that the spritebatch does not overlap models in 3d space. (I’m trying to enable depth test.)\u003c/p\u003e\n\u003cp\u003eSpriteBatch.h\u003c/p\u003e\n\u003cp\u003e[code]\u003cspan class=\"hashtag\"\u003e#ifndef\u003c/span\u003e \u003cem\u003eSPRITEBATCH_H\u003c/em\u003e\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#define\u003c/span\u003e \u003cem\u003eSPRITEBATCH_H\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003e\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u003c/p\u003e\n\u003cp\u003enamespace Urho3D\u003cbr\u003e\n{\u003cbr\u003e\nclass\tTexture2D;\u003cbr\u003e\nclass\tFont;\u003cbr\u003e\nclass\tVertexBuffer;\u003cbr\u003e\nclass\tIndexBuffer;\u003cbr\u003e\nclass\tGraphics;\u003cbr\u003e\nclass\tSpriteBatch : public Object\u003cbr\u003e\n{\u003cbr\u003e\npublic:\u003cbr\u003e\nOBJECT(SpriteBatch);\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e\tpublic:\n\t\tstruct\t\tVERTEX\n\t\t{\n\t\t\tVector3\t\tpos;\n\t\t\tint\t\t\tcolor;\n\t\t\tVector2\t\tuv;\n\t\t};\n\t\tstruct\t\tBATCH\n\t\t{\n\t\t\tSharedPtr\u0026lt;Texture2D\u0026gt;\tpTexture;\n\t\t\tint\t\t\t\t\t\tiBlendMode;\n\t\t\tunsigned int\t\t\tiStart,iCount;\n\t\t};\n\t\tenum\n\t\t{\n\t\t\tSBFX_NONE\t\t\t=\t0,\n\t\t\tSBFX_FLIPH\t\t\t=\t1,\n\t\t\tSBFX_FLIPV\t\t\t=\t2,\n\t\t\tSBFX_FLIPHV\t\t\t=\t3,\n\t\t};\n\t\tenum\n\t\t{\n\t\t\tTFX_NONE\t\t\t=\t0,\n\t\t\tTFX_VTOP\t\t\t=\t0,\n\t\t\tTFX_VCENTER\t\t\t=\t1,\n\t\t\tTFX_VBOTTOM\t\t\t=\t2,\n\t\t\tTFX_HLEFT\t\t\t=\t0,\n\t\t\tTFX_HCENTER\t\t\t=\t4,\n\t\t\tTFX_HRIGHT\t\t\t=\t8,\n\t\t\tTFX_UNICODE16\t\t=\t16,\n\t\t};\n\n\tpublic:\n\t\tSpriteBatch(Context *context);\n\t\tvirtual ~SpriteBatch();\n\tpublic:\n\t\t// Size of screen where sprites will be drawn.\n\t\t// If width,height are lower than graphics-\u0026gt;width,graphics-\u0026gt;height\n\t\t// then class automatic rescale up and centrize (similar like in flashplayer).\n\t\t// if width,height will be 0, then graphics-\u0026gt;width,graphis-\u0026gt;height will be set.\n\t\tvoid\t\t\t\t\t\tSetScreenSize(float fWidth=800,float fHeight=600);\n\t\t// convert screen positions to rescaled position\n\t\tVector2\t\t\t\t\t\tGetPointTo(const Vector2 \u0026amp;screen);\n\t\t// convert rescaled position to screen position\n\t\tVector2\t\t\t\t\t\tGetPointFrom(const Vector2 \u0026amp;view);\n\n\t\t// start modify sprites\n\t\tvoid\t\t\t\t\t\tPushModifier();\n\t\t// modify sprites, modify functions must be between PushModifier()...Draw()...\u0026lt;here\u0026gt;...PopModifier().\n\t\tbool\t\t\t\t\t\tModifyPRS(const Vector2 \u0026amp;pos=Vector2::ZERO,float rotation=0,const Vector2 \u0026amp;scale=Vector2::ONE);\n\t\tbool\t\t\t\t\t\tModifyTransform(const Matrix4 \u0026amp;matrix);\n\t\tbool\t\t\t\t\t\tModifyColor(const Color \u0026amp;color=Color::WHITE);\n\t\tbool\t\t\t\t\t\tModifyGradientH(const Color \u0026amp;color_up=Color::WHITE,const Color \u0026amp;color_down=Color::RED);\n\t\tbool\t\t\t\t\t\tModifyGradientV(const Color \u0026amp;color_lf=Color::WHITE,const Color \u0026amp;color_rg=Color::RED);\n\t\t// end of modify sprites\n\t\tvoid\t\t\t\t\t\tPopModifier();\n\n\t\t// initialize, create vertexbuffer and add event to render, must be called after constructor.\n\t\tbool\t\t\t\t\t\tInitialize(unsigned int iBatchMax=512,unsigned int iQuadsMax=16300);\n\t\t// begin()...end() between them, must be all Draw() functions\n\t\tbool\t\t\t\t\t\tBegin();\n\t\t// change blendmode\n\t\tvoid\t\t\t\t\t\tSetBlendMode(int blendmode);\n\t\t// draw sprite\n\t\tbool\t\t\t\t\t\tDraw(Texture2D *texture,const Rect \u0026amp;dest,const Color \u0026amp;color);\n\t\tbool\t\t\t\t\t\tDraw(Texture2D *texture,const Rect \u0026amp;dest,const Rect \u0026amp;src,const Color \u0026amp;color);\n\t\tbool\t\t\t\t\t\tDraw(Texture2D *texture,const Rect \u0026amp;dest,const Rect \u0026amp;src,const Color \u0026amp;color,float rotation,const Vector2 \u0026amp;origin=Vector2::ZERO,const Vector2 \u0026amp;scale=Vector2::ONE,int SpriteEffect = SBFX_NONE);\n\t\tbool\t\t\t\t\t\tDraw(Texture2D *texture,const Vector2 \u0026amp;dest,const Color \u0026amp;color);\n\t\tbool\t\t\t\t\t\tDraw(Texture2D *texture,const Vector2 \u0026amp;dest,const Rect \u0026amp;src,const Color \u0026amp;color);\n\t\tbool\t\t\t\t\t\tDraw(Texture2D *texture,const Vector2 \u0026amp;dest,const Rect \u0026amp;src,const Color \u0026amp;color,float rotation,const Vector2 \u0026amp;origin=Vector2::ZERO,const Vector2 \u0026amp;scale=Vector2::ONE,int SpriteEffect = SBFX_NONE);\n\n\t\t// get x-size in pixels of textline\n\t\tfloat\t\t\t\t\t\tGetWidthString(Font *font,int fontsize,const void *text,unsigned int textlength,int TextEffect = TFX_NONE);\n\t\t// get y-size in pixels of text\n\t\tfloat\t\t\t\t\t\tGetHeightString(Font *font,int fontsize,const void *text,unsigned int textlength,int TextEffect = TFX_NONE);\n\t\t// draw text (TTF may not working like expected, tested only on bitmapfonts with 32bit color)\n\t\t// if texteffect will be TFX_UNICODE16 then text parameter must be: L\"HelloWorld\"\n\t\tbool\t\t\t\t\t\tDrawString(Font *font,int fontsize,const Vector2 \u0026amp;dest,const void *text,unsigned int textlength,const Color \u0026amp;color,int TextEffect = TFX_NONE);\n\t\t// draw text with transformations (TTF may not working like expected, tested only on bitmapfonts with 32bit color)\n\t\tbool\t\t\t\t\t\tDrawString(Font *font,int fontsize,const Vector2 \u0026amp;dest,const void *text,unsigned int textlength,const Color \u0026amp;color,float rotation,const Vector2 \u0026amp;origin=Vector2::ZERO,const Vector2 \u0026amp;scale=Vector2::ONE,int TextEffect = TFX_NONE);\n\n\t\t// draw frame (drawframe(tex,Rect(0,0,100,100),Rect(0,0,96,96),Rect(32,32,32,32),color::white)\n\t\tvoid\t\t\t\t\t\tDrawFrame(Texture2D *texture,const Rect \u0026amp;dest,const Rect \u0026amp;src,const Rect \u0026amp;borders,const Color \u0026amp;color);\n\t\t// begin()...end() between them, must be all Draw() functions\n\t\tvoid\t\t\t\t\t\tEnd();\n\t\tvoid SetView(Camera* camera, Engine* engine);\n\n\t\tvoid\t\t\t\t\t\tOnRender(StringHash eventType, VariantMap\u0026amp; eventData);\n\n\tprotected:\n\n\tprivate:\n\t\tBATCH*\t\t\t\t\t\tGetBatch(Texture2D *texture,int iBlendMode);\n\t\tstatic float\t\t\t\tCalculateFixedScreenSize(float sw,float sh,float vw,float vh,float *ret);\n\n\t\tstd::vector\u0026lt;unsigned int\u0026gt;\tmodifiers_;\n\t\tGraphics*\t\t\t\t\tgraphics_;\n\t\tSharedPtr\u0026lt;VertexBuffer\u0026gt;\t\tvb_;\n\t\tBATCH*\t\t\t\t\t\tbatch_;\n\t\tunsigned int\t\t\t\tmaxbatch_,maxquads_,ibatch_,icount_;\n\t\tVERTEX*\t\t\t\t\t\tvertex_;\n\t\tint\t\t\t\t\t\t\tblendmode_;\n\t\tfloat\t\t\t\t\t\tviewWidth_,viewHeight_;\n\t\tfloat\t\t\t\t\t\tviewCalc_[5];\n\n\t\tCamera* camera_;\n\t\tEngine* engine_;\n\n};\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e};\u003c/p\u003e\n\u003cp\u003e\u003cspan class=\"hashtag\"\u003e#endif\u003c/span\u003e\u003cbr\u003e\n[/code]\u003c/p\u003e\n\u003cp\u003eSpriteBatch.cpp\u003c/p\u003e\n\u003cp\u003e[code]\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “stdafx.h”\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “SpriteBatch.h”\u003c/p\u003e\n\u003cp\u003e\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;stdio.h\u0026gt;\u003c/p\u003e\n\u003cp\u003enamespace Urho3D\u003cbr\u003e\n{\u003cbr\u003e\nstatic\tint\t\t\t g_iIB = 0;\u003cbr\u003e\nstatic\tIndexBuffer\t*g_pIB = 0;\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eSpriteBatch::SpriteBatch(Context *context) : Object(context)\n{\n\tblendmode_ = BLEND_ALPHA;\n\tvertex_ = 0;\n\tgraphics_ = 0;\n\tbatch_ = 0;\n\tmaxbatch_ = maxquads_ = ibatch_ = icount_ = 0;\n\tviewWidth_ = 800;\n\tviewHeight_ = 600;\n\tviewCalc_[0] = viewCalc_[1] = 0;\n\tviewCalc_[2] = 800;\tviewCalc_[3] = 600;\tviewCalc_[4] = 1;\n\n\tif (g_iIB == 0)\n\t{\n\t\t// only one time we create indexbuffer for save memory\n\t\tg_pIB = new IndexBuffer(context);\n\t\tg_pIB-\u0026gt;SetShadowed(true);\n\t\tg_pIB-\u0026gt;SetSize(16300 * 6, false);\n\t\tunsigned short *index = (unsigned short *)g_pIB-\u0026gt;Lock(0, 16300 * 6);\n\t\tif (index)\n\t\t{\n\t\t\tint s = 0;\n\t\t\tfor (unsigned int i = 0; i \u0026lt; 16300; i++)\n\t\t\t{\n\t\t\t\tindex[(i * 6) + 0] = s + 0;\t\tindex[(i * 6) + 1] = s + 1;\t\tindex[(i * 6) + 2] = s + 2;\n\t\t\t\tindex[(i * 6) + 3] = s + 2;\t\tindex[(i * 6) + 4] = s + 1;\t\tindex[(i * 6) + 5] = s + 3;\n\t\t\t\ts += 4;\n\t\t\t};\n\t\t};\n\t\tg_pIB-\u0026gt;Unlock();\n\t};\n\tg_iIB++;\n}\n\nSpriteBatch::~SpriteBatch()\n{\n\tUnsubscribeFromEvent(graphics_, E_ENDRENDERING);\n\tmodifiers_.clear();\n\tif (batch_) delete[] batch_;\n\tvb_.Reset();\n\n\tg_iIB--;\n\tif (g_iIB \u0026lt;= 0)\n\t{\n\t\tif (g_pIB) delete g_pIB;\n\t\tg_pIB = 0;\n\t\tg_iIB = 0;\n\t};\n}\n\nSpriteBatch::BATCH* SpriteBatch::GetBatch(Texture2D *texture, int iBlendMode)\n{\n\tif (icount_ \u0026gt;= (maxquads_ - 1) * 4 || texture == 0) return 0;\n\tBATCH *b = \u0026amp;batch_[ibatch_];\n\tif (b-\u0026gt;pTexture == texture \u0026amp;\u0026amp; b-\u0026gt;iBlendMode == iBlendMode) return b;\n\tif (ibatch_ \u0026gt;= maxbatch_) return 0;\n\tibatch_++;\n\tbatch_[ibatch_].pTexture = texture;\n\tbatch_[ibatch_].iBlendMode = iBlendMode;\n\tbatch_[ibatch_].iStart = icount_;\n\tbatch_[ibatch_].iCount = 0;\n\treturn \u0026amp;batch_[ibatch_];\n};\n\nfloat SpriteBatch::CalculateFixedScreenSize(float sw, float sh, float vw, float vh, float *ret)\n{\n\tfloat sAspect = sw / sh;\n\tfloat vAspect = vw / vh;\n\tfloat scale = 1;\n\n\tret[0] = ret[1] = 0;  ret[2] = vw;  ret[3] = vh;\n\tif (sAspect \u0026gt; vAspect)\n\t{\n\t\tscale = sh / vh;\n\t\tret[0] = (sw - vw*scale)*0.5f;\n\t}\n\telse if (sAspect \u0026lt; vAspect) {\n\t\tscale = sw / vw;\n\t\tret[1] = (sh - vh*scale)*0.5f;\n\t}\n\telse {\n\t\tscale = sw / vw;\n\t};\n\tret[2] *= scale; ret[3] *= scale;\n\tret[4] = scale;\n\n\t//glViewport(ret[0], ret[1], ret[2], ret[3]);\n\t//glOrtho(0,0,vw,vh);\n\treturn scale;\n};\n\nVector2 SpriteBatch::GetPointTo(const Vector2 \u0026amp;screen)\n{\n\treturn Vector2((screen.x_ - viewCalc_[0]) * (1.0f / viewCalc_[4]), (screen.y_ - viewCalc_[1]) * (1.0f / viewCalc_[4]));\n};\n\nVector2 SpriteBatch::GetPointFrom(const Vector2 \u0026amp;view)\n{\n\treturn Vector2((view.x_*viewCalc_[4]) + viewCalc_[0], (view.y_*viewCalc_[4]) + viewCalc_[1]);\n};\n\nbool SpriteBatch::Begin()\n{\n\tibatch_ = icount_ = 0;\n\tif (!vertex_) vertex_ = (VERTEX *)vb_-\u0026gt;Lock(0, maxquads_ * 4);\n\treturn (vertex_ != 0);\n};\n\nvoid SpriteBatch::End()\n{\n\tif (vertex_)\n\t{\n\t\tvb_-\u0026gt;Unlock();\n\t\tvertex_ = 0;\n\t};\n};\n\nvoid SpriteBatch::SetBlendMode(int blendmode)\n{\n\tblendmode_ = blendmode;\n};\n\nbool SpriteBatch::Draw(Texture2D *texture, const Rect \u0026amp;dest, const Color \u0026amp;color)\n{\n\tif (!texture) return false;\n\tfloat w = (float)texture-\u0026gt;GetWidth();\n\tfloat h = (float)texture-\u0026gt;GetHeight();\n\treturn Draw(texture, dest, Rect(0, 0, w, h), color);\n};\n\nbool SpriteBatch::Draw(Texture2D *texture, const Rect \u0026amp;dest, const Rect \u0026amp;src, const Color \u0026amp;color)\n{\n\tif (color.a_ \u0026lt;= 0) return true;\n\tBATCH *batch = GetBatch(texture, blendmode_);\n\tif (!batch) return false;\n\n\tvertex_[icount_ + 0].pos = Vector3(dest.min_.x_, dest.min_.y_, icount_ * -0.0001f);\n\tvertex_[icount_ + 1].pos = Vector3(dest.max_.x_, dest.min_.y_, icount_ * -0.0001f);\n\tvertex_[icount_ + 2].pos = Vector3(dest.min_.x_, dest.max_.y_, icount_ * -0.0001f);\n\tvertex_[icount_ + 3].pos = Vector3(dest.max_.x_, dest.max_.y_, icount_ * -0.0001f);\n\n\tvertex_[icount_ + 0].color = vertex_[icount_ + 1].color = vertex_[icount_ + 2].color = vertex_[icount_ + 3].color = color.ToUInt();\n\n\tfloat w = 1.0f / (float)texture-\u0026gt;GetWidth();\n\tfloat h = 1.0f / (float)texture-\u0026gt;GetHeight();\n\n\tvertex_[icount_ + 0].uv = Vector2(src.min_.x_*w, src.min_.y_*h);\n\tvertex_[icount_ + 1].uv = Vector2(src.max_.x_*w, src.min_.y_*h);\n\tvertex_[icount_ + 2].uv = Vector2(src.min_.x_*w, src.max_.y_*h);\n\tvertex_[icount_ + 3].uv = Vector2(src.max_.x_*w, src.max_.y_*h);\n\n\ticount_ += 4;\n\tbatch-\u0026gt;iCount += 4;\n\treturn true;\n};\n\nbool SpriteBatch::Draw(Texture2D *texture, const Rect \u0026amp;dest, const Rect \u0026amp;src, const Color \u0026amp;color, float rotation, const Vector2 \u0026amp;origin, const Vector2 \u0026amp;scale, int SpriteEffect)\n{\n\tif (color.a_ \u0026lt;= 0) return true;\n\tBATCH *batch = GetBatch(texture, blendmode_);\n\tif (!batch) return false;\n\n\tVector2 startxy = -origin;\n\tVector2 toxy = startxy + dest.Size();\n\n\tvertex_[icount_ + 0].pos = Vector3(startxy.x_, startxy.y_, icount_ * 0.0001f);\n\tvertex_[icount_ + 1].pos = Vector3(toxy.x_, startxy.y_, icount_ * 0.0001f);\n\tvertex_[icount_ + 2].pos = Vector3(startxy.x_, toxy.y_, icount_ * 0.0001f);\n\tvertex_[icount_ + 3].pos = Vector3(toxy.x_, toxy.y_, icount_ * 0.0001f);\n\n\tMatrix4 m(Matrix4::IDENTITY);\n\tm.m00_ = cosf(rotation) * scale.x_;\t\tm.m10_ = sinf(rotation) * scale.x_;\n\tm.m01_ = -sinf(rotation) * scale.y_;\tm.m11_ = cosf(rotation) * scale.y_;\n\tm.m03_ = dest.min_.x_;\t\t\t\t\tm.m13_ = dest.min_.y_;\n\tfor (int i = 0; i \u0026lt; 4; i++)\tvertex_[icount_ + i].pos = m * vertex_[icount_ + i].pos;\n\n\tvertex_[icount_ + 0].color = vertex_[icount_ + 1].color = vertex_[icount_ + 2].color = vertex_[icount_ + 3].color = color.ToUInt();\n\n\tfloat w = 1.0f / (float)texture-\u0026gt;GetWidth();\n\tfloat h = 1.0f / (float)texture-\u0026gt;GetHeight();\n\n\tVector2 uv1 = src.min_;\n\tVector2 uv2 = src.max_;\n\tif (SpriteEffect \u0026amp; SBFX_FLIPH) { uv1.x_ = src.max_.x_; uv2.x_ = src.min_.x_; };\n\tif (SpriteEffect \u0026amp; SBFX_FLIPV) { uv1.y_ = src.max_.y_; uv2.y_ = src.min_.y_; };\n\n\tvertex_[icount_ + 0].uv = Vector2(uv1.x_*w, uv1.y_*h);\n\tvertex_[icount_ + 1].uv = Vector2(uv2.x_*w, uv1.y_*h);\n\tvertex_[icount_ + 2].uv = Vector2(uv1.x_*w, uv2.y_*h);\n\tvertex_[icount_ + 3].uv = Vector2(uv2.x_*w, uv2.y_*h);\n\n\ticount_ += 4;\n\tbatch-\u0026gt;iCount += 4;\n\treturn true;\n};\n\nbool SpriteBatch::Draw(Texture2D *texture, const Vector2 \u0026amp;xy, const Color \u0026amp;color)\n{\n\tif (!texture) return false;\n\tRect dest(xy.x_, xy.y_, xy.x_ + (float)texture-\u0026gt;GetWidth(), xy.y_ + (float)texture-\u0026gt;GetHeight());\n\treturn Draw(texture, dest, color);\n};\n\nbool SpriteBatch::Draw(Texture2D *texture, const Vector2 \u0026amp;xy, const Rect \u0026amp;src, const Color \u0026amp;color)\n{\n\tRect dest(xy.x_, xy.y_, xy.x_ + src.Size().x_, xy.y_ + src.Size().y_);\n\treturn Draw(texture, dest, src, color);\n};\n\nbool SpriteBatch::Draw(Texture2D *texture, const Vector2 \u0026amp;xy, const Rect \u0026amp;src, const Color \u0026amp;color, float rotation, const Vector2 \u0026amp;origin, const Vector2 \u0026amp;scale, int SpriteEffect)\n{\n\tRect dest(xy.x_, xy.y_, xy.x_ + src.Size().x_, xy.y_ + src.Size().y_);\n\treturn Draw(texture, dest, src, color, rotation, origin, scale, SpriteEffect);\n};\n\nfloat SpriteBatch::GetHeightString(Font *font, int fontsize, const void *text, unsigned int textlength, int TextEffect)\n{\n\tif (font == 0 || text == 0 || ((const char *)text)[0] == 0 || textlength == 0) return 0;\n\tFontFace *face = font-\u0026gt;GetFace(fontsize);\n\tif (!face) return 0;\n\n\tfloat\t\t\t\t\t\t\t\trow = (float)face-\u0026gt;GetRowHeight();\n\tfloat\t\t\t\t\t\t\t\tH = row;\n\tunsigned int\t\t\t\t\t\ti = 0, chr = 0;\n\n\tif (TextEffect \u0026amp; TFX_UNICODE16) textlength *= 2;\n\tfor (i = 0; i \u0026lt; textlength;)\n\t{\n\t\tchr = ((const char *)text)[i++];\n\t\tif (TextEffect \u0026amp; TFX_UNICODE16) chr |= (((const char *)text)[i++]) \u0026lt;\u0026lt; 8;\n\t\tif (chr == 0) break;\n\t\tif (chr == 0x0A) { H += row; continue; };\n\t};\n\tif (TextEffect \u0026amp; TFX_VCENTER) return H*0.5f;\n\tif (TextEffect \u0026amp; TFX_VBOTTOM) return H;\n\treturn H;\n};\n\nfloat SpriteBatch::GetWidthString(Font *font, int fontsize, const void *text, unsigned int textlength, int TextEffect)\n{\n\tif (font == 0 || text == 0 || ((const char *)text)[0] == 0 || textlength == 0) return 0;\n\tFontFace *face = font-\u0026gt;GetFace(fontsize);\n\tif (!face) return 0;\n\n\tfloat\t\t\t\t\t\t\t\tW = 0;\n\tconst FontGlyph\t\t\t\t\t\t*glyph;\n\tunsigned int\t\t\t\t\t\ti = 0, chr = 0, chrn = 0;\n\n\tif (TextEffect \u0026amp; TFX_UNICODE16) textlength *= 2;\n\tfor (i = 0; i \u0026lt; textlength;)\n\t{\n\t\tchr = ((const char *)text)[i];\n\t\tif (TextEffect \u0026amp; TFX_UNICODE16) chr |= (((const char *)text)[i + 1]) \u0026lt;\u0026lt; 8;\n\t\tif (chr == 0 || chr == 0x0A) break;\n\n\t\tif (TextEffect \u0026amp; TFX_UNICODE16)\n\t\t{\n\t\t\tchrn = ((const char *)text)[i + 2];\n\t\t\tchrn |= (((const char *)text)[i + 3]) \u0026lt;\u0026lt; 8;\n\t\t}\n\t\telse {\n\t\t\tchrn = ((const char *)text)[i + 1];\n\t\t};\n\n\t\tglyph = face-\u0026gt;GetGlyph(chr);\n\t\tif (glyph == 0) continue;\n\n\t\tW += glyph-\u0026gt;advanceX_;\n\t\tW += face-\u0026gt;GetKerning(chr, chrn);\n\t\ti += ((TextEffect \u0026amp; TFX_UNICODE16) ? 2 : 1);\n\t};\n\tif (TextEffect \u0026amp; TFX_HCENTER) return -W*0.5f;\n\tif (TextEffect \u0026amp; TFX_HRIGHT) return -W;\n\treturn W;\n};\n\nbool SpriteBatch::DrawString(Font *font, int fontsize, const Vector2 \u0026amp;dest, const void *text, unsigned int textlength, const Color \u0026amp;color, int TextEffect)\n{\n\tif (color.a_ \u0026lt;= 0 || text == 0 || ((const char *)text)[0] == 0 || textlength == 0) return true;\n\tif (!font) return false;\n\tFontFace *face = font-\u0026gt;GetFace(fontsize);\n\tif (!face) return false;\n\n\tfloat\tZH = (float)face-\u0026gt;GetRowHeight();\n\tVector2 CPos = dest;\n\tif (TextEffect \u0026amp; (TFX_VBOTTOM | TFX_VCENTER)) CPos.y_ -= GetHeightString(font, fontsize, text, textlength, TextEffect);\n\tif (TextEffect \u0026amp; (TFX_HRIGHT | TFX_HCENTER))  CPos.x_ += GetWidthString(font, fontsize, text, textlength, TextEffect);\n\n\tVector2\t\t\t\t\t\t\t\tScr;\n\tRect\t\t\t\t\t\t\t\tTexRect;\n\tconst FontGlyph\t\t\t\t\t\t*glyph;\n\tunsigned int\t\t\t\t\t\ti = 0, chr = 0, chrn = 0, Step = 1;\n\tconst Vector\u0026lt;SharedPtr\u0026lt;Texture2D\u0026gt; \u0026gt;\t\u0026amp;texs = face-\u0026gt;GetTextures();\n\n\tif (TextEffect \u0026amp; TFX_UNICODE16) { textlength *= 2; Step = 2; };\n\tfor (i = 0; i \u0026lt; textlength; i += Step)\n\t{\n\t\tchr = ((const char *)text)[i];\n\t\tif (TextEffect \u0026amp; TFX_UNICODE16) chr |= (((const char *)text)[i + 1]) \u0026lt;\u0026lt; 8;\n\t\tif (chr == 0) break;\n\n\t\tif (TextEffect \u0026amp; TFX_UNICODE16)\n\t\t{\n\t\t\tchrn = ((const char *)text)[i + 2];\n\t\t\tchrn |= (((const char *)text)[i + 3]) \u0026lt;\u0026lt; 8;\n\t\t}\n\t\telse {\n\t\t\tchrn = ((const char *)text)[i + 1];\n\t\t};\n\n\t\tif (chr == 0x0A)\n\t\t{\n\t\t\tCPos.x_ = dest.x_; CPos.y_ += ZH;\n\t\t\tif (TextEffect \u0026amp; (TFX_HRIGHT | TFX_HCENTER)) CPos.x_ += GetWidthString(font, fontsize, \u0026amp;((const char *)text)[i + Step], (textlength - (i + Step)) / Step, TextEffect);\n\t\t\tcontinue;\n\t\t};\n\n\t\tglyph = face-\u0026gt;GetGlyph(chr);\n\t\tif (glyph == 0) continue;\n\n\t\tScr = Vector2(glyph-\u0026gt;offsetX_ + CPos.x_, glyph-\u0026gt;offsetY_ + CPos.y_);\n\t\tTexRect = Rect((float)glyph-\u0026gt;x_, (float)glyph-\u0026gt;y_, (float)(glyph-\u0026gt;x_ + glyph-\u0026gt;width_), (float)(glyph-\u0026gt;y_ + glyph-\u0026gt;height_));\n\t\tCPos.x_ += glyph-\u0026gt;advanceX_;\n\t\tCPos.x_ += face-\u0026gt;GetKerning(chr, chrn);\n\n\t\tif (glyph-\u0026gt;page_ \u0026lt; texs.Size()) Draw(texs[glyph-\u0026gt;page_], Scr, TexRect, color);\n\t};\n\treturn true;\n};\n\nbool SpriteBatch::DrawString(Font *font, int fontsize, const Vector2 \u0026amp;dest, const void *text, unsigned int textlength, const Color \u0026amp;color, float rotation, const Vector2 \u0026amp;origin, const Vector2 \u0026amp;scale, int TextEffect)\n{\n\tif (color.a_ \u0026lt;= 0) return true;\n\tbool bOk = true;\n\tPushModifier();\n\tbOk = DrawString(font, fontsize, -origin, text, textlength, color, TextEffect);\n\tModifyPRS(dest, rotation, scale);\n\tPopModifier();\n\treturn bOk;\n};\n\nvoid SpriteBatch::DrawFrame(Texture2D *texture, const Rect \u0026amp;dest, const Rect \u0026amp;src, const Rect \u0026amp;borders, const Color \u0026amp;color)\n{\n\tif (color.a_ \u0026lt;= 0) return;\n\t//LT\n\tDraw(texture, Rect(dest.min_.x_, dest.min_.y_, dest.min_.x_ + borders.min_.x_, dest.min_.y_ + borders.min_.y_), Rect(src.min_.x_, src.min_.y_, src.min_.x_ + borders.min_.x_, src.min_.y_ + borders.min_.y_), color);\n\t//LB\n\tDraw(texture, Rect(dest.min_.x_, dest.max_.y_ - borders.max_.y_, dest.min_.x_ + borders.min_.x_, dest.max_.y_), Rect(src.min_.x_, src.max_.y_ - borders.max_.y_, src.min_.x_ + borders.min_.x_, src.max_.y_), color);\n\t//RT\n\tDraw(texture, Rect(dest.max_.x_ - borders.max_.x_, dest.min_.y_, dest.max_.x_, dest.min_.y_ + borders.min_.y_), Rect(src.max_.x_ - borders.max_.x_, src.min_.y_, src.max_.x_, src.min_.y_ + borders.min_.y_), color);\n\t//RB\n\tDraw(texture, Rect(dest.max_.x_ - borders.max_.x_, dest.max_.y_ - borders.max_.y_, dest.max_.x_, dest.max_.y_), Rect(src.max_.x_ - borders.max_.x_, src.max_.y_ - borders.max_.y_, src.max_.x_, src.max_.y_), color);\n\n\t//TOP\n\tDraw(texture, Rect(dest.min_.x_ + borders.min_.x_, dest.min_.y_, dest.max_.x_ - borders.max_.x_, dest.min_.y_ + borders.min_.y_), Rect(src.min_.x_ + borders.min_.x_, src.min_.y_, src.max_.x_ - borders.max_.x_, src.min_.y_ + borders.min_.y_), color);\n\t//BOTTOM\n\tDraw(texture, Rect(dest.min_.x_ + borders.min_.x_, dest.max_.y_ - borders.max_.y_, dest.max_.x_ - borders.max_.x_, dest.max_.y_), Rect(src.min_.x_ + borders.min_.x_, src.max_.y_ - borders.max_.y_, src.max_.x_ - borders.max_.x_, src.max_.y_), color);\n\t//LEFT\n\tDraw(texture, Rect(dest.min_.x_, dest.min_.y_ + borders.min_.y_, dest.min_.x_ + borders.min_.x_, dest.max_.y_ - borders.max_.y_), Rect(src.min_.x_, src.min_.y_ + borders.min_.y_, src.min_.x_ + borders.min_.x_, src.max_.y_ - borders.max_.y_), color);\n\t//RIGHT\n\tDraw(texture, Rect(dest.max_.x_ - borders.max_.x_, dest.min_.y_ + borders.min_.y_, dest.max_.x_, dest.max_.y_ - borders.max_.y_), Rect(src.max_.x_ - borders.max_.x_, src.min_.y_ + borders.min_.y_, src.max_.x_, src.max_.y_ - borders.max_.y_), color);\n\n\t//CENTER\n\tDraw(texture, Rect(dest.min_.x_ + borders.min_.x_, dest.min_.y_ + borders.min_.y_, dest.max_.x_ - borders.max_.x_, dest.max_.y_ - borders.max_.y_), Rect(src.min_.x_ + borders.min_.x_, src.min_.y_ + borders.min_.y_, src.max_.x_ - borders.max_.x_, src.max_.y_ - borders.max_.y_), color);\n};\n\nvoid SpriteBatch::PushModifier()\n{\n\tmodifiers_.push_back(icount_);\n};\n\nvoid\t\t\t\t\tSpriteBatch::PopModifier()\n{\n\tif (modifiers_.size() \u0026gt; 0) modifiers_.pop_back();\n};\n\nbool\t\t\t\t\tSpriteBatch::ModifyPRS(const Vector2 \u0026amp;pos, float rotation, const Vector2 \u0026amp;scale)\n{\n\tif (modifiers_.size() == 0 || vertex_ == 0) return false;\n\n\tMatrix4 m(Matrix4::IDENTITY);\n\tm.m00_ = cosf(rotation) * scale.x_;\t\tm.m10_ = sinf(rotation) * scale.x_;\n\tm.m01_ = -sinf(rotation) * scale.y_;\tm.m11_ = cosf(rotation) * scale.y_;\n\tm.m03_ = pos.x_;\t\t\t\t\t\tm.m13_ = pos.y_;\n\n\tunsigned int bk_icount = modifiers_.back();\n\tfor (unsigned int i = bk_icount; i \u0026lt; icount_; i++)\tvertex_[i].pos = m * vertex_[i].pos;\n\n\treturn true;\n};\n\nbool\t\t\t\t\tSpriteBatch::ModifyTransform(const Matrix4 \u0026amp;matrix)\n{\n\tif (modifiers_.size() == 0 || vertex_ == 0) return false;\n\tunsigned int bk_icount = modifiers_.back();\n\tfor (unsigned int i = bk_icount; i \u0026lt; icount_; i++)\tvertex_[i].pos = matrix * vertex_[i].pos;\n\treturn true;\n};\n\nbool\t\t\t\t\tSpriteBatch::ModifyColor(const Color \u0026amp;color)\n{\n\tif (modifiers_.size() == 0 || vertex_ == 0) return false;\n\n\tunsigned int col_uint = color.ToUInt();\n\n\tunsigned int bk_icount = modifiers_.back();\n\tfor (unsigned int i = bk_icount; i \u0026lt; icount_; i++)\tvertex_[i].color = col_uint;\n\n\treturn true;\n};\n\nbool\t\t\t\t\tSpriteBatch::ModifyGradientH(const Color \u0026amp;color_up, const Color \u0026amp;color_down)\n{\n\tif (modifiers_.size() == 0 || vertex_ == 0) return false;\n\n\tunsigned int col_1 = color_up.ToUInt();\n\tunsigned int col_2 = color_down.ToUInt();\n\n\tunsigned int bk_icount = modifiers_.back();\n\tfor (unsigned int i = bk_icount; i \u0026lt; icount_; i += 4)\n\t{\n\t\tvertex_[i + 0].color = vertex_[i + 1].color = col_1;\n\t\tvertex_[i + 2].color = vertex_[i + 3].color = col_2;\n\t};\n\n\treturn true;\n};\n\nbool\t\t\t\t\tSpriteBatch::ModifyGradientV(const Color \u0026amp;color_lf, const Color \u0026amp;color_rg)\n{\n\tif (modifiers_.size() == 0 || vertex_ == 0) return false;\n\n\tunsigned int col_1 = color_lf.ToUInt();\n\tunsigned int col_2 = color_rg.ToUInt();\n\n\tunsigned int bk_icount = modifiers_.back();\n\tfor (unsigned int i = bk_icount; i \u0026lt; icount_; i += 4)\n\t{\n\t\tvertex_[i + 0].color = vertex_[i + 2].color = col_1;\n\t\tvertex_[i + 1].color = vertex_[i + 3].color = col_2;\n\t};\n\n\treturn true;\n};\n\nbool\t\t\t\t\tSpriteBatch::Initialize(unsigned int iBatchMax, unsigned int iQuadsMax)\n{\n\tgraphics_ = GetSubsystem\u0026lt;Graphics\u0026gt;();\n\n\tif (iQuadsMax \u0026gt; 16300 || iQuadsMax == 0) iQuadsMax = 16300;\n\tif (iBatchMax == 0) iBatchMax = 512;\n\n\tvertex_ = 0;\n\tibatch_ = icount_ = 0;\n\tmaxbatch_ = iBatchMax;\n\tmaxquads_ = iQuadsMax;\n\tif (batch_) delete[] batch_;\n\tbatch_ = new BATCH[maxbatch_];\n\n\tvb_.Reset();\n\tvb_ = new VertexBuffer(context_);\n\tvb_-\u0026gt;SetSize(iQuadsMax * 4, MASK_POSITION | MASK_COLOR | MASK_TEXCOORD1, true);\n\n\t//UnsubscribeFromEvent(graphics_, E_POSTRENDERUPDATE);\n\t//SubscribeToEvent(graphics_, E_POSTRENDERUPDATE, HANDLER(SpriteBatch, OnRender));\n\treturn true;\n};\n\nvoid\t\t\t\t\tSpriteBatch::SetScreenSize(float fWidth, float fHeight)\n{\n\tif (fWidth \u0026lt;= 0) fWidth = (float)graphics_-\u0026gt;GetWidth();\n\tif (fHeight \u0026lt;= 0) fHeight = (float)graphics_-\u0026gt;GetHeight();\n\tviewWidth_ = fWidth;\n\tviewHeight_ = fHeight;\n};\n\nvoid\t\t\t\t\tSpriteBatch::OnRender(StringHash eventType, VariantMap\u0026amp; eventData)\n{\n\tif (!(graphics_ \u0026amp;\u0026amp; graphics_-\u0026gt;IsInitialized() \u0026amp;\u0026amp; !graphics_-\u0026gt;IsDeviceLost())) return;\n\tif (icount_ == 0 || ibatch_ == 0) return;\n\n\t//engine_-\u0026gt;Exit();\n\t\n\n\n\tShaderVariation* vs = graphics_-\u0026gt;GetShader(VS, \"Basic\", \"DIFFMAP VERTEXCOLOR\");\n\tShaderVariation* ps = graphics_-\u0026gt;GetShader(PS, \"Basic\", \"DIFFMAP VERTEXCOLOR\");\n\n\n\tgraphics_-\u0026gt;SetBlendMode(BLEND_REPLACE);\n\tgraphics_-\u0026gt;SetColorWrite(true);\n\tgraphics_-\u0026gt;SetCullMode(CULL_NONE);  // ??? ??? ????? ????? ???????? ??????? ??????? ?????????, ????? ?? ???? ????? ??? ???? ??????? (??? ?????????)\n\t\n\tgraphics_-\u0026gt;SetDepthWrite(true);\n\tgraphics_-\u0026gt;SetScissorTest(false);\n\tgraphics_-\u0026gt;SetStencilTest(false);\n\tgraphics_-\u0026gt;SetShaders(vs, ps);\n\tgraphics_-\u0026gt;SetShaderParameter(VSP_MODEL, Matrix3x4::IDENTITY);\n\tgraphics_-\u0026gt;SetShaderParameter(VSP_VIEWPROJ, camera_-\u0026gt;GetProjection() * camera_-\u0026gt;GetView());\n\tgraphics_-\u0026gt;SetShaderParameter(PSP_MATDIFFCOLOR, Color(1.0f, 1.0f, 1.0f, 1.0f));\n\tgraphics_-\u0026gt;SetVertexBuffer(vb_);\n\tgraphics_-\u0026gt;SetIndexBuffer(g_pIB);\n\tgraphics_-\u0026gt;SetDepthTest(CMP_LESSEQUAL);\n\t\n\tfor (unsigned int i = 1; i \u0026lt; ibatch_ + 1; i++)\n\t{\n\t\tBATCH *b = \u0026amp;batch_[i];\n\t\tgraphics_-\u0026gt;SetBlendMode((BlendMode)b-\u0026gt;iBlendMode);\n\t\tgraphics_-\u0026gt;SetTexture(0, b-\u0026gt;pTexture);\n\t\tgraphics_-\u0026gt;Draw(TRIANGLE_LIST, (b-\u0026gt;iStart / 4) * 6, (b-\u0026gt;iCount / 4) * 6, 0, b-\u0026gt;iCount);\n\t};\n};\n\nvoid SpriteBatch::SetView(Camera* camera, Engine* engine)\n{\n\tcamera_ = camera;\n\tengine_ = engine;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e};\u003cbr\u003e\n[/code]\u003c/p\u003e\n\u003cp\u003estdafx.h\u003c/p\u003e\n\u003cp\u003e[code]\u003cspan class=\"hashtag\"\u003e#pragma\u003c/span\u003e once\u003c/p\u003e\n\u003cp\u003e\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Urho3D.h\u0026gt;\u003c/p\u003e\n\u003cp\u003e\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Revision.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Audio/Audio.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Audio/AudioDefs.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Audio/BufferedSoundStream.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Audio/OggVorbisSoundStream.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Audio/Sound.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Audio/SoundListener.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Audio/SoundSource.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Audio/SoundSource3D.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Audio/SoundStream.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Container/Allocator.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Container/ArrayPtr.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Container/ForEach.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Container/Hash.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Container/HashBase.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Container/HashMap.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Container/HashSet.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Container/LinkedList.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Container/List.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Container/ListBase.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Container/Pair.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Container/Ptr.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Container/RefCounted.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Container/Sort.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Container/Str.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Container/Swap.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Container/Vector.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Container/VectorBase.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Core/Attribute.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Core/Condition.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Core/Context.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Core/CoreEvents.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Core/Main.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Core/MiniDump.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Core/Mutex.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Core/Object.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Core/ProcessUtils.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Core/Profiler.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Core/Spline.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Core/StringUtils.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Core/Thread.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Core/Timer.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Core/Variant.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Core/WorkQueue.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Engine/Application.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Engine/Console.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Engine/DebugHud.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Engine/Engine.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Engine/EngineEvents.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Graphics/AnimatedModel.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Graphics/Animation.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Graphics/AnimationController.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Graphics/AnimationState.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Graphics/Batch.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Graphics/BillboardSet.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Graphics/Camera.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Graphics/ConstantBuffer.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Graphics/CustomGeometry.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Graphics/DebugRenderer.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Graphics/DecalSet.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Graphics/Drawable.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Graphics/DrawableEvents.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Graphics/Geometry.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Graphics/GPUObject.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Graphics/Graphics.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Graphics/GraphicsDefs.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Graphics/GraphicsEvents.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Graphics/GraphicsImpl.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Graphics/IndexBuffer.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Graphics/Light.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Graphics/Material.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Graphics/Model.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Graphics/OcclusionBuffer.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Graphics/Octree.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Graphics/OctreeQuery.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Graphics/ParticleEffect.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Graphics/ParticleEmitter.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Graphics/Renderer.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Graphics/RenderPath.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Graphics/RenderSurface.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Graphics/Shader.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Graphics/ShaderPrecache.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Graphics/ShaderProgram.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Graphics/ShaderVariation.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Graphics/Skeleton.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Graphics/Skybox.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Graphics/StaticModel.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Graphics/StaticModelGroup.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Graphics/Tangent.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Graphics/Technique.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Graphics/Terrain.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Graphics/TerrainPatch.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Graphics/Texture.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Graphics/Texture2D.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Graphics/Texture3D.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Graphics/TextureCube.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Graphics/VertexBuffer.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Graphics/VertexDeclaration.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Graphics/View.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Graphics/Viewport.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Graphics/Zone.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Input/Controls.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Input/Input.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Input/InputEvents.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/IO/Compression.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/IO/Deserializer.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/IO/File.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/IO/FileSystem.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/IO/FileWatcher.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/IO/IOEvents.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/IO/Log.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/IO/MacFileWatcher.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/IO/MemoryBuffer.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/IO/PackageFile.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/IO/RWOpsWrapper.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/IO/Serializer.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/IO/VectorBuffer.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Math/AreaAllocator.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Math/BoundingBox.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Math/Color.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Math/Frustum.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Math/MathDefs.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Math/Matrix3.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Math/Matrix3x4.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Math/Matrix4.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Math/Plane.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Math/Polyhedron.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Math/Quaternion.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Math/Random.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Math/Ray.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Math/Rect.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Math/Sphere.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Math/StringHash.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Math/Vector2.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Math/Vector3.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Math/Vector4.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Navigation/Navigable.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Navigation/NavigationMesh.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Navigation/OffMeshConnection.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Network/Connection.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Network/HttpRequest.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Network/Network.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Network/NetworkEvents.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Network/NetworkPriority.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Network/Protocol.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Physics/CollisionShape.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Physics/Constraint.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Physics/PhysicsEvents.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Physics/PhysicsUtils.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Physics/PhysicsWorld.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Physics/RigidBody.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Resource/BackgroundLoader.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Resource/Decompress.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Resource/Image.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Resource/JSONFile.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Resource/JSONValue.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Resource/PListFile.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Resource/Resource.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Resource/ResourceCache.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Resource/ResourceEvents.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Resource/XMLElement.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Resource/XMLFile.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Scene/Animatable.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Scene/AnimationDefs.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Scene/Component.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Scene/LogicComponent.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Scene/Node.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Scene/ObjectAnimation.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Scene/ReplicationState.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Scene/Scene.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Scene/SceneEvents.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Scene/SceneResolver.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Scene/Serializable.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Scene/SmoothedTransform.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Scene/SplinePath.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Scene/UnknownComponent.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Scene/ValueAnimation.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Scene/ValueAnimationInfo.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Script/Addons.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Script/APITemplates.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Script/Script.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Script/ScriptAPI.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Script/ScriptEventListener.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Script/ScriptFile.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Script/ScriptInstance.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/UI/BorderImage.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/UI/Button.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/UI/CheckBox.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/UI/Cursor.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/UI/DropDownList.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/UI/FileSelector.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/UI/Font.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/UI/FontFace.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/UI/FontFaceBitmap.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/UI/FontFaceFreeType.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/UI/LineEdit.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/UI/ListView.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/UI/Menu.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/UI/MessageBox.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/UI/ScrollBar.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/UI/ScrollView.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/UI/Slider.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/UI/Sprite.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/UI/Text.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/UI/Text3D.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/UI/ToolTip.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/UI/UI.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/UI/UIBatch.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/UI/UIElement.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/UI/UIEvents.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/UI/View3D.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/UI/Window.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Urho2D/AnimatedSprite2D.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Urho2D/Animation2D.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Urho2D/AnimationSet2D.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Urho2D/CollisionBox2D.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Urho2D/CollisionChain2D.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Urho2D/CollisionCircle2D.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Urho2D/CollisionEdge2D.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Urho2D/CollisionPolygon2D.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Urho2D/CollisionShape2D.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Urho2D/Constraint2D.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Urho2D/ConstraintDistance2D.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Urho2D/ConstraintFriction2D.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Urho2D/ConstraintGear2D.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Urho2D/ConstraintMotor2D.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Urho2D/ConstraintMouse2D.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Urho2D/ConstraintPrismatic2D.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Urho2D/ConstraintPulley2D.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Urho2D/ConstraintRevolute2D.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Urho2D/ConstraintRope2D.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Urho2D/ConstraintWeld2D.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Urho2D/ConstraintWheel2D.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Urho2D/Drawable2D.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Urho2D/ParticleEffect2D.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Urho2D/ParticleEmitter2D.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Urho2D/PhysicsEvents2D.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Urho2D/PhysicsUtils2D.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Urho2D/PhysicsWorld2D.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Urho2D/Renderer2D.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Urho2D/RigidBody2D.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Urho2D/Sprite2D.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Urho2D/SpriteSheet2D.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Urho2D/StaticSprite2D.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Urho2D/TileMap2D.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Urho2D/TileMapDefs2D.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Urho2D/TileMapLayer2D.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Urho2D/TmxFile2D.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Urho2D/Urho2D.h\u0026gt;\u003c/p\u003e\n\u003cp\u003e\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/DebugNew.h\u0026gt;\u003c/p\u003e\n\u003cp\u003eusing namespace Urho3D;\u003cbr\u003e\n[/code]\u003c/p\u003e\n\u003cp\u003eGame.cpp\u003c/p\u003e\n\u003cp\u003e[code]\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “stdafx.h”\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “Game.h”\u003c/p\u003e\n\u003cp\u003eDEFINE_APPLICATION_MAIN(Game)\u003c/p\u003e\n\u003cp\u003eGame::Game(Context* context) :\u003cbr\u003e\nApplication(context),\u003cbr\u003e\nyaw_(0.0f),\u003cbr\u003e\npitch_(0.0f)\u003cbr\u003e\n{\u003cbr\u003e\n}\u003c/p\u003e\n\u003cp\u003evoid Game::Setup()\u003cbr\u003e\n{\u003cbr\u003e\nengineParameters_[“WindowTitle”] = GetTypeName();\u003cbr\u003e\nengineParameters_[“LogName”] = GetSubsystem()-\u0026gt;GetAppPreferencesDir(“urho3d”, “logs”) + GetTypeName() + “.log”;\u003cbr\u003e\nengineParameters_[“FullScreen”] = false;\u003cbr\u003e\nengineParameters_[“Headless”] = false;\u003cbr\u003e\nengineParameters_[“WindowWidth”] = 800;\u003cbr\u003e\nengineParameters_[“WindowHeight”] = 600;\u003cbr\u003e\n//\tengineParameters_[“ResourcePaths”] = “Data;CoreData;MyData”;\u003cbr\u003e\n}\u003c/p\u003e\n\u003cp\u003evoid Game::Start()\u003cbr\u003e\n{\u003cbr\u003e\nCreateScene();\u003cbr\u003e\nSetupViewport();\u003cbr\u003e\nSubscribeToEvents();\u003cbr\u003e\nspriteBatch_ = new SpriteBatch(context_);\u003cbr\u003e\nspriteBatch_-\u0026gt;Initialize();\u003cbr\u003e\nspriteBatch_-\u0026gt;SetView(cameraNode_-\u0026gt;GetComponent(), engine_);\u003cbr\u003e\nResourceCache* cache = GetSubsystem();\u003cbr\u003e\nXMLFile* xmlFile = cache-\u0026gt;GetResource(“UI/DefaultStyle.xml”);\u003cbr\u003e\nDebugHud* debugHud = engine_-\u0026gt;CreateDebugHud();\u003cbr\u003e\ndebugHud-\u0026gt;SetDefaultStyle(xmlFile);\u003cbr\u003e\nCreateText();\u003cbr\u003e\n}\u003c/p\u003e\n\u003cp\u003evoid Game::SetupViewport()\u003cbr\u003e\n{\u003cbr\u003e\nRenderer* renderer = GetSubsystem();\u003cbr\u003e\nSharedPtr viewport(new Viewport(context_, scene_, cameraNode_-\u0026gt;GetComponent()));\u003cbr\u003e\nrenderer-\u0026gt;SetViewport(0, viewport);\u003cbr\u003e\n}\u003c/p\u003e\n\u003cp\u003evoid Game::CreateScene()\u003cbr\u003e\n{\u003cbr\u003e\nResourceCache* cache = GetSubsystem();\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003escene_ = new Scene(context_);\nscene_-\u0026gt;CreateComponent\u0026lt;Octree\u0026gt;();\nscene_-\u0026gt;CreateComponent\u0026lt;DebugRenderer\u0026gt;();\n\nNode* planeNode = scene_-\u0026gt;CreateChild(\"Plane\");\nplaneNode-\u0026gt;SetScale(Vector3(100.0f, 1.0f, 100.0f));\nStaticModel* planeObject = planeNode-\u0026gt;CreateComponent\u0026lt;StaticModel\u0026gt;();\nplaneObject-\u0026gt;SetModel(cache-\u0026gt;GetResource\u0026lt;Model\u0026gt;(\"Models/Plane.mdl\"));\nplaneObject-\u0026gt;SetMaterial(cache-\u0026gt;GetResource\u0026lt;Material\u0026gt;(\"Materials/StoneTiled.xml\"));\n\nNode* lightNode = scene_-\u0026gt;CreateChild(\"DirectionalLight\");\nlightNode-\u0026gt;SetDirection(Vector3(0.6f, -1.0f, 0.8f));\nLight* light = lightNode-\u0026gt;CreateComponent\u0026lt;Light\u0026gt;();\nlight-\u0026gt;SetColor(Color(0.6f, 0.5f, 0.2f));\nlight-\u0026gt;SetLightType(LIGHT_DIRECTIONAL);\nlight-\u0026gt;SetCastShadows(true);\nlight-\u0026gt;SetShadowBias(BiasParameters(0.00025f, 0.5f));\nlight-\u0026gt;SetShadowCascade(CascadeParameters(10.0f, 50.0f, 200.0f, 0.0f, 0.8f));\n//light-\u0026gt;SetShadowIntensity(0.5f);\n\nNode* zoneNode = scene_-\u0026gt;CreateChild(\"Zone\");\nZone* zone = zoneNode-\u0026gt;CreateComponent\u0026lt;Zone\u0026gt;();\nzone-\u0026gt;SetBoundingBox(BoundingBox(-1000.0f, 1000.0f));\nzone-\u0026gt;SetAmbientColor(Color(0.4f, 0.5f, 0.8f));\nzone-\u0026gt;SetFogColor(Color(0.4f, 0.5f, 0.8f));\nzone-\u0026gt;SetFogStart(100.0f);\nzone-\u0026gt;SetFogEnd(300.0f);\n\nconst unsigned NUM_OBJECTS = 0;\nfor (unsigned i = 0; i \u0026lt; NUM_OBJECTS; ++i)\n{\n\tNode* mushroomNode = scene_-\u0026gt;CreateChild(\"Mushroom\");\n\tmushroomNode-\u0026gt;SetPosition(Vector3(Random(90.0f) - 45.0f, 0.0f, Random(90.0f) - 45.0f));\n\tmushroomNode-\u0026gt;SetRotation(Quaternion(0.0f, Random(360.0f), 0.0f));\n\tmushroomNode-\u0026gt;SetScale(0.1f + Random(.2f));\n\tStaticModel* mushroomObject = mushroomNode-\u0026gt;CreateComponent\u0026lt;StaticModel\u0026gt;();\n\tmushroomObject-\u0026gt;SetModel(cache-\u0026gt;GetResource\u0026lt;Model\u0026gt;(\"Models/Mushroom.mdl\"));\n\tmushroomObject-\u0026gt;SetMaterial(cache-\u0026gt;GetResource\u0026lt;Material\u0026gt;(\"Materials/Mushroom.xml\"));\n\tmushroomObject-\u0026gt;SetCastShadows(true);\n}\n\nNode* mushroomNode = scene_-\u0026gt;CreateChild(\"Mushroom\");\nmushroomNode-\u0026gt;SetPosition(Vector3(0, 0.0f, 0));\nStaticModel* mushroomObject = mushroomNode-\u0026gt;CreateComponent\u0026lt;StaticModel\u0026gt;();\nmushroomObject-\u0026gt;SetModel(cache-\u0026gt;GetResource\u0026lt;Model\u0026gt;(\"Models/Mushroom.mdl\"));\nmushroomObject-\u0026gt;SetMaterial(cache-\u0026gt;GetResource\u0026lt;Material\u0026gt;(\"Materials/Mushroom.xml\"));\n\n\ncameraNode_ = scene_-\u0026gt;CreateChild(\"Camera\");\nCamera* camera = cameraNode_-\u0026gt;CreateComponent\u0026lt;Camera\u0026gt;();\ncameraNode_-\u0026gt;SetPosition(Vector3(0.0f, 0.5f, -10.0f));\ncameraNode_-\u0026gt;LookAt(Vector3(0.0f, 0.5f, 0.0f));\ncamera-\u0026gt;SetOrthographic(true);\nGraphics* graphics = GetSubsystem\u0026lt;Graphics\u0026gt;();\ncamera-\u0026gt;SetOrthoSize((float)graphics-\u0026gt;GetHeight() * PIXEL_SIZE);\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e}\u003c/p\u003e\n\u003cp\u003evoid Game::MoveCamera(float timeStep)\u003cbr\u003e\n{\u003cbr\u003e\nInput* input = GetSubsystem();\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003econst float MOVE_SPEED = 20.0f;\nconst float MOUSE_SENSITIVITY = 0.1f;\n\nIntVector2 mouseMove = input-\u0026gt;GetMouseMove();\nyaw_ += MOUSE_SENSITIVITY * mouseMove.x_;\npitch_ += MOUSE_SENSITIVITY * mouseMove.y_;\npitch_ = Clamp(pitch_, -90.0f, 90.0f);\n\ncameraNode_-\u0026gt;SetRotation(Quaternion(pitch_, yaw_, 0.0f));\n\nif (input-\u0026gt;GetKeyDown('Q'))\n\tcameraNode_-\u0026gt;Translate(Vector3::UP * MOVE_SPEED * timeStep);\nif (input-\u0026gt;GetKeyDown('E'))\n\tcameraNode_-\u0026gt;Translate(Vector3::DOWN * MOVE_SPEED * timeStep);\nif (input-\u0026gt;GetKeyDown('W'))\n\tcameraNode_-\u0026gt;Translate(Vector3::FORWARD * MOVE_SPEED * timeStep);\nif (input-\u0026gt;GetKeyDown('S'))\n\tcameraNode_-\u0026gt;Translate(Vector3::BACK * MOVE_SPEED * timeStep);\nif (input-\u0026gt;GetKeyDown('A'))\n\tcameraNode_-\u0026gt;Translate(Vector3::LEFT * MOVE_SPEED * timeStep);\nif (input-\u0026gt;GetKeyDown('D'))\n\tcameraNode_-\u0026gt;Translate(Vector3::RIGHT * MOVE_SPEED * timeStep);\n\nif (input-\u0026gt;GetKeyPress(KEY_F2))\n\tGetSubsystem\u0026lt;DebugHud\u0026gt;()-\u0026gt;ToggleAll();\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e}\u003c/p\u003e\n\u003cp\u003evoid Game::SubscribeToEvents()\u003cbr\u003e\n{\u003cbr\u003e\nSubscribeToEvent(E_UPDATE, HANDLER(Game, HandleUpdate));\u003cbr\u003e\nSubscribeToEvent(E_SCENEUPDATE, HANDLER(Game, HandleSceneUpdate));\u003cbr\u003e\nSubscribeToEvent(E_POSTRENDERUPDATE, HANDLER(Game, HandlePostRenderUpdate));\u003cbr\u003e\nSubscribeToEvent(E_ENDRENDERING, HANDLER(Game, HandleEndRendering));\u003cbr\u003e\n}\u003c/p\u003e\n\u003cp\u003evoid Game::HandleUpdate(StringHash eventType, VariantMap\u0026amp; eventData)\u003cbr\u003e\n{\u003cbr\u003e\nusing namespace Update;\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003efloat timeStep = eventData[P_TIMESTEP].GetFloat();\n\nMoveCamera(timeStep);\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e}\u003c/p\u003e\n\u003cp\u003evoid Game::HandleSceneUpdate(StringHash eventType, VariantMap\u0026amp; eventData)\u003cbr\u003e\n{\u003cbr\u003e\nResourceCache* cache = GetSubsystem();\u003cbr\u003e\nspriteBatch_-\u0026gt;Begin();\u003cbr\u003e\nspriteBatch_-\u0026gt;SetBlendMode(BLEND_ALPHA);\u003cbr\u003e\nTexture2D* text1 = cache-\u0026gt;GetResource(“Textures/Flare.dds”); // ??? ??? ?? ??? ? ??? ??? ? 50 ???\u003cbr\u003e\nTexture2D* tex2 = cache-\u0026gt;GetResource(“Urho2D/Ball.png”); // ??? ??? ???\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003espriteBatch_-\u0026gt;Draw(tex2, Rect(0, 0, 1, 1), Color::WHITE);\n\nfor (int i = 0; i \u0026lt; 200; i++)\n{\n\t//\t\tspriteBatch_-\u0026gt;Draw(text1, Rect(0, 0, 1, 1), Rect(0, 0, 256, 256), Color::WHITE);\n}\nfor (int i = 0; i \u0026lt; 200; i++)\n{\n\t//\t\tspriteBatch_-\u0026gt;Draw(tex2, Rect(1, 0, 2, 1), Rect(0, 0, 256, 256), Color::WHITE);\n\t//spriteBatch_-\u0026gt;Draw(text1, Rect(1, 0, 2, 1), Rect(0, 0, 256, 256), Color::WHITE);\n\t//spriteBatch_-\u0026gt;Draw(tex2, Rect(1, 0.5f, 2, 1.5f), Color::WHITE);\n}\nfor (int i = 0; i \u0026lt; 200; i++)\n\t//\t\tspriteBatch_-\u0026gt;Draw(tex2, Rect(1, 0, 2, 1), Rect(0, 0, 256, 256), Color::WHITE);\nspriteBatch_-\u0026gt;End();\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e}\u003c/p\u003e\n\u003cp\u003evoid Game::HandlePostRenderUpdate(StringHash eventType, VariantMap\u0026amp; eventData)\u003cbr\u003e\n{\u003cbr\u003e\n//GetSubsystem()-\u0026gt;DrawDebugGeometry(true);\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003espriteBatch_-\u0026gt;OnRender(eventType, eventData);\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e}\u003c/p\u003e\n\u003cp\u003evoid Game::HandleEndRendering(StringHash eventType, VariantMap\u0026amp; eventData)\u003cbr\u003e\n{\u003cbr\u003e\n//spriteBatch_-\u0026gt;OnRender(eventType, eventData); // ??? ???, ?? ??? UI, ??? ??? ? HandlePostRenderUpdate\u003cbr\u003e\n}\u003c/p\u003e\n\u003cp\u003evoid Game::CreateText()\u003cbr\u003e\n{\u003cbr\u003e\nResourceCache* cache = GetSubsystem();\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e// Construct new Text object\nSharedPtr\u0026lt;Text\u0026gt; helloText(new Text(context_));\n\n// Set String to display\nhelloText-\u0026gt;SetText(\"========================\");\n\n// Set font and text color\nhelloText-\u0026gt;SetFont(cache-\u0026gt;GetResource\u0026lt;Font\u0026gt;(\"Fonts/Anonymous Pro.ttf\"), 30);\nhelloText-\u0026gt;SetColor(Color(0.0f, 1.0f, 0.0f));\n\n// Align Text center-screen\nhelloText-\u0026gt;SetHorizontalAlignment(HA_CENTER);\nhelloText-\u0026gt;SetVerticalAlignment(VA_CENTER);\n\n// Add Text instance to the UI root element\nGetSubsystem\u0026lt;UI\u0026gt;()-\u0026gt;GetRoot()-\u0026gt;AddChild(helloText);\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e} [/code]\u003c/p\u003e\n\u003cp\u003eGame.h\u003c/p\u003e\n\u003cp\u003e[code]\u003cspan class=\"hashtag\"\u003e#pragma\u003c/span\u003e once\u003c/p\u003e\n\u003cp\u003e\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “SpriteBatch.h”\u003c/p\u003e\n\u003cp\u003eclass Game : public Application\u003cbr\u003e\n{\u003cbr\u003e\nOBJECT(Game);\u003c/p\u003e\n\u003cp\u003epublic:\u003cbr\u003e\nGame(Context* context);\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003evirtual void Setup();\nvirtual void Start();\n\nvoid CreateText();\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eprotected:\u003cbr\u003e\nvoid SetLogoVisible(bool enable);\u003cbr\u003e\nSharedPtr scene_;\u003cbr\u003e\nSharedPtr cameraNode_;\u003cbr\u003e\nfloat yaw_;\u003cbr\u003e\nfloat pitch_;\u003c/p\u003e\n\u003cp\u003eprivate:\u003cbr\u003e\nSpriteBatch* spriteBatch_;\u003cbr\u003e\nvoid CreateScene();\u003cbr\u003e\nvoid SetupViewport();\u003cbr\u003e\nvoid MoveCamera(float timeStep);\u003cbr\u003e\nvoid SubscribeToEvents();\u003cbr\u003e\nvoid HandleUpdate(StringHash eventType, VariantMap\u0026amp; eventData);\u003cbr\u003e\nvoid HandleSceneUpdate(StringHash eventType, VariantMap\u0026amp; eventData);\u003cbr\u003e\nvoid HandlePostRenderUpdate(StringHash eventType, VariantMap\u0026amp; eventData);\u003cbr\u003e\nvoid HandleEndRendering(StringHash eventType, VariantMap\u0026amp; eventData);\u003cbr\u003e\n}; [/code]\u003c/p\u003e\n\u003cp\u003eBut I have problem.\u003c/p\u003e\n\u003cp\u003eWhen I call drawing SpriteBatch in HandleEndRendering it works, but SpriteBatch overlaps UI.\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003evoid Game::HandleEndRendering(StringHash eventType, VariantMap\u0026amp; eventData)\n{\n\tspriteBatch_-\u0026gt;OnRender(eventType, eventData);\n}\u003c/code\u003e\u003c/p\u003e\n\u003cdiv class=\"spoiler\"\u003e\n\u003cp\u003e\u003cdiv class=\"lightbox-wrapper\"\u003e\u003ca class=\"lightbox\" href=\"http://s020.radikal.ru/i700/1506/20/66a9d271926e.jpg\" title=\"\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"http://s020.radikal.ru/i700/1506/20/66a9d271926e.jpg\" alt=\"\" width=\"639\" height=\"500\"\u003e\u003cdiv class=\"meta\"\u003e\u003csvg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"\u003e\u003cuse xlink:href=\"#far-image\"\u003e\u003c/use\u003e\u003c/svg\u003e\u003cspan class=\"filename\"\u003e\u003c/span\u003e\u003cspan class=\"informations\"\u003e816×638\u003c/span\u003e\u003csvg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"\u003e\u003cuse xlink:href=\"#discourse-expand\"\u003e\u003c/use\u003e\u003c/svg\u003e\u003c/div\u003e\u003c/a\u003e\u003c/div\u003e\u003c/p\u003e\n\u003c/div\u003e\n\u003cp\u003eWhen I call drawing SpriteBatch in HandlePostRenderUpdate (like DrawDebugGeometry) it does not work.\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003evoid Game::HandlePostRenderUpdate(StringHash eventType, VariantMap\u0026amp; eventData)\n{\n\t//GetSubsystem\u0026lt;Renderer\u0026gt;()-\u0026gt;DrawDebugGeometry(true);\n\tspriteBatch_-\u0026gt;OnRender(eventType, eventData);\n}\u003c/code\u003e\u003c/p\u003e\n\u003cdiv class=\"spoiler\"\u003e\n\u003cp\u003e\u003cdiv class=\"lightbox-wrapper\"\u003e\u003ca class=\"lightbox\" href=\"http://s018.radikal.ru/i527/1506/c2/802267fcd892.jpg\" title=\"\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"http://s018.radikal.ru/i527/1506/c2/802267fcd892.jpg\" alt=\"\" width=\"639\" height=\"500\"\u003e\u003cdiv class=\"meta\"\u003e\u003csvg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"\u003e\u003cuse xlink:href=\"#far-image\"\u003e\u003c/use\u003e\u003c/svg\u003e\u003cspan class=\"filename\"\u003e\u003c/span\u003e\u003cspan class=\"informations\"\u003e816×638\u003c/span\u003e\u003csvg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"\u003e\u003cuse xlink:href=\"#discourse-expand\"\u003e\u003c/use\u003e\u003c/svg\u003e\u003c/div\u003e\u003c/a\u003e\u003c/div\u003e\u003c/p\u003e\n\u003c/div\u003e\n\u003cp\u003ePls help me \u003cimg src=\"https://emoji.discourse-cdn.com/twitter/slight_smile.png?v=9\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\"\u003e\u003c/p\u003e","post_number":4,"post_type":1,"updated_at":"2017-01-02T01:05:38.864Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":6,"reads":31,"readers_count":30,"score":36.2,"yours":false,"topic_id":591,"topic_slug":"spritebatch-beta-same-like-in-xna-or-d3dxsprite","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"link_counts":[{"url":"http://s020.radikal.ru/i700/1506/20/66a9d271926e.jpg","internal":false,"reflection":false,"title":"66a9d271926e.jpg","clicks":0},{"url":"http://s018.radikal.ru/i527/1506/c2/802267fcd892.jpg","internal":false,"reflection":false,"title":"802267fcd892.jpg","clicks":0}],"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":183,"hidden":false,"trust_level":1,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":6551,"name":"","username":"v0van1981","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/v/13edae/{size}.png","created_at":"2015-06-24T19:55:52.000Z","cooked":"\u003cp\u003eI found the solution. If call rendering from E_ENDVIEWRENDER all works nice.\u003c/p\u003e","post_number":5,"post_type":1,"updated_at":"2017-01-02T01:05:40.626Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":0,"reads":18,"readers_count":17,"score":3.6,"yours":false,"topic_id":591,"topic_slug":"spritebatch-beta-same-like-in-xna-or-d3dxsprite","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":183,"hidden":false,"trust_level":1,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":12344,"name":"","username":"1vanK","avatar_template":"/user_avatar/discourse.urho3d.io/1vank/{size}/768_2.png","created_at":"2016-06-03T09:37:06.000Z","cooked":"\u003cp\u003eThis is a very useful thing, but public under unknown license. So, I decided to write my own implementation (and also for self-education).\u003cbr\u003e\n\u003ca href=\"https://github.com/1vanK/Urho3DSpriteBatch\"\u003egithub.com/1vanK/Urho3DSpriteBatch\u003c/a\u003e\u003cbr\u003e\nI wrote the code for personal use, so there are a lot of comments in Russian, sorry. But still decided to publish his, perhaps it would be useful for someone.\u003cbr\u003e\nMain differences:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003epublic domain license\u003c/li\u003e\n\u003cli\u003einfinite count of sprites\u003c/li\u003e\n\u003cli\u003ecorrect rendering ttf fonts (but still need to do some things)\u003c/li\u003e\n\u003cli\u003epossible to render canvas with sprites in 3d space\u003cbr\u003e\nThis is early version. And I do not know exactly when it will be finished. I will add functionality when I will to need anything.\u003c/li\u003e\n\u003c/ol\u003e","post_number":6,"post_type":1,"updated_at":"2017-01-02T01:12:40.010Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":0,"reads":18,"readers_count":17,"score":3.6,"yours":false,"topic_id":591,"topic_slug":"spritebatch-beta-same-like-in-xna-or-d3dxsprite","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"link_counts":[{"url":"https://github.com/1vanK/Urho3DSpriteBatch","internal":false,"reflection":false,"title":"GitHub - 1vanK/Urho3DSpriteBatch","clicks":11}],"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":true,"admin":false,"staff":true,"user_id":263,"hidden":false,"trust_level":4,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":12348,"name":"","username":"Victor","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/v/3e96dc/{size}.png","created_at":"2016-06-03T14:44:20.000Z","cooked":"\u003cp\u003eThis looks interesting! I’m not familiar with XNA or D3DXSprite implementations. It sounds like this could this be used to render fonts in world space? I’ve had this issue for a while where I couldn’t place text correctly onto terrain with a curve (and stroke effect), and so I’ve abandoned the idea temporarily, however if SpriteBatch renders text in world space coords perhaps that would solve my issue. Thanks man!\u003c/p\u003e\n\u003cp\u003eReference post to the issue I’m having: \u003ca href=\"http://discourse.urho3d.io/t/curved-text/2034/9\"\u003etopic2130.html#p12857\u003c/a\u003e\u003c/p\u003e","post_number":7,"post_type":1,"updated_at":"2017-01-02T01:12:40.358Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":0,"reads":17,"readers_count":16,"score":3.4,"yours":false,"topic_id":591,"topic_slug":"spritebatch-beta-same-like-in-xna-or-d3dxsprite","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"link_counts":[{"url":"http://discourse.urho3d.io/t/curved-text/2034/9","internal":false,"reflection":false,"title":"Curved Text - Support - Urho3D","clicks":0}],"read":true,"user_title":"","bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":461,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":12349,"name":"","username":"1vanK","avatar_template":"/user_avatar/discourse.urho3d.io/1vank/{size}/768_2.png","created_at":"2016-06-03T14:54:56.000Z","cooked":"\u003cp\u003eIt will not help you, it draw all spites in one plane\u003c/p\u003e","post_number":8,"post_type":1,"updated_at":"2017-01-02T01:12:40.435Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":0,"reads":15,"readers_count":14,"score":3.0,"yours":false,"topic_id":591,"topic_slug":"spritebatch-beta-same-like-in-xna-or-d3dxsprite","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":true,"admin":false,"staff":true,"user_id":263,"hidden":false,"trust_level":4,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":12350,"name":"","username":"Victor","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/v/3e96dc/{size}.png","created_at":"2016-06-03T14:57:05.000Z","cooked":"\u003caside class=\"quote\"\u003e\n\u003cdiv class=\"title\"\u003e\n\u003cdiv class=\"quote-controls\"\u003e\u003c/div\u003e\n\u003cimg alt width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/1vank/40/768_1.png\" class=\"avatar\"\u003e 1vanK:\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003eIt will not help you, it draw all spites in one plane\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/aside\u003e\n\u003cp\u003eAh I see. Maybe I could modify it a bit to fit my needs. Either way, thanks for this man! I’m sure it can be helpful in other ways. \u003cimg src=\"https://emoji.discourse-cdn.com/twitter/slight_smile.png?v=5\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\"\u003e\u003c/p\u003e","post_number":9,"post_type":1,"updated_at":"2017-01-02T01:12:40.513Z","reply_count":0,"reply_to_post_number":null,"quote_count":1,"incoming_link_count":0,"reads":15,"readers_count":14,"score":3.0,"yours":false,"topic_id":591,"topic_slug":"spritebatch-beta-same-like-in-xna-or-d3dxsprite","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":"","bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":461,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":12351,"name":"","username":"1vanK","avatar_template":"/user_avatar/discourse.urho3d.io/1vank/{size}/768_2.png","created_at":"2016-06-03T15:16:38.000Z","cooked":"\u003caside class=\"quote\"\u003e\n\u003cdiv class=\"title\"\u003e\n\u003cdiv class=\"quote-controls\"\u003e\u003c/div\u003e\n\u003cimg alt width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/victor/40/430_1.png\" class=\"avatar\"\u003e Victor:\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003e[quote=“1vanK”]It will not help you, it draw all spites in one plane\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/aside\u003e\n\u003cp\u003eAh I see. Maybe I could modify it a bit to fit my needs. Either way, thanks for this man! I’m sure it can be helpful in other ways. :)[/quote]\u003c/p\u003e\n\u003cp\u003eIt is unlikely that all this will be somehow useful to you. The purpose of it - rendering of previously unknown number of sprites, that change every frame without overhead from nodes. Examle of using this: \u003ca href=\"http://discourse.urho3d.io/t/terraria-like-game-in-urho3d/1698/1\"\u003etopic1765.html\u003c/a\u003e\u003c/p\u003e","post_number":10,"post_type":1,"updated_at":"2017-01-02T01:12:40.582Z","reply_count":0,"reply_to_post_number":null,"quote_count":1,"incoming_link_count":1,"reads":18,"readers_count":17,"score":8.6,"yours":false,"topic_id":591,"topic_slug":"spritebatch-beta-same-like-in-xna-or-d3dxsprite","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"link_counts":[{"url":"http://discourse.urho3d.io/t/terraria-like-game-in-urho3d/1698","internal":true,"reflection":false,"title":"Terraria-like game in Urho3D","clicks":0}],"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":true,"admin":false,"staff":true,"user_id":263,"hidden":false,"trust_level":4,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":14514,"name":"","username":"1vanK","avatar_template":"/user_avatar/discourse.urho3d.io/1vank/{size}/768_2.png","created_at":"2016-11-19T03:47:46.000Z","cooked":"\u003cp\u003eAbout \u003ca href=\"https://github.com/1vanK/Urho3DSpriteBatch\"\u003egithub.com/1vanK/Urho3DSpriteBatch\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eEdit: in my tests with 20000 sprites on screen\u003cbr\u003e\nMonoGame (Directx 11) - 64 fps\u003cbr\u003e\nXNA (DirectX 9) - 46 fps\u003cbr\u003e\nUrho3D OpenGL - 56 fps\u003cbr\u003e\nUrho3D DrectX - 47 fps\u003cbr\u003e\nUrho3D DrectX11 - 62 fps\u003c/p\u003e","post_number":11,"post_type":1,"updated_at":"2017-01-02T01:15:18.180Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":7,"reads":19,"readers_count":18,"score":38.8,"yours":false,"topic_id":591,"topic_slug":"spritebatch-beta-same-like-in-xna-or-d3dxsprite","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"link_counts":[{"url":"https://github.com/1vanK/Urho3DSpriteBatch","internal":false,"reflection":false,"title":"GitHub - 1vanK/Urho3DSpriteBatch","clicks":9}],"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":true,"admin":false,"staff":true,"user_id":263,"hidden":false,"trust_level":4,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":14725,"name":"","username":"1vanK","avatar_template":"/user_avatar/discourse.urho3d.io/1vank/{size}/768_2.png","created_at":"2016-12-12T16:35:50.000Z","cooked":"\u003cp\u003eSpriteBatch \u003ca href=\"https://github.com/1vanK/Urho3DSpriteBatch\"\u003egithub.com/1vanK/Urho3DSpriteBatch\u003c/a\u003e generally completed\u003cbr\u003e\nThe main purpose: tile-based 2D games\u003c/p\u003e","post_number":12,"post_type":1,"updated_at":"2017-01-02T01:15:33.937Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":0,"reads":19,"readers_count":18,"score":18.8,"yours":false,"topic_id":591,"topic_slug":"spritebatch-beta-same-like-in-xna-or-d3dxsprite","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"link_counts":[{"url":"https://github.com/1vanK/Urho3DSpriteBatch","internal":false,"reflection":false,"title":"GitHub - 1vanK/Urho3DSpriteBatch","clicks":6}],"read":true,"user_title":null,"bookmarked":false,"actions_summary":[{"id":2,"count":1}],"moderator":true,"admin":false,"staff":true,"user_id":263,"hidden":false,"trust_level":4,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":15560,"name":"","username":"1vanK","avatar_template":"/user_avatar/discourse.urho3d.io/1vank/{size}/768_2.png","created_at":"2017-01-06T18:17:54.205Z","cooked":"\u003cp\u003eCurrently I works on Sprite Font Generator for Sprite Batch with different special effects (for example blurred shadows):\u003cbr\u003e\n\u003caside class=\"onebox whitelistedgeneric\"\u003e\n  \u003cheader class=\"source\"\u003e\n      \u003cimg src=\"https://github.githubassets.com/favicons/favicon.svg\" class=\"site-icon\" width=\"32\" height=\"32\"\u003e\n      \u003ca href=\"https://github.com/1vanK/Urho3DBitmapFontGenerator\" target=\"_blank\"\u003eGitHub\u003c/a\u003e\n  \u003c/header\u003e\n  \u003carticle class=\"onebox-body\"\u003e\n    \u003cimg src=\"https://avatars1.githubusercontent.com/u/13021826?s=400\u0026amp;v=4\" class=\"thumbnail onebox-avatar\" width=\"420\" height=\"420\"\u003e\n\n\u003ch3\u003e\u003ca href=\"https://github.com/1vanK/Urho3DBitmapFontGenerator\" target=\"_blank\"\u003e1vanK/Urho3DBitmapFontGenerator\u003c/a\u003e\u003c/h3\u003e\n\n\u003cp\u003eContribute to 1vanK/Urho3DBitmapFontGenerator development by creating an account on GitHub.\u003c/p\u003e\n\n\n  \u003c/article\u003e\n  \u003cdiv class=\"onebox-metadata\"\u003e\n    \n    \n  \u003c/div\u003e\n  \u003cdiv style=\"clear: both\"\u003e\u003c/div\u003e\n\u003c/aside\u003e\n\u003cbr\u003e\n\u003cdiv class=\"lightbox-wrapper\"\u003e\u003ca class=\"lightbox\" href=\"https://global.discourse-cdn.com/standard17/uploads/urho3d/original/1X/35d0f728ed515346ea23044bc7328c152c868f8f.png\" data-download-href=\"/uploads/short-url/7G50LBCLiFbM4wSVNezRT9aF68f.png?dl=1\" title=\"2.png\"\u003e\u003cimg src=\"https://global.discourse-cdn.com/standard17/uploads/urho3d/optimized/1X/35d0f728ed515346ea23044bc7328c152c868f8f_2_690x468.png\" width=\"690\" height=\"468\" srcset=\"https://global.discourse-cdn.com/standard17/uploads/urho3d/optimized/1X/35d0f728ed515346ea23044bc7328c152c868f8f_2_690x468.png, https://global.discourse-cdn.com/standard17/uploads/urho3d/original/1X/35d0f728ed515346ea23044bc7328c152c868f8f.png 1.5x, https://global.discourse-cdn.com/standard17/uploads/urho3d/original/1X/35d0f728ed515346ea23044bc7328c152c868f8f.png 2x\" data-small-upload=\"https://global.discourse-cdn.com/standard17/uploads/urho3d/optimized/1X/35d0f728ed515346ea23044bc7328c152c868f8f_2_10x10.png\"\u003e\u003cdiv class=\"meta\"\u003e\u003csvg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"\u003e\u003cuse xlink:href=\"#far-image\"\u003e\u003c/use\u003e\u003c/svg\u003e\u003cspan class=\"filename\"\u003e2.png\u003c/span\u003e\u003cspan class=\"informations\"\u003e889×603 152 KB\u003c/span\u003e\u003csvg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"\u003e\u003cuse xlink:href=\"#discourse-expand\"\u003e\u003c/use\u003e\u003c/svg\u003e\u003c/div\u003e\u003c/a\u003e\u003c/div\u003e\u003c/p\u003e","post_number":13,"post_type":1,"updated_at":"2017-01-06T18:17:54.205Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":1,"reads":19,"readers_count":18,"score":23.8,"yours":false,"topic_id":591,"topic_slug":"spritebatch-beta-same-like-in-xna-or-d3dxsprite","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"link_counts":[{"url":"https://github.com/1vanK/Urho3DBitmapFontGenerator","internal":false,"reflection":false,"title":"GitHub - 1vanK/Urho3DBitmapFontGenerator","clicks":5},{"url":"https://global.discourse-cdn.com/standard17/uploads/urho3d/original/1X/35d0f728ed515346ea23044bc7328c152c868f8f.png","internal":false,"reflection":false,"title":"35d0f728ed515346ea23044bc7328c152c868f8f.png","clicks":0}],"read":true,"user_title":null,"bookmarked":false,"actions_summary":[{"id":2,"count":1}],"moderator":true,"admin":false,"staff":true,"user_id":263,"hidden":false,"trust_level":4,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false}],"stream":[3271,3807,3814,6530,6551,12344,12348,12349,12350,12351,14514,14725,15560]},"timeline_lookup":[[1,2918],[2,2886],[3,2885],[4,2709],[5,2708],[6,2364],[11,2195],[12,2172],[13,2146]],"suggested_topics":[{"id":7103,"title":":test_tube: DebugRenderer as GUI","fancy_title":":test_tube: DebugRenderer as GUI","slug":"debugrenderer-as-gui","posts_count":4,"reply_count":1,"highest_post_number":4,"image_url":null,"created_at":"2021-12-17T02:25:06.606Z","last_posted_at":"2021-12-18T01:09:27.738Z","bumped":true,"bumped_at":"2021-12-18T01:09:27.738Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"unicode_title":"🧪 DebugRenderer as GUI","tags_descriptions":{},"like_count":4,"views":267,"category_id":13,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":192,"username":"Modanung","name":"魔大农 𝞍𝞎𝝳 現招蜍","avatar_template":"/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":861,"username":"GodMan","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/g/e79b87/{size}.png"}}]},{"id":7110,"title":"Resource fetch define","fancy_title":"Resource fetch define","slug":"resource-fetch-define","posts_count":2,"reply_count":0,"highest_post_number":2,"image_url":null,"created_at":"2021-12-27T12:28:55.126Z","last_posted_at":"2021-12-27T17:00:37.699Z","bumped":true,"bumped_at":"2021-12-27T17:00:37.699Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":7,"views":184,"category_id":13,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":null,"description":"Original Poster","user":{"id":192,"username":"Modanung","name":"魔大农 𝞍𝞎𝝳 現招蜍","avatar_template":"/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png"}},{"extras":"latest","description":"Most Recent Poster","user":{"id":1304,"username":"lebrewer","name":"lebrewer","avatar_template":"/user_avatar/discourse.urho3d.io/lebrewer/{size}/2811_2.png"}}]},{"id":7120,"title":"Log Error Once Macro","fancy_title":"Log Error Once Macro","slug":"log-error-once-macro","posts_count":1,"reply_count":0,"highest_post_number":1,"image_url":null,"created_at":"2022-01-04T02:24:37.857Z","last_posted_at":"2022-01-04T02:24:37.925Z","bumped":true,"bumped_at":"2022-01-04T02:24:37.925Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":3,"views":143,"category_id":13,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest single","description":"Original Poster, Most Recent Poster","user":{"id":628,"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}}]},{"id":7099,"title":":fallen_leaf: Polynomials \u0026 Harmonics","fancy_title":":fallen_leaf: Polynomials \u0026amp; Harmonics","slug":"polynomials-harmonics","posts_count":6,"reply_count":0,"highest_post_number":7,"image_url":null,"created_at":"2021-12-13T05:06:04.641Z","last_posted_at":"2021-12-27T23:27:39.489Z","bumped":true,"bumped_at":"2021-12-27T23:27:39.489Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"unicode_title":"🍂 Polynomials \u0026 Harmonics","tags_descriptions":{},"like_count":6,"views":392,"category_id":13,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest single","description":"Original Poster, Most Recent Poster","user":{"id":192,"username":"Modanung","name":"魔大农 𝞍𝞎𝝳 現招蜍","avatar_template":"/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png"}}]},{"id":7220,"title":"[Full Time or Contract] 3D Engine Developer","fancy_title":"[Full Time or Contract] 3D Engine Developer","slug":"full-time-or-contract-3d-engine-developer","posts_count":1,"reply_count":0,"highest_post_number":1,"image_url":null,"created_at":"2022-03-14T16:53:36.321Z","last_posted_at":"2022-03-14T16:53:36.399Z","bumped":true,"bumped_at":"2022-03-14T16:53:36.399Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":1,"views":241,"category_id":15,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest single","description":"Original Poster, Most Recent Poster","user":{"id":1511,"username":"KognitivSpark","name":"Ryan Groom","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/k/bb73d2/{size}.png"}}]}],"tags_descriptions":{},"id":591,"title":"SpriteBatch BETA (same like in XNA or D3DXSprite)","fancy_title":"SpriteBatch BETA (same like in XNA or D3DXSprite)","posts_count":13,"created_at":"2014-11-27T10:40:39.000Z","views":2164,"reply_count":0,"like_count":3,"last_posted_at":"2017-01-06T18:17:54.205Z","visible":true,"closed":false,"archived":false,"has_summary":false,"archetype":"regular","slug":"spritebatch-beta-same-like-in-xna-or-d3dxsprite","category_id":13,"word_count":6279,"deleted_at":null,"user_id":142,"featured_link":null,"pinned_globally":false,"pinned_at":null,"pinned_until":null,"image_url":null,"slow_mode_seconds":0,"draft":null,"draft_key":"topic_591","draft_sequence":null,"unpinned":null,"pinned":false,"current_post_number":1,"highest_post_number":13,"deleted_by":null,"actions_summary":[{"id":4,"count":0,"hidden":false,"can_act":false},{"id":8,"count":0,"hidden":false,"can_act":false},{"id":7,"count":0,"hidden":false,"can_act":false}],"chunk_size":20,"bookmarked":false,"bookmarks":[],"topic_timer":null,"message_bus_last_id":0,"participant_count":5,"show_read_indicator":false,"thumbnails":null,"slow_mode_enabled_until":null,"tags_disable_ads":false,"details":{"can_edit":false,"notification_level":1,"participants":[{"id":263,"username":"1vanK","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/1vank/{size}/768_2.png","post_count":6,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"moderator":true,"trust_level":4},{"id":183,"username":"v0van1981","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/v/13edae/{size}.png","post_count":3,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"trust_level":1},{"id":461,"username":"Victor","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/v/3e96dc/{size}.png","post_count":2,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"trust_level":2},{"id":25,"username":"Hevedy","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/h/7feea3/{size}.png","post_count":1,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"trust_level":1},{"id":142,"username":"simple","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/e36b37/{size}.png","post_count":1,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"trust_level":1}],"created_by":{"id":142,"username":"simple","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/e36b37/{size}.png"},"last_poster":{"id":263,"username":"1vanK","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/1vank/{size}/768_2.png"},"links":[{"url":"https://github.com/1vanK/Urho3DSpriteBatch","title":"GitHub - 1vanK/Urho3DSpriteBatch","internal":false,"attachment":false,"reflection":false,"clicks":26,"user_id":263,"domain":"github.com","root_domain":"github.com"},{"url":"https://drive.google.com/file/d/0B-0l276DEh6XTVBCZTUzR19kNFk/view","title":"UrhoSpriteBatch.zip - Google Drive","internal":false,"attachment":false,"reflection":false,"clicks":9,"user_id":142,"domain":"drive.google.com","root_domain":"google.com"},{"url":"https://github.com/1vanK/Urho3DBitmapFontGenerator","title":"GitHub - 1vanK/Urho3DBitmapFontGenerator","internal":false,"attachment":false,"reflection":false,"clicks":5,"user_id":263,"domain":"github.com","root_domain":"github.com"}]}}