{"post_stream": {"posts": [{"id": 8347, "name": "", "username": "Lumak", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/l/8491ac/{size}.png", "created_at": "2015-10-29T10:48:01.000Z", "cooked": "<p>I had another thread posted in \u201cdev talk\u201d section because there were some issues that I needed to resolve, but it\u2019s all fixed now.</p>\n<p>edit final: new repository created <a href=\"https://github.com/Lumak/Urho3D-1.4-TurboBadger\" data-bbcode=\"true\">https://github.com/Lumak/Urho3D-1.4-TurboBadger</a></p>\n<hr>\n<h2>Features</h2>\n<ul>\n<li>no unique shader required</li>\n<li>no unique render path required</li>\n<li>no unique graphics settings required</li>\n<li>uses Urho3D\u2019s default UIBatch render process</li>\n<li>delivers TurboBadger\u2019s batch data in its format, so it pumps data as fast as Turbo Badger can send them</li>\n</ul>\n<hr>\n<p>Image (Turbo Badger demo shown in Urho3D):<br>\n<div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"http://i.imgur.com/gA2z5qi.jpg?1\" title=\"\"><img src=\"http://i.imgur.com/gA2z5qi.jpg?1\" alt=\"\" width=\"690\" height=\"383\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use xlink:href=\"#far-image\"></use></svg><span class=\"filename\"></span><span class=\"informations\">900\u00d7500</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use xlink:href=\"#discourse-expand\"></use></svg></div></a></div></p>", "post_number": 1, "post_type": 1, "updated_at": "2017-12-15T08:22:17.988Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 431, "reads": 57, "readers_count": 56, "score": 2213.4, "yours": false, "topic_id": 1457, "topic_slug": "turbobadger-full-integration", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 2, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "https://github.com/Lumak/Urho3D-1.4-TurboBadger", "internal": false, "reflection": false, "title": "GitHub - Lumak/Urho3D-1.4-TurboBadger: TurboBadger integration to Urho3D-1.4", "clicks": 130}, {"url": "http://i.imgur.com/gA2z5qi.jpg?1", "internal": false, "reflection": false, "clicks": 0}, {"url": "http://discourse.urho3d.io/t/how-to-integrate-third-party-gui/3848/4", "internal": true, "reflection": true, "title": "How to integrate third party GUI?", "clicks": 1}], "read": true, "user_title": null, "bookmarked": false, "actions_summary": [{"id": 2, "count": 1}], "moderator": false, "admin": false, "staff": false, "user_id": 256, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 8363, "name": "", "username": "Lumak", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/l/8491ac/{size}.png", "created_at": "2015-10-30T02:28:36.000Z", "cooked": "<p>I just been informed that this code is not compatible with the latest Urhod3D master branch, as reported by Hevedy:</p>\n<aside class=\"quote\">\n<blockquote>\n<p>Added the line 65 add_sample_subdirectory (54_TurboBadger) in Source/Samples/CMakeLists.txt to include the sample.<br>\n*Added the line 108 add_subdirectory (ThirdParty/TurboBadger) in Source/CMakeLists.txt to include the TurboBadger lib.</p>\n<p>This are errors: ?<br>\nThe line UIDrag.h 40 should be URHO3D_OBJECT( UIDrag ); and no OBJECT( UIDrag ); ?<br>\nThe line TBWrapper.h 51 should be URHO3D_OBJECT( TUIRendererBatcher ); and no OBJECT( TUIRendererBatcher ) ?<br>\nHANDLER to URHO3D_HANDLER</p>\n<p>Anyway after change that i got 6 errors<br>\nError 8 error C2208: \u2018Urho3D::Application\u2019 : no members defined using this type 54_turbobadger\\UIDrag.h 40 1 54_TurboBadger<br>\nError 3 error C1903: unable to recover from previous error(s); stopping compilation 54_turbobadger\\TBWrapper.h 51 1 54_TurboBadger</p>\n<p>*I using the master version but with the 1.4 adding only that changes to the CMakeList.txt give me too errors with the generated files.</p>\n<p>41&gt;Urho3D-1.4\\Build\\bin\\54_TurboBadger.exe : fatal error LNK1120: 195 unresolved externals</p>\n</blockquote>\n</aside>\n<p>I\u2019m still on 1.4 and will not be merging with the master branch anytime soon. I hope there are others who can help him with his build errors. I\u2019ll try to help him with 1.4 linking problem.</p>", "post_number": 2, "post_type": 1, "updated_at": "2017-01-02T01:07:51.872Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 1, "reads": 48, "readers_count": 47, "score": 14.6, "yours": false, "topic_id": 1457, "topic_slug": "turbobadger-full-integration", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "http://discourse.urho3d.io/t/turbobadger-integration/1452/6", "internal": true, "reflection": true, "title": "TurboBadger integration", "clicks": 2}, {"url": "http://discourse.urho3d.io/t/turbobadger-integration/1452/7", "internal": true, "reflection": true, "title": "TurboBadger integration", "clicks": 0}], "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 256, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 8376, "name": "", "username": "Enhex", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png", "created_at": "2015-10-31T05:58:03.000Z", "cooked": "<p>I think it might be a good idea to wait for the 1.5 release before adopting to the changes.</p>", "post_number": 3, "post_type": 1, "updated_at": "2017-01-02T01:07:52.753Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 42, "readers_count": 41, "score": 8.4, "yours": false, "topic_id": 1457, "topic_slug": "turbobadger-full-integration", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 184, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 10032, "name": "", "username": "Lumak", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/l/8491ac/{size}.png", "created_at": "2016-02-05T17:45:55.000Z", "cooked": "<p>added a download link to the integration, including tb and its data.</p>", "post_number": 4, "post_type": 1, "updated_at": "2017-01-02T01:09:53.228Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 38, "readers_count": 37, "score": 7.6, "yours": false, "topic_id": 1457, "topic_slug": "turbobadger-full-integration", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 256, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 10036, "name": "", "username": "Enhex", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png", "created_at": "2016-02-05T22:31:56.000Z", "cooked": "<p>Why not make a public repository?</p>", "post_number": 5, "post_type": 1, "updated_at": "2017-01-02T01:09:53.474Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 40, "readers_count": 39, "score": 8.0, "yours": false, "topic_id": 1457, "topic_slug": "turbobadger-full-integration", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 184, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 10037, "name": "", "username": "Lumak", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/l/8491ac/{size}.png", "created_at": "2016-02-05T23:46:19.000Z", "cooked": "<p>I don\u2019t see any reason why I should create a repository for this.  I don\u2019t see anyone interest in this judging by the number of comments on this thread (only you commented about waiting), so I\u2019m just going to provide a public downloadable link.</p>", "post_number": 6, "post_type": 1, "updated_at": "2017-01-02T01:09:53.531Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 40, "readers_count": 39, "score": 8.0, "yours": false, "topic_id": 1457, "topic_slug": "turbobadger-full-integration", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 256, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 10038, "name": "", "username": "thebluefish", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/t/f04885/{size}.png", "created_at": "2016-02-06T00:43:34.000Z", "cooked": "<p>A repo takes a minute to setup and makes it so much easier to look at the code. Even if there aren\u2019t any comments to \u201cshow interest\u201d, it doesn\u2019t mean that people will be any less interested in your work. For example, a libGDX demo that I created and posted on the site only got a few comments, but has racked up well over 20k downloads.</p>\n<p>Github (or really any public source control host) is a great place to keep a portfolio of your work if you plan on applying to developer positions.</p>", "post_number": 7, "post_type": 1, "updated_at": "2017-01-02T01:09:53.588Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 39, "readers_count": 38, "score": 7.8, "yours": false, "topic_id": 1457, "topic_slug": "turbobadger-full-integration", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 80, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 10039, "name": "", "username": "Dave82", "avatar_template": "/user_avatar/discourse.urho3d.io/dave82/{size}/2369_2.png", "created_at": "2016-02-06T01:08:14.000Z", "cooked": "<aside class=\"quote no-group\" data-username=\"Lumak\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"20\" height=\"20\" src=\"https://avatars.discourse-cdn.com/v4/letter/l/8491ac/40.png\" class=\"avatar\"> Lumak:</div>\n<blockquote>\n<p>I don\u2019t see any reason why I should create a repository for this.  I don\u2019t see anyone interest in this judging by the number of comments on this thread (only you commented about waiting), so I\u2019m just going to provide a public downloadable link.</p>\n</blockquote>\n</aside>\n<p>I\u2019ll comment <img src=\"https://emoji.discourse-cdn.com/twitter/smiley.png?v=10\" title=\":smiley:\" class=\"emoji\" alt=\":smiley:\"> You did an awesome work ! I can\u2019t see the reason why devs won\u2019t implement this as an official subsystem ? Looks professional , there are way more widgets , and could boost the editor\u2019s appereance and it would attract more users.</p>", "post_number": 8, "post_type": 1, "updated_at": "2017-01-02T01:09:53.653Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 1, "incoming_link_count": 0, "reads": 39, "readers_count": 38, "score": 7.8, "yours": false, "topic_id": 1457, "topic_slug": "turbobadger-full-integration", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 247, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 10041, "name": "", "username": "rasteron", "avatar_template": "/user_avatar/discourse.urho3d.io/rasteron/{size}/55_2.png", "created_at": "2016-02-06T01:16:51.000Z", "cooked": "<p>Count me in! I would agree on this as well. <img src=\"https://emoji.discourse-cdn.com/twitter/slight_smile.png?v=5\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\"> It is another good UI framework option and setting up a repo where you can improve and fully integrate it is a big plus! I\u2019m also thinking of using this as an alternative to Qt, due to its hefty payload.</p>\n<p>Btw, thanks again for the download links and assistance Lumak! <img src=\"https://emoji.discourse-cdn.com/twitter/smiley.png?v=5\" title=\":smiley:\" class=\"emoji\" alt=\":smiley:\"></p>", "post_number": 9, "post_type": 1, "updated_at": "2017-01-02T01:09:53.797Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 38, "readers_count": 37, "score": 7.6, "yours": false, "topic_id": 1457, "topic_slug": "turbobadger-full-integration", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 54, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 10042, "name": "", "username": "jenge", "avatar_template": "/user_avatar/discourse.urho3d.io/jenge/{size}/88_2.png", "created_at": "2016-02-06T01:37:46.000Z", "cooked": "<p>In terms of \u201chigher end\u201d editor, one thing TurboBadger needs is support for multiple top level windows.  Being able to drag windows in and out of tabs would also be huge.  Urho would also have to support multiple top level windows (probably with styling, as default style isn\u2019t good for a an editor window like this)</p>\n<ul>\n<li>Josh</li>\n</ul>", "post_number": 10, "post_type": 1, "updated_at": "2017-01-02T01:09:53.865Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 36, "readers_count": 35, "score": 7.2, "yours": false, "topic_id": 1457, "topic_slug": "turbobadger-full-integration", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 81, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 10046, "name": "", "username": "Bluemoon", "avatar_template": "/user_avatar/discourse.urho3d.io/bluemoon/{size}/348_2.png", "created_at": "2016-02-06T08:06:22.000Z", "cooked": "<aside class=\"quote no-group\" data-username=\"Lumak\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"20\" height=\"20\" src=\"https://avatars.discourse-cdn.com/v4/letter/l/8491ac/40.png\" class=\"avatar\"> Lumak:</div>\n<blockquote>\n<p>I don\u2019t see any reason why I should create a repository for this.  I don\u2019t see anyone interest in this judging by the number of comments on this thread (only you commented about waiting), so I\u2019m just going to provide a public downloadable link.</p>\n</blockquote>\n</aside>\n<p>Trying to figure out the interest of people through the comments here might be really misleading\u2026 Believe me, I spent a considerable amount of my time last month (January 2016) trying to implement Turbo Badger as a stand alone library to Urho3D and guess what? I achieved it using your Urho3D_TurboBadger implementation, the exact same one you pulled from github. I had a local copy of the last snapshot and was looking for the best time to tinker with it.<br>\nWhen I realized that jenge and the folks at Atomic Game Engine (which bred from Urho3D) had Turbo Badger Integrated, I was more than motivated to give it a shot.</p>\n<p>I\u2019ve only tested this on Windows Machine, OpenGL build was great, D3D9 was good but D3D11 had a bit of rendering issues (and I\u2019m not really good at all those graphic pipeline stuffs <img src=\"https://emoji.discourse-cdn.com/twitter/unamused.png?v=10\" title=\":unamused:\" class=\"emoji\" alt=\":unamused:\">  ) What consumed a vast portion of my time and mental energy was how to integrate TB as part of other Third Party library and how its interface would be wrapped and exposed for use in Urho3D. Is it going to replace the existing UI system or will it be part of custom UI structure that would be implemented in Urho3D?</p>\n<p>So\u2026 Quite a lot of people are interested in this project, even though some of us are yet to comment <img src=\"https://emoji.discourse-cdn.com/twitter/wink.png?v=10\" title=\":wink:\" class=\"emoji\" alt=\":wink:\"></p>", "post_number": 11, "post_type": 1, "updated_at": "2017-01-02T01:09:54.125Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 1, "incoming_link_count": 0, "reads": 37, "readers_count": 36, "score": 7.4, "yours": false, "topic_id": 1457, "topic_slug": "turbobadger-full-integration", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 94, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 10048, "name": "", "username": "Enhex", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png", "created_at": "2016-02-06T09:29:59.000Z", "cooked": "<p>I definitely want an external TurboBadger integration that doesn\u2019t modify Urho3D, so there\u2019s no need for a fork to maintain.</p>", "post_number": 12, "post_type": 1, "updated_at": "2017-01-02T01:09:54.265Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 30, "readers_count": 29, "score": 6.0, "yours": false, "topic_id": 1457, "topic_slug": "turbobadger-full-integration", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 184, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 10049, "name": "", "username": "Lumak", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/l/8491ac/{size}.png", "created_at": "2016-02-06T19:23:28.000Z", "cooked": "<aside class=\"quote no-group\" data-username=\"thebluefish\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"20\" height=\"20\" src=\"https://avatars.discourse-cdn.com/v4/letter/t/f04885/40.png\" class=\"avatar\"> thebluefish:</div>\n<blockquote>\n<p>A repo takes a minute to setup and makes it so much easier to look at the code. Even if there aren\u2019t any comments to \u201cshow interest\u201d, it doesn\u2019t mean that people will be any less interested in your work. For example, a libGDX demo that I created and posted on the site only got a few comments, but has racked up well over 20k downloads.</p>\n</blockquote>\n</aside>\n<p>Nice, if only we can do so well with games that we create.</p>\n<aside class=\"quote no-group\" data-username=\"Dave82\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/dave82/40/2369_2.png\" class=\"avatar\"> Dave82:</div>\n<blockquote>\n<p>I\u2019ll comment <img src=\"https://emoji.discourse-cdn.com/twitter/smiley.png?v=10\" title=\":smiley:\" class=\"emoji\" alt=\":smiley:\"> You did an awesome work ! I can\u2019t see the reason why devs won\u2019t implement this as an official subsystem ? Looks professional , there are way more widgets , and could boost the editor\u2019s appereance and it would attract more users.</p>\n</blockquote>\n</aside>\n<p>Thank you. TurboBadger does have nice UI graphics.</p>\n<aside class=\"quote no-group\" data-username=\"rasteron\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/rasteron/40/55_2.png\" class=\"avatar\"> rasteron:</div>\n<blockquote>\n<p>Count me in! I would agree on this as well. <img src=\"https://emoji.discourse-cdn.com/twitter/slight_smile.png?v=10\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\"> It is another good UI framework option and setting up a repo where you can improve and fully integrate it is a big plus! I\u2019m also thinking of using this as an alternative to Qt, due to its hefty payload.<br>\nBtw, thanks again for the download links and assistance Lumak! <img src=\"https://emoji.discourse-cdn.com/twitter/smiley.png?v=10\" title=\":smiley:\" class=\"emoji\" alt=\":smiley:\"></p>\n</blockquote>\n</aside>\n<p>Yeah Qt is also LGPL, and you\u2019re welcome.</p>\n<aside class=\"quote no-group\" data-username=\"jenge\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/jenge/40/88_2.png\" class=\"avatar\"> jenge:</div>\n<blockquote>\n<p>In terms of \u201chigher end\u201d editor, one thing TurboBadger needs is support for multiple top level windows. Being able to drag windows in and out of tabs would also be huge. Urho would also have to support multiple top level windows (probably with styling, as default style isn\u2019t good for a an editor window like this)</p>\n</blockquote>\n</aside>\n<p>I haven\u2019t look into creating an editor, but I agree that having multiple top level windows in any editor would be beneficial.</p>\n<aside class=\"quote no-group\" data-username=\"Bluemoon\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/bluemoon/40/348_2.png\" class=\"avatar\"> Bluemoon:</div>\n<blockquote>\n<p>Trying to figure out the interest of people through the comments here might be really misleading\u2026 Believe me, I spent a considerable amount of my time last month (January 2016) trying to implement Turbo Badger as a stand alone library to Urho3D and guess what? I achieved it using your Urho3D_TurboBadger implementation, the exact same one you pulled from github. I had a local copy of the last snapshot and was looking for the best time to tinker with it.<br>\nWhen I realized that jenge and the folks at Atomic Game Engine (which bred from Urho3D) had Turbo Badger Integrated, I was more than motivated to give it a shot.</p>\n<p>I\u2019ve only tested this on Windows Machine, OpenGL build was great, D3D9 was good but D3D11 had a bit of rendering issues (and I\u2019m not really good at all those graphic pipeline stuffs <img src=\"https://emoji.discourse-cdn.com/twitter/unamused.png?v=10\" title=\":unamused:\" class=\"emoji\" alt=\":unamused:\"> ) What consumed a vast portion of my time and mental energy was how to integrate TB as part of other Third Party library and how its interface would be wrapped and exposed for use in Urho3D. Is it going to replace the existing UI system or will it be part of custom UI structure that would be implemented in Urho3D?</p>\n<p>So\u2026 Quite a lot of people are interested in this project, even though some of us are yet to comment <img src=\"https://emoji.discourse-cdn.com/twitter/wink.png?v=10\" title=\":wink:\" class=\"emoji\" alt=\":wink:\"></p>\n</blockquote>\n</aside>\n<p>It\u2019s great to hear that someone is making use of my repository from last year. I haven\u2019t built D3D11 yet to see what\u2019s going on with that, but I\u2019ll attempt to build it and see sometime this week.</p>\n<aside class=\"quote no-group\" data-username=\"Enhex\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/enhex/40/81_2.png\" class=\"avatar\"> Enhex:</div>\n<blockquote>\n<p>I definitely want an external TurboBadger integration that doesn\u2019t modify Urho3D, so there\u2019s no need for a fork to maintain.</p>\n</blockquote>\n</aside>\n<p>The Urho3D-1.4-TurboBadger repository will be a standalone integration to an app, and not integrated with Urho3D lib.  It\u2019s good to hear comments like this so I can save myself the work trying to do the opposite.</p>\n<p><span class=\"bbcode-b\">[size=150]New Repository Created[/size]</span><br>\nJust because you asked - link <a href=\"https://github.com/Lumak/Urho3D-1.4-TurboBadger\" data-bbcode=\"true\" rel=\"noopener nofollow ugc\">https://github.com/Lumak/Urho3D-1.4-TurboBadger</a></p>", "post_number": 13, "post_type": 1, "updated_at": "2017-01-02T01:09:54.326Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 1, "incoming_link_count": 6, "reads": 37, "readers_count": 36, "score": 37.4, "yours": false, "topic_id": 1457, "topic_slug": "turbobadger-full-integration", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "https://github.com/Lumak/Urho3D-1.4-TurboBadger", "internal": false, "reflection": false, "title": "GitHub - Lumak/Urho3D-1.4-TurboBadger: TurboBadger integration to Urho3D-1.4", "clicks": 12}], "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 256, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 10055, "name": "Justin Miller", "username": "jmiller", "avatar_template": "/user_avatar/discourse.urho3d.io/jmiller/{size}/2367_2.png", "created_at": "2016-02-07T19:47:10.000Z", "cooked": "<p>Nice work on the implementation. <img src=\"https://emoji.discourse-cdn.com/twitter/slight_smile.png?v=5\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\"></p>\n<aside class=\"quote\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/enhex/40/81_1.png\" class=\"avatar\"> Enhex:</div>\n<blockquote>\n<p>I definitely want an external TurboBadger integration that doesn\u2019t modify Urho3D, so there\u2019s no need for a fork to maintain.</p>\n</blockquote>\n</aside>\n<p>I think the Urho-TurboBadger integration posted by <span class=\"bbcode-b\">thebluefish</span> also fits this bill.<br>\n<a href=\"http://discourse.urho3d.io/t/turbo-badger-implementation/1364/1\">topic1413.html</a><br>\nI migrated over half a year ago and only looked forward, aside from some work in the shared linking department.  :mrgreen:</p>\n<p>Re. multi-windows\u2026 others are more knowledgeable on this, but TB does have multiple internal windows (enough for me, in an editor), drop support, and is rather flexible in general.</p>", "post_number": 14, "post_type": 1, "updated_at": "2017-01-02T01:09:54.777Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 1, "incoming_link_count": 10, "reads": 39, "readers_count": 38, "score": 57.8, "yours": false, "topic_id": 1457, "topic_slug": "turbobadger-full-integration", "display_username": "Justin Miller", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "http://discourse.urho3d.io/t/turbo-badger-implementation/1364", "internal": true, "reflection": false, "title": "Turbo Badger implementation", "clicks": 0}], "read": true, "user_title": "", "bookmarked": false, "actions_summary": [], "moderator": true, "admin": false, "staff": true, "user_id": 21, "hidden": false, "trust_level": 3, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 10078, "name": "", "username": "George", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/71e660/{size}.png", "created_at": "2016-02-09T07:04:23.000Z", "cooked": "<p>Hi,<br>\nThis is great stuff.<br>\nI hope you have time to port this to the Urho trunk  version.</p>\n<p>Best regards,</p>", "post_number": 15, "post_type": 1, "updated_at": "2017-01-02T01:09:56.665Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 1, "reads": 43, "readers_count": 42, "score": 13.6, "yours": false, "topic_id": 1457, "topic_slug": "turbobadger-full-integration", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 281, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 10079, "name": "", "username": "George", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/71e660/{size}.png", "created_at": "2016-02-09T10:50:29.000Z", "cooked": "<p>Ignore my previous message.<br>\nI got it to work in 1.5.</p>\n<p>Just change these to new Urho3d name convention.</p>\n<pre><code class=\"lang-auto\">class UTBRendererBatcher : public UIElement, public TBRendererBatcher\n{\n\tURHO3D_OBJECT( UTBRendererBatcher, UIElement)\n...}\n\n\n\nURHO3D_EVENT(E_TBMSG, TBMessageNamespace)\n{\n\tURHO3D_PARAM(P_TBWIDGET, Widget);  // TBWidget pointer\n}\n\n\n//=============================================================================\n//=============================================================================\nclass UTBListener : public Object, public TBWidgetListener\n{\n\tURHO3D_OBJECT(UTBListener, Object);\npublic:\n\tUTBListener(Context *context);\n\n\t~UTBListener();\n\n\tvoid CreateMsgWindow();\n\tvirtual void OnWidgetRemove(TBWidget *parent, TBWidget *child);\n\tvirtual bool OnWidgetInvokeEvent(TBWidget *widget, const TBWidgetEvent &amp;ev);\n\n\tTBWidget* GetTBMessageWidget()\n\t{\n\t\treturn (TBWidget*)pTBMessageWindow_;\n\t}\nprotected:\n\tvoid SendEventMsg();\n\nprotected:\n\tTBMessageWindow     *pTBMessageWindow_;\n\n};\n\n\n\n\t// create TB render batcher\n\tGraphics *graphics = GetSubsystem&lt;Graphics&gt;();\n\tUTBRendererBatcher::Create(GetContext(), graphics-&gt;GetWidth(), graphics-&gt;GetHeight());\n\tUTBRendererBatcher::Singleton().Init(\"Data/TB/\");\n\n\t// create a msg win\n\tpTBListener_ = new UTBListener(GetContext());\n\tpTBListener_-&gt;CreateMsgWindow();\n\n\tSubscribeToEvent(E_TBMSG, URHO3D_HANDLER(NVuDuMain, HandleTBMessage));\n\n</code></pre>\n<p>How to make it interact with Urho object?</p>", "post_number": 16, "post_type": 1, "updated_at": "2017-01-02T01:09:56.737Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 4, "reads": 42, "readers_count": 41, "score": 28.4, "yours": false, "topic_id": 1457, "topic_slug": "turbobadger-full-integration", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 281, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 10080, "name": "", "username": "Enhex", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png", "created_at": "2016-02-09T11:45:17.000Z", "cooked": "<p>Pull request or let lumark add it to the repository, which should also remove the urho version number from the name, from \u201cUrho3D-1.4-TurboBadger\u201d, to \u201cUrho3D-TurboBadger\u201d.</p>", "post_number": 17, "post_type": 1, "updated_at": "2017-01-02T01:09:56.816Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 1, "reads": 37, "readers_count": 36, "score": 12.4, "yours": false, "topic_id": 1457, "topic_slug": "turbobadger-full-integration", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 184, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 10081, "name": "", "username": "George", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/71e660/{size}.png", "created_at": "2016-02-09T12:18:10.000Z", "cooked": "<p>I think Lumak can update it. As it is easy for him to add changes to the code.</p>\n<p>One more thing for those who want to see their game object. Just comment out the below line inside the UTBRendererBatcher.cpp</p>\n<p>//  root_.SetSkinBg(TBIDC(\u201cbackground\u201d));</p>\n<p>Cheers</p>", "post_number": 18, "post_type": 1, "updated_at": "2017-01-02T01:09:56.884Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 1, "reads": 40, "readers_count": 39, "score": 13.0, "yours": false, "topic_id": 1457, "topic_slug": "turbobadger-full-integration", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 281, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 11224, "name": "", "username": "christianclavet", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/c/76d3ee/{size}.png", "created_at": "2016-03-18T20:10:48.000Z", "cooked": "<p>Hi. I\u2019ve tried to build it using cmake, but got some error (I\u2019m not familiar with CMAKE, only used it to build URHO so far).</p>\n<p>[quote]New Repository Created<br>\nJust because you asked - link <a href=\"https://github.com/Lumak/Urho3D-1.4-TurboBadger\" rel=\"nofollow noopener\">github.com/Lumak/Urho3D-1.4-TurboBadger</a>[/quote]<br>\nI extracted the archive then tried to build it with cmake\u2026 Here the result:</p>\n<p>[code]C:\\Users\\Christian\\Desktop\\Urho3D-1.4-TurboBadger-master\\Source\\ThirdParty\\TurboBadger&gt;cmake_codelite \u2026/turbo<br>\n\u2013 The C compiler identification is GNU 5.1.0<br>\n\u2013 The CXX compiler identification is GNU 5.1.0<br>\n\u2013 Check for working C compiler: C:/TDM-GCC-64/bin/gcc.exe<br>\n\u2013 Check for working C compiler: C:/TDM-GCC-64/bin/gcc.exe \u2013 works<br>\n\u2013 Detecting C compiler ABI info<br>\n\u2013 Detecting C compiler ABI info - done<br>\n\u2013 Detecting C compile features<br>\n\u2013 Detecting C compile features - done<br>\n\u2013 Check for working CXX compiler: C:/TDM-GCC-64/bin/g++.exe<br>\n\u2013 Check for working CXX compiler: C:/TDM-GCC-64/bin/g++.exe \u2013 works<br>\n\u2013 Detecting CXX compiler ABI info<br>\n\u2013 Detecting CXX compiler ABI info - done<br>\n\u2013 Detecting CXX compile features<br>\n\u2013 Detecting CXX compile features - done<br>\nCMake Error at CMakeLists.txt:36 (setup_library):<br>\nUnknown CMake command \u201csetup_library\u201d.</p>\n<p>CMake Warning (dev) in CMakeLists.txt:<br>\nNo cmake_minimum_required command is present.  A line of code such as</p>\n<pre><code>cmake_minimum_required(VERSION 3.4)\n</code></pre>\n<p>should be added at the top of the file.  The version specified may be lower<br>\nif you wish to support older CMake versions for this project.  For more<br>\ninformation run \u201ccmake --help-policy CMP0000\u201d.<br>\nThis warning is for project developers.  Use -Wno-dev to suppress it.</p>\n<p>\u2013 Configuring incomplete, errors occurred!<br>\nSee also \u201cC:/Users/Christian/Desktop/Urho3D-1.4-TurboBadger-master/Source/ThirdParty/turbo/CMakeFiles/CMakeOutput.log\u201d.[/code]</p>\n<p><span class=\"bbcode-b\">EDIT:</span> Ok seen more of the structure of your files. This need to be added to the files of URHO and modify the makefiles so URHO add the new sub-directories to the build. I will have to download 1.4 to really test this, but understand more a little about CMAKE now. I would really like to have this in URHO3D as an option that could be activated. (Same for IMGUI), both GUI have their use and your worked to integrate them in URHO. Having a way to activate them in the build via cmake flag would be really nice.</p>", "post_number": 19, "post_type": 1, "updated_at": "2017-01-02T01:11:19.879Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 35, "reads": 41, "readers_count": 40, "score": 183.2, "yours": false, "topic_id": 1457, "topic_slug": "turbobadger-full-integration", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "https://github.com/Lumak/Urho3D-1.4-TurboBadger", "internal": false, "reflection": false, "title": "GitHub - Lumak/Urho3D-1.4-TurboBadger: TurboBadger integration to Urho3D-1.4", "clicks": 8}], "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 171, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 11238, "name": "", "username": "Lumak", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/l/8491ac/{size}.png", "created_at": "2016-03-19T14:41:16.000Z", "cooked": "<aside class=\"quote\">\n<blockquote>\n<p>EDIT: Ok seen more of the structure of your files. This need to be added to the files of URHO and modify the makefiles so URHO add the new sub-directories to the build. I will have to download 1.4 to really test this, but understand more a little about CMAKE now. I would really like to have this in URHO3D as an option that could be activated. (Same for IMGUI), both GUI have their use and your worked to integrate them in URHO. Having a way to activate them in the build via cmake flag would be really nice.</p>\n</blockquote>\n</aside>\n<p>Yes, all of my code exchanges are built as a sample in the sample folder.  Good to see that you figured it out.</p>", "post_number": 20, "post_type": 1, "updated_at": "2017-01-02T01:11:20.973Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 42, "readers_count": 41, "score": 8.4, "yours": false, "topic_id": 1457, "topic_slug": "turbobadger-full-integration", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 256, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 11239, "name": "", "username": "christianclavet", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/c/76d3ee/{size}.png", "created_at": "2016-03-19T17:28:07.000Z", "cooked": "<p>Hi, Downloaded 1.4 and added your files, it compile but fail at turbobadger because I think it require c++11 support and I don\u2019t think the compiler I\u2019m using (Windows 10, TDM-GCC5.1 64bit, Codelite) support it.<br>\nTDM-GCC should be the latest build for GNU GCC available for windows. (I think it\u2019s based on MINGW64)</p>\n<p>It all seem to fail when compiling theses directives (nullptr): From google, this seem that my toolchain doesnt support c++11 (If the C++11 is active in CMAKE for Urho1.5 it fail the generation). Is there a way to make it work, like replacing with NULL instead? All the errors seem to point at this nullptr use.</p>\n<p><code>In file included from C:\\Users\\Public\\Projets\\URHO\\Urho3D-1.4\\Source\\ThirdParty\\TurboBadger\\tb_addon.h:10:0,\n                 from C:\\Users\\Public\\Projets\\URHO\\Urho3D-1.4\\Source\\ThirdParty\\TurboBadger\\tb_addon.cpp:7:\nC:\\Users\\Public\\Projets\\URHO\\Urho3D-1.4\\Source\\ThirdParty\\TurboBadger\\tb_widgets.h: At global scope:\nC:\\Users\\Public\\Projets\\URHO\\Urho3D-1.4\\Source\\ThirdParty\\TurboBadger\\tb_widgets.h:583:60: error: 'nullptr' was not declared in this scope\n  TBWidget *GetNextDeep(const TBWidget *bounding_ancestor = nullptr) const;</code><br>\n<span class=\"bbcode-b\">EDIT: </span>Done replacement of \u201cnullptr\u201d to \u201cNULL\u201d all over the files of turbobadger and it now compile and build. But the example 54_Turbobadger.exe doesnt show any GUI exept the URHO ones.<br>\nEDIT2: Put back the source as they were. Then set the CMAKELIST.TXT of the source to specifically set the compiler to use the c++11 features (Mingw64 support it but need to be specified). No errors in compilation, linking. But still only a black window with the URHO3D logo.</p>\n<p>Here is the code I added to the CMAKELIST to specifically set the compiler to use c++11 feature (from google)</p>\n<p><code>include(CheckCXXCompilerFlag)\nCHECK_CXX_COMPILER_FLAG(\"-std=c++11\" COMPILER_SUPPORTS_CXX11)\nCHECK_CXX_COMPILER_FLAG(\"-std=c++0x\" COMPILER_SUPPORTS_CXX0X)\nif(COMPILER_SUPPORTS_CXX11)\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c++11\")\nelseif(COMPILER_SUPPORTS_CXX0X)\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c++0x\")\nelse()\n        message(STATUS \"The compiler ${CMAKE_CXX_COMPILER} has no C++11 support. Please use a different C++ compiler.\")\nendif()</code></p>", "post_number": 21, "post_type": 1, "updated_at": "2017-01-02T01:11:21.048Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 2, "reads": 38, "readers_count": 37, "score": 17.6, "yours": false, "topic_id": 1457, "topic_slug": "turbobadger-full-integration", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 171, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 11241, "name": "", "username": "Lumak", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/l/8491ac/{size}.png", "created_at": "2016-03-20T00:16:55.000Z", "cooked": "<p>[quote=\u201cchristianclavet\u201d]<br>\n<span class=\"bbcode-b\">EDIT: </span>Done replacement of \u201cnullptr\u201d to \u201cNULL\u201d all over the files of turbobadger and it now compile and build. But the example 54_Turbobadger.exe doesnt show any GUI exept the URHO ones.[/quote]</p>\n<p>You don\u2019t see any gui except for the urho ones? That\u2019s odd because there is no urho gui in that example.  They\u2019re all TB gui.</p>\n<p>Perhaps you can try skipping the \u201chello world\u201d intro in the Start() func. and jump right into the TB demo:</p>\n<pre><code class=\"lang-auto\">void UIDrag::Start()\n{\n    // Execute base class startup\n    Sample::Start();\n\n    // Set mouse visible\n    //String platform = GetPlatform();\n    //if (platform != \"Android\" &amp;&amp; platform != \"iOS\")\n    GetSubsystem&lt;Input&gt;()-&gt;SetMouseVisible(true);\n\n    // create TB render batcher\n    Graphics *graphics = GetSubsystem&lt;Graphics&gt;();\n    UTBRendererBatcher::Create( GetContext(), graphics-&gt;GetWidth(), graphics-&gt;GetHeight() );\n    UTBRendererBatcher::Singleton().Init( \"Data/TB/\" );\n    \n    // create a msg win\n    //pTBListener_ = new UTBListener( GetContext() );\n    //pTBListener_-&gt;CreateMsgWindow();\n\n    //SubscribeToEvent(E_TBMSG, HANDLER(UIDrag, HandleTBMessage));\n\n    // skip to tb demo\n    TBDemo::Init();\n}\n</code></pre>", "post_number": 22, "post_type": 1, "updated_at": "2017-01-02T01:11:21.183Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 1, "incoming_link_count": 0, "reads": 35, "readers_count": 34, "score": 7.0, "yours": false, "topic_id": 1457, "topic_slug": "turbobadger-full-integration", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 256, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 11242, "name": "", "username": "Lumak", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/l/8491ac/{size}.png", "created_at": "2016-03-20T00:23:52.000Z", "cooked": "<p>You did copy \u201cbin\\Data\\TB\u201d folder to your build folder?</p>", "post_number": 23, "post_type": 1, "updated_at": "2017-01-02T01:11:21.260Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 32, "readers_count": 31, "score": 6.4, "yours": false, "topic_id": 1457, "topic_slug": "turbobadger-full-integration", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 256, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 11243, "name": "", "username": "christianclavet", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/c/76d3ee/{size}.png", "created_at": "2016-03-20T00:32:51.000Z", "cooked": "<p>Hi,</p>\n<p>I had packed resources. I had put them in the source files. Removed the archives and copied the folders instead. I see everything now. Do I have to tell something in the makefile to put them in the pak files?<br>\nThanks a lot for helping me! I see the gui now!</p>", "post_number": 24, "post_type": 1, "updated_at": "2017-01-02T01:11:21.319Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 34, "readers_count": 33, "score": 6.8, "yours": false, "topic_id": 1457, "topic_slug": "turbobadger-full-integration", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 171, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 11245, "name": "", "username": "Lumak", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/l/8491ac/{size}.png", "created_at": "2016-03-20T01:26:30.000Z", "cooked": "<p>[quote=\u201cchristianclavet\u201d]Hi,</p>\n<p>I had packed resources. I had put them in the source files. Removed the archives and copied the folders instead. I see everything now. Do I have to tell something in the makefile to put them in the pak files?<br>\nThanks a lot for helping me! I see the gui now![/quote]</p>\n<p>I don\u2019t usually work with pak files unless it\u2019s something that I create specifically to protect data content/save file.  I\u2019m not sure how the pak files are auto generated on platforms other than Android \u2013 auto built from Android Studio for me.  So, I\u2019m no help.</p>\n<p>It\u2019s good to hear you got it working!  And, I didn\u2019t do much, just watched your progress onto getting it working  <img src=\"https://emoji.discourse-cdn.com/twitter/wink.png?v=5\" title=\":wink:\" class=\"emoji\" alt=\":wink:\"></p>", "post_number": 25, "post_type": 1, "updated_at": "2017-01-02T01:11:21.466Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 1, "incoming_link_count": 0, "reads": 32, "readers_count": 31, "score": 6.4, "yours": false, "topic_id": 1457, "topic_slug": "turbobadger-full-integration", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 256, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 11258, "name": "", "username": "christianclavet", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/c/76d3ee/{size}.png", "created_at": "2016-03-20T14:53:05.000Z", "cooked": "<p>Thanks Lumak!</p>\n<p>I\u2019ve done a search of all the makefiles that URHO uses to see how it creating the .PAK archives. It use a folder and put the files recursively into an archive.<br>\nI\u2019ve done it manually via the pakage tool and from the output of the console the resources were packed in the .pak files with the rest. So I checked the sources files of the demo and I think TurboBadger is using it\u2019s own file system to load the ressources.</p>\n<p><span class=\"bbcode-b\">From TBDEMO.cpp</span>[code]void ResourceEditWindow::Load(const char *resource_file)<br>\n{<br>\nm_resource_filename.Set(resource_file);<br>\nSetText(resource_file);</p>\n<pre><code>// Set the text of the source view\nm_source_edit-&gt;SetText(\"\");\n\nif (TBFile *file = TBFile::Open(m_resource_filename, TBFile::MODE_READ))\n{\n\tTBTempBuffer buffer;\n\tif (buffer.Reserve(file-&gt;Size()))\n\t{\n\t\tuint32 size_read = file-&gt;Read(buffer.GetData(), 1, buffer.GetCapacity());\n\t\tm_source_edit-&gt;SetText(buffer.GetData(), size_read);\n\t}\n\tdelete file;\n}\nelse // Error, show message\n{\n\tTBStr text;\n\ttext.SetFormatted(\"Could not load file %s\", resource_file);\n\tif (TBMessageWindow *msg_win = new TBMessageWindow(GetParentRoot(), TBIDC(\"\")))\n\t\tmsg_win-&gt;Show(\"Error loading resource\", text);\n}\n\nRefreshFromSource();\n</code></pre>\n<p>}[/code]</p>\n<p>It is probably not using the file system mechanism from URHO. That explain why I had a black window with only the URHO logo. (This will happen if it fail to load the resources). I don\u2019t know if this could be fixed to use URHO to load the files and convert it in a TBFILE pointer\u2026</p>\n<p>If this would mean modifying the Turbobadger source files (not the demo), I don\u2019t think it would be worth it, since somebody would have to maintain it at each revision\u2026 Perhaps warn if URHO_PACKAGING is active that the UI resources need to be in a folder not into an archive (Would this create problems with other platforms like IOS, Android and Emscriptem?). I mean, if the resources can\u2019t be put in a pak file, would not work on these platforms?</p>\n<p>Or there a way to make this completely external?</p>\n<p>This seem to work fine here on Windows and Linux Mint (using codelite on both). And for me it\u2019s what I need.</p>", "post_number": 26, "post_type": 1, "updated_at": "2017-01-02T01:11:22.306Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 35, "readers_count": 34, "score": 7.0, "yours": false, "topic_id": 1457, "topic_slug": "turbobadger-full-integration", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 171, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 11260, "name": "", "username": "George", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/71e660/{size}.png", "created_at": "2016-03-20T15:12:04.000Z", "cooked": "<p>Hi christianclavet</p>\n<p>Read my post on this thread to get it to run on Urho 1.5.</p>\n<p>Regards</p>", "post_number": 27, "post_type": 1, "updated_at": "2017-01-02T01:11:22.443Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 30, "readers_count": 29, "score": 6.0, "yours": false, "topic_id": 1457, "topic_slug": "turbobadger-full-integration", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 281, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 11261, "name": "", "username": "christianclavet", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/c/76d3ee/{size}.png", "created_at": "2016-03-20T15:18:56.000Z", "cooked": "<p>HI, George.</p>\n<p>When I saw it first I was not understanding. I checked the source again and saw a difference:</p>\n<p><code>class UTBRendererBatcher : public UIElement, public TBRendererBatcher\n{\n    OBJECT( UTBRendererBatcher )</code></p>\n<p>Would be something like this:</p>\n<p><code>class UTBRendererBatcher : public UIElement, public TBRendererBatcher\n{\n    URHO3D_OBJECT( UTBRendererBatcher )</code></p>\n<p>I\u2019ll try it and report.</p>", "post_number": 28, "post_type": 1, "updated_at": "2017-01-02T01:11:22.516Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 1, "reads": 31, "readers_count": 30, "score": 11.2, "yours": false, "topic_id": 1457, "topic_slug": "turbobadger-full-integration", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 171, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 11265, "name": "", "username": "christianclavet", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/c/76d3ee/{size}.png", "created_at": "2016-03-20T17:39:40.000Z", "cooked": "<p>Hi. Sorry to double post. You were right, it worked. I decided to load the last version of Urho directly from GITHUB (03/20/16) and try to build it with it. There are new keywords that have been changed since with the URHO3D_ prefix.</p>\n<p>For using this with URHO 1.5 (last revision) you will have to replace 4 files from the example folder (54_Turbobadger folder)(this only affect the demo source, the source for TurboBadger I had is unchanged).</p>\n<p>First file: <span class=\"bbcode-b\">UIDRAG.H</span></p>\n<p>[code]//<br>\n// Copyright \u00a9 2008-2015 the Urho3D project.<br>\n//<br>\n// Permission is hereby granted, free of charge, to any person obtaining a copy<br>\n// of this software and associated documentation files (the \u201cSoftware\u201d), to deal<br>\n// in the Software without restriction, including without limitation the rights<br>\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell<br>\n// copies of the Software, and to permit persons to whom the Software is<br>\n// furnished to do so, subject to the following conditions:<br>\n//<br>\n// The above copyright notice and this permission notice shall be included in<br>\n// all copies or substantial portions of the Software.<br>\n//<br>\n// THE SOFTWARE IS PROVIDED \u201cAS IS\u201d, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR<br>\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,<br>\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE<br>\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER<br>\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,<br>\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN<br>\n// THE SOFTWARE.<br>\n//</p>\n<p><span class=\"hashtag\">#pragma</span> once</p>\n<p><span class=\"hashtag\">#include</span> &lt;Urho3D/Core/Object.h&gt;<br>\n<span class=\"hashtag\">#include</span> &lt;TurboBadger/tb_widgets_listener.h&gt;</p>\n<p><span class=\"hashtag\">#include</span> \u201cSample.h\u201d</p>\n<p>namespace Urho3D<br>\n{<br>\nclass Node;<br>\nclass Scene;<br>\n}</p>\n<p>namespace tb<br>\n{<br>\nclass TBMessageWindow;<br>\n}</p>\n<p>using namespace Urho3D;<br>\nusing namespace tb;</p>\n<p>//=====================================<br>\nURHO3D_EVENT(E_TBMSG, TBMessageNamespace)<br>\n{<br>\nURHO3D_PARAM(P_TBWIDGET, Widget);  // TBWidget pointer<br>\n}</p>\n<p>//=============================================================================<br>\n//=============================================================================<br>\nclass UTBListener : public Object, public TBWidgetListener<br>\n{<br>\nURHO3D_OBJECT(UTBListener, Object);<br>\npublic:<br>\nUTBListener(Context *context);</p>\n<pre><code>~UTBListener();\n\nvoid CreateMsgWindow();\nvirtual void OnWidgetRemove(TBWidget *parent, TBWidget *child);\nvirtual bool OnWidgetInvokeEvent(TBWidget *widget, const TBWidgetEvent &amp;ev);\n\nTBWidget* GetTBMessageWidget()\n{\n    return (TBWidget*)pTBMessageWindow_;\n}\n</code></pre>\n<p>protected:<br>\nvoid SendEventMsg();</p>\n<p>protected:<br>\nTBMessageWindow     *pTBMessageWindow_;</p>\n<p>};</p>\n<p>//=============================================================================<br>\n//=============================================================================<br>\n/// GUI test example.<br>\n/// This sample demonstrates:<br>\n///     - Creating GUI elements from C++<br>\n///     - Loading GUI Style from xml<br>\n///     - Subscribing to GUI drag events and handling them.<br>\nclass UIDrag : public Sample<br>\n{<br>\nURHO3D_OBJECT(UIDrag,Sample);</p>\n<p>public:<br>\n/// Construct.<br>\nUIDrag(Context* context);<br>\n~UIDrag();</p>\n<pre><code>/// Setup after engine initialization and before running the main loop.\nvirtual void Setup();\nvirtual void Start();\nvirtual void Stop();\n</code></pre>\n<p>protected:<br>\nvoid HandleTBMessage(StringHash eventType, VariantMap&amp; eventData);</p>\n<pre><code>/// Return XML patch instructions for screen joystick layout for a specific sample app, if any.\nvirtual String GetScreenJoystickPatchString() const { return\n    \"&lt;patch&gt;\"\n    \"    &lt;add sel=\\\"/element/element[./attribute[@name='Name' and @value='Hat0']]\\\"&gt;\"\n    \"        &lt;attribute name=\\\"Is Visible\\\" value=\\\"false\\\" /&gt;\"\n    \"    &lt;/add&gt;\"\n    \"&lt;/patch&gt;\";\n}\n\nUTBListener     *pTBListener_;\n</code></pre>\n<p>};<br>\n[/code]<br>\n<span class=\"bbcode-b\">UIDRAG.CPP</span></p>\n<p>[code]//<br>\n// Copyright \u00a9 2008-2015 the Urho3D project.<br>\n//<br>\n// Permission is hereby granted, free of charge, to any person obtaining a copy<br>\n// of this software and associated documentation files (the \u201cSoftware\u201d), to deal<br>\n// in the Software without restriction, including without limitation the rights<br>\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell<br>\n// copies of the Software, and to permit persons to whom the Software is<br>\n// furnished to do so, subject to the following conditions:<br>\n//<br>\n// The above copyright notice and this permission notice shall be included in<br>\n// all copies or substantial portions of the Software.<br>\n//<br>\n// THE SOFTWARE IS PROVIDED \u201cAS IS\u201d, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR<br>\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,<br>\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE<br>\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER<br>\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,<br>\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN<br>\n// THE SOFTWARE.<br>\n//</p>\n<p><span class=\"hashtag\">#include</span> &lt;Urho3D/Urho3D.h&gt;</p>\n<p><span class=\"hashtag\">#include</span> \u201cUIDrag.h\u201d<br>\n<span class=\"hashtag\">#include</span> \u201cUTBRendererBatcher.h\u201d<br>\n<span class=\"hashtag\">#include</span> \u201cTBDemo.h\u201d</p>\n<p><span class=\"hashtag\">#include</span> &lt;Urho3D/DebugNew.h&gt;</p>\n<p>//=============================================================================<br>\n//=============================================================================<br>\nURHO3D_DEFINE_APPLICATION_MAIN(UIDrag)</p>\n<p>//=============================================================================<br>\n//=============================================================================</p>\n<p>UIDrag::UIDrag(Context* context) :<br>\nSample(context), pTBListener_( NULL )<br>\n{<br>\n}</p>\n<p>UIDrag::~UIDrag()<br>\n{<br>\nif ( pTBListener_ )<br>\n{<br>\ndelete pTBListener_;<br>\npTBListener_ = NULL;<br>\n}<br>\n}</p>\n<p>//=============================================================================<br>\n//=============================================================================<br>\nvoid UIDrag::Setup()<br>\n{<br>\n// Modify engine startup parameters<br>\nengineParameters_[\u201cWindowTitle\u201d] = GetTypeName();<br>\nengineParameters_[\u201cLogName\u201d]     = GetSubsystem()-&gt;GetAppPreferencesDir(\u201curho3d\u201d, \u201clogs\u201d) + GetTypeName() + \u201c.log\u201d;<br>\nengineParameters_[\u201cFullScreen\u201d]  = false;<br>\nengineParameters_[\u201cHeadless\u201d]    = false;<br>\nengineParameters_[\u201cWindowWidth\u201d] = 1280;<br>\nengineParameters_[\u201cWindowHeight\u201d] = 720;<br>\n}</p>\n<p>//=============================================================================<br>\n//=============================================================================<br>\nvoid UIDrag::Start()<br>\n{<br>\n// Execute base class startup<br>\nSample::Start();</p>\n<pre><code>// Set mouse visible\nString platform = GetPlatform();\nif (platform != \"Android\" &amp;&amp; platform != \"iOS\")\n    GetSubsystem&lt;Input&gt;()-&gt;SetMouseVisible(true);\n\n// create TB render batcher\nGraphics *graphics = GetSubsystem&lt;Graphics&gt;();\nUTBRendererBatcher::Create( GetContext(), graphics-&gt;GetWidth(), graphics-&gt;GetHeight() );\nUTBRendererBatcher::Singleton().Init( \"Data/TB/\" );\n\n// create a msg win\npTBListener_ = new UTBListener( GetContext() );\npTBListener_-&gt;CreateMsgWindow();\n\nSubscribeToEvent(E_TBMSG, URHO3D_HANDLER(UIDrag, HandleTBMessage));\n</code></pre>\n<p>}</p>\n<p>void UIDrag::Stop()<br>\n{<br>\nTBDemo::Destroy();<br>\nUTBRendererBatcher::Destroy();<br>\nSample::Stop();<br>\n}</p>\n<p>void UIDrag::HandleTBMessage(StringHash eventType, VariantMap&amp; eventData)<br>\n{<br>\nusing namespace TBMessageNamespace;</p>\n<pre><code>TBWidget *pTBWidget = (TBWidget*)eventData[P_TBWIDGET].GetVoidPtr();\n\nif ( pTBListener_-&gt;GetTBMessageWidget() == pTBWidget )\n{\n    TBDemo::Init();\n}\n</code></pre>\n<p>}</p>\n<p>//=============================================================================<br>\n//=============================================================================<br>\nUTBListener::UTBListener(Context *context)<br>\n: Object(context)<br>\n, pTBMessageWindow_( NULL )<br>\n{<br>\n}</p>\n<p>UTBListener::~UTBListener()<br>\n{<br>\nif ( pTBMessageWindow_ )<br>\n{<br>\npTBMessageWindow_ = NULL;<br>\n}<br>\n}</p>\n<p>void UTBListener::CreateMsgWindow()<br>\n{<br>\nTBStr text(\"\\nHellow World from Turbo Badger.\\n\\nClick OK to get started.\");<br>\npTBMessageWindow_ = new TBMessageWindow( &amp;UTBRendererBatcher::Singleton().Root(), TBIDC(\"\") );<br>\npTBMessageWindow_-&gt;Show(\u201cStart Message\u201d, text);</p>\n<pre><code>TBWidgetListener::AddGlobalListener( this );\n</code></pre>\n<p>}</p>\n<p>void UTBListener::OnWidgetRemove(TBWidget *parent, TBWidget *child)<br>\n{<br>\nif ( pTBMessageWindow_ == child )<br>\n{<br>\nTBWidgetListener::RemoveGlobalListener( this );<br>\n}<br>\n}</p>\n<p>bool UTBListener::OnWidgetInvokeEvent(TBWidget *widget, const TBWidgetEvent &amp;ev)<br>\n{<br>\nif ( pTBMessageWindow_ &amp;&amp; pTBMessageWindow_ == ev.target )<br>\n{<br>\nif ( ev.type == EVENT_TYPE_CLICK )<br>\n{<br>\nTBWidgetListener::RemoveGlobalListener( this );</p>\n<pre><code>        SendEventMsg();\n    }\n}\n\nreturn false; \n</code></pre>\n<p>}</p>\n<p>void UTBListener::SendEventMsg()<br>\n{<br>\nusing namespace TBMessageNamespace;</p>\n<pre><code>VariantMap&amp; eventData = GetEventDataMap();\neventData[P_TBWIDGET] = GetTBMessageWidget();\n\nSendEvent( E_TBMSG, eventData );\n</code></pre>\n<p>}<br>\n[/code]<br>\n<span class=\"bbcode-b\">UTBRendererBatcher.h</span></p>\n<p>[code]//=============================================================================<br>\n// Copyright \u00a9 2015 LumakSoftware<br>\n//<br>\n//=============================================================================<br>\n<span class=\"hashtag\">#pragma</span> once</p>\n<p><span class=\"hashtag\">#include</span> &lt;Urho3D/Urho3D.h&gt;<br>\n<span class=\"hashtag\">#include</span> &lt;TurboBadger/tb_widgets.h&gt;<br>\n<span class=\"hashtag\">#include</span> &lt;TurboBadger/tb_renderer.h&gt;<br>\n<span class=\"hashtag\">#include</span> &lt;TurboBadger/renderers/tb_renderer_batcher.h&gt;</p>\n<p>namespace Urho3D<br>\n{<br>\nclass Context;<br>\nclass VertexBuffer;<br>\nclass Texture2D;<br>\n}</p>\n<p>//=============================================================================<br>\n//=============================================================================<br>\nusing namespace Urho3D;<br>\nusing namespace tb;</p>\n<p>//=============================================================================<br>\n//=============================================================================<br>\nclass UTBBitmap : public TBBitmap<br>\n{<br>\npublic:<br>\nUTBBitmap(Context *_pContext, int _width, int _height);<br>\n~UTBBitmap();</p>\n<pre><code>// =========== virtual methods required for TBBitmap subclass =========\nvirtual void SetData(uint32 *_pdata)\n{\n    texture_-&gt;SetData( 0, 0, 0, width_, height_, _pdata );\n}\n\nvirtual int Width() { return width_; }\nvirtual int Height(){ return height_; }\n\nSharedPtr&lt;Context&gt;      context_;\nSharedPtr&lt;Texture2D&gt;    texture_;\nint                     width_;\nint                     height_;\n</code></pre>\n<p>};</p>\n<p>//=============================================================================<br>\n//=============================================================================<br>\nclass UTBRendererBatcher : public UIElement, public TBRendererBatcher<br>\n{<br>\nURHO3D_OBJECT( UTBRendererBatcher, UIElement );<br>\npublic:<br>\n// static funcs<br>\nstatic void Create(Context *_pContext, int <em>iwidth, int <em>iheight)<br>\n{<br>\nif ( pSingleton</em> == NULL )<br>\n{<br>\npSingleton</em> = new UTBRendererBatcher( _pContext, _iwidth, _iheight );<br>\n}<br>\n}</p>\n<pre><code>static void Destroy()\n{\n    if ( pSingleton_ )\n    {\n        pSingleton_-&gt;Remove();\n        pSingleton_ = NULL;\n    }\n}\n\nstatic UTBRendererBatcher&amp; Singleton() { return *pSingleton_; }\n\n// methods\nvoid Init(const String &amp;_strDataPath);\nvoid LoadDefaultResources();\n\nTBWidget&amp; Root() { return root_; }\nconst String&amp; GetDataPath() { return strDataPath_; }\n\n// override funcs\nvirtual void BeginPaint(int render_target_w, int render_target_h);\nvirtual void EndPaint();\n\n// UIElement override method to add TB batches\nvirtual void GetBatches(PODVector&lt;UIBatch&gt;&amp; batches, PODVector&lt;float&gt;&amp; vertexData, const IntRect&amp; currentScissor);\n\n// ===== methods that need implementation in TBRendererBatcher subclasses =====\nvirtual TBBitmap* CreateBitmap(int width, int height, uint32 *data);\n\nvirtual void RenderBatch(Batch *batch);\n\nvirtual void SetClipRect(const TBRect &amp;rect)\n{\n    m_clip_rect = rect;\n}\n</code></pre>\n<p>protected:<br>\n// override methods<br>\nvirtual void AddQuadInternal(const TBRect &amp;dst_rect, const TBRect &amp;src_rect, uint32 color, TBBitmap *bitmap, TBBitmapFragment *fragment);</p>\n<p>protected:<br>\nUTBRendererBatcher(Context *_pContext, int _iwidth, int _iheight);<br>\nvirtual ~UTBRendererBatcher();</p>\n<pre><code>void OnResizeWin(int _iwidth, int _iheight);\nvoid CreateKeyMap();\nvoid RegisterHandlers();\n\nvoid HandleUpdate(StringHash eventType, VariantMap&amp; eventData);\n\n// renderer\nvoid HandleScreenMode(StringHash eventType, VariantMap&amp; eventData);\nvoid HandleBeginFrame(StringHash eventType, VariantMap&amp; eventData);\nvoid HandlePostUpdate(StringHash eventType, VariantMap&amp; eventData);\nvoid HandlePostRenderUpdate(StringHash eventType, VariantMap&amp; eventData);\n\n// inputs\nvoid HandleMouseButtonDown(StringHash eventType, VariantMap&amp; eventData);\nvoid HandleMouseButtonUp(StringHash eventType, VariantMap&amp; eventData);\nvoid HandleMouseMove(StringHash eventType, VariantMap&amp; eventData);\nvoid HandleMouseWheel(StringHash eventType, VariantMap&amp; eventData);\nvoid HandleKeyDown(StringHash eventType, VariantMap&amp; eventData);\nvoid HandleKeyUp(StringHash eventType, VariantMap&amp; eventData);\nvoid HandleTextInput(StringHash eventType, VariantMap&amp; eventData);\n\n// TB special and quality keys func\nint FindTBKey(int _ikey);\n</code></pre>\n<p>protected:<br>\nstatic UTBRendererBatcher   *pSingleton_;</p>\n<pre><code>TBWidget            root_;\nPODVector&lt;float&gt;    vertexData_;\nPODVector&lt;UIBatch&gt;  batches_;\n\nString              strDataPath_;\n\nHashMap&lt;int, int&gt;   uKeytoTBkeyMap;\nIntVector2          lastMousePos_;\n</code></pre>\n<p>};</p>\n<p>[/code]<br>\n<span class=\"bbcode-b\">UTBRendererBatcher.cpp</span></p>\n<p>[code]//=============================================================================<br>\n// Copyright \u00a9 2015 LumakSoftware<br>\n//<br>\n//=============================================================================<br>\n<span class=\"hashtag\">#include</span> &lt;Urho3D/Urho3D.h&gt;</p>\n<p><span class=\"hashtag\">#include</span> &lt;Urho3D/Core/Context.h&gt;<br>\n<span class=\"hashtag\">#include</span> &lt;Urho3D/Core/Object.h&gt;<br>\n<span class=\"hashtag\">#include</span> &lt;Urho3D/Core/CoreEvents.h&gt;<br>\n<span class=\"hashtag\">#include</span> &lt;Urho3D/UI/UI.h&gt;<br>\n<span class=\"hashtag\">#include</span> &lt;Urho3D/UI/UIElement.h&gt;<br>\n<span class=\"hashtag\">#include</span> &lt;Urho3D/UI/UIEvents.h&gt;<br>\n<span class=\"hashtag\">#include</span> &lt;Urho3D/Graphics/Graphics.h&gt;<br>\n<span class=\"hashtag\">#include</span> &lt;Urho3D/Graphics/GraphicsEvents.h&gt;<br>\n<span class=\"hashtag\">#include</span> &lt;Urho3D/Graphics/VertexBuffer.h&gt;<br>\n<span class=\"hashtag\">#include</span> &lt;Urho3D/Graphics/Texture2D.h&gt;<br>\n<span class=\"hashtag\">#include</span> &lt;Urho3D/Resource/ResourceCache.h&gt;<br>\n<span class=\"hashtag\">#include</span> &lt;Urho3D/IO/FileSystem.h&gt;<br>\n<span class=\"hashtag\">#include</span> &lt;Urho3D/Input/InputEvents.h&gt;</p>\n<p><span class=\"hashtag\">#include</span> &lt;TurboBadger/tb_font_renderer.h&gt;<br>\n<span class=\"hashtag\">#include</span> &lt;TurboBadger/tb_widgets.h&gt;<br>\n<span class=\"hashtag\">#include</span> &lt;TurboBadger/tb_bitmap_fragment.h&gt;<br>\n<span class=\"hashtag\">#include</span> &lt;TurboBadger/tb_system.h&gt;<br>\n<span class=\"hashtag\">#include</span> &lt;TurboBadger/tb_msg.h&gt;<br>\n<span class=\"hashtag\">#include</span> &lt;TurboBadger/tb_language.h&gt;<br>\n<span class=\"hashtag\">#include</span> &lt;TurboBadger/animation/tb_animation.h&gt;<br>\n<span class=\"hashtag\">#include</span> &lt;TurboBadger/animation/tb_widget_animation.h&gt;</p>\n<p><span class=\"hashtag\">#include</span> \u201cUTBRendererBatcher.h\u201d</p>\n<p><span class=\"hashtag\">#include</span> &lt;Urho3D/DebugNew.h&gt;</p>\n<p>//=============================================================================<br>\n//=============================================================================<br>\n<span class=\"hashtag\">#define</span> QAL_VAL         0x60000000 // value to offset qualifier keys from all other keys in the same hash map</p>\n<p>//=============================================================================<br>\n//=============================================================================<br>\nUTBRendererBatcher* UTBRendererBatcher::pSingleton_ = NULL;</p>\n<p>//=============================================================================<br>\n//=============================================================================<br>\nUTBBitmap::UTBBitmap(Context *<em>pContext, int <em>width, int <em>height)<br>\n: context</em>( <em>pContext )<br>\n, width</em>( <em>width )<br>\n, height</em>( <em>height )<br>\n, texture</em>( NULL )<br>\n{<br>\ntexture</em> = new Texture2D( context</em> );</p>\n<pre><code>// set texture format\ntexture_-&gt;SetMipsToSkip( QUALITY_LOW, 0 );\ntexture_-&gt;SetNumLevels( 1 );\ntexture_-&gt;SetSize( width_, height_, Graphics::GetRGBAFormat() );\n\n// set uv modes\ntexture_-&gt;SetAddressMode( COORD_U, ADDRESS_WRAP );\ntexture_-&gt;SetAddressMode( COORD_V, ADDRESS_WRAP );\n</code></pre>\n<p>}</p>\n<p>//=============================================================================<br>\n//=============================================================================<br>\nUTBBitmap::~UTBBitmap()<br>\n{<br>\nif ( texture_ )<br>\n{<br>\ntexture_ = NULL;<br>\n}<br>\n}</p>\n<p>//=============================================================================<br>\n//=============================================================================<br>\nUTBRendererBatcher::UTBRendererBatcher(Context *_pContext, int _iwidth, int _iheight)<br>\n: UIElement( _pContext )<br>\n, TBRendererBatcher()<br>\n{<br>\nSetPosition( 0, 0 );<br>\nOnResizeWin( _iwidth, _iheight );<br>\n}</p>\n<p>//=============================================================================<br>\n//=============================================================================<br>\nUTBRendererBatcher::~UTBRendererBatcher()<br>\n{<br>\nvertexData_.Clear();<br>\nbatches_.Clear();<br>\nuKeytoTBkeyMap.Clear();</p>\n<pre><code>TBWidgetsAnimationManager::Shutdown();\n\n// shutdown\ntb_core_shutdown();\n</code></pre>\n<p>}</p>\n<p>//=============================================================================<br>\n//=============================================================================<br>\nvoid UTBRendererBatcher::OnResizeWin(int _iwidth, int _iheight)<br>\n{<br>\nm_screen_rect = TBRect( 0, 0, _iwidth, _iheight );</p>\n<pre><code>SetSize( _iwidth, _iheight );\n\nroot_.SetRect( m_screen_rect );\n</code></pre>\n<p>}</p>\n<p>//=============================================================================<br>\n//=============================================================================<br>\nvoid UTBRendererBatcher::Init(const String &amp;_strDataPath)<br>\n{<br>\n// register with UI<br>\nGetSubsystem()-&gt;GetRoot()-&gt;AddChild( this );</p>\n<pre><code>// store data path\nstrDataPath_ = GetSubsystem&lt;FileSystem&gt;()-&gt;GetProgramDir() + _strDataPath;\n\n// init tb core\ntb_core_init( this );\n\n// load resources\nLoadDefaultResources();\n\n// map keys\nCreateKeyMap();\n\n// register handlers\nRegisterHandlers();\n</code></pre>\n<p>}</p>\n<p>//=============================================================================<br>\n//=============================================================================<br>\nvoid UTBRendererBatcher::LoadDefaultResources()<br>\n{<br>\ng_tb_lng-&gt;Load(\u201cresources/language/lng_en.tb.txt\u201d);</p>\n<pre><code>// Load the default skin, and override skin that contains the graphics specific to the demo.\ng_tb_skin-&gt;Load(\"resources/default_skin/skin.tb.txt\", \"demo01/skin/skin.tb.txt\");\n\n// **README**\n// - define TB_FONT_RENDERER_FREETYPE in tb_config.h for non-demo\n</code></pre>\n<p><span class=\"hashtag\">#ifdef</span> TB_FONT_RENDERER_TBBF<br>\nvoid register_tbbf_font_renderer();<br>\nregister_tbbf_font_renderer();<br>\n<span class=\"hashtag\">#endif</span><br>\n<span class=\"hashtag\">#ifdef</span> TB_FONT_RENDERER_STB<br>\nvoid register_stb_font_renderer();<br>\nregister_stb_font_renderer();<br>\n<span class=\"hashtag\">#endif</span><br>\n<span class=\"hashtag\">#ifdef</span> TB_FONT_RENDERER_FREETYPE<br>\nvoid register_freetype_font_renderer();<br>\nregister_freetype_font_renderer();<br>\n<span class=\"hashtag\">#endif</span></p>\n<pre><code>// Add fonts we can use to the font manager.\n</code></pre>\n<p><span class=\"hashtag\">#if</span> defined(TB_FONT_RENDERER_STB) || defined(TB_FONT_RENDERER_FREETYPE)<br>\ng_font_manager-&gt;AddFontInfo(\u201cresources/vera.ttf\u201d, \u201cVera\u201d);<br>\n<span class=\"hashtag\">#endif</span><br>\n<span class=\"hashtag\">#ifdef</span> TB_FONT_RENDERER_TBBF<br>\ng_font_manager-&gt;AddFontInfo(\u201cresources/default_font/segoe_white_with_shadow.tb.txt\u201d, \u201cSegoe\u201d);<br>\ng_font_manager-&gt;AddFontInfo(\u201cfonts/neon.tb.txt\u201d, \u201cNeon\u201d);<br>\ng_font_manager-&gt;AddFontInfo(\u201cfonts/orangutang.tb.txt\u201d, \u201cOrangutang\u201d);<br>\ng_font_manager-&gt;AddFontInfo(\u201cfonts/orange.tb.txt\u201d, \u201cOrange\u201d);<br>\n<span class=\"hashtag\">#endif</span></p>\n<pre><code>// Set the default font description for widgets to one of the fonts we just added\nTBFontDescription fd;\n</code></pre>\n<p><span class=\"hashtag\">#ifdef</span> TB_FONT_RENDERER_TBBF<br>\nfd.SetID(TBIDC(\u201cSegoe\u201d));<br>\n<span class=\"hashtag\">#else</span><br>\nfd.SetID(TBIDC(\u201cVera\u201d));<br>\n<span class=\"hashtag\">#endif</span><br>\nfd.SetSize(g_tb_skin-&gt;GetDimensionConverter()-&gt;DpToPx(14));<br>\ng_font_manager-&gt;SetDefaultFontDescription(fd);</p>\n<pre><code>// Create the font now.\nTBFontFace *font = g_font_manager-&gt;CreateFontFace(g_font_manager-&gt;GetDefaultFontDescription());\n\n// Render some glyphs in one go now since we know we are going to use them. It would work fine\n// without this since glyphs are rendered when needed, but with some extra updating of the glyph bitmap.\nif ( font )\n{\n    font-&gt;RenderGlyphs(\" !\\\"#$%&amp;'()*+,-./0123456789:;&lt;=&gt;?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~????????\");\n}\n\nroot_.SetSkinBg(TBIDC(\"background\"));\n\nTBWidgetsAnimationManager::Init();\n</code></pre>\n<p>}</p>\n<p>//=============================================================================<br>\n//=============================================================================<br>\nvoid UTBRendererBatcher::CreateKeyMap()<br>\n{<br>\n// special keys<br>\nuKeytoTBkeyMap.Insert( Pair&lt;int,int&gt;( KEY_UP       , TB_KEY_UP        ) );<br>\nuKeytoTBkeyMap.Insert( Pair&lt;int,int&gt;( KEY_DOWN     , TB_KEY_DOWN      ) );<br>\nuKeytoTBkeyMap.Insert( Pair&lt;int,int&gt;( KEY_LEFT     , TB_KEY_LEFT      ) );<br>\nuKeytoTBkeyMap.Insert( Pair&lt;int,int&gt;( KEY_RIGHT    , TB_KEY_RIGHT     ) );<br>\nuKeytoTBkeyMap.Insert( Pair&lt;int,int&gt;( KEY_PAGEUP   , TB_KEY_PAGE_UP   ) );<br>\nuKeytoTBkeyMap.Insert( Pair&lt;int,int&gt;( KEY_PAGEDOWN , TB_KEY_PAGE_DOWN ) );<br>\nuKeytoTBkeyMap.Insert( Pair&lt;int,int&gt;( KEY_HOME     , TB_KEY_HOME      ) );<br>\nuKeytoTBkeyMap.Insert( Pair&lt;int,int&gt;( KEY_END      , TB_KEY_END       ) );<br>\nuKeytoTBkeyMap.Insert( Pair&lt;int,int&gt;( KEY_TAB      , TB_KEY_TAB       ) );<br>\nuKeytoTBkeyMap.Insert( Pair&lt;int,int&gt;( KEY_BACKSPACE, TB_KEY_BACKSPACE ) );<br>\nuKeytoTBkeyMap.Insert( Pair&lt;int,int&gt;( KEY_INSERT   , TB_KEY_INSERT    ) );<br>\nuKeytoTBkeyMap.Insert( Pair&lt;int,int&gt;( KEY_DELETE   , TB_KEY_DELETE    ) );<br>\nuKeytoTBkeyMap.Insert( Pair&lt;int,int&gt;( KEY_RETURN   , TB_KEY_ENTER     ) );<br>\nuKeytoTBkeyMap.Insert( Pair&lt;int,int&gt;( KEY_ESC      , TB_KEY_ESC       ) );<br>\nuKeytoTBkeyMap.Insert( Pair&lt;int,int&gt;( KEY_F1       , TB_KEY_F1        ) );<br>\nuKeytoTBkeyMap.Insert( Pair&lt;int,int&gt;( KEY_F2       , TB_KEY_F2        ) );<br>\nuKeytoTBkeyMap.Insert( Pair&lt;int,int&gt;( KEY_F3       , TB_KEY_F3        ) );<br>\nuKeytoTBkeyMap.Insert( Pair&lt;int,int&gt;( KEY_F4       , TB_KEY_F4        ) );<br>\nuKeytoTBkeyMap.Insert( Pair&lt;int,int&gt;( KEY_F5       , TB_KEY_F5        ) );<br>\nuKeytoTBkeyMap.Insert( Pair&lt;int,int&gt;( KEY_F6       , TB_KEY_F6        ) );<br>\nuKeytoTBkeyMap.Insert( Pair&lt;int,int&gt;( KEY_F7       , TB_KEY_F7        ) );<br>\nuKeytoTBkeyMap.Insert( Pair&lt;int,int&gt;( KEY_F8       , TB_KEY_F8        ) );<br>\nuKeytoTBkeyMap.Insert( Pair&lt;int,int&gt;( KEY_F9       , TB_KEY_F9        ) );<br>\nuKeytoTBkeyMap.Insert( Pair&lt;int,int&gt;( KEY_F10      , TB_KEY_F10       ) );<br>\nuKeytoTBkeyMap.Insert( Pair&lt;int,int&gt;( KEY_F11      , TB_KEY_F11       ) );<br>\nuKeytoTBkeyMap.Insert( Pair&lt;int,int&gt;( KEY_F12      , TB_KEY_F12       ) );</p>\n<pre><code>// qualifiers: add QAL_VAL to qual keys to separate their range from rest of the keys\nuKeytoTBkeyMap.Insert( Pair&lt;int,int&gt;( QUAL_SHIFT + QAL_VAL, TB_SHIFT ) );\nuKeytoTBkeyMap.Insert( Pair&lt;int,int&gt;( QUAL_CTRL  + QAL_VAL, TB_CTRL  ) );\nuKeytoTBkeyMap.Insert( Pair&lt;int,int&gt;( QUAL_ALT   + QAL_VAL, TB_ALT   ) );\nuKeytoTBkeyMap.Insert( Pair&lt;int,int&gt;( QUAL_ANY   + QAL_VAL, TB_SUPER ) );\n</code></pre>\n<p>}</p>\n<p>//=============================================================================<br>\n//=============================================================================<br>\nTBBitmap* UTBRendererBatcher::CreateBitmap(int width, int height, uint32 *data)<br>\n{<br>\nUTBBitmap *pUTBBitmap = new UTBBitmap( GetContext(), width, height );</p>\n<pre><code>FlushBitmap( (TBBitmap*)pUTBBitmap );\n\npUTBBitmap-&gt;SetData( data );\n\nreturn (TBBitmap*)pUTBBitmap;\n</code></pre>\n<p>}</p>\n<p>//=============================================================================<br>\n//=============================================================================<br>\nvoid UTBRendererBatcher::RenderBatch(Batch *_pb)<br>\n{<br>\nif ( _pb )<br>\n{<br>\nUTBBitmap <em>pUTBBitmap = (UTBBitmap</em>)<em>pb-&gt;bitmap;<br>\nSharedPtr tdummy;<br>\nSharedPtr texture = pUTBBitmap?pUTBBitmap-&gt;texture</em>: tdummy;<br>\nIntRect scissor( _pb-&gt;clipRect.x, _pb-&gt;clipRect.y, _pb-&gt;clipRect.x + _pb-&gt;clipRect.w, _pb-&gt;clipRect.y + <em>pb-&gt;clipRect.h );<br>\nUIBatch batch( this, BLEND_ALPHA, scissor, texture, &amp;vertexData</em> );</p>\n<pre><code>    unsigned begin = batch.vertexData_-&gt;Size();\n    batch.vertexData_-&gt;Resize(begin + _pb-&gt;vertex_count * UI_VERTEX_SIZE);\n    float* dest = &amp;(batch.vertexData_-&gt;At(begin));\n\n    // set start/end\n    batch.vertexStart_ = begin;\n    batch.vertexEnd_   = batch.vertexData_-&gt;Size();\n\n    for ( int i = 0; i &lt; _pb-&gt;vertex_count; ++i )\n    {\n        dest[0+i*UI_VERTEX_SIZE]              = _pb-&gt;vertex[i].x; \n        dest[1+i*UI_VERTEX_SIZE]              = _pb-&gt;vertex[i].y; \n        dest[2+i*UI_VERTEX_SIZE]              = 0.0f;\n        ((unsigned&amp;)dest[3+i*UI_VERTEX_SIZE]) = _pb-&gt;vertex[i].col;\n        dest[4+i*UI_VERTEX_SIZE]              = _pb-&gt;vertex[i].u; \n        dest[5+i*UI_VERTEX_SIZE]              = _pb-&gt;vertex[i].v;\n    }\n\n    // store\n    UIBatch::AddOrMerge( batch, batches_ );\n}\n</code></pre>\n<p>}</p>\n<p>//=============================================================================<br>\n//=============================================================================<br>\nvoid UTBRendererBatcher::GetBatches(PODVector&amp; batches, PODVector&amp; vertexData, const IntRect&amp; currentScissor)<br>\n{<br>\nfor ( unsigned i = 0; i &lt; batches_.Size(); ++i )<br>\n{<br>\n// get batch<br>\nUIBatch &amp;batch     = batches_[ i ];<br>\nunsigned beg       = batch.vertexStart_;<br>\nunsigned end       = batch.vertexEnd_;<br>\nbatch.vertexStart_ = vertexData.Size();<br>\nbatch.vertexEnd_   = vertexData.Size() + (end - beg);</p>\n<pre><code>    // resize and copy\n    vertexData.Resize( batch.vertexEnd_ );\n    memcpy( &amp;vertexData[ batch.vertexStart_ ], &amp;vertexData_[ beg ], (end - beg) * sizeof(float) );\n\n    // store\n    UIBatch::AddOrMerge( batch, batches );\n}\n\n// clear buffers\nvertexData_.Clear();\nbatches_.Clear();\n</code></pre>\n<p>}</p>\n<p>//=============================================================================<br>\n//=============================================================================<br>\nvoid UTBRendererBatcher::BeginPaint(int render_target_w, int render_target_h)<br>\n{<br>\nTBRendererBatcher::BeginPaint( render_target_w, render_target_h );<br>\n}</p>\n<p>//=============================================================================<br>\n//=============================================================================<br>\nvoid UTBRendererBatcher::EndPaint()<br>\n{<br>\nTBRendererBatcher::EndPaint();<br>\n}</p>\n<p>//=============================================================================<br>\n// TBRendererBatcher::AddQuadInternal function override<br>\n// ** move this to TurboBadger/renderers/tb_renderer_batcher.cpp once you understand the changes, as this function should be in the library<br>\n//=============================================================================<br>\nvoid UTBRendererBatcher::AddQuadInternal(const TBRect &amp;dst_rect, const TBRect &amp;src_rect, uint32 color,<br>\nTBBitmap *bitmap, TBBitmapFragment *fragment)<br>\n{<br>\nif (batch.bitmap != bitmap)<br>\n{<br>\nbatch.Flush(this);<br>\nbatch.bitmap = bitmap;<br>\n}<br>\nbatch.fragment = fragment;</p>\n<pre><code>// save clip rect\n// **note** the clipRect member var, as declared below, was added to the Batch class in tb_renderer_batcher.h\n// TBRect clipRect; \nbatch.clipRect = m_clip_rect;\n\nif ( bitmap )\n{\n    // ** Urho3D adds UV offset when using DX, see:\n    // https://github.com/urho3d/Urho3D/commit/0990fd72f239594fae113820233d1f858325f8dd\n    #ifdef URHO3D_OPENGL\n    float uvOffset = 0.0f;\n    #else\n    float uvOffset = 0.5f;\n    #endif\n    int bitmap_w = bitmap-&gt;Width();\n    int bitmap_h = bitmap-&gt;Height();\n    m_u  = (float)(src_rect.x + uvOffset)/ bitmap_w;\n    m_v  = (float)(src_rect.y + uvOffset)/ bitmap_h;\n    m_uu = (float)(src_rect.x + uvOffset + src_rect.w) / bitmap_w;\n    m_vv = (float)(src_rect.y + uvOffset + src_rect.h) / bitmap_h;\n}\n\n// change triangle winding order to clock-wise\nVertex *ver = batch.Reserve(this, 6);\nver[0].x = (float) dst_rect.x;\nver[0].y = (float) (dst_rect.y + dst_rect.h);\nver[0].u = m_u;\nver[0].v = m_vv;\nver[0].col = color;\nver[2].x = (float) (dst_rect.x + dst_rect.w);\nver[2].y = (float) (dst_rect.y + dst_rect.h);\nver[2].u = m_uu;\nver[2].v = m_vv;\nver[2].col = color;\nver[1].x = (float) dst_rect.x;\nver[1].y = (float) dst_rect.y;\nver[1].u = m_u;\nver[1].v = m_v;\nver[1].col = color;\n\nver[3].x = (float) dst_rect.x;\nver[3].y = (float) dst_rect.y;\nver[3].u = m_u;\nver[3].v = m_v;\nver[3].col = color;\nver[5].x = (float) (dst_rect.x + dst_rect.w);\nver[5].y = (float) (dst_rect.y + dst_rect.h);\nver[5].u = m_uu;\nver[5].v = m_vv;\nver[5].col = color;\nver[4].x = (float) (dst_rect.x + dst_rect.w);\nver[4].y = (float) dst_rect.y;\nver[4].u = m_uu;\nver[4].v = m_v;\nver[4].col = color;\n\n// Update fragments batch id (See FlushBitmapFragment)\nif (fragment)\n    fragment-&gt;m_batch_id = batch.batch_id;\n</code></pre>\n<p>}</p>\n<p>//=============================================================================<br>\n//=============================================================================<br>\nvoid UTBRendererBatcher::RegisterHandlers()<br>\n{<br>\n// timer<br>\nSubscribeToEvent(E_UPDATE, URHO3D_HANDLER(UTBRendererBatcher, HandleUpdate));</p>\n<pre><code>// screen resize and renderer\nSubscribeToEvent(E_SCREENMODE, URHO3D_HANDLER(UTBRendererBatcher, HandleScreenMode));\nSubscribeToEvent(E_BEGINFRAME, URHO3D_HANDLER(UTBRendererBatcher, HandleBeginFrame));\nSubscribeToEvent(E_POSTUPDATE, URHO3D_HANDLER(UTBRendererBatcher, HandlePostUpdate));\nSubscribeToEvent(E_POSTRENDERUPDATE, URHO3D_HANDLER(UTBRendererBatcher, HandlePostRenderUpdate));\n\n// inputs\nSubscribeToEvent(E_MOUSEBUTTONDOWN, URHO3D_HANDLER(UTBRendererBatcher, HandleMouseButtonDown));\nSubscribeToEvent(E_MOUSEBUTTONUP, URHO3D_HANDLER(UTBRendererBatcher, HandleMouseButtonUp));\nSubscribeToEvent(E_MOUSEMOVE, URHO3D_HANDLER(UTBRendererBatcher, HandleMouseMove));\nSubscribeToEvent(E_MOUSEWHEEL, URHO3D_HANDLER(UTBRendererBatcher, HandleMouseWheel));\nSubscribeToEvent(E_KEYDOWN, URHO3D_HANDLER(UTBRendererBatcher, HandleKeyDown));\nSubscribeToEvent(E_KEYUP, URHO3D_HANDLER(UTBRendererBatcher, HandleKeyUp));\nSubscribeToEvent(E_TEXTINPUT, URHO3D_HANDLER(UTBRendererBatcher, HandleTextInput));\n</code></pre>\n<p>}</p>\n<p>//=============================================================================<br>\n//=============================================================================<br>\nvoid UTBRendererBatcher::HandleUpdate(StringHash eventType, VariantMap&amp; eventData)<br>\n{<br>\n// msg timer<br>\ndouble t = TBMessageHandler::GetNextMessageFireTime();</p>\n<pre><code>if ( t != TB_NOT_SOON &amp;&amp; t &lt;= TBSystem::GetTimeMS() )\n{\n    TBMessageHandler::ProcessMessages();\n}\n</code></pre>\n<p>}</p>\n<p>//=============================================================================<br>\n//=============================================================================<br>\nvoid UTBRendererBatcher::HandleScreenMode(StringHash eventType, VariantMap&amp; eventData)<br>\n{<br>\nusing namespace ScreenMode;</p>\n<pre><code>OnResizeWin( eventData[P_WIDTH].GetInt(), eventData[P_HEIGHT].GetInt() );\n</code></pre>\n<p>}</p>\n<p>//=============================================================================<br>\n//=============================================================================<br>\nvoid UTBRendererBatcher::HandleBeginFrame(StringHash eventType, VariantMap&amp; eventData)<br>\n{<br>\nTBAnimationManager::Update();<br>\nroot_.InvokeProcessStates();<br>\nroot_.InvokeProcess();<br>\n}</p>\n<p>//=============================================================================<br>\n//=============================================================================<br>\nvoid UTBRendererBatcher::HandlePostUpdate(StringHash eventType, VariantMap&amp; eventData)<br>\n{<br>\nBeginPaint( root_.GetRect().w, root_.GetRect().h );</p>\n<pre><code>root_.InvokePaint( TBWidget::PaintProps() );\n\n// If animations are running, reinvalidate immediately\nif ( TBAnimationManager::HasAnimationsRunning() )\n{\n    root_.Invalidate();\n}\n</code></pre>\n<p>}</p>\n<p>//=============================================================================<br>\n//=============================================================================<br>\nvoid UTBRendererBatcher::HandlePostRenderUpdate(StringHash eventType, VariantMap&amp; eventData)<br>\n{<br>\nEndPaint();<br>\n}</p>\n<p>//=============================================================================<br>\n//=============================================================================<br>\nvoid UTBRendererBatcher::HandleMouseButtonDown(StringHash eventType, VariantMap&amp; eventData)<br>\n{<br>\nusing namespace MouseButtonDown;</p>\n<pre><code>int mouseButtons = eventData[P_BUTTONS].GetInt();\nint qualifiers = eventData[P_QUALIFIERS].GetInt();\nMODIFIER_KEYS modKey = (MODIFIER_KEYS)FindTBKey( qualifiers + QAL_VAL );\n\n// exit if not the left mb\nif ( mouseButtons != MOUSEB_LEFT )\n{\n    return;\n}\n\nroot_.InvokePointerDown( lastMousePos_.x_, lastMousePos_.y_, 1, modKey, false );\n</code></pre>\n<p>}</p>\n<p>//=============================================================================<br>\n//=============================================================================<br>\nvoid UTBRendererBatcher::HandleMouseButtonUp(StringHash eventType, VariantMap&amp; eventData)<br>\n{<br>\nusing namespace MouseButtonUp;</p>\n<pre><code>int qualifiers = eventData[P_QUALIFIERS].GetInt();\nMODIFIER_KEYS modKey = (MODIFIER_KEYS)FindTBKey( qualifiers + QAL_VAL );\n\nroot_.InvokePointerUp( lastMousePos_.x_, lastMousePos_.y_, modKey, false );\n</code></pre>\n<p>}</p>\n<p>//=============================================================================<br>\n//=============================================================================<br>\nvoid UTBRendererBatcher::HandleMouseMove(StringHash eventType, VariantMap&amp; eventData)<br>\n{<br>\nusing namespace MouseMove;</p>\n<pre><code>int qualifiers = eventData[P_QUALIFIERS].GetInt();\nMODIFIER_KEYS modKey = (MODIFIER_KEYS)FindTBKey( qualifiers + QAL_VAL );\nlastMousePos_ = IntVector2( eventData[P_X].GetInt(), eventData[P_Y].GetInt() );\n\nroot_.InvokePointerMove( lastMousePos_.x_, lastMousePos_.y_, modKey, false );\n</code></pre>\n<p>}</p>\n<p>//=============================================================================<br>\n//=============================================================================<br>\nvoid UTBRendererBatcher::HandleMouseWheel(StringHash eventType, VariantMap&amp; eventData)<br>\n{<br>\nusing namespace MouseWheel;</p>\n<pre><code>int qualifiers = eventData[P_QUALIFIERS].GetInt();\nint delta = eventData[P_WHEEL].GetInt();\nMODIFIER_KEYS modKey = (MODIFIER_KEYS)FindTBKey( qualifiers + QAL_VAL );\n\nroot_.InvokeWheel( lastMousePos_.x_, lastMousePos_.y_, 0, -delta, modKey );\n</code></pre>\n<p>}</p>\n<p>//=============================================================================<br>\n//=============================================================================<br>\nvoid UTBRendererBatcher::HandleKeyDown(StringHash eventType, VariantMap&amp; eventData)<br>\n{<br>\nusing namespace KeyDown;</p>\n<pre><code>int qualifiers = eventData[P_QUALIFIERS].GetInt();\nint key = eventData[P_KEY].GetInt();\nMODIFIER_KEYS modKey = (MODIFIER_KEYS)FindTBKey( qualifiers + QAL_VAL );\nSPECIAL_KEY spKey = (SPECIAL_KEY)FindTBKey( key );\n\n// exit if not a special key\nif ( spKey == TB_KEY_UNDEFINED )\n{\n    return;\n}\n\nroot_.InvokeKey( key, spKey, modKey, true );\n</code></pre>\n<p>}</p>\n<p>//=============================================================================<br>\n//=============================================================================<br>\nvoid UTBRendererBatcher::HandleKeyUp(StringHash eventType, VariantMap&amp; eventData)<br>\n{<br>\nusing namespace KeyUp;</p>\n<pre><code>int qualifiers = eventData[P_QUALIFIERS].GetInt();\nint key = eventData[P_KEY].GetInt();\nMODIFIER_KEYS modKey = (MODIFIER_KEYS)FindTBKey( qualifiers + QAL_VAL );\nSPECIAL_KEY spKey = (SPECIAL_KEY)FindTBKey( key );\n\nroot_.InvokeKey( key, spKey, modKey, false );\n</code></pre>\n<p>}</p>\n<p>//=============================================================================<br>\n//=============================================================================<br>\nvoid UTBRendererBatcher::HandleTextInput(StringHash eventType, VariantMap&amp; eventData)<br>\n{<br>\nusing namespace TextInput;</p>\n<pre><code>int qualifiers = eventData[P_QUALIFIERS].GetInt();\nint key = (int)eventData[ P_TEXT ].GetString().CString()[ 0 ];\nMODIFIER_KEYS modKey = (MODIFIER_KEYS)FindTBKey( qualifiers + QAL_VAL );\n\nroot_.InvokeKey( key, TB_KEY_UNDEFINED, modKey, true );\n</code></pre>\n<p>}</p>\n<p>//=============================================================================<br>\n// TB special and quality keys func<br>\n//=============================================================================<br>\nint UTBRendererBatcher::FindTBKey(int _ikey)<br>\n{<br>\nHashMap&lt;int, int&gt;::Iterator itr = uKeytoTBkeyMap.Find( _ikey );<br>\nint itbkey = 0;</p>\n<pre><code>if ( itr != uKeytoTBkeyMap.End() )\n{\n    itbkey = itr-&gt;second_;\n}\n\nreturn itbkey;\n</code></pre>\n<p>}</p>\n<p>//=============================================================================<br>\n//=============================================================================<br>\nclass UTBFile : public TBFile<br>\n{<br>\npublic:<br>\nUTBFile(Context *<em>pContext)<br>\n: ufileSize</em>( 0 )<br>\n{<br>\npfile_ = new File( _pContext );<br>\n}</p>\n<pre><code>virtual ~UTBFile() \n{ \n    if ( pfile_ )\n    {\n        pfile_-&gt;Close();\n        pfile_ = NULL;\n    }\n}\n\nbool OpenFile(const char* fileName)\n{\n    bool bopen = pfile_-&gt;Open( fileName );\n\n    if ( bopen )\n    {\n        ufileSize_ = pfile_-&gt;Seek( (unsigned)-1 );\n        pfile_-&gt;Seek( 0 );\n    }\n\n    return bopen;\n}\n\nvirtual long Size()\n{\n    return (long)ufileSize_;\n}\n\nvirtual size_t Read(void *buf, size_t elemSize, size_t count)\n{\n    return pfile_-&gt;Read( buf, elemSize * count );\n}\n</code></pre>\n<p>protected:<br>\nSharedPtr pfile_;<br>\nunsigned ufileSize_;<br>\n};</p>\n<p>//=============================================================================<br>\n// static<br>\n//=============================================================================<br>\nTBFile* TBFile::Open(const char *filename, TBFileMode )<br>\n{<br>\nUTBFile *pFile = new UTBFile( UTBRendererBatcher::Singleton().GetContext() );<br>\nString strFilename = UTBRendererBatcher::Singleton().GetDataPath() + String( filename );</p>\n<pre><code>if ( !pFile-&gt;OpenFile( strFilename.CString() ) )\n{\n    delete pFile;\n    pFile = NULL;\n}\n\nreturn pFile;\n</code></pre>\n<p>}<br>\n[/code]<br>\nThis worked with the latest of URHO3D (March 20 2016). I have the GUI displaying with this version (URHO 3D 1.5 GITHUB head revision 03/20/16).</p>", "post_number": 29, "post_type": 1, "updated_at": "2017-01-02T01:11:22.826Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 1, "reads": 38, "readers_count": 37, "score": 12.6, "yours": false, "topic_id": 1457, "topic_slug": "turbobadger-full-integration", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 171, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 11268, "name": "", "username": "Enhex", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png", "created_at": "2016-03-20T21:11:52.000Z", "cooked": "<p>BTW the licensing is messed up.<br>\nYou got zlib license in the <a href=\"http://README.md\" rel=\"nofollow noopener\">README.md</a>, but all rights reserved in the source files.</p>", "post_number": 30, "post_type": 1, "updated_at": "2017-01-02T01:11:23.199Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 23, "readers_count": 22, "score": 4.6, "yours": false, "topic_id": 1457, "topic_slug": "turbobadger-full-integration", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "http://README.md", "internal": false, "reflection": false, "title": "Paywall", "clicks": 0}], "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 184, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 11270, "name": "", "username": "Lumak", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/l/8491ac/{size}.png", "created_at": "2016-03-20T22:07:49.000Z", "cooked": "<p>My TB integration work is <a href=\"https://opensource.org/licenses/MIT\" data-bbcode=\"true\">MIT</a>, and that license has a precedence and covers everything that I have included in the repository (with exception to TB lib which is covered below) w/o having to recopy it in every file.<br>\nTB library has its own license - I\u2019ve included the TB library link, the original author\u2019s link, and its license in the <a href=\"http://readme.md\">readme.md</a> file.</p>\n<p>Edit: should I remove TB lib license to avoid any confusion?</p>", "post_number": 31, "post_type": 1, "updated_at": "2017-01-02T01:11:23.335Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 26, "readers_count": 25, "score": 5.2, "yours": false, "topic_id": 1457, "topic_slug": "turbobadger-full-integration", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "http://readme.md", "internal": false, "reflection": false, "title": "Paywall", "clicks": 1}, {"url": "https://opensource.org/licenses/MIT", "internal": false, "reflection": false, "title": "The MIT License | Open Source Initiative", "clicks": 0}], "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 256, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 11271, "name": "", "username": "Enhex", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png", "created_at": "2016-03-20T22:18:58.000Z", "cooked": "<p>\u201cCopyright \u00a9 2015 LumakSoftware\u201d defaults to all rights reserved.<br>\nThe safest option is to include the whole license in every file.<br>\nA shorter solution is to just say or add \u201clook at file X for the license\u201d.<br>\nOr at least don\u2019t write anything so there are no conflicting statements.</p>\n<p>You can put the TB license in a separate file (so when people scroll down and see \u201cLicense\u201d they don\u2019t confuse it to your license), but if you include TB in your repo then you can\u2019t remove it completely.</p>", "post_number": 32, "post_type": 1, "updated_at": "2017-01-02T01:11:23.402Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 30, "readers_count": 29, "score": 6.0, "yours": false, "topic_id": 1457, "topic_slug": "turbobadger-full-integration", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 184, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 11272, "name": "", "username": "Lumak", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/l/8491ac/{size}.png", "created_at": "2016-03-20T22:37:45.000Z", "cooked": "<p>Added the license info in the repository.<br>\nI already had the TB lib license in the Source/ThirdParty/TurboBadger/ section from day one, and I think it\u2019s more clear about my license having the TB license removed from the main readme page.<br>\nGood call.</p>", "post_number": 33, "post_type": 1, "updated_at": "2017-01-02T01:11:23.467Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 30, "readers_count": 29, "score": 6.0, "yours": false, "topic_id": 1457, "topic_slug": "turbobadger-full-integration", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 256, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 11276, "name": "", "username": "Enhex", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png", "created_at": "2016-03-21T00:22:20.000Z", "cooked": "<p>Thanks!</p>", "post_number": 34, "post_type": 1, "updated_at": "2017-01-02T01:11:23.704Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 31, "readers_count": 30, "score": 6.2, "yours": false, "topic_id": 1457, "topic_slug": "turbobadger-full-integration", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 184, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 13389, "name": "", "username": "sabotage3d", "avatar_template": "/user_avatar/discourse.urho3d.io/sabotage3d/{size}/87_2.png", "created_at": "2016-08-26T13:45:55.000Z", "cooked": "<p>Anyone using TB for in-game UI or it is suitable only for debug editor?</p>", "post_number": 35, "post_type": 1, "updated_at": "2017-01-02T01:13:56.211Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 2, "reads": 34, "readers_count": 33, "score": 16.8, "yours": false, "topic_id": 1457, "topic_slug": "turbobadger-full-integration", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 151, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 13394, "name": "Justin Miller", "username": "jmiller", "avatar_template": "/user_avatar/discourse.urho3d.io/jmiller/{size}/2367_2.png", "created_at": "2016-08-26T18:02:17.000Z", "cooked": "<aside class=\"quote no-group\" data-username=\"sabotage3d\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/sabotage3d/40/87_2.png\" class=\"avatar\"> sabotage3d:</div>\n<blockquote>\n<p>Anyone using TB for in-game UI or it is suitable only for debug editor?</p>\n</blockquote>\n</aside>\n<p>Sure, have been using the other integration since it was posted: <a href=\"http://discourse.urho3d.io/t/turbo-badger-implementation/1364/1\">topic1413.html</a><br>\nI\u2019ve posted my Console widget there and I\u2019m intending to post an animated+skinned radial menu widget soon. TB is fast, many-featured, and I like the retained mode.</p>\n<p><a href=\"http://imgbox.com/SSproDGw\" data-bbcode=\"true\"><img src=\"http://0.t.imgbox.com/SSproDGw.jpg\" alt=\"\" width=\"350\" height=\"350\"></a></p>", "post_number": 36, "post_type": 1, "updated_at": "2017-01-02T01:13:56.605Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 1, "incoming_link_count": 13, "reads": 36, "readers_count": 35, "score": 72.2, "yours": false, "topic_id": 1457, "topic_slug": "turbobadger-full-integration", "display_username": "Justin Miller", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "http://imgbox.com/SSproDGw", "internal": false, "reflection": false, "title": "imgbox - fast, simple image host", "clicks": 17}, {"url": "https://discourse.urho3d.io/t/turbo-badger-implementation/1364", "internal": true, "reflection": false, "title": "Turbo Badger implementation", "clicks": 0}], "read": true, "user_title": "", "bookmarked": false, "actions_summary": [], "moderator": true, "admin": false, "staff": true, "user_id": 21, "hidden": false, "trust_level": 3, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 13396, "name": "", "username": "sabotage3d", "avatar_template": "/user_avatar/discourse.urho3d.io/sabotage3d/{size}/87_2.png", "created_at": "2016-08-26T20:03:50.000Z", "cooked": "<p>Looks really nice. I think the other one is removed is there any public repo?</p>", "post_number": 37, "post_type": 1, "updated_at": "2017-01-02T01:13:56.744Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 37, "readers_count": 36, "score": 7.4, "yours": false, "topic_id": 1457, "topic_slug": "turbobadger-full-integration", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 151, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 13399, "name": "Justin Miller", "username": "jmiller", "avatar_template": "/user_avatar/discourse.urho3d.io/jmiller/{size}/2367_2.png", "created_at": "2016-08-26T21:40:33.000Z", "cooked": "<aside class=\"quote\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/sabotage3d/40/87_1.png\" class=\"avatar\"> sabotage3d:</div>\n<blockquote>\n<p>Looks really nice. I think the other one is removed is there any public repo?</p>\n</blockquote>\n</aside>\n<p>Just posted my working version in that thread.</p>", "post_number": 38, "post_type": 1, "updated_at": "2017-01-02T01:13:57.004Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 1, "incoming_link_count": 2, "reads": 36, "readers_count": 35, "score": 17.2, "yours": false, "topic_id": 1457, "topic_slug": "turbobadger-full-integration", "display_username": "Justin Miller", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "", "bookmarked": false, "actions_summary": [], "moderator": true, "admin": false, "staff": true, "user_id": 21, "hidden": false, "trust_level": 3, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}], "stream": [8347, 8363, 8376, 10032, 10036, 10037, 10038, 10039, 10041, 10042, 10046, 10048, 10049, 10055, 10078, 10079, 10080, 10081, 11224, 11238, 11239, 11241, 11242, 11243, 11245, 11258, 11260, 11261, 11265, 11268, 11270, 11271, 11272, 11276, 13389, 13394, 13396, 13399]}, "timeline_lookup": [[1, 2582], [2, 2581], [3, 2580], [4, 2482], [13, 2481], [14, 2480], [15, 2479], [19, 2440], [21, 2439], [29, 2438], [35, 2280], [36, 2279]], "tags_descriptions": {}, "id": 1457, "title": "TurboBadger full integration", "fancy_title": "TurboBadger full integration", "posts_count": 38, "created_at": "2015-10-29T10:48:01.000Z", "views": 3950, "reply_count": 0, "like_count": 1, "last_posted_at": "2016-08-26T21:40:33.000Z", "visible": true, "closed": false, "archived": false, "has_summary": false, "archetype": "regular", "slug": "turbobadger-full-integration", "category_id": 13, "word_count": 7119, "deleted_at": null, "user_id": 256, "featured_link": null, "pinned_globally": false, "pinned_at": null, "pinned_until": null, "image_url": null, "slow_mode_seconds": 0, "draft": null, "draft_key": "topic_1457", "draft_sequence": null, "unpinned": null, "pinned": false, "current_post_number": 1, "highest_post_number": 38, "deleted_by": null, "actions_summary": [{"id": 4, "count": 0, "hidden": false, "can_act": false}, {"id": 8, "count": 0, "hidden": false, "can_act": false}, {"id": 7, "count": 0, "hidden": false, "can_act": false}], "chunk_size": 20, "bookmarked": false, "bookmarks": [], "topic_timer": null, "message_bus_last_id": 0, "participant_count": 11, "show_read_indicator": false, "thumbnails": null, "slow_mode_enabled_until": null, "tags_disable_ads": false, "details": {"can_edit": false, "notification_level": 1, "participants": [{"id": 256, "username": "Lumak", "name": "", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/l/8491ac/{size}.png", "post_count": 11, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "trust_level": 2}, {"id": 184, "username": "Enhex", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png", "post_count": 7, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "trust_level": 2}, {"id": 171, "username": "christianclavet", "name": "", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/c/76d3ee/{size}.png", "post_count": 6, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "trust_level": 1}, {"id": 281, "username": "George", "name": "", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/71e660/{size}.png", "post_count": 4, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "trust_level": 1}, {"id": 21, "username": "jmiller", "name": "Justin Miller", "avatar_template": "/user_avatar/discourse.urho3d.io/jmiller/{size}/2367_2.png", "post_count": 3, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "moderator": true, "trust_level": 3}, {"id": 151, "username": "sabotage3d", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/sabotage3d/{size}/87_2.png", "post_count": 2, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "trust_level": 2}, {"id": 94, "username": "Bluemoon", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/bluemoon/{size}/348_2.png", "post_count": 1, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "trust_level": 2}, {"id": 81, "username": "jenge", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/jenge/{size}/88_2.png", "post_count": 1, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "trust_level": 1}, {"id": 247, "username": "Dave82", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/dave82/{size}/2369_2.png", "post_count": 1, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "trust_level": 2}, {"id": 80, "username": "thebluefish", "name": "", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/t/f04885/{size}.png", "post_count": 1, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "trust_level": 1}, {"id": 54, "username": "rasteron", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/rasteron/{size}/55_2.png", "post_count": 1, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "trust_level": 2}], "created_by": {"id": 256, "username": "Lumak", "name": "", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/l/8491ac/{size}.png"}, "last_poster": {"id": 21, "username": "jmiller", "name": "Justin Miller", "avatar_template": "/user_avatar/discourse.urho3d.io/jmiller/{size}/2367_2.png"}, "links": [{"url": "https://github.com/Lumak/Urho3D-1.4-TurboBadger", "title": "GitHub - Lumak/Urho3D-1.4-TurboBadger: TurboBadger integration to Urho3D-1.4", "internal": false, "attachment": false, "reflection": false, "clicks": 150, "user_id": 171, "domain": "github.com", "root_domain": "github.com"}, {"url": "http://imgbox.com/SSproDGw", "title": "imgbox - fast, simple image host", "internal": false, "attachment": false, "reflection": false, "clicks": 17, "user_id": 21, "domain": "imgbox.com", "root_domain": "imgbox.com"}, {"url": "http://discourse.urho3d.io/t/turbobadger-integration/1452/6", "title": "TurboBadger integration", "internal": true, "attachment": false, "reflection": true, "clicks": 2, "user_id": 256, "domain": "discourse.urho3d.io", "root_domain": "urho3d.io"}, {"url": "http://discourse.urho3d.io/t/how-to-integrate-third-party-gui/3848/4", "title": "How to integrate third party GUI?", "internal": true, "attachment": false, "reflection": true, "clicks": 1, "user_id": 21, "domain": "discourse.urho3d.io", "root_domain": "urho3d.io"}, {"url": "http://readme.md", "title": "Paywall", "internal": false, "attachment": false, "reflection": false, "clicks": 1, "user_id": 256, "domain": "readme.md", "root_domain": "readme.md"}]}, "suggested_topics": [{"id": 7103, "title": ":test_tube: DebugRenderer as GUI", "fancy_title": ":test_tube: DebugRenderer as GUI", "slug": "debugrenderer-as-gui", "posts_count": 4, "reply_count": 1, "highest_post_number": 4, "image_url": null, "created_at": "2021-12-17T02:25:06.606Z", "last_posted_at": "2021-12-18T01:09:27.738Z", "bumped": true, "bumped_at": "2021-12-18T01:09:27.738Z", "archetype": "regular", "unseen": false, "pinned": false, "unpinned": null, "visible": true, "closed": false, "archived": false, "bookmarked": null, "liked": null, "unicode_title": "\ud83e\uddea DebugRenderer as GUI", "tags_descriptions": {}, "like_count": 4, "views": 267, "category_id": 13, "featured_link": null, "has_accepted_answer": false, "posters": [{"extras": "latest", "description": "Original Poster, Most Recent Poster", "user": {"id": 192, "username": "Modanung", "name": "\u9b54\u5927\u519c \ud835\udf8d\ud835\udf8e\ud835\udf73 \u73fe\u62db\u870d", "avatar_template": "/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png"}}, {"extras": null, "description": "Frequent Poster", "user": {"id": 861, "username": "GodMan", "name": "", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/e79b87/{size}.png"}}]}, {"id": 7120, "title": "Log Error Once Macro", "fancy_title": "Log Error Once Macro", "slug": "log-error-once-macro", "posts_count": 1, "reply_count": 0, "highest_post_number": 1, "image_url": null, "created_at": "2022-01-04T02:24:37.857Z", "last_posted_at": "2022-01-04T02:24:37.925Z", "bumped": true, "bumped_at": "2022-01-04T02:24:37.925Z", "archetype": "regular", "unseen": false, "pinned": false, "unpinned": null, "visible": true, "closed": false, "archived": false, "bookmarked": null, "liked": null, "tags_descriptions": {}, "like_count": 3, "views": 143, "category_id": 13, "featured_link": null, "has_accepted_answer": false, "posters": [{"extras": "latest single", "description": "Original Poster, Most Recent Poster", "user": {"id": 628, "username": "SirNate0", "name": "SirNate0", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}}]}, {"id": 7110, "title": "Resource fetch define", "fancy_title": "Resource fetch define", "slug": "resource-fetch-define", "posts_count": 2, "reply_count": 0, "highest_post_number": 2, "image_url": null, "created_at": "2021-12-27T12:28:55.126Z", "last_posted_at": "2021-12-27T17:00:37.699Z", "bumped": true, "bumped_at": "2021-12-27T17:00:37.699Z", "archetype": "regular", "unseen": false, "pinned": false, "unpinned": null, "visible": true, "closed": false, "archived": false, "bookmarked": null, "liked": null, "tags_descriptions": {}, "like_count": 7, "views": 184, "category_id": 13, "featured_link": null, "has_accepted_answer": false, "posters": [{"extras": null, "description": "Original Poster", "user": {"id": 192, "username": "Modanung", "name": "\u9b54\u5927\u519c \ud835\udf8d\ud835\udf8e\ud835\udf73 \u73fe\u62db\u870d", "avatar_template": "/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png"}}, {"extras": "latest", "description": "Most Recent Poster", "user": {"id": 1304, "username": "lebrewer", "name": "lebrewer", "avatar_template": "/user_avatar/discourse.urho3d.io/lebrewer/{size}/2811_2.png"}}]}, {"id": 7099, "title": ":fallen_leaf: Polynomials & Harmonics", "fancy_title": ":fallen_leaf: Polynomials &amp; Harmonics", "slug": "polynomials-harmonics", "posts_count": 6, "reply_count": 0, "highest_post_number": 7, "image_url": null, "created_at": "2021-12-13T05:06:04.641Z", "last_posted_at": "2021-12-27T23:27:39.489Z", "bumped": true, "bumped_at": "2021-12-27T23:27:39.489Z", "archetype": "regular", "unseen": false, "pinned": false, "unpinned": null, "visible": true, "closed": false, "archived": false, "bookmarked": null, "liked": null, "unicode_title": "\ud83c\udf42 Polynomials & Harmonics", "tags_descriptions": {}, "like_count": 6, "views": 392, "category_id": 13, "featured_link": null, "has_accepted_answer": false, "posters": [{"extras": "latest single", "description": "Original Poster, Most Recent Poster", "user": {"id": 192, "username": "Modanung", "name": "\u9b54\u5927\u519c \ud835\udf8d\ud835\udf8e\ud835\udf73 \u73fe\u62db\u870d", "avatar_template": "/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png"}}]}, {"id": 7227, "title": "How to use -s MAX_WEBGL_VERSION=2", "fancy_title": "How to use -s MAX_WEBGL_VERSION=2", "slug": "how-to-use-s-max-webgl-version-2", "posts_count": 3, "reply_count": 1, "highest_post_number": 3, "image_url": null, "created_at": "2022-03-30T13:12:17.248Z", "last_posted_at": "2022-03-30T14:09:14.646Z", "bumped": true, "bumped_at": "2022-03-30T14:09:14.646Z", "archetype": "regular", "unseen": false, "pinned": false, "unpinned": null, "visible": true, "closed": false, "archived": false, "bookmarked": null, "liked": null, "tags_descriptions": {}, "like_count": 1, "views": 103, "category_id": 16, "featured_link": null, "has_accepted_answer": false, "posters": [{"extras": "latest", "description": "Original Poster, Most Recent Poster", "user": {"id": 997, "username": "huminzheng", "name": "huminzheng", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/h/9de0a6/{size}.png"}}, {"extras": null, "description": "Frequent Poster", "user": {"id": 628, "username": "SirNate0", "name": "SirNate0", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}}]}]}