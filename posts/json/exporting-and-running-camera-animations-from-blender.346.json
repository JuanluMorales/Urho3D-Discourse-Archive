{"post_stream":{"posts":[{"id":1840,"name":"","username":"gunnar.kriik","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/g/c77e96/{size}.png","created_at":"2014-07-12T11:23:57.000Z","cooked":"\u003cp\u003eHi,\u003c/p\u003e\n\u003cp\u003eI’m currently attempting to export a simple camera animation from Blender to Urho3D. I export the animation as Collada (.dae) and used the AssetImporter tool to convert the animation. So far so good, I get the .ani file and place it in Urho3D Bin folder. However, I’m not sure how to attach the animation to the camera object. I was trying the following, but it doesn’t seem to work:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003eObjectAnimation* anim = cache-\u0026gt;GetResource\u0026lt;ObjectAnimation\u0026gt;(\"Animations/CameraAnim1.ani\");\ncameraNode_-\u0026gt;SetObjectAnimation(anim);\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eI’m not even sure this is correct, as the camera doesn’t move. Is this the correct way to load animations from file?\u003c/p\u003e\n\u003cp\u003eThanks!\u003c/p\u003e","post_number":1,"post_type":1,"updated_at":"2017-01-02T00:59:45.632Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":153,"reads":13,"readers_count":12,"score":767.6,"yours":false,"topic_id":346,"topic_slug":"exporting-and-running-camera-animations-from-blender","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":35,"hidden":false,"trust_level":1,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":1842,"name":"Lasse Öörni","username":"cadaver","avatar_template":"/user_avatar/discourse.urho3d.io/cadaver/{size}/3_2.png","created_at":"2014-07-12T11:33:38.000Z","cooked":"\u003cp\u003eObjectAnimation is a bit different, later added concept and is not exported by AssetImporter, though the eventual goal would be to unify all these mechanisms of playing animations.\u003c/p\u003e\n\u003cp\u003eRather, what you’re looking for is “node animation” which is documented on the same page as ordinary skeletal animations: \u003ca href=\"http://urho3d.github.io/documentation/a00025.html\"\u003eurho3d.github.io/documentation/a00025.html\u003c/a\u003e . It is actually just like a skeletal animation data-wise, but is applied to an “ordinary” scene node instead of a model’s bone nodes.\u003c/p\u003e\n\u003cp\u003eThe animation can be applied by either instantiating an AnimationState yourself using the constructor overload which takes a scene node (in this case it would be the camera scene node) or by creating an AnimationController component and using it to play the node animation.\u003c/p\u003e","post_number":2,"post_type":1,"updated_at":"2017-01-02T00:59:45.767Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":0,"reads":13,"readers_count":12,"score":17.6,"yours":false,"topic_id":346,"topic_slug":"exporting-and-running-camera-animations-from-blender","display_username":"Lasse Öörni","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"link_counts":[{"url":"http://urho3d.github.io/documentation/a00025.html","internal":false,"reflection":false,"clicks":7}],"read":true,"user_title":"Urho3D Author","title_is_group":false,"bookmarked":false,"actions_summary":[{"id":2,"count":1}],"moderator":false,"admin":true,"staff":true,"user_id":3,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":1843,"name":"","username":"gunnar.kriik","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/g/c77e96/{size}.png","created_at":"2014-07-12T11:45:03.000Z","cooked":"\u003cp\u003eAlright! Thanks Lasse! I’ll try to make that work and post working code here as reference to others.\u003c/p\u003e","post_number":3,"post_type":1,"updated_at":"2017-01-02T00:59:45.859Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":0,"reads":12,"readers_count":11,"score":2.4,"yours":false,"topic_id":346,"topic_slug":"exporting-and-running-camera-animations-from-blender","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":35,"hidden":false,"trust_level":1,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":1844,"name":"","username":"gunnar.kriik","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/g/c77e96/{size}.png","created_at":"2014-07-12T12:01:58.000Z","cooked":"\u003cp\u003eThanks again, Lasse. Got it working, and here is the modified LightAnimation sample in case anybody else wants to do something similar.\u003c/p\u003e\n\u003cp\u003eLightAnimation.h\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003e#pragma once\n\n#include \"Sample.h\"\n\nnamespace Urho3D\n{\n\nclass Node;\nclass Scene;\nclass AnimationState;\n\n}\n\n/// Light animation example.\n/// This sample is base on StaticScene, and it demonstrates:\n///     - Usage of attribute animation for light color animation\nclass LightAnimation : public Sample\n{\n    OBJECT(LightAnimation);\n\npublic:\n    /// Construct.\n    LightAnimation(Context* context);\n\n    /// Setup after engine initialization and before running the main loop.\n    virtual void Start();\n\nprivate:\n    /// Construct the scene content.\n    void CreateScene();\n    /// Construct an instruction text to the UI.\n    void CreateInstructions();\n    /// Set up a viewport for displaying the scene.\n    void SetupViewport();\n    /// Subscribe to application-wide logic update events.\n    void SubscribeToEvents();\n    /// Handle the logic update event.\n    void HandleUpdate(StringHash eventType, VariantMap\u0026amp; eventData);\n    \n    // Camera node animation state instance\n    SharedPtr\u0026lt;AnimationState\u0026gt; animationState_;\n};\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eLightAnimation.cpp:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003e#include \"Camera.h\"\n#include \"CoreEvents.h\"\n#include \"Engine.h\"\n#include \"Font.h\"\n#include \"Graphics.h\"\n#include \"Input.h\"\n#include \"LightAnimation.h\"\n#include \"Material.h\"\n#include \"Model.h\"\n#include \"Octree.h\"\n#include \"Renderer.h\"\n#include \"ResourceCache.h\"\n#include \"Scene.h\"\n#include \"StaticModel.h\"\n#include \"Text.h\"\n#include \"UI.h\"\n#include \"Animation.h\"\n#include \"AnimationState.h\"\n\n#include \"DebugNew.h\"\n#include \"Animatable.h\"\n\nDEFINE_APPLICATION_MAIN(LightAnimation)\n\nLightAnimation::LightAnimation(Context* context) :\n    Sample(context)\n{\n}\n\nvoid LightAnimation::Start()\n{\n    // Execute base class startup\n    Sample::Start();\n\n    // Create the scene content\n    CreateScene();\n    \n    // Setup the viewport for displaying the scene\n    SetupViewport();\n\n    // Hook up to the frame update events\n    SubscribeToEvents();\n}\n\nvoid LightAnimation::CreateScene()\n{\n    ResourceCache* cache = GetSubsystem\u0026lt;ResourceCache\u0026gt;();\n    \n    scene_ = new Scene(context_);\n    \n    // Create the Octree component to the scene. This is required before adding any drawable components, or else nothing will\n    // show up. The default octree volume will be from (-1000, -1000, -1000) to (1000, 1000, 1000) in world coordinates; it\n    // is also legal to place objects outside the volume but their visibility can then not be checked in a hierarchically\n    // optimizing manner\n    scene_-\u0026gt;CreateComponent\u0026lt;Octree\u0026gt;();\n    \n    // Create a child scene node (at world origin) and a StaticModel component into it. Set the StaticModel to show a simple\n    // plane mesh with a \"stone\" material. Note that naming the scene nodes is optional. Scale the scene node larger\n    // (100 x 100 world units)\n    Node* planeNode = scene_-\u0026gt;CreateChild(\"Plane\");\n    planeNode-\u0026gt;SetScale(Vector3(100.0f, 1.0f, 100.0f));\n    StaticModel* planeObject = planeNode-\u0026gt;CreateComponent\u0026lt;StaticModel\u0026gt;();\n    planeObject-\u0026gt;SetModel(cache-\u0026gt;GetResource\u0026lt;Model\u0026gt;(\"Models/Plane.mdl\"));\n    planeObject-\u0026gt;SetMaterial(cache-\u0026gt;GetResource\u0026lt;Material\u0026gt;(\"Materials/StoneTiled.xml\"));\n    \n    // Create a point light to the world so that we can see something. \n    Node* lightNode = scene_-\u0026gt;CreateChild(\"PointLight\");\n    Light* light = lightNode-\u0026gt;CreateComponent\u0026lt;Light\u0026gt;();\n    light-\u0026gt;SetLightType(LIGHT_POINT);\n    light-\u0026gt;SetRange(200.0f);\n    \n    // Create a scene node for the camera, which we will move around\n    // The camera will use default settings (1000 far clip distance, 45 degrees FOV, set aspect ratio automatically)\n    cameraNode_ = scene_-\u0026gt;CreateChild(\"Camera\");\n    cameraNode_-\u0026gt;CreateComponent\u0026lt;Camera\u0026gt;();\n    \n    // Set an initial position for the camera scene node above the plane\n    cameraNode_-\u0026gt;SetPosition(Vector3(0.0f, 5.0f, 0.0f));\n\n    // Load animation from file, in this case exported from Blender and converted using AssetImporter\n    SharedPtr\u0026lt;Animation\u0026gt; anim(cache-\u0026gt;GetResource\u0026lt;Animation\u0026gt;(\"Animations/CameraAnim1.ani\"));\n    animationState_ = SharedPtr\u0026lt;AnimationState\u0026gt;(new AnimationState(cameraNode_, anim));\n}\n\nvoid LightAnimation::SetupViewport()\n{\n    Renderer* renderer = GetSubsystem\u0026lt;Renderer\u0026gt;();\n    \n    // Set up a viewport to the Renderer subsystem so that the 3D scene can be seen. We need to define the scene and the camera\n    // at minimum. Additionally we could configure the viewport screen size and the rendering path (eg. forward / deferred) to\n    // use, but now we just use full screen and default render path configured in the engine command line options\n    SharedPtr\u0026lt;Viewport\u0026gt; viewport(new Viewport(context_, scene_, cameraNode_-\u0026gt;GetComponent\u0026lt;Camera\u0026gt;()));\n    renderer-\u0026gt;SetViewport(0, viewport);\n}\n\nvoid LightAnimation::SubscribeToEvents()\n{\n    // Subscribe HandleUpdate() function for processing update events\n    SubscribeToEvent(E_UPDATE, HANDLER(LightAnimation, HandleUpdate));\n}\n\nvoid LightAnimation::HandleUpdate(StringHash eventType, VariantMap\u0026amp; eventData)\n{\n    using namespace Update;\n\n    // Take the frame time step, which is stored as a float\n    float timeStep = eventData[P_TIMESTEP].GetFloat();\n    \n    // Update the camera animation state\n    animationState_-\u0026gt;AddTime(timeStep);\n    animationState_-\u0026gt;Apply();\n}\n\u003c/code\u003e\u003c/pre\u003e","post_number":4,"post_type":1,"updated_at":"2017-01-02T00:59:45.941Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":1,"reads":12,"readers_count":11,"score":22.4,"yours":false,"topic_id":346,"topic_slug":"exporting-and-running-camera-animations-from-blender","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[{"id":2,"count":1}],"moderator":false,"admin":false,"staff":false,"user_id":35,"hidden":false,"trust_level":1,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":1846,"name":"","username":"gunnar.kriik","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/g/c77e96/{size}.png","created_at":"2014-07-12T12:30:39.000Z","cooked":"\u003cp\u003eOnly problem now is that while Blender uses the Z-up, the exported camera animation is not converted to Y-up, at least not while using Collada. This might be an issue with the Collada format, as the animations might be exported as-is from Blender.\u003c/p\u003e","post_number":5,"post_type":1,"updated_at":"2017-01-02T00:59:46.101Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":0,"reads":11,"readers_count":10,"score":2.2,"yours":false,"topic_id":346,"topic_slug":"exporting-and-running-camera-animations-from-blender","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":35,"hidden":false,"trust_level":1,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false}],"stream":[1840,1842,1843,1844,1846]},"timeline_lookup":[[1,3056]],"suggested_topics":[{"id":7067,"title":"Can the latest Urho3D version be built with VS2013?","fancy_title":"Can the latest Urho3D version be built with VS2013?","slug":"can-the-latest-urho3d-version-be-built-with-vs2013","posts_count":3,"reply_count":0,"highest_post_number":3,"image_url":null,"created_at":"2021-11-25T18:00:24.336Z","last_posted_at":"2021-11-26T17:22:21.878Z","bumped":true,"bumped_at":"2021-11-26T17:22:21.878Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":0,"views":157,"category_id":10,"featured_link":null,"has_accepted_answer":true,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":861,"username":"GodMan","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/g/e79b87/{size}.png"}},{"extras":null,"description":"Frequent Poster, Accepted Answer","user":{"id":4,"username":"weitjong","name":"Yao Wei Tjong","avatar_template":"/user_avatar/discourse.urho3d.io/weitjong/{size}/4_2.png"}}]},{"id":7129,"title":"Best Model Import Pipeline as of Jan 2022?","fancy_title":"Best Model Import Pipeline as of Jan 2022?","slug":"best-model-import-pipeline-as-of-jan-2022","posts_count":7,"reply_count":0,"highest_post_number":7,"image_url":null,"created_at":"2022-01-17T09:27:23.432Z","last_posted_at":"2022-01-17T20:37:59.458Z","bumped":true,"bumped_at":"2022-01-17T20:37:59.458Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":4,"views":170,"category_id":10,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":1334,"username":"najak3d","name":"Brian Knox","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/n/6a8cbe/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":263,"username":"1vanK","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/1vank/{size}/768_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":1038,"username":"dertom","name":"Thomas Trocha","avatar_template":"/user_avatar/discourse.urho3d.io/dertom/{size}/1815_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":192,"username":"Modanung","name":"魔大农 𝞍𝞎𝝳 現招蜍","avatar_template":"/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":1165,"username":"throwawayerino","name":"Actually Permanent","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/t/da6949/{size}.png"}}]},{"id":7092,"title":"Finding the World Space Coordinates of the Screen Edges","fancy_title":"Finding the World Space Coordinates of the Screen Edges","slug":"finding-the-world-space-coordinates-of-the-screen-edges","posts_count":6,"reply_count":2,"highest_post_number":6,"image_url":null,"created_at":"2021-12-07T20:53:49.453Z","last_posted_at":"2021-12-08T12:33:52.510Z","bumped":true,"bumped_at":"2021-12-08T12:33:52.510Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":1,"views":210,"category_id":10,"featured_link":null,"has_accepted_answer":true,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster, Accepted Answer","user":{"id":1456,"username":"Jens","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/j/d2c977/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":192,"username":"Modanung","name":"魔大农 𝞍𝞎𝝳 現招蜍","avatar_template":"/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":263,"username":"1vanK","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/1vank/{size}/768_2.png"}}]},{"id":7178,"title":"Medium-Quality Technique for Semi-Reflective/Specular Glass in Urho","fancy_title":"Medium-Quality Technique for Semi-Reflective/Specular Glass in Urho","slug":"medium-quality-technique-for-semi-reflective-specular-glass-in-urho","posts_count":3,"reply_count":0,"highest_post_number":3,"image_url":"https://global.discourse-cdn.com/standard17/uploads/urho3d/original/2X/5/51408fe152ba02eb8b92237cc9a9411c8ee922e6.jpeg","created_at":"2022-01-31T22:57:50.134Z","last_posted_at":"2022-02-01T04:32:37.418Z","bumped":true,"bumped_at":"2022-02-01T04:32:37.418Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":1,"views":154,"category_id":10,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":1334,"username":"najak3d","name":"Brian Knox","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/n/6a8cbe/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":1317,"username":"Lys0gen","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/l/57b2e6/{size}.png"}}]},{"id":7268,"title":"Get vertex position before Morph in shader","fancy_title":"Get vertex position before Morph in shader","slug":"get-vertex-position-before-morph-in-shader","posts_count":8,"reply_count":6,"highest_post_number":8,"image_url":null,"created_at":"2022-05-15T19:44:19.139Z","last_posted_at":"2022-05-16T06:11:07.099Z","bumped":true,"bumped_at":"2022-08-12T22:38:31.553Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":5,"views":209,"category_id":10,"featured_link":null,"has_accepted_answer":true,"posters":[{"extras":null,"description":"Original Poster","user":{"id":1205,"username":"Askhento","name":"Askhento","avatar_template":"/user_avatar/discourse.urho3d.io/askhento/{size}/3849_2.png"}},{"extras":"latest","description":"Most Recent Poster, Accepted Answer","user":{"id":484,"username":"Eugene","name":"Eugene Kozlov","avatar_template":"/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":1358,"username":"JSandusky","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/jsandusky/{size}/3220_2.png"}}]}],"tags_descriptions":{},"id":346,"title":"Exporting and running camera animations from Blender","fancy_title":"Exporting and running camera animations from Blender","posts_count":5,"created_at":"2014-07-12T11:23:57.000Z","views":583,"reply_count":0,"like_count":2,"last_posted_at":"2014-07-12T12:30:39.000Z","visible":true,"closed":false,"archived":false,"has_summary":false,"archetype":"regular","slug":"exporting-and-running-camera-animations-from-blender","category_id":10,"word_count":951,"deleted_at":null,"user_id":35,"featured_link":null,"pinned_globally":false,"pinned_at":null,"pinned_until":null,"image_url":null,"slow_mode_seconds":0,"draft":null,"draft_key":"topic_346","draft_sequence":null,"unpinned":null,"pinned":false,"current_post_number":1,"highest_post_number":5,"deleted_by":null,"actions_summary":[{"id":4,"count":0,"hidden":false,"can_act":false},{"id":8,"count":0,"hidden":false,"can_act":false},{"id":7,"count":0,"hidden":false,"can_act":false}],"chunk_size":20,"bookmarked":false,"bookmarks":[],"topic_timer":null,"message_bus_last_id":0,"participant_count":2,"show_read_indicator":false,"thumbnails":null,"slow_mode_enabled_until":null,"tags_disable_ads":false,"details":{"can_edit":false,"notification_level":1,"participants":[{"id":35,"username":"gunnar.kriik","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/g/c77e96/{size}.png","post_count":4,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"trust_level":1},{"id":3,"username":"cadaver","name":"Lasse Öörni","avatar_template":"/user_avatar/discourse.urho3d.io/cadaver/{size}/3_2.png","post_count":1,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"admin":true,"trust_level":2}],"created_by":{"id":35,"username":"gunnar.kriik","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/g/c77e96/{size}.png"},"last_poster":{"id":35,"username":"gunnar.kriik","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/g/c77e96/{size}.png"},"links":[{"url":"http://urho3d.github.io/documentation/a00025.html","title":null,"internal":false,"attachment":false,"reflection":false,"clicks":7,"user_id":3,"domain":"urho3d.github.io","root_domain":"urho3d.github.io"}]}}