{"post_stream":{"posts":[{"id":8241,"name":"","username":"cap","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/c/e9bcb4/{size}.png","created_at":"2015-10-20T20:40:42.000Z","cooked":"\u003cp\u003eTrying to correctly set the VertexBuffer for the geometry of a Model created from scratch. We know how to do this in general (following for e.g. the DynamicGeometries sample), but cannot quite get it right when we want to set the color of the model vertex by vertex, e.g., so the object is red in some spots and blue in another, or whatever.\u003c/p\u003e\n\u003cp\u003eSo we are going to do\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003eSharedPtr\u0026lt;VertexBuffer\u0026gt; vb(new VertexBuffer(context));\nvb-\u0026gt;SetSize(numVertices, MASK_POSITION|MASK_NORMAL|MASK_COLOR);\nvb-\u0026gt;SetData((void*)*newVertexData);\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003ebut we need to initialize newVertexData first. I’ve reproduced the outline of how we do this below. It’s probably more complex than it really needs to be, but since we include colors we seem to need both floats and unsigned chars stored in the same object newVertexData. We would have done this with void* types but we are using Visual Studio 2012 and it seems that over there one must use char*.\u003c/p\u003e\n\u003cp\u003eThe error is we typically get either no object appearing at all, or a crazy shape. So we want to check here if our approach is on the right track because it’s hard to interpret the results we’re getting. Okay here’s that outline of what we tried:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003echar** newVertexData = (char**)malloc(numVertices * 10 * sizeof(char*));\n\nfor(int i = 0; i \u0026lt; numVertices; i++)\n{\n\tnewVertexData[10 * i + 0] = (char*)malloc(sizeof(float));\n\tnewVertexData[10 * i + 1] = (char*)malloc(sizeof(float));\n\tnewVertexData[10 * i + 2] = (char*)malloc(sizeof(float));\n\tnewVertexData[10 * i + 3] = (char*)malloc(sizeof(float));\n\tnewVertexData[10 * i + 4] = (char*)malloc(sizeof(float));\n\tnewVertexData[10 * i + 5] = (char*)malloc(sizeof(float));\n\tnewVertexData[10 * i + 6] = (char*)malloc(sizeof(unsigned char));\n\tnewVertexData[10 * i + 7] = (char*)malloc(sizeof(unsigned char));\n\tnewVertexData[10 * i + 8] = (char*)malloc(sizeof(unsigned char));\n\tnewVertexData[10 * i + 9] = (char*)malloc(sizeof(unsigned char));\n}\n\nfor(int i = 0; i \u0026lt; triCount; i++)\n{\n\n\t//v1\n\t*((float*)newVertexData[30 * i + 0]) = (float)verts[3 * faces[3 * i + 0] + 0];\n\t*((float*)newVertexData[30 * i + 1]) = (float)verts[3 * faces[3 * i + 0] + 1];\n\t*((float*)newVertexData[30 * i + 2]) = (float)verts[3 * faces[3 * i + 0] + 2];\n\t//n1\t\t  \n\t*((float*)newVertexData[30 * i + 3]) = n.x_;\n\t*((float*)newVertexData[30 * i + 4]) = n.y_;\n\t*((float*)newVertexData[30 * i + 5]) = n.z_;\n\t//c1\t\t\n\t*((unsigned char*)newVertexData[30 * i + 6]) = (unsigned char) 255;\n\t*((unsigned char*)newVertexData[30 * i + 7]) = (unsigned char) 0;\n\t*((unsigned char*)newVertexData[30 * i + 8]) = (unsigned char) 0;\n\t*((unsigned char*)newVertexData[30 * i + 9]) = (unsigned char) 255;\n\n\t//v2\n\t*((float*)newVertexData[30 * i + 10]) = (float)verts[3 * faces[3 * i + 1] + 0];\n\t*((float*)newVertexData[30 * i + 11]) = (float)verts[3 * faces[3 * i + 1] + 1];\n\t*((float*)newVertexData[30 * i + 12]) = (float)verts[3 * faces[3 * i + 1] + 2];\n\t//n2\n\t*((float*)newVertexData[30 * i + 13]) = n.x_;\n\t*((float*)newVertexData[30 * i + 14]) = n.y_;\n\t*((float*)newVertexData[30 * i + 15]) = n.z_;\n\t//c2\n\t*((unsigned char*)newVertexData[30 * i + 16]) = (unsigned char) 0;\n\t*((unsigned char*)newVertexData[30 * i + 17]) = (unsigned char) 255;\n\t*((unsigned char*)newVertexData[30 * i + 18]) = (unsigned char) 0;\n\t*((unsigned char*)newVertexData[30 * i + 19]) = (unsigned char) 255;\n\n\t//v3\n\t*((float*)newVertexData[30 * i + 20]) = (float)verts[3 * faces[3 * i + 2] + 0];\n\t*((float*)newVertexData[30 * i + 21]) = (float)verts[3 * faces[3 * i + 2] + 1];\n\t*((float*)newVertexData[30 * i + 22]) = (float)verts[3 * faces[3 * i + 2] + 2];\n\t//n3\t\t  \n\t*((float*)newVertexData[30 * i + 23]) = n.x_;\n\t*((float*)newVertexData[30 * i + 24]) = n.y_;\n\t*((float*)newVertexData[30 * i + 25]) = n.z_;\n\t//c3\n\t*((unsigned char*)newVertexData[30 * i + 26]) = (unsigned char) 0;\n\t*((unsigned char*)newVertexData[30 * i + 27]) = (unsigned char) 0;\n\t*((unsigned char*)newVertexData[30 * i + 28]) = (unsigned char) 255;\n\t*((unsigned char*)newVertexData[30 * i + 29]) = (unsigned char) 255;\n}\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThe vertex data is stored in newVertexData. For each vertex, the first 3 entries are vertex coordinates, next 3 are normal coordinates, and next 4 are for the color.\u003c/p\u003e\n\u003cp\u003eThanks for any help.\u003c/p\u003e","post_number":1,"post_type":1,"updated_at":"2017-01-02T01:07:43.288Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":119,"reads":50,"readers_count":49,"score":605.0,"yours":false,"topic_id":1438,"topic_slug":"specifying-color-on-a-per-vertex-basis","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":278,"hidden":false,"trust_level":1,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":8243,"name":"","username":"cap","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/c/e9bcb4/{size}.png","created_at":"2015-10-21T01:40:15.000Z","cooked":"\u003cp\u003eThank you very much for walking me through it. Clearly I needed it, and I learned a lot from your response.\u003c/p\u003e\n\u003cp\u003eMuch appreciated.\u003c/p\u003e","post_number":2,"post_type":1,"updated_at":"2017-01-02T01:07:43.423Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":0,"reads":46,"readers_count":45,"score":9.2,"yours":false,"topic_id":1438,"topic_slug":"specifying-color-on-a-per-vertex-basis","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":278,"hidden":false,"trust_level":1,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":16694,"name":"SteveU3D","username":"SteveU3D","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/94ad74/{size}.png","created_at":"2017-03-17T14:41:48.522Z","cooked":"\u003cp\u003eHi,\u003c/p\u003e\n\u003cp\u003eDid you manage to add color to a vertex? I try to add color on to the vertices in sample 34_DynamicGeometry with no success.\u003c/p\u003e\n\u003cp\u003eHere is the code :\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e\t\tconst unsigned numVertices = 18;\n\tint perVertex = 10;\n\n\tfloat colorFloat = 0.0f;\n\n\tfloat vertexData[] = {\n\t\t// Position             Normal\t\t\t\t\tColor\n\t\t0.0f, 0.5f, 0.0f,       0.0f, 0.0f, 0.0f,\t\t0.0f, 0.5f, 0.0f, colorFloat, //I tested a lot of things here\n\t\t0.5f, -0.5f, 0.5f,      0.0f, 0.0f, 0.0f,\t\t0.5f, -0.5f, 0.5f, colorFloat,//but no change\n\t\t0.5f, -0.5f, -0.5f,     0.0f, 0.0f, 0.0f,\t\t0.5f, -0.5f, -0.5f, colorFloat,\n\n\t\t0.0f, 0.5f, 0.0f,       0.0f, 0.0f, 0.0f,\t\t0.0f, 0.5f, 0.0f, colorFloat,\n\t\t-0.5f, -0.5f, 0.5f,     0.0f, 0.0f, 0.0f,\t\t-0.5f, -0.5f, 0.5f, colorFloat,\n\t\t0.5f, -0.5f, 0.5f,      0.0f, 0.0f, 0.0f,\t\t0.5f, -0.5f, 0.5f, colorFloat,\n\n\t\t0.0f, 0.5f, 0.0f,       0.0f, 0.0f, 0.0f,\t\t0.0f, 0.5f, 0.0f, colorFloat,\n\t\t-0.5f, -0.5f, -0.5f,    0.0f, 0.0f, 0.0f,\t\t-0.5f, -0.5f, -0.5f, colorFloat,\n\t\t-0.5f, -0.5f, 0.5f,     0.0f, 0.0f, 0.0f,\t\t-0.5f, -0.5f, 0.5f, colorFloat,\n\n\t\t0.0f, 0.5f, 0.0f,       0.0f, 0.0f, 0.0f,\t\t0.0f, 0.5f, 0.0f, colorFloat,\n\t\t0.5f, -0.5f, -0.5f,     0.0f, 0.0f, 0.0f,\t\t0.5f, -0.5f, -0.5f, colorFloat,\n\t\t-0.5f, -0.5f, -0.5f,    0.0f, 0.0f, 0.0f,\t\t-0.5f, -0.5f, -0.5f, colorFloat,\n\n\t\t0.5f, -0.5f, -0.5f,     0.0f, 0.0f, 0.0f,\t\t0.5f, -0.5f, -0.5f, colorFloat,\n\t\t0.5f, -0.5f, 0.5f,      0.0f, 0.0f, 0.0f,\t\t0.5f, -0.5f, 0.5f, colorFloat,\n\t\t-0.5f, -0.5f, 0.5f,     0.0f, 0.0f, 0.0f,\t\t-0.5f, -0.5f, 0.5f, colorFloat,\n\n\t\t0.5f, -0.5f, -0.5f,     0.0f, 0.0f, 0.0f,\t\t0.5f, -0.5f, -0.5f, colorFloat,\n\t\t-0.5f, -0.5f, 0.5f,     0.0f, 0.0f, 0.0f,\t\t-0.5f, -0.5f, 0.5f, colorFloat,\n\t\t-0.5f, -0.5f, -0.5f,    0.0f, 0.0f, 0.0f,\t\t-0.5f, -0.5f, -0.5f, colorFloat\n\t};\n\n\tconst unsigned short indexData[] = {\n\t\t0, 1, 2,\n\t\t3, 4, 5,\n\t\t6, 7, 8,\n\t\t9, 10, 11,\n\t\t12, 13, 14,\n\t\t15, 16, 17\n\t};\n\n\t// Calculate face normals now\n\tfor (unsigned i = 0; i \u0026lt; numVertices; i += 3)\n\t{\n\t\tVector3\u0026amp; v1 = *(reinterpret_cast\u0026lt;Vector3*\u0026gt;(\u0026amp;vertexData[perVertex * i]));\n\t\tVector3\u0026amp; v2 = *(reinterpret_cast\u0026lt;Vector3*\u0026gt;(\u0026amp;vertexData[perVertex * (i + 1)]));\n\t\tVector3\u0026amp; v3 = *(reinterpret_cast\u0026lt;Vector3*\u0026gt;(\u0026amp;vertexData[perVertex * (i + 2)]));\n\t\tVector3\u0026amp; n1 = *(reinterpret_cast\u0026lt;Vector3*\u0026gt;(\u0026amp;vertexData[perVertex * i + 3]));\n\t\tVector3\u0026amp; n2 = *(reinterpret_cast\u0026lt;Vector3*\u0026gt;(\u0026amp;vertexData[perVertex * (i + 1) + 3]));\n\t\tVector3\u0026amp; n3 = *(reinterpret_cast\u0026lt;Vector3*\u0026gt;(\u0026amp;vertexData[perVertex * (i + 2) + 3]));\n\n\t\tVector3 edge1 = v1 - v2;\n\t\tVector3 edge2 = v1 - v3;\n\t\tn1 = n2 = n3 = edge1.CrossProduct(edge2).Normalized();\n\t}\n\t//*/\n\n\tSharedPtr\u0026lt;Model\u0026gt; fromScratchModel(new Model(context_));\n\tSharedPtr\u0026lt;VertexBuffer\u0026gt; vb(new VertexBuffer(context_));\n\tSharedPtr\u0026lt;IndexBuffer\u0026gt; ib(new IndexBuffer(context_));\n\tSharedPtr\u0026lt;Geometry\u0026gt; geom(new Geometry(context_));\n\n\t// Shadowed buffer needed for raycasts to work, and so that data can be automatically restored on device loss\n\tvb-\u0026gt;SetShadowed(false);\n\t// We could use the \"legacy\" element bitmask to define elements for more compact code, but let's demonstrate\n\t// defining the vertex elements explicitly to allow any element types and order\n\tPODVector\u0026lt;VertexElement\u0026gt; elements;\n\telements.Push(VertexElement(TYPE_VECTOR3, SEM_POSITION));\n\telements.Push(VertexElement(TYPE_VECTOR3, SEM_NORMAL));\n\telements.Push(VertexElement(TYPE_VECTOR4, SEM_COLOR));\n\tvb-\u0026gt;SetSize(numVertices, elements);\n\tvb-\u0026gt;SetData(vertexData);\n\n\tib-\u0026gt;SetShadowed(true);\n\tib-\u0026gt;SetSize(numVertices, false);\n\tib-\u0026gt;SetData(indexData);\n\n\tgeom-\u0026gt;SetVertexBuffer(0, vb);\n\tgeom-\u0026gt;SetIndexBuffer(ib);\n\tgeom-\u0026gt;SetDrawRange(TRIANGLE_LIST, 0, numVertices);\n\n\tfromScratchModel-\u0026gt;SetNumGeometries(1);\n\tfromScratchModel-\u0026gt;SetGeometry(0, 0, geom);\n\tfromScratchModel-\u0026gt;SetBoundingBox(BoundingBox(Vector3(-0.5f, -0.5f, -0.5f), Vector3(0.5f, 0.5f, 0.5f)));\n\n\t// Though not necessary to render, the vertex \u0026amp; index buffers must be listed in the model so that it can be saved properly\n\tVector\u0026lt;SharedPtr\u0026lt;VertexBuffer\u0026gt; \u0026gt; vertexBuffers;\n\tVector\u0026lt;SharedPtr\u0026lt;IndexBuffer\u0026gt; \u0026gt; indexBuffers;\n\tvertexBuffers.Push(vb);\n\tindexBuffers.Push(ib);\n\t// Morph ranges could also be not defined. Here we simply define a zero range (no morphing) for the vertex buffer\n\tPODVector\u0026lt;unsigned\u0026gt; morphRangeStarts;\n\tPODVector\u0026lt;unsigned\u0026gt; morphRangeCounts;\n\tmorphRangeStarts.Push(0);\n\tmorphRangeCounts.Push(0);\n\tfromScratchModel-\u0026gt;SetVertexBuffers(vertexBuffers, morphRangeStarts, morphRangeCounts);\n\tfromScratchModel-\u0026gt;SetIndexBuffers(indexBuffers);\n\n\tNode* node = scene_-\u0026gt;CreateChild(\"FromScratchObject\");\n\tnode-\u0026gt;SetPosition(Vector3(0.0f, 3.0f, 0.0f));\n\tStaticModel* object = node-\u0026gt;CreateComponent\u0026lt;StaticModel\u0026gt;();\n\tobject-\u0026gt;SetModel(fromScratchModel);\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eI tested a lot of things instead of\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e0.0f, 0.5f, 0.0f, colorFloat,\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003elike unsigned char[4], as according to the documentation it has to be\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eColor (unsigned char[4], normalized)\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003ebut no change.\u003c/p\u003e\n\u003cp\u003eThanks.\u003c/p\u003e","post_number":3,"post_type":1,"updated_at":"2017-03-17T14:41:48.522Z","reply_count":1,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":1,"reads":49,"readers_count":48,"score":19.8,"yours":false,"topic_id":1438,"topic_slug":"specifying-color-on-a-per-vertex-basis","display_username":"SteveU3D","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":654,"hidden":false,"trust_level":1,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":16697,"name":"Eugene Kozlov","username":"Eugene","avatar_template":"/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png","created_at":"2017-03-17T15:22:49.914Z","cooked":"\u003cp\u003eDo you use appropriate material/techinque that draw color?\u003cbr\u003e\nWhy alpha-channel is zero?\u003c/p\u003e","post_number":4,"post_type":1,"updated_at":"2017-03-17T15:22:49.914Z","reply_count":1,"reply_to_post_number":3,"quote_count":0,"incoming_link_count":0,"reads":49,"readers_count":48,"score":14.8,"yours":false,"topic_id":1438,"topic_slug":"specifying-color-on-a-per-vertex-basis","display_username":"Eugene Kozlov","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":"Core developer","title_is_group":false,"reply_to_user":{"username":"SteveU3D","name":"SteveU3D","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/94ad74/{size}.png"},"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":484,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":16699,"name":"SteveU3D","username":"SteveU3D","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/94ad74/{size}.png","created_at":"2017-03-17T15:36:56.768Z","cooked":"\u003cp\u003eThe\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003efloat colorFloat = 0.0f;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eis a mistake. It’s equal to 1.0f.\u003c/p\u003e\n\u003cp\u003eHere is the material part :\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eSharedPtr\u0026lt;Material\u0026gt; renderMaterial(new Material(context_));\nrenderMaterial-\u0026gt;SetTechnique(0, cache-\u0026gt;GetResource\u0026lt;Technique\u0026gt;(\"Techniques/DiffVColor.xml\"));\nrenderMaterial-\u0026gt;SetDepthBias(BiasParameters(-0.001f, 0.0f));\n\nNode* node = scene_-\u0026gt;CreateChild(\"FromScratchObject\");\nnode-\u0026gt;SetPosition(Vector3(0.0f, 3.0f, 0.0f));\nStaticModel* object = node-\u0026gt;CreateComponent\u0026lt;StaticModel\u0026gt;();\nobject-\u0026gt;SetModel(fromScratchModel);\n\nobject-\u0026gt;SetMaterial(renderMaterial);\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eDo I need to add the params\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eTexcoord1 (Vector2)\nTexcoord2 (Vector2)\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003ein vertexData?\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eEDIT :\u003c/strong\u003e\u003cbr\u003e\nI have been struggling for several days now trying to add color to a vertex but still nothing unfortunately. I am completely stuck with that vertexData unsigned char or float array in which I have to put float / unsigned char values … as the documentation says :\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003ePosition (Vector3)\nNormal (Vector3)\nColor (unsigned char[4], normalized)\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThere are a lot of posts which deal about this subject but no one really helps me since the vertexData array is not explicitly in their code.\u003cbr\u003e\nSo, could someone tell me what to add in sample 34_DynamicGeometry, in vertexData, to add color to the pyramid’s vertices please?\u003c/p\u003e\n\u003cp\u003eI think that I have the good code for the rest, particularly :\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e....\nelements.Push(VertexElement(TYPE_VECTOR4, SEM_COLOR));\n...\nSharedPtr\u0026lt;Material\u0026gt; renderMaterial(new Material(context_));\nrenderMaterial-\u0026gt;SetTechnique(0, cache-\u0026gt;GetResource\u0026lt;Technique\u0026gt;(\"Techniques/NoTextureUnlitVColor.xml\"));\n....\nStaticModel* object2 = node2-\u0026gt;CreateComponent\u0026lt;StaticModel\u0026gt;();\nobject2-\u0026gt;SetModel(fromScratchModel);\nobject2-\u0026gt;SetMaterial(renderMaterial);\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThanks!\u003c/p\u003e","post_number":5,"post_type":1,"updated_at":"2017-03-28T15:13:27.653Z","reply_count":0,"reply_to_post_number":4,"quote_count":0,"incoming_link_count":33,"reads":50,"readers_count":49,"score":175.0,"yours":false,"topic_id":1438,"topic_slug":"specifying-color-on-a-per-vertex-basis","display_username":"SteveU3D","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":2,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"reply_to_user":{"username":"Eugene","name":"Eugene Kozlov","avatar_template":"/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png"},"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":654,"hidden":false,"trust_level":1,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":17049,"name":"","username":"cap","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/c/e9bcb4/{size}.png","created_at":"2017-04-06T12:12:05.522Z","cooked":"\u003cp\u003eHey all, SteveU3D and I have discussed this question a bit, and I thought I’d share some code fragments that were helpful. It’s not exactly self-documenting, but for those determined enough to do per-vertex coloring it may be helpful.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003estruct VertexData\n{\n\tVector3 position; // size of 12 bytes +\n\tVector3 normal; // size of 12 bytes +\n\tunsigned color;\n};\n\nvoid BasicArraysFromMesh(vector\u0026lt;VertexData\u0026gt;\u0026amp; vertexData, vector\u0026lt;int\u0026gt;\u0026amp; indexData, Mesh\u0026amp; mesh)\n{\n\tstd::vector\u0026lt;double\u0026gt; verts = mesh.get_vertices();\n\tstd::vector\u0026lt;int\u0026gt; faces = mesh.get_faces();\n\n\t//data for Urho - we double vertices for face normals\n\tint triCount = faces.size() / 3;\n\tint numVertices = faces.size();\n\n\t//resize containers\n\tvertexData.resize(numVertices);\n\tindexData.resize(triCount * 3);\n\n\t//draw with duplication vertices\n\tfor(int i = 0; i \u0026lt; triCount; i++)\n\t{\n\t\t//calc normal\n\t\tVector3 v1(verts[3 * faces[3 * i + 0] + 0], verts[3 * faces[3 * i + 0] + 1], verts[3 * faces[3 * i + 0] + 2]);\n\t\tVector3 v2(verts[3 * faces[3 * i + 1] + 0], verts[3 * faces[3 * i + 1] + 1], verts[3 * faces[3 * i + 1] + 2]);\n\t\tVector3 v3(verts[3 * faces[3 * i + 2] + 0], verts[3 * faces[3 * i + 2] + 1], verts[3 * faces[3 * i + 2] + 2]);\t\t\t\t\n\t\tVector3 edge1 = v1 - v2;\n\t\tVector3 edge2 = v1 - v3;\n\t\tVector3 n = edge1.CrossProduct(edge2).Normalized();\n\n\t\t//initialize with default color\n\t\tColor faceColor = Color::GRAY;\n\n\t\tVertexData vd1;\n\t\tvd1.position = v1;\n\t\tvd1.normal = n;\n\t\tvd1.color = faceColor.ToUInt();\n\n\t\tVertexData vd2;\n\t\tvd2.position = v2;\n\t\tvd2.normal = n;\n\t\tvd2.color = faceColor.ToUInt();\n\n\t\tVertexData vd3;\n\t\tvd3.position = v3;\n\t\tvd3.normal = n;\n\t\tvd3.color = faceColor.ToUInt();\n\n\t\tvertexData[3*i + 0] = vd1;\n\t\tvertexData[3*i + 1] = vd2;\n\t\tvertexData[3*i + 2] = vd3;\n\n\t\tindexData[3*i] = 3*i;\n\t\tindexData[3*i + 1] = 3*i + 1;\n\t\tindexData[3*i + 2] = 3*i + 2;\n\t}\n}\n\nint DrawMeshWithVertexColors(Mesh mesh, Matrix3x4 transform, vector\u0026lt;Color\u0026gt; colors)\n{\n\tint id = -1;\n\n\tvector\u0026lt;VertexData\u0026gt; vertexData;\n\tvector\u0026lt;int\u0026gt; indexData;\n\n\t//extract basic arrays\n\tBasicArraysFromMesh(vertexData, indexData, mesh);\n\n\t//assign the colors\n\tfor(int i = 0; i \u0026lt; vertexData.size()/3; i++)\n\t{\n\t\tColor faceCol = Color::GRAY;\n\t\tif(colors.size() \u0026gt; 0)\n\t\t\tfaceCol = colors[i % colors.size()];\n\n\t\tvertexData[3*i + 0].color = faceCol.ToUInt();\n\t\tvertexData[3*i + 1].color = faceCol.ToUInt();\n\t\tvertexData[3*i + 2].color = faceCol.ToUInt();\n\t}\n\n\t//call the lower level functions\n\tid = DrawModelFromBasicArrays(\u0026amp;vertexData[0], \n\t\tvertexData.size(), \n\t\t\u0026amp;indexData[0], \n\t\tindexData.size()/3,\n\t\ttransform,\n\t\t\"Materials/VColUnlit.xml\"); \n\n\treturn id;\n}\n\nint DrawModelFromBasicArrays(\n  VertexData* vertex_data,\n  int num_verts,\n  int* index_data,\n  int num_faces,\n  Matrix3x4 transform,\n  String material,\n  Scene* scene\n)\n{\n\t\n\t//Get the current scene from app instance\n\tif(scene == NULL)\n\t\treturn -1;\n\t\n\tContext* context = GetContext();\n\tSharedPtr\u0026lt;VertexBuffer\u0026gt; vb(new VertexBuffer(context));\n\tSharedPtr\u0026lt;IndexBuffer\u0026gt; ib(new IndexBuffer(context));\n\tSharedPtr\u0026lt;Geometry\u0026gt; geom(new Geometry(context));\n\n\t// Shadowed buffer needed for raycasts to work, and so that data can be automatically restored on device loss\n\tvb-\u0026gt;SetShadowed(true);\n\tvb-\u0026gt;SetSize(num_verts, MASK_POSITION|MASK_NORMAL|MASK_COLOR);\n\tvb-\u0026gt;SetData((void*)vertex_data);\n\n\tib-\u0026gt;SetShadowed(true);\n\tib-\u0026gt;SetSize(num_faces * 3, true);\n\tib-\u0026gt;SetData(index_data);\n\n\tgeom-\u0026gt;SetVertexBuffer(0, vb);\n\tgeom-\u0026gt;SetIndexBuffer(ib);\n\tgeom-\u0026gt;SetDrawRange(TRIANGLE_LIST, 0, num_faces * 3);\n\n\tSharedPtr\u0026lt;Model\u0026gt; fromScratchModel(new Model(context));\n\tfromScratchModel-\u0026gt;SetNumGeometries(1);\n\tfromScratchModel-\u0026gt;SetGeometry(0, 0, geom);\n\t//fromScratchModel-\u0026gt;SetGeometry(1, 0, geom);\n\n\t//calc bounding box\n\tVector\u0026lt;Vector3\u0026gt; vertices;\n\tfor(int i = 0; i \u0026lt; num_verts; i++)\n\t{\n\t\tvertices.Push(vertex_data[i].position);\n\t}\n\tfromScratchModel-\u0026gt;SetBoundingBox(BoundingBox(\u0026amp;vertices[0], vertices.Size()));\n\n\t//add to the scene\n\tResourceCache* cache = GetSubsystem\u0026lt;ResourceCache\u0026gt;();\n\tMaterial* gMat = cache -\u0026gt; GetResource\u0026lt;Material\u0026gt;(material);\n\t//Material* wMat = cache-\u0026gt;GetResource\u0026lt;Material\u0026gt;(\"Materials/BasicDiffWireframe.xml\");\n\n\tNode* new_node = scene-\u0026gt;CreateChild(\"new_obj\");\n\tStaticModel* object = new_node-\u0026gt;CreateComponent\u0026lt;StaticModel\u0026gt;();\n\tobject-\u0026gt;SetModel(fromScratchModel);\n\tif(gMat != NULL)\n\t{\n\t\tSharedPtr\u0026lt;Material\u0026gt; tmpMat = gMat -\u0026gt; Clone();\n\t\tobject-\u0026gt;SetMaterial(0,tmpMat);\n\t}\n\t//object-\u0026gt;SetMaterial(1,wMat);\n\tobject-\u0026gt;SetCastShadows(true);\n\n\t//set the transform\n\tnew_node-\u0026gt;SetTransform(transform.Translation(), transform.Rotation(), transform.Scale());\n\n\treturn new_node-\u0026gt;GetID();\n}\n\u003c/code\u003e\u003c/pre\u003e","post_number":6,"post_type":1,"updated_at":"2017-04-06T12:12:05.522Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":20,"reads":42,"readers_count":41,"score":123.4,"yours":false,"topic_id":1438,"topic_slug":"specifying-color-on-a-per-vertex-basis","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[{"id":2,"count":1}],"moderator":false,"admin":false,"staff":false,"user_id":278,"hidden":false,"trust_level":1,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":17058,"name":"Jonathan","username":"Sinoid","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/f19dbf/{size}.png","created_at":"2017-04-07T04:22:56.556Z","cooked":"\u003cp\u003eYou can make some bogus calls to VertexBuffer::GetElementOffset and print them to the log to help you with your struct layout. I’d assume though that color being 32bit was probably the big gotcha - color still catches me.\u003c/p\u003e\n\u003cp\u003e\u003cem\u003eNote:\u003c/em\u003e don’t lock any of this into your head for anything but vertex buffers, the layout rules change for both constant buffers and compute. C-side will not map nicely there as you have 1, 2, and 4 element vectors - that’s all, the constant-buffer/compute side code is just sugar defaulting to xyz instead of xyzw. You get some narly bugs mapping an array of C-side vector3’s to compute.\u003c/p\u003e","post_number":7,"post_type":1,"updated_at":"2017-04-07T04:22:56.556Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":0,"reads":39,"readers_count":38,"score":7.8,"yours":false,"topic_id":1438,"topic_slug":"specifying-color-on-a-per-vertex-basis","display_username":"Jonathan","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":669,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false}],"stream":[8241,8243,16694,16697,16699,17049,17058]},"timeline_lookup":[[1,2590],[3,2077],[6,2057],[7,2056]],"suggested_topics":[{"id":7080,"title":"Build urho3d source on windows 10 - cmake - \"Error in configuration process, project files may be invalid\"","fancy_title":"Build urho3d source on windows 10 - cmake - \u0026ldquo;Error in configuration process, project files may be invalid\u0026rdquo;","slug":"build-urho3d-source-on-windows-10-cmake-error-in-configuration-process-project-files-may-be-invalid","posts_count":8,"reply_count":4,"highest_post_number":8,"image_url":null,"created_at":"2021-12-03T01:55:53.267Z","last_posted_at":"2021-12-06T22:46:59.584Z","bumped":true,"bumped_at":"2021-12-06T22:46:59.584Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":1,"views":324,"category_id":10,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":null,"description":"Original Poster","user":{"id":1488,"username":"ToolmakerSteve","name":"ToolmakerSteve","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/t/ba9def/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":628,"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}},{"extras":"latest","description":"Most Recent Poster","user":{"id":631,"username":"JTippetts1","name":"J Tippetts","avatar_template":"/user_avatar/discourse.urho3d.io/jtippetts1/{size}/96_2.png"}}]},{"id":7177,"title":"Attaching a shader to a BorderImage","fancy_title":"Attaching a shader to a BorderImage","slug":"attaching-a-shader-to-a-borderimage","posts_count":4,"reply_count":1,"highest_post_number":4,"image_url":null,"created_at":"2022-01-31T17:49:50.734Z","last_posted_at":"2022-02-01T02:22:10.927Z","bumped":true,"bumped_at":"2022-02-01T02:22:10.927Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":0,"views":151,"category_id":10,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":null,"description":"Original Poster","user":{"id":1165,"username":"throwawayerino","name":"Actually Permanent","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/t/da6949/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":484,"username":"Eugene","name":"Eugene Kozlov","avatar_template":"/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png"}},{"extras":"latest","description":"Most Recent Poster","user":{"id":631,"username":"JTippetts1","name":"J Tippetts","avatar_template":"/user_avatar/discourse.urho3d.io/jtippetts1/{size}/96_2.png"}}]},{"id":7097,"title":"View Physics event for ConvexCast","fancy_title":"View Physics event for ConvexCast","slug":"view-physics-event-for-convexcast","posts_count":11,"reply_count":5,"highest_post_number":11,"image_url":null,"created_at":"2021-12-09T23:56:27.507Z","last_posted_at":"2021-12-12T20:20:02.788Z","bumped":true,"bumped_at":"2021-12-12T20:20:02.788Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":6,"views":206,"category_id":10,"featured_link":null,"has_accepted_answer":true,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":861,"username":"GodMan","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/g/e79b87/{size}.png"}},{"extras":null,"description":"Frequent Poster, Accepted Answer","user":{"id":192,"username":"Modanung","name":"魔大农 𝞍𝞎𝝳 現招蜍","avatar_template":"/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":628,"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}}]},{"id":7160,"title":"RayCast trouble","fancy_title":"RayCast trouble","slug":"raycast-trouble","posts_count":17,"reply_count":9,"highest_post_number":19,"image_url":null,"created_at":"2022-01-29T00:06:00.367Z","last_posted_at":"2022-01-30T00:29:39.356Z","bumped":true,"bumped_at":"2022-01-30T00:29:39.356Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":3,"views":260,"category_id":10,"featured_link":null,"has_accepted_answer":true,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster, Accepted Answer","user":{"id":861,"username":"GodMan","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/g/e79b87/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":627,"username":"George1","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/g/9e8a1a/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":628,"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":1038,"username":"dertom","name":"Thomas Trocha","avatar_template":"/user_avatar/discourse.urho3d.io/dertom/{size}/1815_2.png"}}]},{"id":7243,"title":"Android compile fails","fancy_title":"Android compile fails","slug":"android-compile-fails","posts_count":5,"reply_count":2,"highest_post_number":5,"image_url":null,"created_at":"2022-04-25T08:46:07.947Z","last_posted_at":"2022-05-06T08:22:51.592Z","bumped":true,"bumped_at":"2022-05-06T08:22:51.592Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":0,"views":181,"category_id":10,"featured_link":null,"has_accepted_answer":true,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":856,"username":"feresmu","name":null,"avatar_template":"https://avatars.discourse-cdn.com/v4/letter/f/f08c70/{size}.png"}},{"extras":null,"description":"Frequent Poster, Accepted Answer","user":{"id":4,"username":"weitjong","name":"Yao Wei Tjong","avatar_template":"/user_avatar/discourse.urho3d.io/weitjong/{size}/4_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":628,"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}}]}],"tags_descriptions":{},"id":1438,"title":"Specifying color on a per vertex basis","fancy_title":"Specifying color on a per vertex basis","posts_count":7,"created_at":"2015-10-20T20:40:42.000Z","views":838,"reply_count":2,"like_count":1,"last_posted_at":"2017-04-07T04:22:56.556Z","visible":true,"closed":false,"archived":false,"has_summary":false,"archetype":"regular","slug":"specifying-color-on-a-per-vertex-basis","category_id":10,"word_count":2396,"deleted_at":null,"user_id":278,"featured_link":null,"pinned_globally":false,"pinned_at":null,"pinned_until":null,"image_url":null,"slow_mode_seconds":0,"draft":null,"draft_key":"topic_1438","draft_sequence":null,"unpinned":null,"pinned":false,"current_post_number":1,"highest_post_number":7,"deleted_by":null,"actions_summary":[{"id":4,"count":0,"hidden":false,"can_act":false},{"id":8,"count":0,"hidden":false,"can_act":false},{"id":7,"count":0,"hidden":false,"can_act":false}],"chunk_size":20,"bookmarked":false,"bookmarks":[],"topic_timer":null,"message_bus_last_id":0,"participant_count":4,"show_read_indicator":false,"thumbnails":null,"slow_mode_enabled_until":null,"tags_disable_ads":false,"details":{"can_edit":false,"notification_level":1,"participants":[{"id":278,"username":"cap","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/c/e9bcb4/{size}.png","post_count":3,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"trust_level":1},{"id":654,"username":"SteveU3D","name":"SteveU3D","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/94ad74/{size}.png","post_count":2,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"trust_level":1},{"id":484,"username":"Eugene","name":"Eugene Kozlov","avatar_template":"/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png","post_count":1,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"trust_level":2},{"id":669,"username":"Sinoid","name":"Jonathan","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/f19dbf/{size}.png","post_count":1,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"trust_level":2}],"created_by":{"id":278,"username":"cap","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/c/e9bcb4/{size}.png"},"last_poster":{"id":669,"username":"Sinoid","name":"Jonathan","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/f19dbf/{size}.png"}}}