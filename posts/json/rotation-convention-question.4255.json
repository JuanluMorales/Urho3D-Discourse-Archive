{"post_stream":{"posts":[{"id":24573,"name":"","username":"Rolf","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/r/94ad74/{size}.png","created_at":"2018-05-23T01:54:37.613Z","cooked":"\u003cp\u003eHello,\u003c/p\u003e\n\u003cp\u003eI have a question about how Urho deals with rotation through Quaternions and Matrices. I just don’t understand it anymore after looking at it for a long time.\u003c/p\u003e\n\u003cp\u003eSo given the conventions: \u003ca href=\"https://urho3d.github.io/documentation/1.7/_conventions.html\" rel=\"nofollow noopener\"\u003ehttps://urho3d.github.io/documentation/1.7/_conventions.html\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eIt says ‘positive rotation is clockwise’. I think this means if you look from the origin in the direction of the axis.\u003c/p\u003e\n\u003cp\u003eSo I put 90 degrees on X:\u003c/p\u003e\n\u003cp\u003eUrho3D::Quaternion test;\u003cbr\u003e\ntest.FromEulerAngles(90.f, 0.f, 0.f);\u003c/p\u003e\n\u003cp\u003eNow I convert it to a Rotation matrix:\u003cbr\u003e\nUrho3D::Matrix4 test_mat = test.RotationMatrix();\u003c/p\u003e\n\u003cp\u003eNow, I want to convert a vector that’s aiming UP, so: 0, 1, 0.\u003c/p\u003e\n\u003cp\u003eUrho3D::Vector3 test_vec(0,1,0);\u003c/p\u003e\n\u003cp\u003eNow I’m gonna rotate that vector 90 degrees over the X axis. You’d expect it to be -1 on Z right? wrong, it becomes +1 on Z.\u003c/p\u003e\n\u003cp\u003eUrho3D::Vector3 result2 = test_mat * test_vec;\u003c/p\u003e\n\u003cp\u003eWhat’s happening? It makes no sense.\u003c/p\u003e\n\u003cp\u003eThanks for reading.\u003c/p\u003e\n\u003cp\u003eedit: I’ve just come to the conclusion that the convention is just lying, and it is actually following DirectX convention where rotation is negative angles (so looking from the axis towards the origin).\u003c/p\u003e\n\u003cp\u003eFurthermore, you guys should probably add in the conventions that matrices are stored in memory in column-major order. It’s specified nowhere but it’s kind of crucial to know. Also, the operator* on matrix4 class that takes vector3/vector4 are treating the vector as row-major vector, but mathematical convention is that M*v means that the vector is a column vector. Again, this crucial info is specified nowhere in your documents.\u003c/p\u003e","post_number":1,"post_type":1,"updated_at":"2018-05-23T02:56:04.253Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":135,"reads":47,"readers_count":46,"score":684.4,"yours":false,"topic_id":4255,"topic_slug":"rotation-convention-question","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":2,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"link_counts":[{"url":"https://urho3d.github.io/documentation/1.7/_conventions.html","internal":false,"reflection":false,"title":"Urho3D - Documentation - Conventions","clicks":12}],"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":984,"hidden":false,"trust_level":0,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":24575,"name":"SirNate0","username":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png","created_at":"2018-05-23T03:42:39.923Z","cooked":"\u003cp\u003eYou have a point that the direction we consider (counter)clockwise should probably be specified in the docs for additional clarity, but I’m pretty sure usual convention would be to look from the positive direction of the axis towards the origin. My understanding is usually we use a right handed coordinate system and counterclockwise angles, where if you look down at the xy plane positive goes from +x to +y (for a +90 degree angle), and in this z would be out. In any case I find it much easier to use the left-hand rules to remember how things should be. In my case (though this may deviate from normal), thumb is x, index finger is y, points up, and middle finger is z. For angles, thumb goes in the + direction along the vector, fingers curl in the positive angular direction around it.\u003c/p\u003e\n\u003cp\u003eAs to the ordering of the matrices, I may be wrong, as I don’t really work with them for what I do, but I’m pretty sure they are stored in memory in row-major ordering. Take the Matrix3x4 class - this would be a matrix with 3 rows and 4 columns, right? The elements are stored in the order (based on a quick glance at the header file) “m00_, m01_, m02_, m03_, m10_,…”, which I read as “m[row][col]_”. I’m pretty sure this would be a row-major ordering for the matrices, and thus treats the vector as a column vector like normal.\u003c/p\u003e\n\u003cp\u003eI hope that helps, and do correct me if I’m wrong!\u003c/p\u003e","post_number":2,"post_type":1,"updated_at":"2018-05-23T03:42:39.923Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":0,"reads":44,"readers_count":43,"score":8.8,"yours":false,"topic_id":4255,"topic_slug":"rotation-convention-question","display_username":"SirNate0","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":628,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":24583,"name":"","username":"Rolf","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/r/94ad74/{size}.png","created_at":"2018-05-23T12:56:45.494Z","cooked":"\u003cp\u003eHello,\u003c/p\u003e\n\u003cp\u003eThe m03, m13 and m23 of matrix4 stores the translation. In a row-major left handed system it would be m30, m31, m32. So that’s why I am saying it must be column-major. However I am confused about the rotation part.\u003c/p\u003e\n\u003cp\u003eIf I look at Quaternion::RotationMatrix() cpp file I can see that it’s storing the data like so:\u003cbr\u003e\n\u003caside class=\"onebox stackexchange\"\u003e\n  \u003cheader class=\"source\"\u003e\n      \u003ca href=\"https://math.stackexchange.com/questions/1631807/rotation-to-quaternion-matrix-handeness\" target=\"_blank\" rel=\"nofollow noopener\"\u003emath.stackexchange.com\u003c/a\u003e\n  \u003c/header\u003e\n  \u003carticle class=\"onebox-body\"\u003e\n      \u003ca href=\"https://math.stackexchange.com/users/289801/jcolafrancesco\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\n    \u003cimg alt=\"jcolafrancesco\" src=\"https://global.discourse-cdn.com/standard17/uploads/urho3d/original/2X/8/878b44cbb2072e565e665d5eace460e8177f7e20.png\" class=\"thumbnail onebox-avatar\" width=\"128\" height=\"128\"\u003e\n  \u003c/a\u003e\n\u003ch4\u003e\n  \u003ca href=\"https://math.stackexchange.com/questions/1631807/rotation-to-quaternion-matrix-handeness\" target=\"_blank\" rel=\"nofollow noopener\"\u003erotation to quaternion matrix handeness\u003c/a\u003e\n\u003c/h4\u003e\n\n\u003cdiv class=\"tags\"\u003e\n  \u003cstrong\u003ematrices, 3d, rotations, quaternions\u003c/strong\u003e\n\u003c/div\u003e\n\n\u003cdiv class=\"date\"\u003e\n  asked by\n  \n  \u003ca href=\"https://math.stackexchange.com/users/289801/jcolafrancesco\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\n    jcolafrancesco\n  \u003c/a\u003e\n  on \u003ca href=\"https://math.stackexchange.com/questions/1631807/rotation-to-quaternion-matrix-handeness\" target=\"_blank\" rel=\"nofollow noopener\"\u003e10:23AM - 29 Jan 16 UTC\u003c/a\u003e\n\u003c/div\u003e\n\n  \u003c/article\u003e\n  \u003cdiv class=\"onebox-metadata\"\u003e\n    \n    \n  \u003c/div\u003e\n  \u003cdiv style=\"clear: both\"\u003e\u003c/div\u003e\n\u003c/aside\u003e\n\u003c/p\u003e\n\u003cp\u003eSo that’s like as if the Matrix4 contains row-major rotation data but column-major translation data for a left handed system. (memory layout)\u003c/p\u003e\n\u003cp\u003eIf I look at D3DXMatrixRotationQuaternion it’s building a transposed matrix compared to the Urho3D one.\u003cbr\u003e\n\u003ca href=\"https://doxygen.reactos.org/de/d57/dll_2directx_2wine_2d3dx9__36_2math_8c_source.html\" class=\"onebox\" target=\"_blank\" rel=\"nofollow noopener\"\u003ehttps://doxygen.reactos.org/de/d57/dll_2directx_2wine_2d3dx9__36_2math_8c_source.html\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eSo I’m totally confused regarding who is right and who is wrong. Because dx says its left handed system, rowmajor. Urho says its left handed, but stores the rotation matrix transposed compared to the dx one, however according to wikipedia its the correct way for a left handed system (what the?).\u003c/p\u003e\n\u003cp\u003eFinally, I was saying that the matrix operator* acts like its a row vector because the memory layout of the matrix is column-major. So even though mathematically the operator method is treating the input like a column vector, its still computed finally as a row vector because the memory layout of the matrix is column-major (at least the translation part is). For a left handed system.\u003c/p\u003e\n\u003cp\u003eHope someone can clarify what’s going on with the rotation…\u003c/p\u003e","post_number":3,"post_type":1,"updated_at":"2018-05-23T13:01:31.937Z","reply_count":1,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":0,"reads":42,"readers_count":41,"score":13.4,"yours":false,"topic_id":4255,"topic_slug":"rotation-convention-question","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"link_counts":[{"url":"https://math.stackexchange.com/questions/1631807/rotation-to-quaternion-matrix-handeness","internal":false,"reflection":false,"title":"matrices - rotation to quaternion matrix handeness - Mathematics Stack Exchange","clicks":3},{"url":"https://doxygen.reactos.org/de/d57/dll_2directx_2wine_2d3dx9__36_2math_8c_source.html","internal":false,"reflection":false,"title":"ReactOS: dll/directx/wine/d3dx9_36/math.c Source File","clicks":1},{"url":"https://math.stackexchange.com/users/289801/jcolafrancesco","internal":false,"reflection":false,"title":"User jcolafrancesco - Mathematics Stack Exchange","clicks":0}],"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":984,"hidden":false,"trust_level":0,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":24584,"name":"Eugene Kozlov","username":"Eugene","avatar_template":"/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png","created_at":"2018-05-23T13:43:10.890Z","cooked":"\u003caside class=\"quote no-group\" data-username=\"Rolf\" data-post=\"3\" data-topic=\"4255\"\u003e\n\u003cdiv class=\"title\"\u003e\n\u003cdiv class=\"quote-controls\"\u003e\u003c/div\u003e\n\u003cimg alt=\"\" width=\"20\" height=\"20\" src=\"https://avatars.discourse-cdn.com/v4/letter/r/94ad74/40.png\" class=\"avatar\"\u003e Rolf:\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003eIn a row-major left handed system it would be m30, m31, m32. So that’s why I am saying it must be column-major\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/aside\u003e\n\u003cp\u003eMatrices layout is sometimes tricky question.\u003cbr\u003e\nThere are two different but very similar things.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eRow/column vectors\u003c/strong\u003e is the question of math.\u003cbr\u003e\nIn few words, you shoud either write \u003ccode\u003evector(x, y, z) * makeTranslation(a, b, c)\u003c/code\u003e or \u003ccode\u003emakeTranslation(a, b, c) * vector(x, y, z)\u003c/code\u003e while using some specific library. Urho has \u003cstrong\u003ecolumn vectors\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eRow/column majority\u003c/strong\u003e is the question of matrix memory layout. It has nothing to do with math, and the user of the library may be even not aware if he use row-major and column-major matrices. Urho has \u003cstrong\u003erow-major matrices\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003eFor example, there’s a formula for vector translation for \u003cstrong\u003ecolumn vectors\u003c/strong\u003e (I hope you know how this formula would look like for row vectors)\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003e[ 1, 0, 0, a ]   [x]   [x + a]\n[ 0, 1, 0, b ]   [y]   [y + b]\n[ 0, 0, 1, c ]   [z]   [z + c]\n[ 0, 0, 0, 1 ] * [1] = [  1  ]\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eNow, you could store this specific matrix as either row major\u003cbr\u003e\n\u003ccode\u003e[1, 0, 0, a; 0, 1, 0, b; 0, 0, 1, c; 0, 0, 0, 1]\u003c/code\u003e\u003cbr\u003e\nor column major\u003cbr\u003e\n\u003ccode\u003e[1, 0, 0, 0; 0, 1, 0, 0; 0, 0, 1, 0; a, b, c, 1]\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eSome people highly distingush these two conventions.\u003cbr\u003e\nOther people mix them and call matrix math with row vectors “row major” and with column vectors “column major”. This may be simpler, but isn’t really correct.\u003c/p\u003e\n\u003cp\u003eWhen you read any matrix-related docs you should be aware what exactly the author means and how he writes his formulas.\u003c/p\u003e","post_number":4,"post_type":1,"updated_at":"2018-05-23T13:43:10.890Z","reply_count":0,"reply_to_post_number":3,"quote_count":1,"incoming_link_count":0,"reads":39,"readers_count":38,"score":7.8,"yours":false,"topic_id":4255,"topic_slug":"rotation-convention-question","display_username":"Eugene Kozlov","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":"Core developer","title_is_group":false,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":484,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":24593,"name":"","username":"Rolf","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/r/94ad74/{size}.png","created_at":"2018-05-23T15:17:10.481Z","cooked":"\u003cp\u003eUrho3D stores is matrixes in memory like this:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e[1, 0, 0, a; 0, 1, 0, b; 0, 0, 1, c; 0, 0, 0, 1]\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e(abc = translation)\u003c/p\u003e\n\u003cp\u003eSo basicly transposed compared to the DirectX way (and OpenGL way also afaik).\u003c/p\u003e\n\u003cp\u003eNow, in Urho3D, the matrix4 operator* that takes a vector3 or vector4, computes correctly.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e[ 1, 0, 0, a ]   [x]   [x + a]\u003cbr\u003e\n[ 0, 1, 0, b ]   [y]   [y + b]\u003cbr\u003e\n[ 0, 0, 1, c ]   [z]   [z + c]\u003cbr\u003e\n[ 0, 0, 0, 1 ] * [1] = [  1  ]\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eIn DirectX, you can’t do\u003cbr\u003e\nv_transformed = M * v\u003c/p\u003e\n\u003cp\u003eIn DirectX, you have to do D3DXVec3TransformCoord which is basicly\u003cbr\u003e\nv_transformed = v * M\u003c/p\u003e\n\u003cp\u003eHowever, in Urho3D, you can do M * v because Urho3D stores the matrix layout in transposed way compared to DirectX (like specified above).\u003c/p\u003e\n\u003cp\u003eSo basicly\u003cbr\u003e\nUrho3D M * v == DirectX v * M\u003c/p\u003e\n\u003cp\u003eWhich is not specified anywhere in Urho3D docs. Shouldn’t it be mentioned somewhere??\u003cbr\u003e\n\u003caside class=\"onebox whitelistedgeneric\"\u003e\n  \u003cheader class=\"source\"\u003e\n      \u003ca href=\"https://urho3d.github.io/documentation/1.7/_conventions.html\" target=\"_blank\" rel=\"nofollow noopener\"\u003eUrho3D\u003c/a\u003e\n  \u003c/header\u003e\n  \u003carticle class=\"onebox-body\"\u003e\n    \n\n\u003ch3\u003e\u003ca href=\"https://urho3d.github.io/documentation/1.7/_conventions.html\" target=\"_blank\" rel=\"nofollow noopener\"\u003eConventions\u003c/a\u003e\u003c/h3\u003e\n\n\u003cp\u003eUrho3D is a free lightweight, cross-platform 2D and 3D game engine implemented in C++ and released under the MIT license. Greatly inspired by OGRE and Horde3D.\u003c/p\u003e\n\n\n  \u003c/article\u003e\n  \u003cdiv class=\"onebox-metadata\"\u003e\n    \n    \n  \u003c/div\u003e\n  \u003cdiv style=\"clear: both\"\u003e\u003c/div\u003e\n\u003c/aside\u003e\n\u003c/p\u003e\n\u003cp\u003eFinally in my opinion the conventions should also be clearly specifying that angles are measured as looking from the axis towards the origin. The Urho3D convention states “positive rotation is clockwise” which sounds like it means looking from the origin in the direction of the axis and then going clockwise, but that’s not at all how Urho3D works.\u003c/p\u003e","post_number":5,"post_type":1,"updated_at":"2018-05-23T15:21:55.697Z","reply_count":1,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":2,"reads":33,"readers_count":32,"score":21.6,"yours":false,"topic_id":4255,"topic_slug":"rotation-convention-question","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":3,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"link_counts":[{"url":"https://urho3d.github.io/documentation/1.7/_conventions.html","internal":false,"reflection":false,"title":"Urho3D - Documentation - Conventions","clicks":1}],"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":984,"hidden":false,"trust_level":0,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":24595,"name":"Eugene Kozlov","username":"Eugene","avatar_template":"/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png","created_at":"2018-05-23T16:14:37.806Z","cooked":"\u003caside class=\"quote no-group\" data-username=\"Rolf\" data-post=\"5\" data-topic=\"4255\"\u003e\n\u003cdiv class=\"title\"\u003e\n\u003cdiv class=\"quote-controls\"\u003e\u003c/div\u003e\n\u003cimg alt=\"\" width=\"20\" height=\"20\" src=\"https://avatars.discourse-cdn.com/v4/letter/r/94ad74/40.png\" class=\"avatar\"\u003e Rolf:\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003eWhich is not specified anywhere in Urho3D docs. Shouldn’t it be mentioned somewhere??\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/aside\u003e\n\u003cp\u003eThis is default math notation. Probably it’s better to be mentioned somewhere tho.\u003c/p\u003e","post_number":6,"post_type":1,"updated_at":"2018-05-23T16:14:49.739Z","reply_count":1,"reply_to_post_number":5,"quote_count":1,"incoming_link_count":0,"reads":32,"readers_count":31,"score":11.4,"yours":false,"topic_id":4255,"topic_slug":"rotation-convention-question","display_username":"Eugene Kozlov","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":"Core developer","title_is_group":false,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":484,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":24597,"name":"","username":"Rolf","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/r/94ad74/{size}.png","created_at":"2018-05-23T16:56:43.076Z","cooked":"\u003cp\u003eIn Urho3D are matrices calculated like this?\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003em_mvp = m_proj * m_view * m_world\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eor DirectX way:\u003cbr\u003e\n2. m_mvp = m_world * m_view * m_proj\u003c/p\u003e\n\u003cp\u003eI’m guessing the first way because the matrices are transposed in Urho3D compared to the DirectX way.\u003c/p\u003e\n\u003cp\u003eSo a vector is translated like this in Urho3D:\u003cbr\u003e\nv_transformed = m_proj * m_view * m_world * v\u003c/p\u003e\n\u003cp\u003eDirectX:\u003cbr\u003e\nv_transformed = v * m_world * m_view * m_proj\u003c/p\u003e\n\u003cp\u003eHowever inside hlsl shaders both use the same convention:\u003cbr\u003e\nmul(vector, matrix)\u003c/p\u003e","post_number":7,"post_type":1,"updated_at":"2018-05-23T16:56:43.076Z","reply_count":0,"reply_to_post_number":6,"quote_count":0,"incoming_link_count":0,"reads":33,"readers_count":32,"score":6.6,"yours":false,"topic_id":4255,"topic_slug":"rotation-convention-question","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"reply_to_user":{"username":"Eugene","name":"Eugene Kozlov","avatar_template":"/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png"},"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":984,"hidden":false,"trust_level":0,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false}],"stream":[24573,24575,24583,24584,24593,24595,24597]},"timeline_lookup":[[1,1645],[7,1644]],"suggested_topics":[{"id":7272,"title":"Normals causing mesh to go all over the place","fancy_title":"Normals causing mesh to go all over the place","slug":"normals-causing-mesh-to-go-all-over-the-place","posts_count":7,"reply_count":3,"highest_post_number":7,"image_url":"https://global.discourse-cdn.com/standard17/uploads/urho3d/optimized/2X/0/0a0a9a3dc40a56fb224dc7ab3b9b167551b57cb6_2_1024x863.png","created_at":"2022-05-30T22:50:15.428Z","last_posted_at":"2022-06-03T09:23:21.988Z","bumped":true,"bumped_at":"2022-06-03T09:42:18.150Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":0,"views":172,"category_id":16,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":null,"description":"Original Poster","user":{"id":1507,"username":"Kest","name":"Kest","avatar_template":"/user_avatar/discourse.urho3d.io/kest/{size}/3734_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":653,"username":"extobias","name":"tobias alarcon","avatar_template":"/user_avatar/discourse.urho3d.io/extobias/{size}/2836_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":484,"username":"Eugene","name":"Eugene Kozlov","avatar_template":"/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png"}},{"extras":"latest","description":"Most Recent Poster","user":{"id":809,"username":"elix22","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/elix22/{size}/1437_2.png"}}]},{"id":7159,"title":"Urho3D 1.8 release","fancy_title":"Urho3D 1.8 release","slug":"urho3d-1-8-release","posts_count":5,"reply_count":2,"highest_post_number":5,"image_url":null,"created_at":"2022-01-28T09:11:58.312Z","last_posted_at":"2022-08-03T12:48:01.717Z","bumped":true,"bumped_at":"2022-08-03T12:48:01.717Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":0,"views":444,"category_id":16,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":263,"username":"1vanK","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/1vank/{size}/768_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":861,"username":"GodMan","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/g/e79b87/{size}.png"}}]},{"id":7227,"title":"How to use -s MAX_WEBGL_VERSION=2","fancy_title":"How to use -s MAX_WEBGL_VERSION=2","slug":"how-to-use-s-max-webgl-version-2","posts_count":3,"reply_count":1,"highest_post_number":3,"image_url":null,"created_at":"2022-03-30T13:12:17.248Z","last_posted_at":"2022-03-30T14:09:14.646Z","bumped":true,"bumped_at":"2022-03-30T14:09:14.646Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":1,"views":103,"category_id":16,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":997,"username":"huminzheng","name":"huminzheng","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/h/9de0a6/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":628,"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}}]},{"id":7216,"title":"Why occlusion culling rasterization is implemented by software?","fancy_title":"Why occlusion culling rasterization is implemented by software?","slug":"why-occlusion-culling-rasterization-is-implemented-by-software","posts_count":4,"reply_count":2,"highest_post_number":4,"image_url":null,"created_at":"2022-03-11T11:36:18.222Z","last_posted_at":"2022-03-13T02:39:16.613Z","bumped":true,"bumped_at":"2022-03-13T02:39:16.613Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":0,"views":193,"category_id":16,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":null,"description":"Original Poster","user":{"id":1490,"username":"Sunc","name":"DoubleSuper","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/df788c/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":484,"username":"Eugene","name":"Eugene Kozlov","avatar_template":"/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png"}},{"extras":"latest","description":"Most Recent Poster","user":{"id":1358,"username":"JSandusky","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/jsandusky/{size}/3220_2.png"}}]},{"id":7285,"title":"Adding SFINAE for Container Operators","fancy_title":"Adding SFINAE for Container Operators","slug":"adding-sfinae-for-container-operators","posts_count":1,"reply_count":0,"highest_post_number":1,"image_url":null,"created_at":"2022-06-22T02:05:49.368Z","last_posted_at":"2022-06-22T02:05:49.441Z","bumped":true,"bumped_at":"2022-06-22T02:05:49.441Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":0,"views":98,"category_id":16,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest single","description":"Original Poster, Most Recent Poster","user":{"id":628,"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}}]}],"tags_descriptions":{},"id":4255,"title":"Rotation Convention question","fancy_title":"Rotation Convention question","posts_count":7,"created_at":"2018-05-23T01:54:37.514Z","views":877,"reply_count":3,"like_count":0,"last_posted_at":"2018-05-23T16:56:43.076Z","visible":true,"closed":false,"archived":false,"has_summary":false,"archetype":"regular","slug":"rotation-convention-question","category_id":16,"word_count":1391,"deleted_at":null,"user_id":984,"featured_link":null,"pinned_globally":false,"pinned_at":null,"pinned_until":null,"image_url":null,"slow_mode_seconds":0,"draft":null,"draft_key":"topic_4255","draft_sequence":null,"unpinned":null,"pinned":false,"current_post_number":1,"highest_post_number":7,"deleted_by":null,"actions_summary":[{"id":4,"count":0,"hidden":false,"can_act":false},{"id":8,"count":0,"hidden":false,"can_act":false},{"id":7,"count":0,"hidden":false,"can_act":false}],"chunk_size":20,"bookmarked":false,"bookmarks":[],"topic_timer":null,"message_bus_last_id":0,"participant_count":3,"show_read_indicator":false,"thumbnails":null,"slow_mode_enabled_until":null,"tags_disable_ads":false,"details":{"can_edit":false,"notification_level":1,"participants":[{"id":984,"username":"Rolf","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/r/94ad74/{size}.png","post_count":4,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"trust_level":0},{"id":484,"username":"Eugene","name":"Eugene Kozlov","avatar_template":"/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png","post_count":2,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"trust_level":2},{"id":628,"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png","post_count":1,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"trust_level":2}],"created_by":{"id":984,"username":"Rolf","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/r/94ad74/{size}.png"},"last_poster":{"id":984,"username":"Rolf","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/r/94ad74/{size}.png"},"links":[{"url":"https://urho3d.github.io/documentation/1.7/_conventions.html","title":"Urho3D - Documentation - Conventions","internal":false,"attachment":false,"reflection":false,"clicks":13,"user_id":984,"domain":"urho3d.github.io","root_domain":"urho3d.github.io"},{"url":"https://math.stackexchange.com/questions/1631807/rotation-to-quaternion-matrix-handeness","title":"matrices - rotation to quaternion matrix handeness - Mathematics Stack Exchange","internal":false,"attachment":false,"reflection":false,"clicks":3,"user_id":984,"domain":"math.stackexchange.com","root_domain":"stackexchange.com"},{"url":"https://doxygen.reactos.org/de/d57/dll_2directx_2wine_2d3dx9__36_2math_8c_source.html","title":"ReactOS: dll/directx/wine/d3dx9_36/math.c Source File","internal":false,"attachment":false,"reflection":false,"clicks":1,"user_id":984,"domain":"doxygen.reactos.org","root_domain":"reactos.org"}]}}