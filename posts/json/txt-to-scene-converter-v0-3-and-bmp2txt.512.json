{"post_stream":{"posts":[{"id":2818,"name":"","username":"lexx","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/l/df705f/{size}.png","created_at":"2014-10-30T16:58:12.000Z","cooked":"\u003cp\u003eI made a little converter which converts .txt map file to urho3d scene .xml file.\u003c/p\u003e\n\u003cp\u003etxt2scene compiled .exe and sourcecodes: \u003ca href=\"https://www.dropbox.com/s/wn0uqkr0ry2xe05/txt2scene_src.7z?dl=0\" rel=\"nofollow noopener\"\u003edropbox.com/s/wn0uqkr0ry2xe … rc.7z?dl=0\u003c/a\u003e\u003cbr\u003e\nbmp2txt compiled .exe and sourcecodes:  \u003ca href=\"https://www.dropbox.com/s/fieybrfh62bg5qs/bmp2txt.7z?dl=0\" rel=\"nofollow noopener\"\u003edropbox.com/s/fieybrfh62bg5 … xt.7z?dl=0\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e.txt map fileformat:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003e# test map file\n\nmapSize: 15 7\nblockSize: 1 1\nmodel: 0 empty\nmodel: 1 Plane\nmodel: 2 Pyramid 0.2 4.0 0.2\nmodel: 3 Sphere  0.5 0.5 0.5\nmodel: 5 Box     1.0 2.0 1.0\nmodel: x Torus\n\n:floor\n111111111111111\n111111111111111\n111111111111111\n111111111111111\n111111111111111\n111111111111111\n111111111111111\n\n:wall\n555555555555555\n520002520000025\n500000500333005\n500x00500333005\n500000000000005\n52x3x252003x025\n555555555555555\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e(I succesfully loaded above map (converted with txt2scene) to urho3d editor, no materials though)\u003c/p\u003e\n\u003cp\u003emodel names are filenames without extension, ie\u003cbr\u003e\nmodel: 3 Sphere    is     Models/Sphere.mdl\u003c/p\u003e\n\u003cp\u003eOne can setup scale values to models ie\u003cbr\u003e\nmodel: 3 Sphere  \u003cspan class=\"bbcode-b\"\u003e0.5 0.5 0.5\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003emodel: 0 empty  \u0026lt;-- when empty, converter doesnt create node\u003c/p\u003e\n\u003cp\u003e:layerName      \u0026lt;-- one can create multiple layers\u003c/p\u003e\n\u003cp\u003eUsage:      txt2scene  myskene.txt  out.xml\u003cbr\u003e\ntxt2scene     – binary\u003cbr\u003e\nmyskene.txt – map file descripted before\u003cbr\u003e\nout.xml        – urho3d scene, one can load this in editor\u003c/p\u003e\n\u003cp\u003eTODO:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ebetter material handling? now it uses same material name as model name (ie  Sphere.mdl uses Sphere.xml material)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eADDED:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003enode names\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003etxt2scene.cpp :\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003e/*\ntxt2scene\nby mjt, 2014\n\nConverts .txt map file to urho3d scene .xml file.\n\n*/\n#define _CRT_SECURE_NO_WARNINGS\n\n#include \u0026lt;stdio.h\u0026gt;\n#include \u0026lt;string.h\u0026gt;\n#include \u0026lt;string\u0026gt;\nusing namespace std;\n\nclass ModelInfo\n{\npublic:\n\tchar name[100];\n\tchar ch;\n\tfloat xs, ys, zs;\n};\nModelInfo modelInfo[1000];\n\nvoid main(int argc, char **argv)\n{\n\tif(argc\u0026lt;3)\n\t{\n\t\tprintf(\"txt2scene by mjt, 2014\\n\");\n\t\tprintf(\"Usage:\\n %s  txtMapFileName  outputSceneFileName\\n\", argv[0]);\n\t\treturn;\n\t}\n\n\t// open txt map file\n\tFILE *in=fopen(argv[1], \"r\");\n\tif(!in)\n\t{\n\t\tprintf(\"Cannot open %s\\n\", argv[1]);\n\t\treturn;\n\t}\n\n#define MAX 1000\n\tchar line[MAX];\n\tchar mapName[MAX];\n\tint modelCounter=0;\n\tint width=0, height=0, blockWidth=0, blockHeight=0;\n\tfloat curX=0, curZ=0;\n\tstring data=\n\t\t\"\u0026lt;?xml version=\\\"1.0\\\"?\u0026gt;\\n\" \\\n\t\t\"\u0026lt;scene id=\\\"1\\\"\u0026gt;\\n\" \\\n\t\t\"   \u0026lt;attribute name=\\\"Name\\\" value=\\\"\\\" /\u0026gt;\\n\" \\\n\t\t\"   \u0026lt;attribute name=\\\"Time Scale\\\" value=\\\"1\\\" /\u0026gt;\\n\" \\\n\t\t\"   \u0026lt;attribute name=\\\"Smoothing Constant\\\" value=\\\"50\\\" /\u0026gt;\\n\" \\\n\t\t\"   \u0026lt;attribute name=\\\"Snap Threshold\\\" value=\\\"5\\\" /\u0026gt;\\n\" \\\n/*\t\t\"   \u0026lt;attribute name=\\\"Elapsed Time\\\" value=\\\"7.3882\\\" /\u0026gt;\\n\" \\\n\t\t\"   \u0026lt;attribute name=\\\"Next Replicated Node ID\\\" value=\\\"15\\\" /\u0026gt;\\n\" \\\n\t\t\"   \u0026lt;attribute name=\\\"Next Replicated Component ID\\\" value=\\\"24\\\" /\u0026gt;\\n\" \\\n\t\t\"   \u0026lt;attribute name=\\\"Next Local Node ID\\\" value=\\\"16777222\\\" /\u0026gt;\\n\" \\\n\t\t\"   \u0026lt;attribute name=\\\"Next Local Component ID\\\" value=\\\"16777217\\\" /\u0026gt;\\n\" \\  \n\t\t\"   \u0026lt;attribute name=\\\"Variables\\\" /\u0026gt;\\n\" \\\n\t\t\"   \u0026lt;attribute name=\\\"Variable Names\\\" value=\\\"\\\" /\u0026gt;\\n\" \\  */\n\t\t\"   \u0026lt;component type=\\\"Octree\\\" id=\\\"1\\\" /\u0026gt;\\n\" \\\n\t\t\"   \u0026lt;component type=\\\"DebugRenderer\\\" id=\\\"2\\\" /\u0026gt;\\n\";\n\n\n\tmapName[0]=0;\n\tint nodeID=1, compID=1;\n\n\twhile(1)\n\t{\n\t\tif(fgets(line, MAX, in)==0)\n\t\t\tbreak;\n\t\tif(line[0]==0) \n\t\t\tbreak;\n\n\t\tif(line[0]=='\\n')\n\t\t\tcontinue;\n\t\tif(line[0]=='#') // comment\n\t\t\tcontinue;\n\n\t\t// map size\n\t\tif(memcmp(line, \"mapSize:\", 8)==0)\n\t\t{\n\t\t\tsscanf(line, \"mapSize: %d %d\", \u0026amp;width, \u0026amp;height);\n\t\t\tprintf(\"mapSize: %d %d\\n\", width, height);\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tif(memcmp(line, \"blockSize:\", 10)==0)\n\t\t{\n\t\t\tsscanf(line, \"blockSize: %d %d\", \u0026amp;blockWidth, \u0026amp;blockHeight);\n\t\t\tprintf(\"blockSize: %d %d\\n\", blockWidth, blockHeight);\n\n\t\t\tcontinue;\n\t\t}\n\n\t\t// model name\n\t\tif(memcmp(line, \"model:\", 6)==0)\n\t\t{\n\t\t\tfloat xs=1, ys=1, zs=1;\n\t\t\tsscanf(line, \"model: %c %s %f %f %f\", \n\t\t\t\t\u0026amp;modelInfo[modelCounter].ch, modelInfo[modelCounter].name, \u0026amp;xs, \u0026amp;ys, \u0026amp;zs);\n\n\t\t\tmodelInfo[modelCounter].xs=xs;\n\t\t\tmodelInfo[modelCounter].ys=ys;\n\t\t\tmodelInfo[modelCounter].zs=zs;\n\t\t\tprintf(\"model: %c = %s  (%8.2f, %8.2f, %8.2f)\\n\", \n\t\t\t\tmodelInfo[modelCounter].ch, modelInfo[modelCounter].name, xs, ys, zs);\n\t\t\n\t\t\tmodelCounter++;\n\n\t\t\tcontinue;\n\t\t}\n\n\t\t// map name (ie floor, walls, furnitures)\n\t\tif(line[0]==':')\n\t\t{\n\t\t\tif(mapName[0]!=0)\n\t\t\t\tdata+=\"   \u0026lt;/node\u0026gt;\\n\";\n\n\t\t\tsscanf(line, \":%s\\n\", mapName);\n\t\t\tprintf(\"name: %s\\n\", mapName);\n\n\t\t\tcurX= -((float)width * (float)blockWidth)/2;\n\t\t\tcurZ= -((float)height * (float)blockHeight)/2;\n\n\t\t\tchar temp[100];\n\t\t\tsprintf(temp, \"   \u0026lt;node id=\\\"%d\\\"\u0026gt;\\n\", nodeID++);\n\t\t\tdata+=temp;\n\n\t\t\tsprintf(temp, \"   \u0026lt;attribute name=\\\"Name\\\" value=\\\"%s\\\" /\u0026gt;\\n\", mapName);\n\t\t\tdata+=temp;\n\n\t\t\tcontinue;\n\t\t}\n\n\t\t// parse map data\n\t\tfor(int w=0; w\u0026lt;width; w++)\n\t\t{\n\t\t\tchar *modelName=\"\";\n\t\t\tfloat sx=1, sy=1, sz=1;\n\t\t\tfor(int c=0; c\u0026lt;modelCounter; c++)\n\t\t\t{\n\t\t\t\tif(modelInfo[c].ch == line[w])\n\t\t\t\t{\n\t\t\t\t\tmodelName = modelInfo[c].name;\n\t\t\t\t\tsx=modelInfo[c].xs;\n\t\t\t\t\tsy=modelInfo[c].ys;\n\t\t\t\t\tsz=modelInfo[c].zs;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// dont add empty nodes\n\t\t\tif(memcmp(modelName, \"empty\", 5)==0)\n\t\t\t{\n\t\t\t\tcurX += (float)blockWidth;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tchar dta[10000];\n\t\t\tsprintf(dta, \n\t\t\t\t\"      \u0026lt;node id=\\\"%d\\\"\u0026gt;\\n\" \\\n\t\t\t\t\"         \u0026lt;attribute name=\\\"Is Enabled\\\" value=\\\"true\\\" /\u0026gt;\\n\" \\\n\t\t\t\t\"         \u0026lt;attribute name=\\\"Name\\\" value=\\\"%s\\\" /\u0026gt;\\n\" \\\n\t\t\t\t\"         \u0026lt;attribute name=\\\"Position\\\" value=\\\"%8.2f %8.2f %8.2f\\\" /\u0026gt;\\n\" \\\n\t\t\t\t\"         \u0026lt;attribute name=\\\"Rotation\\\" value=\\\"1 0 0 0\\\" /\u0026gt;\\n\" \\\n\t\t\t\t\"         \u0026lt;attribute name=\\\"Scale\\\" value=\\\"%8.2f %8.2f %8.2f\\\" /\u0026gt;\\n\" \\\n\t\t\t\t\"         \u0026lt;component type=\\\"StaticModel\\\" id=\\\"%d\\\"\u0026gt;\\n\" \\\n\t\t\t\t\"            \u0026lt;attribute name=\\\"Model\\\" value=\\\"Model;Models/%s.mdl\\\" /\u0026gt;\\n\" \\\n\t\t\t\t\"            \u0026lt;attribute name=\\\"Material\\\" value=\\\"Material;Materials/%s.xml;\\\" /\u0026gt;\\n\" \\\n\t\t\t\t\"         \u0026lt;/component\u0026gt;\\n\" \\\n\t\t\t\t\"      \u0026lt;/node\u0026gt;\\n\",\n\t\t\t\t\tnodeID,\n\t\t\t\t\tmodelName,\n\t\t\t\t\tcurX, 0.f, curZ,\n\t\t\t\t\tsx, sy, sz,\n\t\t\t\t\tcompID,\n\t\t\t\t\tmodelName,\n\t\t\t\t\tmodelName // material name\n\t\t\t\t\t);\n\n\t\t\tdata = data + dta;\n\n\t\t\tnodeID++;\n\t\t\tcompID++;\n\n\t\t\tcurX += (float)blockWidth;\n\t\t}\n\n\t\tcurX = -((float)width * (float)blockWidth)/2;\n\t\tcurZ += (float)blockHeight;\n\t}\n\n\tfclose(in);\n\n\tdata+= \"   \u0026lt;/node\u0026gt;\\n\";\n\tdata+= \"\u0026lt;/scene\u0026gt;\\n\";\n\n\t// open output file\n\tFILE *out=fopen(argv[2], \"w\");\n\tif(!out)\n\t{\n\t\tprintf(\"Cannot create %s\\n\", argv[1]);\n\t\treturn;\n\t}\n\tfputs(data.c_str(), out);\n\tfclose(out);\n\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e\u003cspan class=\"bbcode-b\"\u003eNOTES:\u003c/span\u003e\u003cbr\u003e\nMaking txt maps can be slow so \u003ca href=\"http://eggdrop.ch/projects/bmp2txt/index_en.htm\" rel=\"nofollow noopener\"\u003eeggdrop.ch/projects/bmp2txt/index_en.htm\u003c/a\u003e\u003cbr\u003e\nprogram what I just found (not made by me) converts 24-bit .bmp -\u0026gt; text, so making maps with Paint\u003cbr\u003e\nis possible (might need some modifications if using lots of different colors(objects)).\u003cbr\u003e\n\u003cspan class=\"bbcode-b\"\u003eEDIT:\u003c/span\u003e modified bmp2txt.cpp (can take 3 parameter, input_24bit.bmp output_mapfile.txt  first_letter(which to use when creating .txt))\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003e/* bmp2txt v0.1 Copyright (C) 2003 tomasliq \u0026lt;tom@eggdrop.ch\u0026gt;\n * \n * A very simple bmp to text converter\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 2 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n */\n// modified by mjt\n\n#include \u0026lt;stdio.h\u0026gt;\n#include \u0026lt;stdlib.h\u0026gt;\n\nint main(int argc, char *argv[])\n{\n\tFILE *file;\n\tunsigned short int filetype;\n\tlong int offbits;\n\tint width, height;\n\tshort int planes;\n\tshort int bits;\n\tunsigned char *data, *linebuf;\n\tlong size;\n\tchar *outFileName=\"out.txt\";\n\tchar firstLetter='a';\n\n\tif (argc \u0026lt; 2)\n\t{\n\t\tprintf(\"Usage: %s \u0026lt;bitmap\u0026gt;  (outFileName) (firstLetter) \\n\", argv[0]);\n\t\texit(1);\n\t}\n\tif(argc\u0026gt;=3)\n\t\toutFileName=argv[2];\n\n\tif(argc\u0026gt;=4)\n\t\tfirstLetter=argv[3][0];\n\n\n\tif ((file = fopen(argv[1], \"rb\")) == NULL)\n\t{\n\t\tprintf(\"Error: Can not open file %s for reading\\n\", argv[1]);\n\t\texit(1);\n\t}\n\n\tif (!fread(\u0026amp;filetype, sizeof(short int), 1, file))\n\t{\n\t\tprintf(\"Error: Cannot read filetype\\n\");\n\t\texit(1);\n\t}\n\n\tif (filetype != 19778)\n\t{\n\t\tprintf(\"Error: This is not a bitmap file\\n\");\n\t\texit(1);\n\t}\n\t\n\tfseek(file, 8, SEEK_CUR);\n\n\tif (!fread(\u0026amp;offbits, sizeof(long int), 1, file))\n\t{\n\t\tprintf(\"Error: Cannot read offset\\n\");\n\t\texit(1);\n\t}\n\n\tfseek(file, 4, SEEK_CUR);\n\n\tfread(\u0026amp;width, sizeof(int), 1, file);\n\tfread(\u0026amp;height, sizeof(int), 1, file);\n\t\n\tfread(\u0026amp;planes, sizeof(short int), 1, file);\n\t\n\tif (planes != 1)\n\t{\n\t\tprintf(\"Error: Number of planes must be 1\\n\");\n\t\texit(1);\n\t}\n\n\tif (!fread(\u0026amp;bits, sizeof(short int), 1, file))\n\t{\n\t\tprintf(\"Error: Cannot read bits\\n\");\n\t}\n\n\tif (bits != 24)\n\t{\n\t\tprintf(\"Error: Number of bits per pixel must be 24\\n\");\n\t\texit(1);\n\t}\n\n\tsize = width*height*3;\n\n\tlinebuf = (unsigned char *)malloc(width*3);\n\t\n\tif ((data = (unsigned char *)malloc(size)) == NULL)\n\t{\n\t\tprintf(\"Error: Cannot allocate memory\\n\");\n\t\texit(1);\n\t}\n\n\t\n\tfseek(file, offbits, SEEK_SET);\n\t\n\tif (!fread(data, size, 1, file))\n\t{\n\t\tprintf(\"Error: Cannot read bitmap data\\n\");\n\t\texit(1);\n\t}\n\n\tfclose(file);\n\n\tFILE *out = fopen(outFileName, \"w\");\n\tif(!out)\n\t{\n\t\tprintf(\"Error: Can not open file %s for writing\\n\", argv[1]);\n\t\texit(1);\n\t}\n\n\tint difcols=1;\n\tlong ch[1000];   // different characters\n\tlong cols[1000]; // different colors\n\tcols[0]=cols[1]=cols[2]=0;\n\tch[0]=' ';\n\n\t// convert colors to characters\n\tint x,y;\n\tfor (y=(height-1)*3; y\u0026gt;0; y-=3)\n\t{\n\t\tfor (x=0; x\u0026lt;width*3; x+=3)\n\t\t{\n\t\t\tlong pos=y*width + x;\n\t\t\tlong c = (data[pos]\u0026lt;\u0026lt;16) + (data[pos+1]\u0026lt;\u0026lt;8) + data[pos+2];\n\n\n\t\t\tint cc=0;\n\t\t\tchar found=0;\n\t\t\t// check color\n\t\t\tfor(cc=0; cc\u0026lt;difcols; cc++)\n\t\t\t{\n\t\t\t\tif(cols[cc]==c)\n\t\t\t\t{\n\t\t\t\t\tfound=1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(found)\n\t\t\t{\n\t\t\t\tfprintf(out, \"%c\", ch[cc]);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tch[difcols]=firstLetter + (difcols-1);\n\t\t\t\tcols[difcols]=c;\n\n\t\t\t\tfprintf(out, \"%c\", ch[difcols]);\n\t\t\t\tdifcols++;\n\t\t\t}\n\n\t\t}\n\t\tfprintf(out, \"\\n\");\n\t}\n\tfree(data);\n\tfclose(out);\n\n\treturn 0;\n}\u003c/code\u003e\u003c/pre\u003e","post_number":1,"post_type":1,"updated_at":"2017-01-02T01:01:00.107Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":7,"reads":2,"readers_count":1,"score":35.4,"yours":false,"topic_id":512,"topic_slug":"txt-to-scene-converter-v0-3-and-bmp2txt","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"link_counts":[{"url":"https://www.dropbox.com/s/wn0uqkr0ry2xe05/txt2scene_src.7z?dl=0","internal":false,"reflection":false,"title":"Dropbox - Link not found","clicks":1},{"url":"https://www.dropbox.com/s/fieybrfh62bg5qs/bmp2txt.7z?dl=0","internal":false,"reflection":false,"title":"Dropbox - Link not found","clicks":1},{"url":"http://eggdrop.ch/projects/bmp2txt/index_en.htm","internal":false,"reflection":false,"title":"bmp2txt","clicks":0}],"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":45,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false}],"stream":[2818]},"timeline_lookup":[[1,2946]],"suggested_topics":[{"id":7103,"title":":test_tube: DebugRenderer as GUI","fancy_title":":test_tube: DebugRenderer as GUI","slug":"debugrenderer-as-gui","posts_count":4,"reply_count":1,"highest_post_number":4,"image_url":null,"created_at":"2021-12-17T02:25:06.606Z","last_posted_at":"2021-12-18T01:09:27.738Z","bumped":true,"bumped_at":"2021-12-18T01:09:27.738Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"unicode_title":"🧪 DebugRenderer as GUI","tags_descriptions":{},"like_count":4,"views":267,"category_id":13,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":192,"username":"Modanung","name":"魔大农 𝞍𝞎𝝳 現招蜍","avatar_template":"/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":861,"username":"GodMan","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/g/e79b87/{size}.png"}}]},{"id":7110,"title":"Resource fetch define","fancy_title":"Resource fetch define","slug":"resource-fetch-define","posts_count":2,"reply_count":0,"highest_post_number":2,"image_url":null,"created_at":"2021-12-27T12:28:55.126Z","last_posted_at":"2021-12-27T17:00:37.699Z","bumped":true,"bumped_at":"2021-12-27T17:00:37.699Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":7,"views":184,"category_id":13,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":null,"description":"Original Poster","user":{"id":192,"username":"Modanung","name":"魔大农 𝞍𝞎𝝳 現招蜍","avatar_template":"/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png"}},{"extras":"latest","description":"Most Recent Poster","user":{"id":1304,"username":"lebrewer","name":"lebrewer","avatar_template":"/user_avatar/discourse.urho3d.io/lebrewer/{size}/2811_2.png"}}]},{"id":7120,"title":"Log Error Once Macro","fancy_title":"Log Error Once Macro","slug":"log-error-once-macro","posts_count":1,"reply_count":0,"highest_post_number":1,"image_url":null,"created_at":"2022-01-04T02:24:37.857Z","last_posted_at":"2022-01-04T02:24:37.925Z","bumped":true,"bumped_at":"2022-01-04T02:24:37.925Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":3,"views":143,"category_id":13,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest single","description":"Original Poster, Most Recent Poster","user":{"id":628,"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}}]},{"id":7099,"title":":fallen_leaf: Polynomials \u0026 Harmonics","fancy_title":":fallen_leaf: Polynomials \u0026amp; Harmonics","slug":"polynomials-harmonics","posts_count":6,"reply_count":0,"highest_post_number":7,"image_url":null,"created_at":"2021-12-13T05:06:04.641Z","last_posted_at":"2021-12-27T23:27:39.489Z","bumped":true,"bumped_at":"2021-12-27T23:27:39.489Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"unicode_title":"🍂 Polynomials \u0026 Harmonics","tags_descriptions":{},"like_count":6,"views":392,"category_id":13,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest single","description":"Original Poster, Most Recent Poster","user":{"id":192,"username":"Modanung","name":"魔大农 𝞍𝞎𝝳 現招蜍","avatar_template":"/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png"}}]},{"id":7332,"title":"Action RPG Game with Urho3D and Entt","fancy_title":"Action RPG Game with Urho3D and Entt","slug":"action-rpg-game-with-urho3d-and-entt","posts_count":1,"reply_count":0,"highest_post_number":1,"image_url":null,"created_at":"2022-09-25T04:07:40.447Z","last_posted_at":"2022-09-25T04:07:40.526Z","bumped":true,"bumped_at":"2022-09-25T04:07:40.526Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":1,"views":220,"category_id":12,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest single","description":"Original Poster, Most Recent Poster","user":{"id":789,"username":"codewalkerdan","name":"Codewalkerdan","avatar_template":"/user_avatar/discourse.urho3d.io/codewalkerdan/{size}/675_2.png"}}]}],"tags_descriptions":{},"id":512,"title":".txt to scene converter (v0.3) and bmp2txt","fancy_title":".txt to scene converter (v0.3) and bmp2txt","posts_count":1,"created_at":"2014-10-30T16:58:12.000Z","views":241,"reply_count":0,"like_count":0,"last_posted_at":"2014-10-30T16:58:12.000Z","visible":true,"closed":false,"archived":false,"has_summary":false,"archetype":"regular","slug":"txt-to-scene-converter-v0-3-and-bmp2txt","category_id":13,"word_count":1470,"deleted_at":null,"user_id":45,"featured_link":null,"pinned_globally":false,"pinned_at":null,"pinned_until":null,"image_url":null,"slow_mode_seconds":0,"draft":null,"draft_key":"topic_512","draft_sequence":null,"unpinned":null,"pinned":false,"current_post_number":1,"highest_post_number":1,"deleted_by":null,"actions_summary":[{"id":4,"count":0,"hidden":false,"can_act":false},{"id":8,"count":0,"hidden":false,"can_act":false},{"id":7,"count":0,"hidden":false,"can_act":false}],"chunk_size":20,"bookmarked":false,"bookmarks":[],"topic_timer":null,"message_bus_last_id":0,"participant_count":1,"show_read_indicator":false,"thumbnails":null,"slow_mode_enabled_until":null,"tags_disable_ads":false,"details":{"can_edit":false,"notification_level":1,"participants":[{"id":45,"username":"lexx","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/l/df705f/{size}.png","post_count":1,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"trust_level":2}],"created_by":{"id":45,"username":"lexx","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/l/df705f/{size}.png"},"last_poster":{"id":45,"username":"lexx","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/l/df705f/{size}.png"},"links":[{"url":"https://www.dropbox.com/s/fieybrfh62bg5qs/bmp2txt.7z?dl=0","title":"Dropbox - Link not found","internal":false,"attachment":false,"reflection":false,"clicks":1,"user_id":45,"domain":"www.dropbox.com","root_domain":"dropbox.com"},{"url":"https://www.dropbox.com/s/wn0uqkr0ry2xe05/txt2scene_src.7z?dl=0","title":"Dropbox - Link not found","internal":false,"attachment":false,"reflection":false,"clicks":1,"user_id":45,"domain":"www.dropbox.com","root_domain":"dropbox.com"}]}}