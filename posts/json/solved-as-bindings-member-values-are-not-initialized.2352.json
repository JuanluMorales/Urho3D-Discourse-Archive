{"post_stream":{"posts":[{"id":14189,"name":"","username":"itisscan","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/i/f14d63/{size}.png","created_at":"2016-10-22T11:50:00.000Z","cooked":"\u003cp\u003eA couple of days I try to understand why It does not to work. So i have class two simple classes : PlanetInfo and StarSystem, which i want to use in AS scripts.\u003c/p\u003e\n\u003cp\u003e\u003cspan class=\"bbcode-b\"\u003eThere is PlanetInfo class declaration.\u003c/span\u003e\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003eclass PlanetInfo \n{\npublic:\n\tPlanetInfo();\n\tPlanetInfo(const PlanetInfo\u0026amp; info);\n\t~PlanetInfo() { }\n\tPlanetInfo operator=(const PlanetInfo\u0026amp; info) { return PlanetInfo(info); }\n\n\tbool Initialize(const XMLElement\u0026amp; planetNode);\n\n\tstatic void RegisterScript(asIScriptEngine* engine);\nprivate:\n\tint m_Id;\n\tfloat m_DistanceFromPrimaryStar;\n\tfloat m_Mass;\n}\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e\u003cspan class=\"bbcode-b\"\u003eThere is PlanetInfo class implementation:\u003c/span\u003e\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003ePlanetInfo::PlanetInfo() :\n\tm_DistanceFromPrimaryStar(0.0f),\n\tm_Mass(0.0f)\n{ }\n\nPlanetInfo::PlanetInfo(const PlanetInfo\u0026amp; info) :\n\tm_DistanceFromPrimaryStar(info.m_DistanceFromPrimaryStar),\n\tm_Mass(info.m_Mass)\n{ }\n\nbool PlanetInfo::Initialize(const XMLElement\u0026amp; planetNode)\n{\n\tm_DistanceFromPrimaryStar = planetCharacteristics.GetFloat(\"DistanceFPS\");\n\tm_Mass = planetCharacteristics.GetFloat(\"Mass\");\n\treturn true;\n}\n\nvoid PlanetInfo::RegisterScript(asIScriptEngine* engine)\n{\n\tengine-\u0026gt;RegisterObjectType(\"PlanetInfo\", sizeof(PlanetInfo), asOBJ_VALUE | asOBJ_APP_CLASS_CDAK);\n\tengine-\u0026gt;RegisterObjectBehaviour(\"PlanetInfo\", asBEHAVE_CONSTRUCT, \"void f()\", asFUNCTION(ConstructPlanetInfo), asCALL_CDECL_OBJLAST);\n\tengine-\u0026gt;RegisterObjectBehaviour(\"PlanetInfo\", asBEHAVE_CONSTRUCT, \"void f(const PlanetInfo\u0026amp;in)\", asFUNCTION(ConstructPlanetInfoCopy), asCALL_CDECL_OBJLAST);\n\tengine-\u0026gt;RegisterObjectBehaviour(\"PlanetInfo\", asBEHAVE_DESTRUCT, \"void f()\", asFUNCTION(DestructPlanetInfo), asCALL_CDECL_OBJLAST);\n\tengine-\u0026gt;RegisterObjectMethod(\"PlanetInfo\", \"PlanetInfo opAssign(const PlanetInfo\u0026amp;in)\", asMETHODPR(PlanetInfo, operator =, (const PlanetInfo\u0026amp;), PlanetInfo), asCALL_THISCALL);\n\tengine-\u0026gt;RegisterObjectProperty(\"PlanetInfo\", \"int id\", offsetof(PlanetInfo, m_Id));\n\tengine-\u0026gt;RegisterObjectProperty(\"PlanetInfo\", \"float m_DistanceFromPrimaryStar\", offsetof(PlanetInfo, m_DistanceFromPrimaryStar));\n\tengine-\u0026gt;RegisterObjectProperty(\"PlanetInfo\", \"float m_Mass\", offsetof(PlanetInfo, m_Mass));\n}\n\nstatic void ConstructPlanetInfo(PlanetInfo* ptr)\n{\n\tnew(ptr) PlanetInfo();\n}\n\nstatic void DestructPlanetInfo(PlanetInfo* ptr)\n{\n\tptr-\u0026gt;~PlanetInfo();\n}\n\nstatic void ConstructPlanetInfoCopy(const PlanetInfo\u0026amp; planetInfo, PlanetInfo* ptr)\n{\n\tnew(ptr)PlanetInfo(planetInfo);\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e\u003cspan class=\"bbcode-b\"\u003eThere is StarSystem class declaration.\u003c/span\u003e\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003eclass StarSystem : public Serializable\n{\n\tURHO3D_OBJECT(StarSystem, Serializable)\n\npublic:\n\tStarSystem(Context* context);\n\t~StarSystem();\n\tvirtual bool LoadXML(const XMLElement\u0026amp; source, bool setInstanceDefault = false);\n\n\tconst Vector\u0026lt;PlanetInfo\u0026gt;\u0026amp; GetPlanets() const { return m_Planets; }\n\n\tstatic void RegisterScript(asIScriptEngine* engine);\nprivate:\n\tVector\u0026lt;PlanetInfo\u0026gt; m_Planets;\n};\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e\u003cspan class=\"bbcode-b\"\u003eThere is StarSystem class implementation.\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e[code]StarSystem::StarSystem(Context* context) : Serializable(context)\u003cbr\u003e\n{\u003cbr\u003e\nScript* pScriptSystem = GetSubsystem();\u003cbr\u003e\nif (pScriptSystem)\u003cbr\u003e\n{\u003cbr\u003e\nRegisterScript(pScriptSystem-\u0026gt;GetScriptEngine());\u003cbr\u003e\n}\u003cbr\u003e\n}\u003c/p\u003e\n\u003cp\u003eStarSystem::~StarSystem()\u003cbr\u003e\n{\u003c/p\u003e\n\u003cp\u003e}\u003c/p\u003e\n\u003cp\u003ebool StarSystem::LoadXML(const XMLElement\u0026amp; source, bool setInstanceDefault)\u003cbr\u003e\n{\u003cbr\u003e\nXMLElement systemCharacteristics = root.GetChild(“SystemCharacteristics”);\t\u003cbr\u003e\nXMLElement planets = systemCharacteristics.GetChild(“Planets”);\u003cbr\u003e\nfor (XMLElement it = planets.GetChild(); it; it = it.GetNext())\u003cbr\u003e\n{\u003cbr\u003e\nPlanetInfo newPlanet = PlanetInfo();\u003cbr\u003e\nif (newPlanet.Initialize(it))\u003cbr\u003e\n{\u003cbr\u003e\nm_Planets.Push(newPlanet);\u003cbr\u003e\n}\u003cbr\u003e\n}\u003cbr\u003e\nreturn true;\u003cbr\u003e\n}\u003c/p\u003e\n\u003cp\u003evoid StarSystem::RegisterScript(asIScriptEngine* engine)\u003cbr\u003e\n{\u003cbr\u003e\nPlanetInfo::RegisterScript(engine);\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eRegisterSerializable\u0026lt;StarSystem\u0026gt;(engine, \"StarSystem\");\nengine-\u0026gt;RegisterObjectMethod(\"StarSystem\", \"Array\u0026lt;PlanetInfo\u0026gt;@ GetPlanets() const\", asFUNCTION(StarSystemGetPlanets), asCALL_CDECL_OBJLAST);\nengine-\u0026gt;RegisterGlobalFunction(\"StarSystem@+ GetStarSystem()\", asFUNCTION(GetStarSystem), asCALL_CDECL);\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e}\u003c/p\u003e\n\u003cp\u003estatic StarSystem* GetStarSystem()\u003cbr\u003e\n{\u003cbr\u003e\nreturn GetScriptContext()-\u0026gt;GetSubsystem();\u003cbr\u003e\n}\u003c/p\u003e\n\u003cp\u003estatic CScriptArray* StarSystemGetPlanets(StarSystem* ptr)\u003cbr\u003e\n{\u003cbr\u003e\nVector planets = ptr-\u0026gt;GetPlanets();\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003efor (int i = 0; i != planets.Size(); i++)\n{\n\tURHO3D_LOGINFO(\"m_Mass = \" + String(planets[i].m_Mass));\n}\n\nreturn VectorToArray\u0026lt;PlanetInfo\u0026gt;(planets, \"Array\u0026lt;PlanetInfo\u0026gt;\");\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e}\u003cbr\u003e\n[/code]\u003c/p\u003e\n\u003cp\u003eGenerally StarSystem holds info about all planets in Vector structure.\u003cbr\u003e\nI create StarSystem::RegisterScript(asIScriptEngine* engine) and PlanetInfo::RegisterScript(asIScriptEngine* engine) functions based on Urho3D AS bindings.\u003c/p\u003e\n\u003cp\u003eThe problem is the following -\u003cbr\u003e\nwhen in script i try to get all planets as \u003cspan class=\"bbcode-b\"\u003eArray planets\u003c/span\u003e, then in each PlanetInfo object all member variables are not initialized. (i just loop for each planet and print each object member values in order to see value). But when is called method \u003ccode\u003estatic CScriptArray* StarSystemGetPlanets(StarSystem* ptr) {\n ... \n\tfor (int i = 0; i != planets.Size(); i++)\n\t{\n\t\tURHO3D_LOGINFO(\"m_Mass = \" + String(planets[i].m_Mass));\n....\n\t}\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003ethen i have noticed that in Vector planets all values are initialized correctly. Therefore there is mistake in my AS bindings or somewhere else.\u003c/p\u003e\n\u003cp\u003eThere is script file where i print each PlanetInfo’s member values.\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eclass StarSystemController : ScriptObject\n{\n\tvoid DelayedStart()\n\t{\n\t\tXMLFile@ starSystemXML = cache.GetResource(\"XMLFile\", \"StarSystem.xml\");\n\t\tif(starSystem.LoadXML(starSystemXML.GetRoot()))\n\t\t{\n\t\t\t// GET ALL PLANETS\n\t\t\tArray\u0026lt;PlanetInfo\u0026gt; planets = starSystem.GetPlanets();\n\t\t\tfor(uint i = 0; i \u0026lt; planets.length; i++)\n\t\t\t{\n                                // IN CONSOLE I GET ZERO FOR EACH VARIABLE, WHAT IS ABSOLUTELY WRONG\n\t\t\t\tPrint(\"m_Id= \" + String(planets[i].m_Id));\n\t\t\t\tPrint(\"m_Mass= \" + String(planets[i].m_Mass));\n\t\t\t\tPrint(\"m_DistanceFromPrimaryStar= \" + String(planets[i].m_DistanceFromPrimaryStar)); \n\t\t\t}\n         }\n\t}\n}\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eSomeone can explain why in scripts i get incorrect values ?\u003c/p\u003e\n\u003cp\u003eThanks.\u003c/p\u003e","post_number":1,"post_type":1,"updated_at":"2017-01-02T01:14:55.052Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":5,"reads":4,"readers_count":3,"score":25.8,"yours":false,"topic_id":2352,"topic_slug":"solved-as-bindings-member-values-are-not-initialized","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":324,"hidden":false,"trust_level":1,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":14190,"name":"","username":"itisscan","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/i/f14d63/{size}.png","created_at":"2016-10-22T13:02:12.000Z","cooked":"\u003cp\u003eI have solved it.\u003c/p\u003e\n\u003cp\u003eIn the code i have \u003ccode\u003e PlanetInfo operator=(const PlanetInfo\u0026amp; info) { return PlanetInfo(info); }\u003c/code\u003e, but what i really need is next\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003ePlanetInfo\u0026amp; operator=(const PlanetInfo\u0026amp; info)\n{\n\tm_Id = info.m_Id;\n\tm_DistanceFromPrimaryStar = info.m_DistanceFromPrimaryStar;\n\tm_Mass = info.m_Mass;\n\treturn *this;\n}\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eNever dealt with operator overloading before. It was good lesson for me.  \u003cimg src=\"https://emoji.discourse-cdn.com/twitter/slight_smile.png?v=5\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\"\u003e\u003c/p\u003e","post_number":2,"post_type":1,"updated_at":"2017-01-02T01:14:55.142Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":0,"reads":4,"readers_count":3,"score":0.8,"yours":false,"topic_id":2352,"topic_slug":"solved-as-bindings-member-values-are-not-initialized","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":324,"hidden":false,"trust_level":1,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false}],"stream":[14189,14190]},"timeline_lookup":[[1,2223]],"suggested_topics":[{"id":7083,"title":"Using custom models in Xamarin.Forms shared project","fancy_title":"Using custom models in Xamarin.Forms shared project","slug":"using-custom-models-in-xamarin-forms-shared-project","posts_count":3,"reply_count":1,"highest_post_number":3,"image_url":null,"created_at":"2021-12-03T08:34:21.895Z","last_posted_at":"2021-12-03T11:40:30.983Z","bumped":true,"bumped_at":"2021-12-03T11:40:30.983Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":0,"views":198,"category_id":10,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":1493,"username":"Nikolai","name":"Nikolai Miroshnichenko","avatar_template":"/user_avatar/discourse.urho3d.io/nikolai/{size}/3632_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":192,"username":"Modanung","name":"魔大农 𝞍𝞎𝝳 現招蜍","avatar_template":"/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png"}}]},{"id":7129,"title":"Best Model Import Pipeline as of Jan 2022?","fancy_title":"Best Model Import Pipeline as of Jan 2022?","slug":"best-model-import-pipeline-as-of-jan-2022","posts_count":7,"reply_count":0,"highest_post_number":7,"image_url":null,"created_at":"2022-01-17T09:27:23.432Z","last_posted_at":"2022-01-17T20:37:59.458Z","bumped":true,"bumped_at":"2022-01-17T20:37:59.458Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":4,"views":170,"category_id":10,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":1334,"username":"najak3d","name":"Brian Knox","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/n/6a8cbe/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":263,"username":"1vanK","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/1vank/{size}/768_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":1038,"username":"dertom","name":"Thomas Trocha","avatar_template":"/user_avatar/discourse.urho3d.io/dertom/{size}/1815_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":192,"username":"Modanung","name":"魔大农 𝞍𝞎𝝳 現招蜍","avatar_template":"/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":1165,"username":"throwawayerino","name":"Actually Permanent","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/t/da6949/{size}.png"}}]},{"id":7097,"title":"View Physics event for ConvexCast","fancy_title":"View Physics event for ConvexCast","slug":"view-physics-event-for-convexcast","posts_count":11,"reply_count":5,"highest_post_number":11,"image_url":null,"created_at":"2021-12-09T23:56:27.507Z","last_posted_at":"2021-12-12T20:20:02.788Z","bumped":true,"bumped_at":"2021-12-12T20:20:02.788Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":6,"views":206,"category_id":10,"featured_link":null,"has_accepted_answer":true,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":861,"username":"GodMan","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/g/e79b87/{size}.png"}},{"extras":null,"description":"Frequent Poster, Accepted Answer","user":{"id":192,"username":"Modanung","name":"魔大农 𝞍𝞎𝝳 現招蜍","avatar_template":"/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":628,"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}}]},{"id":7160,"title":"RayCast trouble","fancy_title":"RayCast trouble","slug":"raycast-trouble","posts_count":17,"reply_count":9,"highest_post_number":19,"image_url":null,"created_at":"2022-01-29T00:06:00.367Z","last_posted_at":"2022-01-30T00:29:39.356Z","bumped":true,"bumped_at":"2022-01-30T00:29:39.356Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":3,"views":260,"category_id":10,"featured_link":null,"has_accepted_answer":true,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster, Accepted Answer","user":{"id":861,"username":"GodMan","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/g/e79b87/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":627,"username":"George1","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/g/9e8a1a/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":628,"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":1038,"username":"dertom","name":"Thomas Trocha","avatar_template":"/user_avatar/discourse.urho3d.io/dertom/{size}/1815_2.png"}}]},{"id":7185,"title":"Update Ray ray direction","fancy_title":"Update Ray ray direction","slug":"update-ray-ray-direction","posts_count":5,"reply_count":1,"highest_post_number":5,"image_url":null,"created_at":"2022-02-05T00:28:45.414Z","last_posted_at":"2022-02-05T20:19:51.238Z","bumped":true,"bumped_at":"2022-02-05T20:19:51.238Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":0,"views":144,"category_id":10,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":861,"username":"GodMan","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/g/e79b87/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":628,"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}}]}],"tags_descriptions":{},"id":2352,"title":"[SOLVED] AS bindings. Member values are not initialized","fancy_title":"[SOLVED] AS bindings. Member values are not initialized","posts_count":2,"created_at":"2016-10-22T11:50:00.000Z","views":214,"reply_count":0,"like_count":0,"last_posted_at":"2016-10-22T13:02:12.000Z","visible":true,"closed":false,"archived":false,"has_summary":false,"archetype":"regular","slug":"solved-as-bindings-member-values-are-not-initialized","category_id":10,"word_count":675,"deleted_at":null,"user_id":324,"featured_link":null,"pinned_globally":false,"pinned_at":null,"pinned_until":null,"image_url":null,"slow_mode_seconds":0,"draft":null,"draft_key":"topic_2352","draft_sequence":null,"unpinned":null,"pinned":false,"current_post_number":1,"highest_post_number":2,"deleted_by":null,"actions_summary":[{"id":4,"count":0,"hidden":false,"can_act":false},{"id":8,"count":0,"hidden":false,"can_act":false},{"id":7,"count":0,"hidden":false,"can_act":false}],"chunk_size":20,"bookmarked":false,"bookmarks":[],"topic_timer":null,"message_bus_last_id":0,"participant_count":1,"show_read_indicator":false,"thumbnails":null,"slow_mode_enabled_until":null,"tags_disable_ads":false,"details":{"can_edit":false,"notification_level":1,"participants":[{"id":324,"username":"itisscan","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/i/f14d63/{size}.png","post_count":2,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"trust_level":1}],"created_by":{"id":324,"username":"itisscan","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/i/f14d63/{size}.png"},"last_poster":{"id":324,"username":"itisscan","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/i/f14d63/{size}.png"}}}