{"post_stream":{"posts":[{"id":8907,"name":"","username":"practicing01","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/p/b5e925/{size}.png","created_at":"2015-12-09T18:05:18.000Z","cooked":"\u003cp\u003eEdit \u003cspan class=\"hashtag\"\u003e#0:\u003c/span\u003e Simplified the code, spider is still crabwalking…\u003cbr\u003e\n\u003cimg src=\"http://i.imgur.com/PjBz6OX.gif?1\" alt=\"\" width=\"320\" height=\"240\"\u003e\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003eFoinSpider = ScriptObject()\n\nfunction FoinSpider:Start()\n  self.MOVE_FORCE = 0.5\n  self.BRAKE_FORCE = 0.025\n  self.rotDummy_ = nil\n  self.rayDistance_ = 30.0\n  self.gravityForce_ = Vector3(-9.81, -9.81, -9.81)\n  self.slerpDest_ = Quaternion()\n  self.slerpInterval_ = 0.1\n  self.slerpProgress_ = 0.0\n\n  self.STATE_STAND = 0\n  self.STATE_IDLE = 1\n  self.STATE_FOLLOW = 2\n  self.STATE_SPIT = 3\n  self.currentState_ = 0\n\n  self.targetNode_ = nil\n  self.body_ = nil\n  self.animController_ = nil\nend\n\nfunction FoinSpider:DelayedStart()\n  self.rotDummy_ = self.node:GetChild(\"rotDummy\")\n  self.body_ = self.node:GetComponent(\"RigidBody\")\n  self.animController_ = self.node:GetComponent(\"AnimationController\")\n\n  self:SetState(self.STATE_STAND)\n\n  self:SubscribeToEvent(self.node:GetChild(\"playerTrigger\"), \"NodeCollisionStart\", \"FoinSpider:HandleNodeCollisionStart\")\n  self:SubscribeToEvent(self.node:GetChild(\"playerTrigger\"), \"NodeCollisionEnd\", \"FoinSpider:HandleNodeCollisionStart\")\n  --self:SubscribeToEvent(\"PostRenderUpdate\", \"FoinSpider:HandlePostRenderUpdate\")\nend\n\nfunction FoinSpider:Stop()\n  --\nend\n\nfunction FoinSpider:FixedUpdate(timeStep)\n  self:FollowPath(timeStep)\n\n  if self.rotDummy_ == nil then return end\n\n  local nodePos = self.node:GetWorldPosition()\n  local aimPoint = self.rotDummy_:GetWorldPosition()\n  local rayDir = (aimPoint - nodePos):Normalized()\n  rayDir = rayDir * Vector3(-1.0, -1.0, -1.0)\n\n  local result = LevelScene_:GetComponent(\"PhysicsWorld\"):RaycastSingle(Ray(aimPoint, rayDir), self.rayDistance_, 2)\n\n  if result.body ~= nil then\n    local invertedNormal = result.normal * self.gravityForce_\n    self.body_:SetGravityOverride(invertedNormal)\n    local quat = Quaternion()\n    quat:FromLookRotation(self.node:GetDirection(), result.normal)\n    \n    self.node:SetRotation(quat)\n\n    --[[if quat ~= self.slerpDest_ then\n      self.slerpDest_ = quat\n      self.slerpProgress_ = 0.0\n    end\n\n    local rot = self.body_:GetRotation()\n\n    if self.slerpProgress_ \u0026lt; 1.0 then\n      rot = rot:Slerp(self.slerpDest_, self.slerpProgress_)\n      self.node:SetRotation(rot)\n\n      self.slerpProgress_ = self.slerpProgress_ + (self.slerpInterval_ * timeStep)\n      --self.slerpProgress_ = self.slerpProgress_ + (self.slerpInterval_)\n      self.slerpProgress_ = Clamp(self.slerpProgress_, 0.0, 1.0)\n    elseif rot ~= self.slerpDest_ then\n      self.node:SetRotation(self.slerpDest_)\n    end--]]\n\nend\n\nend\n\nfunction FoinSpider:HandleNodeCollision(eventType, eventData)\n  --\nend\n\nfunction FoinSpider:HandleNodeCollisionStart(eventType, eventData)\n  local trigger = eventData[\"Trigger\"]:GetBool()\n  local otherNode = eventData[\"OtherNode\"]:GetPtr(\"Node\")\n\n  if trigger == true then\n    self.targetNode_ = otherNode\n    self:SetState(self.STATE_FOLLOW)\n  end\n\nend\n\nfunction FoinSpider:SetState(state)\n  self.currentState_ = state\n\n  if state == self.STATE_STAND then\n    self:StateStand()\n  elseif state == self.STATE_FOLLOW then\n    self:StateFollow()\n  end\n\nend\n\nfunction FoinSpider:StateStand()\n  local STAND_ANI = \"Models/foinSpider/stand.ani\"\n\n  self.body_:SetLinearVelocity(Vector3.ZERO)\n  self.body_:SetFriction(10.0)\n\n  if self.animController_ ~= nil then\n    self.animController_:PlayExclusive(STAND_ANI, 0, true, 0.0)\nend\nend\n\nfunction FoinSpider:StateFollow()\n  local WALK_ANI = \"Models/foinSpider/walk.ani\"\n\n  self.body_:SetFriction(0.0)\n\n  if self.animController_ ~= nil then\n    self.animController_:PlayExclusive(WALK_ANI, 0, true, 0.0)\nend\nend\n\nfunction FoinSpider:FollowPath(timeStep)\n  if self.currentState_ == self.STATE_STAND then\n    return\n  end\n  \n  --local nodePos = self.node:GetWorldPosition()\n  local nodePos = self.rotDummy_:GetWorldPosition()\n  local targetPos = self.targetNode_:GetWorldPosition()\n\n  if (targetPos - nodePos):Length() \u0026gt; 25.0 then\n    --self.node:LookAt(targetPos, Vector3.UP, TS_WORLD)\n    self.node:LookAt(targetPos)\n  else\n    self:SetState(self.STATE_STAND)\n    return\n  end\n  \n  local velocity = self.body_.linearVelocity\n  --local speed = velocity:Length()\n\n  --local speedRatio = speed / self.MOVE_FORCE\n\n  self.body_:ApplyImpulse((targetPos - nodePos):Normalized() * self.MOVE_FORCE)\n\n  local brakeForce = velocity * -self.BRAKE_FORCE\n  self.body_:ApplyImpulse(brakeForce)\n  \n  local WALK_ANI = \"Models/foinSpider/walk.ani\"\n  self.animController_:SetSpeed(WALK_ANI, (self.body_:GetLinearVelocity():Length() * 0.05))\nend\n\nfunction FoinSpider:HandlePostRenderUpdate(eventType, eventData)\n  local debug = LevelScene_:GetComponent(\"DebugRenderer\")\n  --LevelScene_:GetComponent(\"PhysicsWorld\"):DrawDebugGeometry(true)\n  --LevelScene_:GetComponent(\"Octree\"):DrawDebugGeometry(true)\n  renderer:DrawDebugGeometry(true)\n\n  local nodePos = self.node:GetWorldPosition()\n  local aimPoint = self.rotDummy_:GetWorldPosition()\n  local rayDir = (aimPoint - nodePos):Normalized()\n  rayDir = rayDir * Vector3(-1.0, -1.0, -1.0)\n\n  --debug:AddLine(aimPoint, aimPoint + (rayDir * self.rayDistance_), Color(1.0, 1.0, 1.0), false)\n  debug:AddCross(aimPoint, 2.0 , Color(1.0, 1.0, 1.0), false)\n  debug:AddCross(aimPoint + (rayDir * self.rayDistance_), 2.0, Color(1.0, 1.0, 1.0), false)\n  \n  debug:AddLine(nodePos, nodePos + (self.node:GetDirection() * self.rayDistance_), Color(1.0, 1.0, 1.0), false)\n  debug:AddLine(aimPoint, aimPoint + (self.node:GetDirection() * self.rayDistance_), Color(1.0, 1.0, 1.0), false)\nend\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eEdit: I’ve ditched pathfinding because i couldn’t get it to work.  I think I’ve gotten the ground normal + target direction rotations combining but the target direction is sideways.  Any ideas as to why that is?\u003c/p\u003e\n\u003cp\u003enew code:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003eFoinSpider = ScriptObject()\n\nfunction FoinSpider:Start()\n  self.MOVE_FORCE = 0.5\n  self.BRAKE_FORCE = 0.025\n  self.rotDummy_ = nil\n  self.rayDistance_ = 50.0\n  --self.gravityForce_ = Vector3(-9.81, -9.81, -9.81)\n  self.gravityForce_ = Vector3(-9.81, -9.81, -9.81)\n  self.slerpDest_ = Quaternion()\n  self.slerpInterval_ = 0.1\n  self.slerpProgress_ = 0.0\n\n  self.STATE_STAND = 0\n  self.STATE_IDLE = 1\n  self.STATE_FOLLOW = 2\n  self.STATE_SPIT = 3\n  self.currentState_ = 0\n\n  self.targetNode_ = nil\nend\n\nfunction FoinSpider:DelayedStart()\n  self.rotDummy_ = self.node:GetChild(\"rotDummy\")\n\n  self:SetState(self.STATE_STAND)\n\n  --self:SubscribeToEvent(\"Update\", \"FoinSpider:HandleUpdate\")\n  --self:SubscribeToEvent(self.node, \"NodeCollision\", \"FoinSpider:HandleNodeCollision\")\n  self:SubscribeToEvent(self.node:GetChild(\"playerTrigger\"), \"NodeCollisionStart\", \"FoinSpider:HandleNodeCollisionStart\")\n  self:SubscribeToEvent(self.node:GetChild(\"playerTrigger\"), \"NodeCollisionEnd\", \"FoinSpider:HandleNodeCollisionStart\")\n  self:SubscribeToEvent(\"PostRenderUpdate\", \"FoinSpider:HandlePostRenderUpdate\")\nend\n\nfunction FoinSpider:Stop()\n  --\nend\n\nfunction FoinSpider:HandleUpdate(eventType, eventData)\n  local timeStep = eventData[\"TimeStep\"]:GetFloat()\nend\n\nfunction FoinSpider:FixedUpdate(timeStep)\n  self:FollowPath(timeStep)\n\n  if self.rotDummy_ == nil then return end\n\n  local body  = self.node:GetComponent(\"RigidBody\")\n\n  local nodePos = self.node:GetWorldPosition()\n  local aimPoint = self.rotDummy_:GetWorldPosition()\n  local rayDir = (aimPoint - nodePos):Normalized()\n  rayDir = rayDir * Vector3(-1.0, -1.0, -1.0)\n\n  local result = LevelScene_:GetComponent(\"PhysicsWorld\"):RaycastSingle(Ray(aimPoint, rayDir), self.rayDistance_, 2)\n\n  if result.body ~= nil then\n    local invertedNormal = result.normal * self.gravityForce_\n    body:SetGravityOverride(invertedNormal)\n    local quat = Quaternion()\n    quat:FromLookRotation(self.node:GetDirection(), result.normal)\n    \n    body:SetRotation(quat)\n--[[\n    if quat ~= self.slerpDest_ then\n      self.slerpDest_ = quat\n      self.slerpProgress_ = 0.0\n    end\n\n    local rot = body:GetRotation()\n\n    if self.slerpProgress_ \u0026lt; 1.0 then\n      rot = rot:Slerp(self.slerpDest_, self.slerpProgress_)\n      body:SetRotation(rot)\n\n      --self.slerpProgress_ = self.slerpProgress_ + (self.slerpInterval_ * timeStep)\n      self.slerpProgress_ = self.slerpProgress_ + (self.slerpInterval_)\n      self.slerpProgress_ = Clamp(self.slerpProgress_, 0.0, 1.0)\n    elseif rot ~= self.slerpDest_ then\n      body:SetRotation(self.slerpDest_)\n    end--]]\n\nend\n\nend\n\nfunction FoinSpider:HandleNodeCollision(eventType, eventData)\n  --\nend\n\nfunction FoinSpider:HandleNodeCollisionStart(eventType, eventData)\n  local trigger = eventData[\"Trigger\"]:GetBool()\n  local otherNode = eventData[\"OtherNode\"]:GetPtr(\"Node\")\n\n  if trigger == true then\n    self.targetNode_ = otherNode\n    self:SetState(self.STATE_FOLLOW)\n  end\n\nend\n\nfunction FoinSpider:SetState(state)\n  self.currentState_ = state\n\n  if state == self.STATE_STAND then\n    self:StateStand()\n  elseif state == self.STATE_FOLLOW then\n    self:StateFollow()\n  end\n\nend\n\nfunction FoinSpider:StateStand()\n  local STAND_ANI = \"Models/foinSpider/stand.ani\"\n  local animCtrl = self.node:GetComponent(\"AnimationController\")\n\n  local body = self.node:GetComponent(\"RigidBody\")\n  body:SetLinearVelocity(Vector3.ZERO)\n  body:SetFriction(10.0)\n\n  if animCtrl ~= nil then\n    animCtrl:PlayExclusive(STAND_ANI, 0, true, 0.0)\nend\nend\n\nfunction FoinSpider:StateFollow()\n  local WALK_ANI = \"Models/foinSpider/walk.ani\"\n  local animCtrl = self.node:GetComponent(\"AnimationController\")\n  local body = self.node:GetComponent(\"RigidBody\")\n\n  body:SetFriction(0.0)\n\n  if animCtrl ~= nil then\n    animCtrl:PlayExclusive(WALK_ANI, 0, true, 0.0)\nend\nend\n\nfunction FoinSpider:FollowPath(timeStep)\n  if self.currentState_ == self.STATE_STAND then\n    return\n  end\n  \n  local body  = self.node:GetComponent(\"RigidBody\")\n\n  local nodePos = self.node:GetWorldPosition()\n  local targetPos = self.targetNode_:GetWorldPosition()\n\n  if (targetPos - nodePos):Length() \u0026gt; 25.0 then\n    self.node:LookAt(targetPos, Vector3.UP, TS_WORLD)\n  else\n    self:SetState(self.STATE_STAND)\n    return\n  end\n  \n  local velocity = body.linearVelocity\n  --local speed = velocity:Length()\n\n  --local speedRatio = speed / self.MOVE_FORCE\n\n  body:ApplyImpulse((targetPos - nodePos):Normalized() * self.MOVE_FORCE)\n\n  local brakeForce = velocity * -self.BRAKE_FORCE\n  body:ApplyImpulse(brakeForce)\n  \n  local WALK_ANI = \"Models/foinSpider/walk.ani\"\n  local animCtrl = self.node:GetComponent(\"AnimationController\")\n  animCtrl:SetSpeed(WALK_ANI, (body:GetLinearVelocity():Length() * 0.05))\nend\n\nfunction FoinSpider:HandlePostRenderUpdate(eventType, eventData)\n  local debug = LevelScene_:GetComponent(\"DebugRenderer\")\n  LevelScene_:GetComponent(\"PhysicsWorld\"):DrawDebugGeometry(true)\n  --LevelScene_:GetComponent(\"Octree\"):DrawDebugGeometry(true)\n  renderer:DrawDebugGeometry(true)\n\n  local nodePos = self.node:GetWorldPosition()\n  local aimPoint = self.rotDummy_:GetWorldPosition()\n  local rayDir = (aimPoint - nodePos):Normalized()\n  rayDir = rayDir * Vector3(-1.0, -1.0, -1.0)\n\n  debug:AddLine(aimPoint, aimPoint + (rayDir * self.rayDistance_), Color(1.0, 1.0, 1.0), false)\n  debug:AddCross(aimPoint, 2.0 , Color(1.0, 1.0, 1.0), false)\n  debug:AddCross(aimPoint + (rayDir * self.rayDistance_), 2.0, Color(1.0, 1.0, 1.0), false)\nend\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003ePic of spider moving towards player.  Notice how its side is facing the player (that’s the problem).\u003cbr\u003e\n\u003cimg src=\"http://img.ctrlv.in/img/15/12/11/566a892232d00.png\" alt=\"\" width=\"\" height=\"\"\u003e\u003c/p\u003e\n\u003cp\u003eHello, I’m making a spider and through some online snippets have managed to get it moving along surface normals.  I’m really bad at math though and need help rotating three things.  The first is the spider along the normal.  There’s some code for that and it seems to be working but I’d like to make sure it’s correct (found in FixedUpdate).  Second is the spider towards the current waypoint (combining the current surface normal rotation with the destination waypoint).  Third is the direction of the impulse applied to the spider so that it moves towards the next waypoint (previous two rotations should be applied in FollowPath).  Any help would be greatly appreciated!\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003eFoinSpider = ScriptObject()\n\nfunction FoinSpider:Start()\n  self.MOVE_FORCE = 2.0\n  self.BRAKE_FORCE = 0.025\n  self.rotDummy_ = nil\n  self.rayDistance_ = 25.0\n  self.gravityForce_ = Vector3(-9.81, -9.81, -9.81)\n  self.slerpDest_ = Quaternion()\n  self.slerpInterval_ = 0.1\n  self.slerpProgress_ = 0.0\n  \n  self.STATE_STAND = 0\n  self.STATE_IDLE = 1\n  self.STATE_FOLLOW = 2\n  self.STATE_SPIT = 3\n  self.currentState_ = 0\n  \n  self.targetNode_ = nil\n  self.pathEndPos_ = nil\n  self.currentPath_ = nil\n  self.nearestExtents_ = 30.0\nend\n\nfunction FoinSpider:DelayedStart()\n  local body  = self.node:GetComponent(\"RigidBody\")\n  body.collisionEventMode = COLLISION_ALWAYS\n  \n  body:SetFriction(0.0)\n  \n  self.rotDummy_ = self.node:GetChild(\"rotDummy\")\n  \n  self:SetState(self.STATE_STAND)\n  \n  --self:SubscribeToEvent(\"Update\", \"FoinSpider:HandleUpdate\")\n  --self:SubscribeToEvent(self.node, \"NodeCollision\", \"FoinSpider:HandleNodeCollision\")\n  self:SubscribeToEvent(self.node:GetChild(\"playerTrigger\"), \"NodeCollisionStart\", \"FoinSpider:HandleNodeCollisionStart\")\n  self:SubscribeToEvent(self.node:GetChild(\"playerTrigger\"), \"NodeCollisionEnd\", \"FoinSpider:HandleNodeCollisionStart\")\n  self:SubscribeToEvent(\"PostRenderUpdate\", \"FoinSpider:HandlePostRenderUpdate\")\nend\n\nfunction FoinSpider:Stop()\n  --\nend\n\nfunction FoinSpider:HandleUpdate(eventType, eventData)\n  local timeStep = eventData[\"TimeStep\"]:GetFloat()\nend\n\nfunction FoinSpider:FixedUpdate(timeStep)\n  if self.rotDummy_ == nil then return end\n  \n  local body  = self.node:GetComponent(\"RigidBody\")\n  \n  local nodePos = self.node:GetWorldPosition()\n  local aimPoint = self.rotDummy_:GetWorldPosition()\n  local rayDir = (aimPoint - nodePos):Normalized()\n  rayDir = rayDir * Vector3(-1.0, -1.0, -1.0)\n  \n  local result = self.node:GetScene():GetComponent(\"PhysicsWorld\"):RaycastSingle(Ray(aimPoint, rayDir), self.rayDistance_, 2)\n  \n  if result.body ~= nil then\n    local invertedNormal = result.normal * self.gravityForce_\n    body:SetGravityOverride(invertedNormal)\n    local quat = Quaternion()\n    quat:FromLookRotation(self.node:GetDirection(), result.normal)\n    \n    if quat ~= self.slerpDest_ then\n      self.slerpDest_ = quat\n      self.slerpProgress_ = 0.0\n    end\n\n    local rot = body:GetRotation()\n\n    if self.slerpProgress_ ~= 1.0 then\n      rot = rot:Slerp(self.slerpDest_, self.slerpProgress_)\n      body:SetRotation(rot)\n\n      self.slerpProgress_ = self.slerpProgress_ + (self.slerpInterval_ * timeStep)\n    elseif rot ~= self.slerpDest_ then\n      body:SetRotation(self.slerpDest_)\n    end\n\n  end\n\n  self:FollowPath(timeStep)\nend\n\nfunction FoinSpider:HandleNodeCollision(eventType, eventData)\n    --[[local contacts = eventData[\"Contacts\"]:GetBuffer()\n\n    while not contacts.eof do\n        local contactPosition = contacts:ReadVector3()\n        local contactNormal = contacts:ReadVector3()\n        local contactDistance = contacts:ReadFloat()\n        local contactImpulse = contacts:ReadFloat()\n\n        -- If contact is below node center and mostly vertical, assume it's a ground contact\n        if contactPosition.y \u0026lt; self.node.position.y + 1.0 then\n            local level = Abs(contactNormal.y)\n            if level \u0026gt; 0.75 then\n                --\n            end\n        end\n    end--]]\nend\n\nfunction FoinSpider:HandleNodeCollisionStart(eventType, eventData)\n  local trigger = eventData[\"Trigger\"]:GetBool()\n  local otherNode = eventData[\"OtherNode\"]:GetPtr(\"Node\")\n  \n  if trigger == true then\n    self.targetNode_ = otherNode\n    self:SetState(self.STATE_FOLLOW)\n  end\n  \nend\n\nfunction FoinSpider:HandlePostRenderUpdate(eventType, eventData)\n  local debug = self.node:GetScene():GetComponent(\"DebugRenderer\")\n  --self.node:GetScene():GetComponent(\"PhysicsWorld\"):DrawDebugGeometry(true)\n  --self.node:GetScene():GetComponent(\"Octree\"):DrawDebugGeometry(true)\n  --renderer:DrawDebugGeometry(true)\n  \n  local nodePos = self.node:GetWorldPosition()\n  local aimPoint = self.rotDummy_:GetWorldPosition()\n  local rayDir = (aimPoint - nodePos):Normalized()\n  rayDir = rayDir * Vector3(-1.0, -1.0, -1.0)\n  \n  debug:AddLine(aimPoint, aimPoint + (rayDir * self.rayDistance_), Color(1.0, 1.0, 1.0), false)\n  debug:AddCross(aimPoint, 2.0 , Color(1.0, 1.0, 1.0), false)\n  debug:AddCross(aimPoint + (rayDir * self.rayDistance_), 2.0, Color(1.0, 1.0, 1.0), false)\n  \n  if self.currentPath_ == nil then\n    return\n  end\n  \n  local navMesh = self.node:GetScene():GetComponent(\"NavigationMesh\")\n  navMesh:DrawDebugGeometry(true)\n  \n  -- Visualize the start and end points and the last calculated path\n  local size = table.maxn(self.currentPath_)\n  if size \u0026gt; 0 then\n    debug:AddBoundingBox(BoundingBox(self.pathEndPos_ - Vector3(0.1, 0.1, 0.1), self.pathEndPos_ + Vector3(0.1, 0.1, 0.1)), Color(1.0, 1.0, 1.0))\n\n    -- Draw the path with a small upward bias so that it does not clip into the surfaces\n    local bias = Vector3(0.0, 0.05, 0.0)\n    debug:AddLine(nodePos + bias, self.currentPath_[1] + bias, Color(1.0, 1.0, 1.0))\n\n    if size \u0026gt; 1 then\n      for i = 1, size - 1 do\n        debug:AddLine(self.currentPath_[i] + bias, self.currentPath_[i + 1] + bias, Color(1.0, 1.0, 1.0))\n      end\n    end\n  end\nend\n\nfunction FoinSpider:SetState(state)\n  self.currentState_ = state\n  \n  if state == self.STATE_STAND then\n    self:StateStand()\n  elseif state == self.STATE_FOLLOW then\n    self:StateFollow()\n  end\n  \nend\n\nfunction FoinSpider:StateStand()\n  local STAND_ANI = \"Models/foinSpider/stand.ani\"\n  local animCtrl = self.node:GetComponent(\"AnimationController\")\n  \n  if animCtrl ~= nil then\n    if animCtrl:IsPlaying(STAND_ANI) then\n    else\n      animCtrl:Play(STAND_ANI, 0, true, 0.1)\n    end\n  end\nend\n\nfunction FoinSpider:StateFollow()\n  local WALK_ANI = \"Models/foinSpider/walk.ani\"\n  local animCtrl = self.node:GetComponent(\"AnimationController\")\n  local body = self.node:GetComponent(\"RigidBody\")\n  \n  if animCtrl ~= nil then\n    if animCtrl:IsPlaying(WALK_ANI) then\n      animCtrl:SetSpeed(WALK_ANI, (body:GetLinearVelocity():Length()) / (self.MOVE_FORCE * 10.0))\n    else\n      animCtrl:Play(WALK_ANI, 0, true, 0.1)\n      animCtrl:SetSpeed(WALK_ANI, (body:GetLinearVelocity():Length()) / (self.MOVE_FORCE * 10.0))\n    end\n  end\n  \n  local navMesh = self.node:GetScene():GetComponent(\"NavigationMesh\")\n  local pathPos = navMesh:FindNearestPoint(self.targetNode_:GetWorldPosition(), Vector3.ONE * self.nearestExtents_)\n  \n  self.pathEndPos_ = pathPos\n  self.currentPath_ = navMesh:FindPath(self.node:GetPosition(), self.pathEndPos_)\n  print(\"telling to follow\")\nend\n\nfunction FoinSpider:FollowPath(timeStep)\n  if self.currentPath_ == nil then\n    return\n  end\n\n  if table.maxn(self.currentPath_) \u0026gt; 0 then\n    local nextWaypoint = self.currentPath_[1] -- NB: currentPath[1] is the next waypoint in order\n    \n    local nodePos = self.node:GetWorldPosition()\n    \n    local body  = self.node:GetComponent(\"RigidBody\")\n\n    --todo should moveDir be normal dir + target dir?\n    local moveDir = (nextWaypoint - nodePos):Normalized()\n    local velocity = body.linearVelocity\n    --local rot = self.node.rotation\n    body:ApplyImpulse(--[[rot *--]] moveDir * self.MOVE_FORCE)\n        \n    local brakeForce = velocity * -self.BRAKE_FORCE\n    body:ApplyImpulse(brakeForce)\n    \n    --todo combine slerp dest with target dir\n    \n    if (nextWaypoint - nodePos):Length() \u0026lt; 0.1 then\n      table.remove(self.currentPath_, 1)\n      return\n    end\n    \n  end\nend\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003epic for motivation:\u003cbr\u003e\n\u003cimg src=\"http://img.ctrlv.in/img/15/12/09/566868c94ed89.png\" alt=\"\" width=\"\" height=\"\"\u003e\u003c/p\u003e","post_number":1,"post_type":1,"updated_at":"2017-01-02T01:08:30.601Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":3,"reads":17,"readers_count":16,"score":18.4,"yours":false,"topic_id":1560,"topic_slug":"solved-normal-based-movement-help","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":140,"hidden":false,"trust_level":1,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":8979,"name":"","username":"practicing01","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/p/b5e925/{size}.png","created_at":"2015-12-12T13:40:28.000Z","cooked":"\u003cp\u003eI got the spider to face correctly by separating the physics components from the model components.  The model components went into a dummy node that was then rotated by -90.  I think I exported using the proper front view in blender so I don’t know why I had to resort to this hack.  Perhaps bullet transformations are incompatible with urhos.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"http://img.ctrlv.in/img/15/12/12/566c22fb20cc5.png\" alt=\"\" width=\"\" height=\"\"\u003e\u003c/p\u003e","post_number":2,"post_type":1,"updated_at":"2017-01-02T01:08:35.976Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":0,"reads":8,"readers_count":7,"score":1.6,"yours":false,"topic_id":1560,"topic_slug":"solved-normal-based-movement-help","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":140,"hidden":false,"trust_level":1,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":8994,"name":"魔大农 𝞍𝞎𝝳 現招蜍","username":"Modanung","avatar_template":"/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png","created_at":"2015-12-12T20:06:59.000Z","cooked":"\u003caside class=\"quote no-group\" data-username=\"practicing01\"\u003e\n\u003cdiv class=\"title\"\u003e\n\u003cdiv class=\"quote-controls\"\u003e\u003c/div\u003e\n\u003cimg alt=\"\" width=\"20\" height=\"20\" src=\"https://avatars.discourse-cdn.com/v4/letter/p/b5e925/40.png\" class=\"avatar\"\u003e practicing01:\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003eI think I exported using the proper front view in blender so I don’t know why I had to resort to this hack.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/aside\u003e\n\u003cp\u003eI think the axes mentioned after each \u003cspan class=\"bbcode-i\"\u003eFront view\u003c/span\u003e option in the Urho3D exporter are confusing. Be sure to double check that export setting while ignoring what’s in between parentheses.\u003cbr\u003e\nAlso set Origin to Global and apply the spider’s rotation by hitting Ctrl+A, R while having it selected. That way it’s more WYSIWYG.\u003c/p\u003e","post_number":3,"post_type":1,"updated_at":"2017-01-02T01:08:37.006Z","reply_count":0,"reply_to_post_number":null,"quote_count":1,"incoming_link_count":0,"reads":8,"readers_count":7,"score":1.6,"yours":false,"topic_id":1560,"topic_slug":"solved-normal-based-movement-help","display_username":"魔大农 𝞍𝞎𝝳 現招蜍","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":"","bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":192,"hidden":false,"trust_level":0,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"user_suspended":true,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false}],"stream":[8907,8979,8994]},"timeline_lookup":[[1,2540],[2,2538],[3,2537]],"suggested_topics":[{"id":7344,"title":"Do we give up supporting dx11？","fancy_title":"Do we give up supporting dx11？","slug":"do-we-give-up-supporting-dx11","posts_count":3,"reply_count":1,"highest_post_number":3,"image_url":null,"created_at":"2022-11-03T09:37:37.893Z","last_posted_at":"2022-11-03T13:09:15.153Z","bumped":true,"bumped_at":"2022-11-03T15:28:58.128Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":0,"views":78,"category_id":9,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":1510,"username":"SoNewBee","name":"So New Bee","avatar_template":"/user_avatar/discourse.urho3d.io/sonewbee/{size}/3755_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":263,"username":"1vanK","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/1vank/{size}/768_2.png"}}]},{"id":7347,"title":"How does Urho handle script objects each frame?","fancy_title":"How does Urho handle script objects each frame?","slug":"how-does-urho-handle-script-objects-each-frame","posts_count":3,"reply_count":1,"highest_post_number":3,"image_url":null,"created_at":"2022-11-08T02:33:56.461Z","last_posted_at":"2022-11-08T14:46:09.857Z","bumped":true,"bumped_at":"2022-11-08T14:46:09.857Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":0,"views":64,"category_id":9,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":1292,"username":"evolgames","name":"evol","avatar_template":"/user_avatar/discourse.urho3d.io/evolgames/{size}/3169_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":628,"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}}]},{"id":7304,"title":"Urho3D is crashing on Android 12","fancy_title":"Urho3D is crashing on Android 12","slug":"urho3d-is-crashing-on-android-12","posts_count":1,"reply_count":0,"highest_post_number":1,"image_url":null,"created_at":"2022-07-28T10:03:51.280Z","last_posted_at":"2022-07-28T10:03:51.349Z","bumped":true,"bumped_at":"2022-07-28T10:38:06.014Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":1,"views":126,"category_id":9,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest single","description":"Original Poster, Most Recent Poster","user":{"id":809,"username":"elix22","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/elix22/{size}/1437_2.png"}}]},{"id":7297,"title":"GetDrawables() can only return 1 result","fancy_title":"GetDrawables() can only return 1 result","slug":"getdrawables-can-only-return-1-result","posts_count":9,"reply_count":6,"highest_post_number":9,"image_url":null,"created_at":"2022-07-18T19:01:06.052Z","last_posted_at":"2022-07-20T05:17:38.044Z","bumped":true,"bumped_at":"2022-07-20T05:17:38.044Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":0,"views":143,"category_id":10,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":null,"description":"Original Poster","user":{"id":1528,"username":"cqrtxwd","name":"QR C","avatar_template":"/user_avatar/discourse.urho3d.io/cqrtxwd/{size}/3814_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":484,"username":"Eugene","name":"Eugene Kozlov","avatar_template":"/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":628,"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}},{"extras":"latest","description":"Most Recent Poster","user":{"id":1358,"username":"JSandusky","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/jsandusky/{size}/3220_2.png"}}]},{"id":7338,"title":"About FSR support","fancy_title":"About FSR support","slug":"about-fsr-support","posts_count":2,"reply_count":0,"highest_post_number":2,"image_url":null,"created_at":"2022-10-23T06:06:04.126Z","last_posted_at":"2022-11-11T21:42:39.142Z","bumped":true,"bumped_at":"2022-11-11T21:42:39.142Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":2,"views":128,"category_id":16,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":null,"description":"Original Poster","user":{"id":1541,"username":"sergeyvolkovich","name":"Gray","avatar_template":"/user_avatar/discourse.urho3d.io/sergeyvolkovich/{size}/3852_2.png"}},{"extras":"latest","description":"Most Recent Poster","user":{"id":789,"username":"codewalkerdan","name":"Codewalkerdan","avatar_template":"/user_avatar/discourse.urho3d.io/codewalkerdan/{size}/675_2.png"}}]}],"tags_descriptions":{},"id":1560,"title":"[Solved] Normal-based Movement Help","fancy_title":"[Solved] Normal-based Movement Help","posts_count":3,"created_at":"2015-12-09T18:05:18.000Z","views":359,"reply_count":0,"like_count":0,"last_posted_at":"2015-12-12T20:06:59.000Z","visible":true,"closed":false,"archived":false,"has_summary":false,"archetype":"regular","slug":"solved-normal-based-movement-help","category_id":9,"word_count":2479,"deleted_at":null,"user_id":140,"featured_link":null,"pinned_globally":false,"pinned_at":null,"pinned_until":null,"image_url":null,"slow_mode_seconds":0,"draft":null,"draft_key":"topic_1560","draft_sequence":null,"unpinned":null,"pinned":false,"current_post_number":1,"highest_post_number":3,"deleted_by":null,"actions_summary":[{"id":4,"count":0,"hidden":false,"can_act":false},{"id":8,"count":0,"hidden":false,"can_act":false},{"id":7,"count":0,"hidden":false,"can_act":false}],"chunk_size":20,"bookmarked":false,"bookmarks":[],"topic_timer":null,"message_bus_last_id":0,"participant_count":2,"show_read_indicator":false,"thumbnails":null,"slow_mode_enabled_until":null,"tags_disable_ads":false,"details":{"can_edit":false,"notification_level":1,"participants":[{"id":140,"username":"practicing01","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/p/b5e925/{size}.png","post_count":2,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"trust_level":1},{"id":192,"username":"Modanung","name":"魔大农 𝞍𝞎𝝳 現招蜍","avatar_template":"/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png","post_count":1,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"trust_level":0}],"created_by":{"id":140,"username":"practicing01","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/p/b5e925/{size}.png"},"last_poster":{"id":192,"username":"Modanung","name":"魔大农 𝞍𝞎𝝳 現招蜍","avatar_template":"/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png"}}}