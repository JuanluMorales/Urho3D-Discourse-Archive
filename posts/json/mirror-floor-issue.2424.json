{"post_stream":{"posts":[{"id":14544,"name":"","username":"artgolf1000","avatar_template":"/user_avatar/discourse.urho3d.io/artgolf1000/{size}/73_2.png","created_at":"2016-11-23T06:29:04.000Z","cooked":"\u003cp\u003eHi,\u003c/p\u003e\n\u003cp\u003eI want the wood floor has some mirror effect, so I modified the water sample to get a mirror floor.\u003c/p\u003e\n\u003cp\u003eI use default forward render path, it works great on macOS, the mixture effect of the original wood texture color and the reflection texture color appears.\u003c/p\u003e\n\u003cp\u003eBut it has an issue on iOS device, it seems that the enviroment texture passed to the shader is black, the wood is black, only the reflection texture color appears.\u003c/p\u003e\n\u003cp\u003eIs it a bug?\u003c/p\u003e\n\u003cp\u003eThanks.\u003c/p\u003e\n\u003cp\u003eEdit: I had enabled multi-sample feature before, when I disabled multi-sample, it works! \u003cimg src=\"https://emoji.discourse-cdn.com/twitter/smiley.png?v=5\" title=\":smiley:\" class=\"emoji\" alt=\":smiley:\"\u003e\u003c/p\u003e\n\u003cp\u003eC++\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e...\nwaterMat-\u0026gt;SetTexture(TU_EMISSIVE, renderTexture);\n\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eFloor.xml\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e\u0026lt;material\u0026gt;\n    \u0026lt;technique name=\"Techniques/DiffReflection.xml\" quality=\"0\" loddistance=\"0\" /\u0026gt;\n    \u0026lt;texture unit=\"diffuse\" name=\"Textures/Wood.jpg\" /\u0026gt;\n    \u0026lt;parameter name=\"UOffset\" value=\"10 0 0 0\" /\u0026gt;\n    \u0026lt;parameter name=\"VOffset\" value=\"0 2 0 0\" /\u0026gt;\n    \u0026lt;parameter name=\"FresnelPower\" value=\"16\" /\u0026gt;\n\u0026lt;/material\u0026gt;\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eDiffReflection.xml\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e\u0026lt;technique vs=\"LitSolid\" ps=\"LitSolid\" psdefines=\"DIFFMAP\"\u0026gt;\n    \u0026lt;pass name=\"base\" /\u0026gt;\n    \u0026lt;pass name=\"litbase\" psdefines=\"AMBIENT\" /\u0026gt;\n    \u0026lt;pass name=\"light\" depthtest=\"equal\" depthwrite=\"false\" blend=\"add\" /\u0026gt;\n    \u0026lt;pass name=\"prepass\" psdefines=\"PREPASS\" /\u0026gt;\n    \u0026lt;pass name=\"material\" psdefines=\"MATERIAL\" depthtest=\"equal\" depthwrite=\"false\" /\u0026gt;\n    \u0026lt;pass name=\"deferred\" psdefines=\"DEFERRED\" /\u0026gt;\n    \u0026lt;pass name=\"depth\" vs=\"Depth\" ps=\"Depth\" /\u0026gt;\n    \u0026lt;pass name=\"shadow\" vs=\"Shadow\" ps=\"Shadow\" /\u0026gt;\n    \u0026lt;pass name=\"refract\" vs=\"Mirror\" ps=\"Mirror\" /\u0026gt;\n\u0026lt;/technique\u0026gt;\n\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eMirror.glsl\u003c/p\u003e\n\u003cp\u003e[code]\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “Uniforms.glsl”\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “Samplers.glsl”\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “Transform.glsl”\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “ScreenPos.glsl”\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “Fog.glsl”\u003c/p\u003e\n\u003cp\u003e\u003cspan class=\"hashtag\"\u003e#ifndef\u003c/span\u003e GL_ES\u003cbr\u003e\nvarying vec4 vScreenPos;\u003cbr\u003e\nvarying vec2 vReflectUV;\u003cbr\u003e\nvarying vec4 vEyeVec;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#else\u003c/span\u003e\u003cbr\u003e\nvarying highp vec4 vScreenPos;\u003cbr\u003e\nvarying highp vec2 vReflectUV;\u003cbr\u003e\nvarying highp vec4 vEyeVec;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#endif\u003c/span\u003e\u003cbr\u003e\nvarying vec3 vNormal;\u003c/p\u003e\n\u003cp\u003e\u003cspan class=\"hashtag\"\u003e#ifdef\u003c/span\u003e COMPILEPS\u003cbr\u003e\nuniform float cFresnelPower;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#endif\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003evoid VS()\u003cbr\u003e\n{\u003cbr\u003e\nmat4 modelMatrix = iModelMatrix;\u003cbr\u003e\nvec3 worldPos = GetWorldPos(modelMatrix);\u003cbr\u003e\ngl_Position = GetClipPos(worldPos);\u003cbr\u003e\nvScreenPos = GetScreenPos(gl_Position);\u003cbr\u003e\n// GetQuadTexCoord() returns a vec2 that is OK for quad rendering; multiply it with output W\u003cbr\u003e\n// coordinate to make it work with arbitrary meshes such as the water plane (perform divide in pixel shader)\u003cbr\u003e\n// Also because the quadTexCoord is based on the clip position, and Y is flipped when rendering to a texture\u003cbr\u003e\n// on OpenGL, must flip again to cancel it out\u003cbr\u003e\nvReflectUV = GetQuadTexCoord(gl_Position);\u003cbr\u003e\nvReflectUV.y = 1.0 - vReflectUV.y;\u003cbr\u003e\nvReflectUV *= gl_Position.w;\u003cbr\u003e\nvNormal = GetWorldNormal(modelMatrix);\u003cbr\u003e\nvEyeVec = vec4(cCameraPos - worldPos, GetDepth(gl_Position));\u003cbr\u003e\n}\u003c/p\u003e\n\u003cp\u003evoid PS()\u003cbr\u003e\n{\u003cbr\u003e\nvec2 refractUV = vScreenPos.xy / vScreenPos.w;\u003cbr\u003e\nvec2 reflectUV = vReflectUV.xy / vScreenPos.w;\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003efloat fresnel = pow(1.0 - clamp(dot(normalize(vEyeVec.xyz), vNormal), 0.0, 1.0), cFresnelPower);\nvec3 refractColor = texture2D(sEnvMap, refractUV).rgb;\nvec3 reflectColor = texture2D(sEmissiveMap, reflectUV).rgb;\nvec3 finalColor = mix(refractColor, reflectColor, fresnel);\n\ngl_FragColor = vec4(GetFog(finalColor, GetFogFactor(vEyeVec.w)), 1.0);\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e}\u003cbr\u003e\n[/code]\u003c/p\u003e","post_number":1,"post_type":1,"updated_at":"2017-06-29T08:00:21.515Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":51,"reads":21,"readers_count":20,"score":261.2,"yours":false,"topic_id":2424,"topic_slug":"mirror-floor-issue","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":2,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":546,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":14554,"name":"","username":"artgolf1000","avatar_template":"/user_avatar/discourse.urho3d.io/artgolf1000/{size}/73_2.png","created_at":"2016-11-24T07:02:34.000Z","cooked":"\u003cp\u003eAfter disabled multi-sample feature on iOS device, the issue disappears.\u003c/p\u003e\n\u003cp\u003eFinally, I figure out an solution, it supports multi-sample feature on iOS devices.\u003c/p\u003e\n\u003cp\u003eFloor.xml\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e\u0026lt;material\u0026gt;\n    \u0026lt;!-- The water example will assign the reflection texture to the emissive unit --\u0026gt;\n    \u0026lt;!-- The engine will automatically assign the refraction (viewport) texture to the environment unit during refract pass --\u0026gt;\n    \u0026lt;technique name=\"Techniques/DiffReflection.xml\" quality=\"0\" loddistance=\"0\" /\u0026gt;\n    \u0026lt;texture unit=\"diffuse\" name=\"Textures/Wood.jpg\" /\u0026gt;\n    \u0026lt;parameter name=\"UOffset\" value=\"4 0 0 0\" /\u0026gt;\n    \u0026lt;parameter name=\"VOffset\" value=\"0 4 0 0\" /\u0026gt;\n    \u0026lt;parameter name=\"MatDiffColor\" value=\"1 1 1 1\" /\u0026gt;\n    \u0026lt;parameter name=\"MatSpecColor\" value=\"0.5 0.5 0.5 16\" /\u0026gt;\n    \u0026lt;parameter name=\"FresnelPower\" value=\"20\" /\u0026gt;\n\u0026lt;/material\u0026gt;\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eDiffReflection.xml\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e\u0026lt;technique vs=\"LitSolid\" ps=\"LitSolid\" psdefines=\"DIFFMAP\"\u0026gt;\n    \u0026lt;pass name=\"base\" /\u0026gt;\n    \u0026lt;pass name=\"litbase\" psdefines=\"AMBIENT\" /\u0026gt;\n    \u0026lt;pass name=\"light\" depthtest=\"equal\" depthwrite=\"false\" blend=\"add\" /\u0026gt;\n    \u0026lt;pass name=\"prepass\" psdefines=\"PREPASS\" /\u0026gt;\n    \u0026lt;pass name=\"material\" psdefines=\"MATERIAL\" depthtest=\"equal\" depthwrite=\"false\" /\u0026gt;\n    \u0026lt;pass name=\"deferred\" psdefines=\"DEFERRED\" /\u0026gt;\n    \u0026lt;pass name=\"depth\" vs=\"Depth\" ps=\"Depth\" /\u0026gt;\n    \u0026lt;pass name=\"shadow\" vs=\"Shadow\" ps=\"Shadow\" /\u0026gt;\n    \u0026lt;pass name=\"refract\" vs=\"Mirror\" ps=\"Mirror\" depthtest=\"equal\" depthwrite=\"false\" blend=\"alpha\" /\u0026gt;\n\u0026lt;/technique\u0026gt;\n\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eMirror.glsl\u003c/p\u003e\n\u003cp\u003e[code]\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “Uniforms.glsl”\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “Samplers.glsl”\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “Transform.glsl”\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “ScreenPos.glsl”\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “Fog.glsl”\u003c/p\u003e\n\u003cp\u003e\u003cspan class=\"hashtag\"\u003e#ifndef\u003c/span\u003e GL_ES\u003cbr\u003e\nvarying vec4 vScreenPos;\u003cbr\u003e\nvarying vec2 vReflectUV;\u003cbr\u003e\nvarying vec4 vEyeVec;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#else\u003c/span\u003e\u003cbr\u003e\nvarying highp vec4 vScreenPos;\u003cbr\u003e\nvarying highp vec2 vReflectUV;\u003cbr\u003e\nvarying highp vec4 vEyeVec;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#endif\u003c/span\u003e\u003cbr\u003e\nvarying vec3 vNormal;\u003c/p\u003e\n\u003cp\u003e\u003cspan class=\"hashtag\"\u003e#ifdef\u003c/span\u003e COMPILEPS\u003cbr\u003e\nuniform float cFresnelPower;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#endif\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003evoid VS()\u003cbr\u003e\n{\u003cbr\u003e\nmat4 modelMatrix = iModelMatrix;\u003cbr\u003e\nvec3 worldPos = GetWorldPos(modelMatrix);\u003cbr\u003e\ngl_Position = GetClipPos(worldPos);\u003cbr\u003e\nvScreenPos = GetScreenPos(gl_Position);\u003cbr\u003e\n// GetQuadTexCoord() returns a vec2 that is OK for quad rendering; multiply it with output W\u003cbr\u003e\n// coordinate to make it work with arbitrary meshes such as the water plane (perform divide in pixel shader)\u003cbr\u003e\n// Also because the quadTexCoord is based on the clip position, and Y is flipped when rendering to a texture\u003cbr\u003e\n// on OpenGL, must flip again to cancel it out\u003cbr\u003e\nvReflectUV = GetQuadTexCoord(gl_Position);\u003cbr\u003e\nvReflectUV.y = 1.0 - vReflectUV.y;\u003cbr\u003e\nvReflectUV *= gl_Position.w;\u003cbr\u003e\nvNormal = GetWorldNormal(modelMatrix);\u003cbr\u003e\nvEyeVec = vec4(cCameraPos - worldPos, GetDepth(gl_Position));\u003cbr\u003e\n}\u003c/p\u003e\n\u003cp\u003evoid PS()\u003cbr\u003e\n{\u003cbr\u003e\nvec2 reflectUV = vReflectUV.xy / vScreenPos.w;\u003cbr\u003e\nfloat fresnel = pow(1.0 - clamp(dot(normalize(vEyeVec.xyz), vNormal), 0.0, 1.0), cFresnelPower);\u003cbr\u003e\nvec3 reflectColor = texture2D(sEmissiveMap, reflectUV).rgb;\u003cbr\u003e\ngl_FragColor = vec4(GetFog(reflectColor, GetFogFactor(vEyeVec.w)), fresnel);\u003cbr\u003e\n}\u003cbr\u003e\n[/code]\u003c/p\u003e","post_number":2,"post_type":1,"updated_at":"2017-06-29T08:00:13.301Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":2,"reads":19,"readers_count":18,"score":13.8,"yours":false,"topic_id":2424,"topic_slug":"mirror-floor-issue","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":546,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":true}],"stream":[14544,14554]},"timeline_lookup":[[1,2191],[2,2190]],"suggested_topics":[{"id":7112,"title":"What is the proper way to add more source files(.cpp and .h) to a project?","fancy_title":"What is the proper way to add more source files(.cpp and .h) to a project?","slug":"what-is-the-proper-way-to-add-more-source-files-cpp-and-h-to-a-project","posts_count":3,"reply_count":1,"highest_post_number":3,"image_url":null,"created_at":"2021-12-27T18:18:21.946Z","last_posted_at":"2021-12-28T12:19:43.514Z","bumped":true,"bumped_at":"2021-12-28T12:19:43.514Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":0,"views":195,"category_id":10,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":1498,"username":"Tryout","name":null,"avatar_template":"https://avatars.discourse-cdn.com/v4/letter/t/85f322/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":628,"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}}]},{"id":7129,"title":"Best Model Import Pipeline as of Jan 2022?","fancy_title":"Best Model Import Pipeline as of Jan 2022?","slug":"best-model-import-pipeline-as-of-jan-2022","posts_count":7,"reply_count":0,"highest_post_number":7,"image_url":null,"created_at":"2022-01-17T09:27:23.432Z","last_posted_at":"2022-01-17T20:37:59.458Z","bumped":true,"bumped_at":"2022-01-17T20:37:59.458Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":4,"views":170,"category_id":10,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":1334,"username":"najak3d","name":"Brian Knox","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/n/6a8cbe/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":263,"username":"1vanK","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/1vank/{size}/768_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":1038,"username":"dertom","name":"Thomas Trocha","avatar_template":"/user_avatar/discourse.urho3d.io/dertom/{size}/1815_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":192,"username":"Modanung","name":"魔大农 𝞍𝞎𝝳 現招蜍","avatar_template":"/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":1165,"username":"throwawayerino","name":"Actually Permanent","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/t/da6949/{size}.png"}}]},{"id":7138,"title":"Build fails (linking phase) on Linux","fancy_title":"Build fails (linking phase) on Linux","slug":"build-fails-linking-phase-on-linux","posts_count":4,"reply_count":0,"highest_post_number":4,"image_url":null,"created_at":"2022-01-20T03:08:29.663Z","last_posted_at":"2022-01-21T15:27:41.192Z","bumped":true,"bumped_at":"2022-01-21T15:27:41.192Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":3,"views":178,"category_id":10,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":null,"description":"Original Poster","user":{"id":1502,"username":"jasperry","name":"Jason Perry","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/j/5fc32e/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":1038,"username":"dertom","name":"Thomas Trocha","avatar_template":"/user_avatar/discourse.urho3d.io/dertom/{size}/1815_2.png"}},{"extras":"latest","description":"Most Recent Poster","user":{"id":1304,"username":"lebrewer","name":"lebrewer","avatar_template":"/user_avatar/discourse.urho3d.io/lebrewer/{size}/2811_2.png"}}]},{"id":7176,"title":"Orthographic scene slowing down when zooming out","fancy_title":"Orthographic scene slowing down when zooming out","slug":"orthographic-scene-slowing-down-when-zooming-out","posts_count":1,"reply_count":0,"highest_post_number":1,"image_url":null,"created_at":"2022-01-30T10:05:50.218Z","last_posted_at":"2022-01-30T10:05:50.294Z","bumped":true,"bumped_at":"2022-01-30T10:05:50.294Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":0,"views":127,"category_id":10,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest single","description":"Original Poster, Most Recent Poster","user":{"id":1351,"username":"Haukinger","name":"Haukinger","avatar_template":"/user_avatar/discourse.urho3d.io/haukinger/{size}/3670_2.png"}}]},{"id":7208,"title":"ScreenSpace Y - Inverted for View3D and RTT","fancy_title":"ScreenSpace Y - Inverted for View3D and RTT","slug":"screenspace-y-inverted-for-view3d-and-rtt","posts_count":14,"reply_count":11,"highest_post_number":15,"image_url":"https://global.discourse-cdn.com/standard17/uploads/urho3d/optimized/2X/5/506273b200a2f3337a69438a7989218d599e587b_2_823x1024.png","created_at":"2022-02-24T23:11:35.590Z","last_posted_at":"2022-03-09T12:27:07.577Z","bumped":true,"bumped_at":"2022-03-09T12:27:07.577Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":4,"views":268,"category_id":10,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":null,"description":"Original Poster","user":{"id":1334,"username":"najak3d","name":"Brian Knox","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/n/6a8cbe/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":1004,"username":"GoldenThumbs","name":"Golden Thumbs","avatar_template":"/user_avatar/discourse.urho3d.io/goldenthumbs/{size}/1669_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":627,"username":"George1","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/g/9e8a1a/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":1335,"username":"justanotherdev","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/j/e8c25b/{size}.png"}},{"extras":"latest","description":"Most Recent Poster","user":{"id":628,"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}}]}],"tags_descriptions":{},"id":2424,"title":"Mirror Floor Issue","fancy_title":"Mirror Floor Issue","posts_count":2,"created_at":"2016-11-23T06:29:04.000Z","views":406,"reply_count":0,"like_count":0,"last_posted_at":"2016-11-24T07:02:34.000Z","visible":true,"closed":false,"archived":false,"has_summary":false,"archetype":"regular","slug":"mirror-floor-issue","category_id":10,"word_count":802,"deleted_at":null,"user_id":546,"featured_link":null,"pinned_globally":false,"pinned_at":null,"pinned_until":null,"image_url":null,"slow_mode_seconds":0,"draft":null,"draft_key":"topic_2424","draft_sequence":null,"unpinned":null,"pinned":false,"current_post_number":1,"highest_post_number":2,"deleted_by":null,"actions_summary":[{"id":4,"count":0,"hidden":false,"can_act":false},{"id":8,"count":0,"hidden":false,"can_act":false},{"id":7,"count":0,"hidden":false,"can_act":false}],"chunk_size":20,"bookmarked":false,"bookmarks":[],"topic_timer":null,"message_bus_last_id":0,"participant_count":1,"show_read_indicator":false,"thumbnails":null,"slow_mode_enabled_until":null,"tags_disable_ads":false,"accepted_answer":{"post_number":2,"username":"artgolf1000","excerpt":"After disabled multi-sample feature on iOS device, the issue disappears. \nFinally, I figure out an solution, it supports multi-sample feature on iOS devices. \nFloor.xml \n\u0026lt;material\u0026gt;\n    \u0026lt;!-- The water example will assign the reflection texture to the emissive unit --\u0026gt;\n    \u0026lt;!-- The engine will automat\u0026hellip;"},"details":{"can_edit":false,"notification_level":1,"participants":[{"id":546,"username":"artgolf1000","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/artgolf1000/{size}/73_2.png","post_count":2,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"trust_level":2}],"created_by":{"id":546,"username":"artgolf1000","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/artgolf1000/{size}/73_2.png"},"last_poster":{"id":546,"username":"artgolf1000","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/artgolf1000/{size}/73_2.png"}}}