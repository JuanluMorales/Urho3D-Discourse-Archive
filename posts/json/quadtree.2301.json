{"post_stream":{"posts":[{"id":13921,"name":"","username":"slapin","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/dfb087/{size}.png","created_at":"2016-10-06T08:13:47.000Z","cooked":"\u003cp\u003eI decided to share a piece in AngelScript. It is useful to greatly reduce number of tests looking for neighbours.\u003c/p\u003e\n\u003cp\u003eMain code:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003eclass Vertex {\n    Vector2 coords;\n    Vertex(Vector2 c)\n    {\n        this.coords = c;\n    }\n    int opCmp(Vertex@ other)\n    {\n        if (coords.x \u0026gt; other.coords.x)\n            return 1;\n        else if (coords.x \u0026lt; other.coords.x)\n            return -1;\n        else if (coords.y \u0026gt; other.coords.y)\n            return 1;\n        else if (coords.y \u0026lt; other.coords.y)\n            return -1;\n        else return 0;\n    }\n    bool opEquals(Vertex@ other)\n    {\n        if (other.coords == coords)\n            return true;\n        else\n            return false;\n    }\n    String ToString() {\n        return \"Vertex [\" + String(coords.x) + \" \" + String(coords.y) + \"]\";\n    }\n};\nclass Quadtree {\n    Array\u0026lt;Vertex@\u0026gt; vertices(4);\n    Rect rect;\n    int num_stored = 0;\n    bool split = false;\n    Quadtree@ NE;\n    Quadtree@ NW;\n    Quadtree@ SW;\n    Quadtree@ SE;\n    Array\u0026lt;Quadtree@\u0026gt; sa(4);\n    int count()\n    {\n        int ret = num_stored;\n        if (split) {\n           for (int i = 0; i \u0026lt; sa.length; i++)\n               ret += sa[i].count();\n        }\n        return ret;\n    }\n    String ToString()\n    {\n        String rectstr = rect.ToVector4().ToString();\n        return rectstr;\n    }\n    private void do_split()\n    {\n        float midx = (rect.left + rect.right) / 2.0;\n        float midy = (rect.top + rect.bottom) / 2.0;\n        NE = Quadtree(Rect(midx, rect.top, rect.right, midy));\n        NW = Quadtree(Rect(rect.left, rect.top, midx, midy));\n        SW = Quadtree(Rect(rect.left, midy, midx, rect.bottom));\n        SE = Quadtree(Rect(midx, midy, rect.right, rect.bottom));\n        split = true;\n        sa[0] = NE;\n        sa[1] = NW;\n        sa[2] = SW;\n        sa[3] = SE;\n    }\n    bool insert(Vertex@ vertex)\n    {\n        if ((rect.IsInside(vertex.coords) == OUTSIDE)) {\n            return false;\n        }\n        if (num_stored \u0026lt; 4) {\n            vertices[num_stored] = vertex;\n            num_stored++;\n            return true;\n        } else {\n            if (!split)\n                do_split();\n            for (int i = 0; i \u0026lt; sa.length; i++)\n                if (sa[i].insert(vertex))\n                    return true;\n        }\n        return false;\n    }\n    Array\u0026lt;Vertex@\u0026gt; search(Rect r)\n    {\n        int intersecting = 0, i, j;\n        Array\u0026lt;Vertex@\u0026gt; ret;\n        if (num_stored == 0 \u0026amp;\u0026amp; !split)\n            return ret;\n        Rect tr(r);\n        tr.Clip(rect);\n        if (tr.size.length == M_INFINITY)\n            return ret;\n        ret.Resize(num_stored);\n        for (i = 0; i \u0026lt; num_stored; i++)\n            ret[i] = vertices[i];\n        if (split) {\n            for (i = 0; i \u0026lt; sa.length; i++) {\n                Array\u0026lt;Vertex@\u0026gt; tmp = sa[i].search(r);\n                int offset = ret.length;\n                ret.Resize(offset + tmp.length);\n                for (j = 0; j \u0026lt; tmp.length; j++) {\n                    ret[offset + j] = tmp[j];\n                }\n            }\n        }\n        return ret;\n    }\n    Rect find_rect(Vertex@ v)\n    {\n        vertices.Resize(num_stored);\n        if (vertices.Find(v) \u0026gt;= 0)\n            return rect;\n        else if (split)\n            for (int i = 0; i \u0026lt; sa.length; i++) {\n                Rect r = sa[i].find_rect(v);\n                if (r.size.length \u0026gt; 0)\n                    return r;\n            }\n         return Rect();\n    }\n    Quadtree(Rect r)\n    {\n        rect = r;\n    }\n};\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eTest program / usage example:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003e#include \"Vertex2.as\"\n\nvoid Start()\n{\n    Quadtree q(Rect(-500, -500, 500, 500));\n    Image img;\n    Rect search_rect(-100, -100, 100, 100);\n    img.SetSize(1000, 1000, 3);\n    img.ClearInt(0);\n    int inrect = 0;\n    int count = 0;\n    Array\u0026lt;Vertex@\u0026gt; all_points;\n    for (int i = 0; i \u0026lt; 100000; i++) {\n        Vertex v(Vector2(Random(-500, 500), Random(-500, 500)));\n        if (q.insert(v)) {\n            count++;\n            if (search_rect.IsInside(v.coords) != OUTSIDE) {\n                all_points.Push(v);\n                inrect++;\n                img.SetPixel(v.coords.x + 500, v.coords.y + 500, Color(1.0, 1.0, 0.0));\n            } else\n                img.SetPixel(v.coords.x + 500, v.coords.y + 500, Color(1.0, 0.0, 0.0));\n        } else\n            img.SetPixel(v.coords.x + 500, v.coords.y + 500, Color(0.1, 0.1, 1.0));\n    }\n    Print(\"Searching\");\n    Array\u0026lt;Vertex@\u0026gt; vs = q.search(search_rect);\n    Print(\"Search done\");\n    for (int i = 0; i \u0026lt; vs.length; i++)\n        img.SetPixel(vs[i].coords.x + 500, vs[i].coords.y + 500, Color(0.6, 1.0, 0.6));\n    Print(\"inrect: \" + String(inrect));\n    img.SavePNG(\"quadtree.png\");\n    Print(\"Saved\");\n    engine.Exit();\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThe idea is that you use “insert” method to insert vertices and search for looking at them.\u003c/p\u003e\n\u003cp\u003eOn image - red vertices are all vertices, green - the ones found by search.\u003c/p\u003e","post_number":1,"post_type":1,"updated_at":"2017-01-02T01:14:35.377Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":21,"reads":18,"readers_count":17,"score":108.6,"yours":false,"topic_id":2301,"topic_slug":"quadtree","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":554,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false}],"stream":[13921]},"timeline_lookup":[[1,2239]],"suggested_topics":[{"id":7099,"title":":fallen_leaf: Polynomials \u0026 Harmonics","fancy_title":":fallen_leaf: Polynomials \u0026amp; Harmonics","slug":"polynomials-harmonics","posts_count":6,"reply_count":0,"highest_post_number":7,"image_url":null,"created_at":"2021-12-13T05:06:04.641Z","last_posted_at":"2021-12-27T23:27:39.489Z","bumped":true,"bumped_at":"2021-12-27T23:27:39.489Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"unicode_title":"🍂 Polynomials \u0026 Harmonics","tags_descriptions":{},"like_count":6,"views":392,"category_id":13,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest single","description":"Original Poster, Most Recent Poster","user":{"id":192,"username":"Modanung","name":"魔大农 𝞍𝞎𝝳 現招蜍","avatar_template":"/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png"}}]},{"id":7103,"title":":test_tube: DebugRenderer as GUI","fancy_title":":test_tube: DebugRenderer as GUI","slug":"debugrenderer-as-gui","posts_count":4,"reply_count":1,"highest_post_number":4,"image_url":null,"created_at":"2021-12-17T02:25:06.606Z","last_posted_at":"2021-12-18T01:09:27.738Z","bumped":true,"bumped_at":"2021-12-18T01:09:27.738Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"unicode_title":"🧪 DebugRenderer as GUI","tags_descriptions":{},"like_count":4,"views":267,"category_id":13,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":192,"username":"Modanung","name":"魔大农 𝞍𝞎𝝳 現招蜍","avatar_template":"/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":861,"username":"GodMan","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/g/e79b87/{size}.png"}}]},{"id":7110,"title":"Resource fetch define","fancy_title":"Resource fetch define","slug":"resource-fetch-define","posts_count":2,"reply_count":0,"highest_post_number":2,"image_url":null,"created_at":"2021-12-27T12:28:55.126Z","last_posted_at":"2021-12-27T17:00:37.699Z","bumped":true,"bumped_at":"2021-12-27T17:00:37.699Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":7,"views":184,"category_id":13,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":null,"description":"Original Poster","user":{"id":192,"username":"Modanung","name":"魔大农 𝞍𝞎𝝳 現招蜍","avatar_template":"/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png"}},{"extras":"latest","description":"Most Recent Poster","user":{"id":1304,"username":"lebrewer","name":"lebrewer","avatar_template":"/user_avatar/discourse.urho3d.io/lebrewer/{size}/2811_2.png"}}]},{"id":7120,"title":"Log Error Once Macro","fancy_title":"Log Error Once Macro","slug":"log-error-once-macro","posts_count":1,"reply_count":0,"highest_post_number":1,"image_url":null,"created_at":"2022-01-04T02:24:37.857Z","last_posted_at":"2022-01-04T02:24:37.925Z","bumped":true,"bumped_at":"2022-01-04T02:24:37.925Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":3,"views":143,"category_id":13,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest single","description":"Original Poster, Most Recent Poster","user":{"id":628,"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}}]},{"id":7129,"title":"Best Model Import Pipeline as of Jan 2022?","fancy_title":"Best Model Import Pipeline as of Jan 2022?","slug":"best-model-import-pipeline-as-of-jan-2022","posts_count":7,"reply_count":0,"highest_post_number":7,"image_url":null,"created_at":"2022-01-17T09:27:23.432Z","last_posted_at":"2022-01-17T20:37:59.458Z","bumped":true,"bumped_at":"2022-01-17T20:37:59.458Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":4,"views":170,"category_id":10,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":1334,"username":"najak3d","name":"Brian Knox","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/n/6a8cbe/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":263,"username":"1vanK","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/1vank/{size}/768_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":1038,"username":"dertom","name":"Thomas Trocha","avatar_template":"/user_avatar/discourse.urho3d.io/dertom/{size}/1815_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":192,"username":"Modanung","name":"魔大农 𝞍𝞎𝝳 現招蜍","avatar_template":"/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":1165,"username":"throwawayerino","name":"Actually Permanent","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/t/da6949/{size}.png"}}]}],"tags_descriptions":{},"id":2301,"title":"Quadtree","fancy_title":"Quadtree","posts_count":1,"created_at":"2016-10-06T08:13:47.000Z","views":614,"reply_count":0,"like_count":0,"last_posted_at":"2016-10-06T08:13:47.000Z","visible":true,"closed":false,"archived":false,"has_summary":false,"archetype":"regular","slug":"quadtree","category_id":13,"word_count":602,"deleted_at":null,"user_id":554,"featured_link":null,"pinned_globally":false,"pinned_at":null,"pinned_until":null,"image_url":null,"slow_mode_seconds":0,"draft":null,"draft_key":"topic_2301","draft_sequence":null,"unpinned":null,"pinned":false,"current_post_number":1,"highest_post_number":1,"deleted_by":null,"actions_summary":[{"id":4,"count":0,"hidden":false,"can_act":false},{"id":8,"count":0,"hidden":false,"can_act":false},{"id":7,"count":0,"hidden":false,"can_act":false}],"chunk_size":20,"bookmarked":false,"bookmarks":[],"topic_timer":null,"message_bus_last_id":0,"participant_count":1,"show_read_indicator":false,"thumbnails":null,"slow_mode_enabled_until":null,"tags_disable_ads":false,"details":{"can_edit":false,"notification_level":1,"participants":[{"id":554,"username":"slapin","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/dfb087/{size}.png","post_count":1,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"trust_level":2}],"created_by":{"id":554,"username":"slapin","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/dfb087/{size}.png"},"last_poster":{"id":554,"username":"slapin","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/dfb087/{size}.png"}}}