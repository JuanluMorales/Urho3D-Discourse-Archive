{"post_stream":{"posts":[{"id":39104,"name":null,"username":"vmost","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/v/5f9b8f/{size}.png","created_at":"2020-09-26T17:59:45.064Z","cooked":"\u003cp\u003eHi, I’d like to have a switch statement for events, but can’t seem to figure it out.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003eswitch (eventType)\n{\ncase E_KEYUP:\n...\nbreak;\ncase E_KEYDOWN:\n...\nbreak;\ndefault:\n};\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eSeems like it should be simple, right? My compiler complains\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003eerror: switch condition type\n      'Urho3D::StringHash' requires explicit conversion to 'bool'\n        switch (eventType)\n...\nerror: value of type\n      'const Urho3D::StringHash' is not implicitly convertible to 'int'\n                case E_KEYUP:\n\u003c/code\u003e\u003c/pre\u003e","post_number":1,"post_type":1,"updated_at":"2020-09-26T17:59:45.064Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":4,"reads":34,"readers_count":33,"score":26.8,"yours":false,"topic_id":6404,"topic_slug":"switch-statement-and-events","display_username":null,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":1363,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":39105,"name":null,"username":"vmost","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/v/5f9b8f/{size}.png","created_at":"2020-09-26T18:21:31.349Z","cooked":"\u003cp\u003eApparently you can \u003ca href=\"https://en.cppreference.com/w/cpp/language/switch\" rel=\"noopener nofollow ugc\"\u003eonly use switch statements with integer types\u003c/a\u003e. I’ll just use if-else branches…\u003c/p\u003e\n\u003cp\u003eP.S. Trying to use \u003ccode\u003e.Value()\u003c/code\u003e had const-ness issues.\u003c/p\u003e","post_number":2,"post_type":1,"updated_at":"2020-09-27T19:22:37.972Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":0,"reads":33,"readers_count":32,"score":6.6,"yours":false,"topic_id":6404,"topic_slug":"switch-statement-and-events","display_username":null,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"link_counts":[{"url":"https://en.cppreference.com/w/cpp/language/switch","internal":false,"reflection":false,"title":"switch statement - cppreference.com","clicks":1}],"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":1363,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":39110,"name":"SirNate0","username":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png","created_at":"2020-09-27T03:00:18.075Z","cooked":"\u003cp\u003eI think can get around that problem by defining some constexpr methods, I think (the hashing ones) and/or adding a user defined literal, but it might require c++14 for the while loop or a recursive style rewrite of the function.\u003c/p\u003e\n\u003cp\u003eBut yes, if-else is probably easier.\u003c/p\u003e","post_number":3,"post_type":1,"updated_at":"2020-09-27T03:00:18.075Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":0,"reads":30,"readers_count":29,"score":6.0,"yours":false,"topic_id":6404,"topic_slug":"switch-statement-and-events","display_username":"SirNate0","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":628,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":39112,"name":"","username":"S.L.C","avatar_template":"/user_avatar/discourse.urho3d.io/s.l.c/{size}/1016_2.png","created_at":"2020-09-27T09:30:34.132Z","cooked":"\u003cp\u003eIf you really want that approach, without having to dig into the engine and modify things, then you could modify the \u003ccode\u003eSource/Urho3D/Math/MathDefs.h\u003c/code\u003e file and simply add near the \u003ccode\u003eSDBMHash\u003c/code\u003e function the following:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e/// Retrieve the lowercase version of an ASCII character.\ninline constexpr int tolower_cx(int c) { return (c \u0026gt; 64 \u0026amp;\u0026amp; c \u0026lt; 91) ? (c + 32) : c; }\n\n/// Retrieve the uppercase version of an ASCII character.\ninline constexpr int toupper_cx(int c) { return (c \u0026gt; 96 \u0026amp;\u0026amp; c \u0026lt; 123) ? (c - 32) : c; }\n\n/// Calculate the hash of the given ASCII string using the SDBM algorithm at compile time.\ninline constexpr unsigned SDBMHash_Cx(const char* s, unsigned i, unsigned n, unsigned h) {\n    return i \u0026lt; n ? SDBMHash_Cx(s, i + 1, n, tolower_cx(s[i]) + (h \u0026lt;\u0026lt; 6) + (h \u0026lt;\u0026lt; 16) - h) : h;\n}\n\n/// User defined literal for converting strings to hashes at compile time.\ninline constexpr unsigned operator \"\" _H(const char* str, size_t len) { return SDBMHash_Cx(str, 0, len, 0); }\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eOr even add it to your files if that’s all you need. Doesn’t matter where you add it as long as it can be used.\u003c/p\u003e\n\u003cp\u003eAnd then use the event name directly instead of it’s ID:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eswitch (eventType.Value())\n{\n    case \"KeyUp\"_H:\n    \n    break;\n    case \"KeyDown\"_H:\n    \n    break;\n    default:\n};\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eAnd if you want, you could change the user defined literal name from \u003ccode\u003e_H\u003c/code\u003e to \u003ccode\u003e_E\u003c/code\u003e or \u003ccode\u003e_Event\u003c/code\u003e if you want it to make sense. Or you could keep all of them since they’ll be discarded after compile.\u003c/p\u003e\n\u003cp\u003eThere are a bunch of places where Urho could’ve make use of \u003ccode\u003econstexpr\u003c/code\u003e. But it’s using C++11 \u003ccode\u003econstexpr\u003c/code\u003e. Which is somewhat limited. Wish the engine would’ve jumped straight to C++14 since that’s the sweet spot between compiler support and language features. 17 would be too high but 11 is too low.\u003c/p\u003e\n\u003cp\u003eC++14 removes some \u003ccode\u003econstexpr\u003c/code\u003e limitations and would’ve made some things easier and probably better looking.\u003c/p\u003e\n\u003cp\u003eBut at this point, the engine would require some major changes as it wasn’t initially designed with that in mind.\u003c/p\u003e","post_number":4,"post_type":1,"updated_at":"2020-09-27T19:22:40.741Z","reply_count":1,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":0,"reads":28,"readers_count":27,"score":25.6,"yours":false,"topic_id":6404,"topic_slug":"switch-statement-and-events","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[{"id":2,"count":1}],"moderator":false,"admin":false,"staff":false,"user_id":180,"hidden":false,"trust_level":0,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"user_suspended":true,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":true},{"id":39113,"name":null,"username":"vmost","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/v/5f9b8f/{size}.png","created_at":"2020-09-27T19:18:47.549Z","cooked":"\u003cp\u003eWhy not just jump to C++14 now? Would the engine have to be refactored? I haven’t tried compiling it with C++14, but my own project needs it and compiles fine with Urho3D as library. EDIT: I suppose using a new C++ version would break the API, so perhaps it would be appropriate for Urho3D2.0.\u003c/p\u003e\n\u003cp\u003eThen just use 6-year lead time as policy for updating basic C++ version, or 4/5year idk.\u003c/p\u003e","post_number":5,"post_type":1,"updated_at":"2020-09-27T19:26:23.153Z","reply_count":1,"reply_to_post_number":4,"quote_count":0,"incoming_link_count":0,"reads":25,"readers_count":24,"score":10.0,"yours":false,"topic_id":6404,"topic_slug":"switch-statement-and-events","display_username":null,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":2,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"reply_to_user":{"username":"S.L.C","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/s.l.c/{size}/1016_2.png"},"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":1363,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":39114,"name":"","username":"S.L.C","avatar_template":"/user_avatar/discourse.urho3d.io/s.l.c/{size}/1016_2.png","created_at":"2020-09-27T19:41:34.406Z","cooked":"\u003cp\u003eThe engine just recently “\u003cem\u003eswitched\u003c/em\u003e” to C++11. But only on paper. Not a lot of C++11 was adopted. And I honestly don’t mind. It would take a significant amount work to rewrite all parts of the engine to use C++11 or newer. So I don’t/can’t blame anyone for not happening. I’m certainly not helping in that regard. Even though I could. But time issues \u003cimg src=\"https://emoji.discourse-cdn.com/twitter/smiley.png?v=9\" title=\":smiley:\" class=\"emoji\" alt=\":smiley:\"\u003e\u003c/p\u003e\n\u003cp\u003eSo yes, you can enable C++14 if your project needs it. Engine has no issue regardless of what C++ version you use as long as it’s newer than what it needs.\u003c/p\u003e\n\u003cp\u003eMSVC likely played an important role in people adopting these new standards. Since it lags behind with implementing newer standards.\u003c/p\u003e\n\u003cp\u003eFor example, the extended/relaxed \u003ccode\u003econstexpr\u003c/code\u003e from C++14 that I was talking about earlier was implemented in MSVC 2017 but IIRC it had issues which were addressed later on.\u003c/p\u003e\n\u003cp\u003eFor comparison, GCC had it since version 5 from 2015 and Clang had it since version 3.4 from 2013.\u003c/p\u003e\n\u003cp\u003e            \u003c/p\u003e\u003cdiv class=\"onebox imgur-album\"\u003e\n              \u003ca href=\"https://imgur.com/a/7AacLFB\" target=\"_blank\" rel=\"noopener\"\u003e\n                \u003cspan class=\"outer-box\" style=\"width:600px\"\u003e\n                  \u003cspan class=\"inner-box\"\u003e\n                    \u003cspan class=\"album-title\"\u003e[Album] Extended constexpr\u003c/span\u003e\n                  \u003c/span\u003e\n                \u003c/span\u003e\n                \u003cimg src=\"https://i.imgur.com/7tvKKNn.png?fb\" title=\"Extended constexpr\" height=\"315\" width=\"600\"\u003e\n              \u003c/a\u003e\n            \u003c/div\u003e\n","post_number":6,"post_type":1,"updated_at":"2020-09-27T19:44:37.612Z","reply_count":0,"reply_to_post_number":5,"quote_count":0,"incoming_link_count":2,"reads":25,"readers_count":24,"score":105.0,"yours":false,"topic_id":6404,"topic_slug":"switch-statement-and-events","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"link_counts":[{"url":"https://imgur.com/a/7AacLFB","internal":false,"reflection":false,"title":"Extended constexpr - Album on Imgur","clicks":6}],"read":true,"user_title":null,"reply_to_user":{"username":"vmost","name":null,"avatar_template":"https://avatars.discourse-cdn.com/v4/letter/v/5f9b8f/{size}.png"},"bookmarked":false,"actions_summary":[{"id":2,"count":2}],"moderator":false,"admin":false,"staff":false,"user_id":180,"hidden":false,"trust_level":0,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"user_suspended":true,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false}],"stream":[39104,39105,39110,39112,39113,39114]},"timeline_lookup":[[1,787],[5,786]],"suggested_topics":[{"id":7127,"title":"Switching ribbon trails emission glitches transparent materials","fancy_title":"Switching ribbon trails emission glitches transparent materials","slug":"switching-ribbon-trails-emission-glitches-transparent-materials","posts_count":8,"reply_count":3,"highest_post_number":8,"image_url":null,"created_at":"2022-01-13T17:17:46.847Z","last_posted_at":"2022-02-10T08:10:49.330Z","bumped":true,"bumped_at":"2022-02-10T08:10:49.330Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":0,"views":323,"category_id":10,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":1188,"username":"Taqer","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/t/d2c977/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":628,"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":631,"username":"JTippetts1","name":"J Tippetts","avatar_template":"/user_avatar/discourse.urho3d.io/jtippetts1/{size}/96_2.png"}}]},{"id":7138,"title":"Build fails (linking phase) on Linux","fancy_title":"Build fails (linking phase) on Linux","slug":"build-fails-linking-phase-on-linux","posts_count":4,"reply_count":0,"highest_post_number":4,"image_url":null,"created_at":"2022-01-20T03:08:29.663Z","last_posted_at":"2022-01-21T15:27:41.192Z","bumped":true,"bumped_at":"2022-01-21T15:27:41.192Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":3,"views":178,"category_id":10,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":null,"description":"Original Poster","user":{"id":1502,"username":"jasperry","name":"Jason Perry","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/j/5fc32e/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":1038,"username":"dertom","name":"Thomas Trocha","avatar_template":"/user_avatar/discourse.urho3d.io/dertom/{size}/1815_2.png"}},{"extras":"latest","description":"Most Recent Poster","user":{"id":1304,"username":"lebrewer","name":"lebrewer","avatar_template":"/user_avatar/discourse.urho3d.io/lebrewer/{size}/2811_2.png"}}]},{"id":7156,"title":"Manual Mesh Part Animation (e.g. Rotate a propeller)","fancy_title":"Manual Mesh Part Animation (e.g. Rotate a propeller)","slug":"manual-mesh-part-animation-e-g-rotate-a-propeller","posts_count":4,"reply_count":1,"highest_post_number":4,"image_url":null,"created_at":"2022-01-26T23:50:29.343Z","last_posted_at":"2022-01-27T05:31:02.766Z","bumped":true,"bumped_at":"2022-01-27T05:31:02.766Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":4,"views":155,"category_id":10,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":1334,"username":"najak3d","name":"Brian Knox","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/n/6a8cbe/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":631,"username":"JTippetts1","name":"J Tippetts","avatar_template":"/user_avatar/discourse.urho3d.io/jtippetts1/{size}/96_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":1038,"username":"dertom","name":"Thomas Trocha","avatar_template":"/user_avatar/discourse.urho3d.io/dertom/{size}/1815_2.png"}}]},{"id":7129,"title":"Best Model Import Pipeline as of Jan 2022?","fancy_title":"Best Model Import Pipeline as of Jan 2022?","slug":"best-model-import-pipeline-as-of-jan-2022","posts_count":7,"reply_count":0,"highest_post_number":7,"image_url":null,"created_at":"2022-01-17T09:27:23.432Z","last_posted_at":"2022-01-17T20:37:59.458Z","bumped":true,"bumped_at":"2022-01-17T20:37:59.458Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":4,"views":170,"category_id":10,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":1334,"username":"najak3d","name":"Brian Knox","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/n/6a8cbe/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":263,"username":"1vanK","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/1vank/{size}/768_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":1038,"username":"dertom","name":"Thomas Trocha","avatar_template":"/user_avatar/discourse.urho3d.io/dertom/{size}/1815_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":192,"username":"Modanung","name":"魔大农 𝞍𝞎𝝳 現招蜍","avatar_template":"/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":1165,"username":"throwawayerino","name":"Actually Permanent","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/t/da6949/{size}.png"}}]},{"id":7212,"title":"Shadow Gap between Feet and Plane","fancy_title":"Shadow Gap between Feet and Plane","slug":"shadow-gap-between-feet-and-plane","posts_count":2,"reply_count":0,"highest_post_number":2,"image_url":"https://global.discourse-cdn.com/standard17/uploads/urho3d/optimized/2X/8/897538cff25de49fafa7aa77574f822e99576b67_2_1024x686.jpeg","created_at":"2022-03-07T00:04:17.351Z","last_posted_at":"2022-03-07T00:17:57.413Z","bumped":true,"bumped_at":"2022-03-07T00:17:57.413Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":2,"views":137,"category_id":10,"featured_link":null,"has_accepted_answer":true,"posters":[{"extras":"latest single","description":"Original Poster, Most Recent Poster, Accepted Answer","user":{"id":1334,"username":"najak3d","name":"Brian Knox","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/n/6a8cbe/{size}.png"}}]}],"tags_descriptions":{},"id":6404,"title":"Switch statement and events","fancy_title":"Switch statement and events","posts_count":6,"created_at":"2020-09-26T17:59:44.924Z","views":294,"reply_count":2,"like_count":3,"last_posted_at":"2020-09-27T19:41:34.406Z","visible":true,"closed":false,"archived":false,"has_summary":false,"archetype":"regular","slug":"switch-statement-and-events","category_id":10,"word_count":744,"deleted_at":null,"user_id":1363,"featured_link":null,"pinned_globally":false,"pinned_at":null,"pinned_until":null,"image_url":null,"slow_mode_seconds":0,"draft":null,"draft_key":"topic_6404","draft_sequence":null,"unpinned":null,"pinned":false,"current_post_number":1,"highest_post_number":6,"deleted_by":null,"actions_summary":[{"id":4,"count":0,"hidden":false,"can_act":false},{"id":8,"count":0,"hidden":false,"can_act":false},{"id":7,"count":0,"hidden":false,"can_act":false}],"chunk_size":20,"bookmarked":false,"bookmarks":[],"topic_timer":null,"message_bus_last_id":0,"participant_count":3,"show_read_indicator":false,"thumbnails":null,"slow_mode_enabled_until":null,"tags_disable_ads":false,"accepted_answer":{"post_number":4,"username":"S.L.C","excerpt":"If you really want that approach, without having to dig into the engine and modify things, then you could modify the Source/Urho3D/Math/MathDefs.h file and simply add near the SDBMHash function the following: \n/// Retrieve the lowercase version of an ASCII character.\ninline constexpr int tolower_cx(\u0026hellip;"},"details":{"can_edit":false,"notification_level":1,"participants":[{"id":1363,"username":"vmost","name":null,"avatar_template":"https://avatars.discourse-cdn.com/v4/letter/v/5f9b8f/{size}.png","post_count":3,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"trust_level":2},{"id":180,"username":"S.L.C","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/s.l.c/{size}/1016_2.png","post_count":2,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"trust_level":0},{"id":628,"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png","post_count":1,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"trust_level":2}],"created_by":{"id":1363,"username":"vmost","name":null,"avatar_template":"https://avatars.discourse-cdn.com/v4/letter/v/5f9b8f/{size}.png"},"last_poster":{"id":180,"username":"S.L.C","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/s.l.c/{size}/1016_2.png"},"links":[{"url":"https://imgur.com/a/7AacLFB","title":"Extended constexpr - Album on Imgur","internal":false,"attachment":false,"reflection":false,"clicks":6,"user_id":180,"domain":"imgur.com","root_domain":"imgur.com"},{"url":"https://en.cppreference.com/w/cpp/language/switch","title":"switch statement - cppreference.com","internal":false,"attachment":false,"reflection":false,"clicks":1,"user_id":1363,"domain":"en.cppreference.com","root_domain":"cppreference.com"}]}}