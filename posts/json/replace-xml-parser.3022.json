{"post_stream":{"posts":[{"id":17216,"name":"","username":"smellymumbler","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/ad7895/{size}.png","created_at":"2017-04-17T23:10:56.592Z","cooked":"\u003cp\u003eHow easy it is to replace the existing XML parser with any other format? I mean, i intend to use something like \u003ca href=\"https://github.com/mayah/tinytoml\" rel=\"nofollow noopener\"\u003ehttps://github.com/mayah/tinytoml\u003c/a\u003e or \u003ca href=\"https://github.com/jbeder/yaml-cpp\" rel=\"nofollow noopener\"\u003ehttps://github.com/jbeder/yaml-cpp\u003c/a\u003e, but i want to know if there‚Äôs a common file-loading interface or any documentation on that.\u003c/p\u003e","post_number":1,"post_type":1,"updated_at":"2017-04-17T23:10:56.592Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":9,"reads":27,"readers_count":26,"score":52.4,"yours":false,"topic_id":3022,"topic_slug":"replace-xml-parser","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"link_counts":[{"url":"https://github.com/mayah/tinytoml","internal":false,"reflection":false,"title":"GitHub - mayah/tinytoml: A header only C++11 library for parsing TOML","clicks":1},{"url":"https://github.com/jbeder/yaml-cpp","internal":false,"reflection":false,"title":"GitHub - jbeder/yaml-cpp: A YAML parser and emitter in C++","clicks":1}],"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":674,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":17218,"name":"Jonathan","username":"Sinoid","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/f19dbf/{size}.png","created_at":"2017-04-18T01:35:34.830Z","cooked":"\u003cp\u003eThere‚Äôs nothing that‚Äôs top-level shared. Binary, XML, and JSON are each their own separate paths.\u003c/p\u003e\n\u003cp\u003eIt‚Äôs just a matter of the volume of work. As long as you support Variant, then the Node, UI, and Component derived types are little effort. However, there‚Äôs a fair bit going on with techniques, texture XML config, materials, particle effects, etc that will require much more work. Probably quite a bit in Urho2D as well.\u003c/p\u003e\n\u003cp\u003eIt adds up to an awful lot of possible paths to test and confirm.\u003c/p\u003e","post_number":2,"post_type":1,"updated_at":"2017-04-18T01:35:34.830Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":1,"reads":26,"readers_count":25,"score":10.2,"yours":false,"topic_id":3022,"topic_slug":"replace-xml-parser","display_username":"Jonathan","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":669,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":17233,"name":"","username":"smellymumbler","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/ad7895/{size}.png","created_at":"2017-04-18T14:40:58.396Z","cooked":"\u003caside class=\"onebox githubblob\"\u003e\n  \u003cheader class=\"source\"\u003e\n      \u003ca href=\"https://github.com/urho3d/Urho3D/blob/master/Source/Urho3D/Scene/Scene.cpp#L190\" target=\"_blank\" rel=\"nofollow noopener\"\u003egithub.com\u003c/a\u003e\n  \u003c/header\u003e\n  \u003carticle class=\"onebox-body\"\u003e\n    \u003ch4\u003e\u003ca href=\"https://github.com/urho3d/Urho3D/blob/master/Source/Urho3D/Scene/Scene.cpp#L190\" target=\"_blank\" rel=\"nofollow noopener\"\u003eurho3d/Urho3D/blob/master/Source/Urho3D/Scene/Scene.cpp#L190\u003c/a\u003e\u003c/h4\u003e\n\u003cpre class=\"onebox\"\u003e\u003ccode class=\"lang-cpp\"\u003e\u003col class=\"start lines\" start=\"180\" style=\"counter-reset: li-counter 179 ;\"\u003e\n\u003cli\u003e}\n\u003c/li\u003e\n\u003cli\u003e\n\u003c/li\u003e\n\u003cli\u003ebool Scene::LoadJSON(const JSONValue\u0026amp; source, bool setInstanceDefault)\n\u003c/li\u003e\n\u003cli\u003e{\n\u003c/li\u003e\n\u003cli\u003eURHO3D_PROFILE(LoadSceneJSON);\n\u003c/li\u003e\n\u003cli\u003e\n\u003c/li\u003e\n\u003cli\u003eStopAsyncLoading();\n\u003c/li\u003e\n\u003cli\u003e\n\u003c/li\u003e\n\u003cli\u003e// Load the whole scene, then perform post-load if successfully loaded\n\u003c/li\u003e\n\u003cli\u003e// Note: the scene filename and checksum can not be set, as we only used an XML element\n\u003c/li\u003e\n\u003cli class=\"selected\"\u003eif (Node::LoadJSON(source, setInstanceDefault))\n\u003c/li\u003e\n\u003cli\u003e{\n\u003c/li\u003e\n\u003cli\u003e    FinishLoading(nullptr);\n\u003c/li\u003e\n\u003cli\u003e    return true;\n\u003c/li\u003e\n\u003cli\u003e}\n\u003c/li\u003e\n\u003cli\u003eelse\n\u003c/li\u003e\n\u003cli\u003e    return false;\n\u003c/li\u003e\n\u003cli\u003e}\n\u003c/li\u003e\n\u003cli\u003e\n\u003c/li\u003e\n\u003cli\u003evoid Scene::MarkNetworkUpdate()\n\u003c/li\u003e\n\u003cli\u003e{\n\u003c/li\u003e\n\u003c/ol\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/article\u003e\n  \u003cdiv class=\"onebox-metadata\"\u003e\n    \n    \n  \u003c/div\u003e\n  \u003cdiv style=\"clear: both\"\u003e\u003c/div\u003e\n\u003c/aside\u003e\n\n\u003cp\u003eHmm, so each class is responsible for defining how it is created via any serialized format. Would you guys accept some sort of PR that changes this? I mean, IMHO, having a \u003ccode\u003eParser\u003c/code\u003e interface that \u003ccode\u003eJSON\u003c/code\u003e and \u003ccode\u003eXML\u003c/code\u003e can implement, with factory methods responsible for creating the objects, would allow developers to choose any format or easily develop their own (or even switch the parser, like from Pugi to RapidXML).\u003c/p\u003e","post_number":3,"post_type":1,"updated_at":"2017-04-18T14:40:58.396Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":0,"reads":19,"readers_count":18,"score":3.8,"yours":false,"topic_id":3022,"topic_slug":"replace-xml-parser","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"link_counts":[{"url":"https://github.com/urho3d/Urho3D/blob/master/Source/Urho3D/Scene/Scene.cpp#L190","internal":false,"reflection":false,"title":"Urho3D/Scene.cpp at master ¬∑ urho3d/Urho3D ¬∑ GitHub","clicks":1}],"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":674,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false}],"stream":[17216,17218,17233]},"timeline_lookup":[[1,2045]],"suggested_topics":[{"id":7119,"title":"How to programmatically access Morph Target in FBX file?","fancy_title":"How to programmatically access Morph Target in FBX file?","slug":"how-to-programmatically-access-morph-target-in-fbx-file","posts_count":13,"reply_count":8,"highest_post_number":13,"image_url":null,"created_at":"2022-01-03T23:01:43.070Z","last_posted_at":"2022-01-05T11:55:31.130Z","bumped":true,"bumped_at":"2022-01-05T11:55:31.130Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":1,"views":214,"category_id":16,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":null,"description":"Original Poster","user":{"id":1499,"username":"csteaderman","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/c/b487fb/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":628,"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":484,"username":"Eugene","name":"Eugene Kozlov","avatar_template":"/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png"}},{"extras":"latest","description":"Most Recent Poster","user":{"id":192,"username":"Modanung","name":"È≠îÂ§ßÂÜú ùûçùûéùù≥ ÁèæÊãõËúç","avatar_template":"/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png"}}]},{"id":7101,"title":"Unique Per-Node Shader Uniform for Model-Particles","fancy_title":"Unique Per-Node Shader Uniform for Model-Particles","slug":"unique-per-node-shader-uniform-for-model-particles","posts_count":2,"reply_count":0,"highest_post_number":2,"image_url":null,"created_at":"2021-12-16T03:16:09.579Z","last_posted_at":"2021-12-16T09:40:41.978Z","bumped":true,"bumped_at":"2021-12-16T09:40:41.978Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":0,"views":139,"category_id":16,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":null,"description":"Original Poster","user":{"id":628,"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}},{"extras":"latest","description":"Most Recent Poster","user":{"id":192,"username":"Modanung","name":"È≠îÂ§ßÂÜú ùûçùûéùù≥ ÁèæÊãõËúç","avatar_template":"/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png"}}]},{"id":7183,"title":"Automating Lua Bindings","fancy_title":"Automating Lua Bindings","slug":"automating-lua-bindings","posts_count":15,"reply_count":4,"highest_post_number":16,"image_url":null,"created_at":"2022-02-03T17:02:43.829Z","last_posted_at":"2022-08-17T18:54:38.644Z","bumped":true,"bumped_at":"2022-08-17T18:54:38.644Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":16,"views":700,"category_id":16,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":628,"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":631,"username":"JTippetts1","name":"J Tippetts","avatar_template":"/user_avatar/discourse.urho3d.io/jtippetts1/{size}/96_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":263,"username":"1vanK","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/1vank/{size}/768_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":4,"username":"weitjong","name":"Yao Wei Tjong","avatar_template":"/user_avatar/discourse.urho3d.io/weitjong/{size}/4_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":1447,"username":"Batch","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/b/f17d59/{size}.png"}}]},{"id":7223,"title":"navMesh.FindPath(jack1.Position, pathPos); crash in android","fancy_title":"navMesh.FindPath(jack1.Position, pathPos); crash in android","slug":"navmesh-findpath-jack1-position-pathpos-crash-in-android","posts_count":15,"reply_count":13,"highest_post_number":17,"image_url":null,"created_at":"2022-03-22T06:21:34.927Z","last_posted_at":"2022-03-30T17:48:22.028Z","bumped":true,"bumped_at":"2022-03-30T17:48:22.028Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":0,"views":242,"category_id":16,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":null,"description":"Original Poster","user":{"id":1503,"username":"tianlv777","name":"zerrrrr","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/t/a4c791/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":230,"username":"Nerrik","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/n/958977/{size}.png"}},{"extras":"latest","description":"Most Recent Poster","user":{"id":809,"username":"elix22","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/elix22/{size}/1437_2.png"}}]},{"id":7264,"title":"Mesh not rendering right and no idea why [SOLVED]","fancy_title":"Mesh not rendering right and no idea why [SOLVED]","slug":"mesh-not-rendering-right-and-no-idea-why-solved","posts_count":4,"reply_count":1,"highest_post_number":4,"image_url":"https://global.discourse-cdn.com/standard17/uploads/urho3d/optimized/2X/5/58b096d0ea560021fc4301ffe097f4b1350670af_2_1024x519.jpeg","created_at":"2022-05-13T01:26:06.152Z","last_posted_at":"2022-05-13T20:26:12.059Z","bumped":true,"bumped_at":"2022-05-13T20:26:12.059Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":2,"views":147,"category_id":16,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":1507,"username":"Kest","name":"Kest","avatar_template":"/user_avatar/discourse.urho3d.io/kest/{size}/3734_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":628,"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":1358,"username":"JSandusky","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/jsandusky/{size}/3220_2.png"}}]}],"tags_descriptions":{},"id":3022,"title":"Replace XML parser","fancy_title":"Replace XML parser","posts_count":3,"created_at":"2017-04-17T23:10:56.516Z","views":624,"reply_count":0,"like_count":0,"last_posted_at":"2017-04-18T14:40:58.396Z","visible":true,"closed":false,"archived":false,"has_summary":false,"archetype":"regular","slug":"replace-xml-parser","category_id":16,"word_count":225,"deleted_at":null,"user_id":674,"featured_link":null,"pinned_globally":false,"pinned_at":null,"pinned_until":null,"image_url":null,"slow_mode_seconds":0,"draft":null,"draft_key":"topic_3022","draft_sequence":null,"unpinned":null,"pinned":false,"current_post_number":1,"highest_post_number":3,"deleted_by":null,"actions_summary":[{"id":4,"count":0,"hidden":false,"can_act":false},{"id":8,"count":0,"hidden":false,"can_act":false},{"id":7,"count":0,"hidden":false,"can_act":false}],"chunk_size":20,"bookmarked":false,"bookmarks":[],"topic_timer":null,"message_bus_last_id":0,"participant_count":2,"show_read_indicator":false,"thumbnails":null,"slow_mode_enabled_until":null,"tags_disable_ads":false,"details":{"can_edit":false,"notification_level":1,"participants":[{"id":674,"username":"smellymumbler","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/ad7895/{size}.png","post_count":2,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"trust_level":2},{"id":669,"username":"Sinoid","name":"Jonathan","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/f19dbf/{size}.png","post_count":1,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"trust_level":2}],"created_by":{"id":674,"username":"smellymumbler","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/ad7895/{size}.png"},"last_poster":{"id":674,"username":"smellymumbler","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/ad7895/{size}.png"},"links":[{"url":"https://github.com/jbeder/yaml-cpp","title":"GitHub - jbeder/yaml-cpp: A YAML parser and emitter in C++","internal":false,"attachment":false,"reflection":false,"clicks":1,"user_id":674,"domain":"github.com","root_domain":"github.com"},{"url":"https://github.com/mayah/tinytoml","title":"GitHub - mayah/tinytoml: A header only C++11 library for parsing TOML","internal":false,"attachment":false,"reflection":false,"clicks":1,"user_id":674,"domain":"github.com","root_domain":"github.com"},{"url":"https://github.com/urho3d/Urho3D/blob/master/Source/Urho3D/Scene/Scene.cpp#L190","title":"Urho3D/Scene.cpp at master ¬∑ urho3d/Urho3D ¬∑ GitHub","internal":false,"attachment":false,"reflection":false,"clicks":1,"user_id":674,"domain":"github.com","root_domain":"github.com"}]}}