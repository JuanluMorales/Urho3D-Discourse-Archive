{"post_stream":{"posts":[{"id":2336,"name":"hd_","username":"hdunderscore","avatar_template":"/user_avatar/discourse.urho3d.io/hdunderscore/{size}/1151_2.png","created_at":"2014-09-14T03:05:51.000Z","cooked":"\u003cp\u003eHey, I’ve been working with android a bit and put together a perhaps dirty method of getting some urho3d c++ to java talk working, and it’s rather simple:\u003c/p\u003e\n\u003cp\u003eThe following code will show how to call a java function we will create called ‘\u003cspan class=\"bbcode-i\"\u003egotoGoogle\u003c/span\u003e’, which will be tacked onto \u003cspan class=\"bbcode-b\"\u003eSDLActivty.java\u003c/span\u003e located in \u003cspan class=\"bbcode-b\"\u003eAndroid/src/org/libsdl/app\u003c/span\u003e. The Java code will then call a c++ function we will create to inform out app when it’s ready.\u003c/p\u003e\n\u003cp\u003eNote: There is probably a cleaner way to do this (eg, extending SDLActivity), however I’m not familiar enough with android to know how-- contribute if you do !\u003c/p\u003e\n\u003cp\u003e[size=200]In SDLActivtiy.java:[/size]\u003cbr\u003e\nFile: \u003cspan class=\"bbcode-b\"\u003eAndroid/src/org/libsdl/app/SDLActivity.java\u003c/span\u003e:\u003c/p\u003e\n\u003cp\u003eAdd these imports:\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eimport android.widget.ViewSwitcher;\nimport android.webkit.WebView;\nimport android.webkit.WebViewClient;\nimport com.github.urho3d.R;\nimport android.view.animation.Animation;\nimport android.view.animation.AnimationUtils;\u003c/code\u003e\u003cbr\u003e\n[ul]\u003cbr\u003e\n[li]ViewSwitcher is what will allow us to seamlessly switch between our urho application and the WebView (you can add animations, etc.)[/li]\u003cbr\u003e\n[li]WebView and WebViewClient allow us to embed a browser / handle events in the browser.[/li]\u003cbr\u003e\n[li]the R class is a machine-generated class that lets us access resources (eg, xml resources in \u003cspan class=\"bbcode-b\"\u003eAndroid/res\u003c/span\u003e)[/li]\u003cbr\u003e\n[li]AnimationUtils lets us load animations from supplied resources[/li][/ul]\u003c/p\u003e\n\u003cp\u003e[size=150]In SDLActivtiy class:[/size]\u003cbr\u003e\nDefine these members in the \u003cspan class=\"bbcode-b\"\u003eSDLActivity\u003c/span\u003e class:\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eprotected static WebView webview;\nprotected static ViewSwitcher layoutSwitcher;\u003c/code\u003e\u003cbr\u003e\nThe WebView and ViewSwitcher are like UIElements in Urho3d, it holds the functionality for the widget and renders its contents.\u003c/p\u003e\n\u003cp\u003eAdd these initializers to \u003cspan class=\"bbcode-b\"\u003epublic static void initialize()\u003c/span\u003e in \u003cspan class=\"bbcode-b\"\u003eSDLActivity\u003c/span\u003e:\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003elayoutSwitcher = null;\nmJoystickHandler = null;\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eAt the bottom of \u003cspan class=\"bbcode-b\"\u003eprotected void onCreate(Bundle savedInstanceState)\u003c/span\u003e in \u003cspan class=\"bbcode-b\"\u003eSDLActivity\u003c/span\u003e, change:\u003c/p\u003e\n\u003cp\u003e[code]mLayout = new AbsoluteLayout(this);\u003cbr\u003e\nmLayout.addView(mSurface);\u003c/p\u003e\n\u003cp\u003esetContentView(mLayout);[/code]\u003c/p\u003e\n\u003cp\u003eto:\u003c/p\u003e\n\u003cp\u003e[code]webview = new WebView(this);\u003c/p\u003e\n\u003cp\u003emLayout = new AbsoluteLayout(this);\u003cbr\u003e\nmLayout.addView(mSurface);\u003c/p\u003e\n\u003cp\u003elayoutSwitcher = new ViewSwitcher(this);\u003cbr\u003e\nlayoutSwitcher.addView(mLayout);\u003cbr\u003e\nlayoutSwitcher.addView(webview);\u003c/p\u003e\n\u003cp\u003eYou will need to set up\u003cbr\u003e\nAnimation animIn, animOut;\u003cbr\u003e\nanimIn = AnimationUtils.loadAnimation(this, R.anim.fadein);\u003cbr\u003e\nanimOut = AnimationUtils.loadAnimation(this, R.anim.fadeout);\u003c/p\u003e\n\u003cp\u003elayoutSwitcher.setInAnimation(animIn);\u003cbr\u003e\nlayoutSwitcher.setOutAnimation(animOut);\u003c/p\u003e\n\u003cp\u003esetContentView(layoutSwitcher);[/code]\u003cbr\u003e\nNote: Later, we will create the resources that R.anim.fadein and R.anim.fadeout reference.\u003c/p\u003e\n\u003cp\u003eNow the meat of the Java, the function we will call from c++ to switch into the WebView – add these to \u003cspan class=\"bbcode-b\"\u003eSDLActivity\u003c/span\u003e:\u003c/p\u003e\n\u003cp\u003e[code]public void gotoGoogle() {\u003cbr\u003e\nrunOnUiThread(new Runnable() {\u003cbr\u003e\n// Note: You must handle UI events like switching views and working with web view in the UI thread.\u003cbr\u003e\n\u003cspan class=\"mention\"\u003e@Override\u003c/span\u003e\u003cbr\u003e\npublic void run() {\u003cbr\u003e\nlayoutSwitcher.showNext();\u003cbr\u003e\nwebview.getSettings().setJavaScriptEnabled(true); // there can be security concerns with javascript.\u003cbr\u003e\nwebview.getSettings().setBuiltInZoomControls(true);\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e            webview.loadUrl(\"http://www.google.com\");\n            webview.setWebViewClient(new WebViewClient(){\n                @Override\n                public void onPageStarted(WebView view, String url, Bitmap favicon){\n                   super.onPageStarted(view, url, favicon);\n                   // just an example of capturing the page start loading event\n                   Log.d(\"java urho\", \"Loading: \" + url); // goes to the system console/logcat\n                }\n\n                @Override\n                public void onPageFinished(WebView view, String url) {\n                    super.onPageFinished(view, url);\n                        // We will close the webview as soon as the page is loaded... add your own logic !\n                        returnWebviewUrl(url);\n                        hideWebview();\n                }\n\n                @Override\n                public boolean shouldOverrideUrlLoading(WebView view, String url) {\n                    // This allows us to follow links in the web view without them being deferred to another browser. You may or may not want this.\n                    view.loadUrl(url);\n                    return true;\n                }\n            });\n        }\n     });\n}\n\npublic void hideWebview() {\n    layoutSwitcher.showPrevious();\n}[/code]\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eAnd one last important declaration so that we can call a c++ function that we will define:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003e\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e[size=200]Animation Resources:[/size]\u003cbr\u003e\nLet’s create the animation resources, \u003cspan class=\"bbcode-b\"\u003eAndroid/res/anim/fadein.xml\u003c/span\u003e and \u003cspan class=\"bbcode-b\"\u003eAndroid/res/anim/fadeout.xml\u003c/span\u003e:\u003cbr\u003e\n\u003cspan class=\"bbcode-b\"\u003eAndroid/res/anim/fadein.xml\u003c/span\u003e:\u003c/p\u003e\n\u003cp\u003e[code]\u0026lt;?xml version=\"1.0\" encoding=\"utf-8\"?\u0026gt;\u003cbr\u003e\n\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e\u0026lt;alpha\n    android:duration=\"500\"\n    android:fromAlpha=\"0.0\"\n    android:toAlpha=\"1.0\" \u0026gt;\n\u0026lt;/alpha\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n[/code]\n\u003cp\u003e\u003cspan class=\"bbcode-b\"\u003eAndroid/res/anim/fadeout.xml\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e[code]\u0026lt;?xml version=\"1.0\" encoding=\"utf-8\"?\u0026gt;\u003cbr\u003e\n\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e\u0026lt;alpha\n    android:duration=\"200\"\n    android:fromAlpha=\"1.0\"\n    android:toAlpha=\"0.0\" \u0026gt;\n\u0026lt;/alpha\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n[/code]\n\u003cp\u003e[size=200]C++:[/size]\u003cbr\u003e\nThankfully, we don’t have to worry about setting things up on the C++ away from our main source-- everything works from there.\u003c/p\u003e\n\u003cp\u003eTo call \u003cspan class=\"bbcode-b\"\u003egotoGoogle()\u003c/span\u003e from C++, we’ll set up a function that looks like this:\u003c/p\u003e\n\u003cp\u003e[code]\u003cspan class=\"hashtag\"\u003e#if\u003c/span\u003e defined(ANDROID)\u003c/p\u003e\n\u003cp\u003e\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “Log.h”\u003c/p\u003e\n\u003cp\u003e\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;SDL.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;jni.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;string.h\u0026gt;\u003c/p\u003e\n\u003cp\u003e\u003cspan class=\"hashtag\"\u003e#define\u003c/span\u003e JAVA_CHECK_EXCEPTION(env, msg) \u003cbr\u003e\nwhile (env-\u0026gt;ExceptionCheck()) \u003cbr\u003e\n{\u003cbr\u003e\nLOGDEBUG(String(\"Exception:: \") + msg));\u003cbr\u003e\nenv-\u0026gt;ExceptionDescribe();\u003cbr\u003e\nenv-\u0026gt;ExceptionClear();\u003cbr\u003e\n}\u003c/p\u003e\n\u003cp\u003evoid JavaGotoGoogle()\u003cbr\u003e\n{\u003cbr\u003e\nLOGDEBUG(“JavaGotoGoogle()”);\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eJNIEnv *env = static_cast\u0026lt;JNIEnv*\u0026gt;(SDL_AndroidGetJNIEnv());\njobject activity = static_cast\u0026lt;jobject\u0026gt;(SDL_AndroidGetActivity());\njclass clazz = env-\u0026gt;GetObjectClass(activity);\njmethodID gotoGoogle = env-\u0026gt;GetMethodID(clazz, \"gotoGoogle\", \"()V\");// Note the signature string..\n\nLOGDEBUG(String((int) loginGoogle)); // inspect that we get a handle -- should do error checking..\n\nJAVA_CHECK_EXCEPTION(env, \"Preperation\"); // Macro to check for errors. Should really check after each call. Calling before the next bit to clear any errors that may happen earlier.\n\nenv-\u0026gt;CallVoidMethod(activity, gotoGoogle); // the actual call to java.\nJAVA_CHECK_EXCEPTION(env, \"env-\u0026gt;CallVoidMethod(clazz, gotoGoogle);\"); //find out if the call went through- if not what were the errors.\n\nenv-\u0026gt;DeleteLocalRef(activity);\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e}\u003cbr\u003e\n[/code]\u003c/p\u003e\n\u003cp\u003eTo define the ‘returnWebviewUrl’ function we called in Java, we do the following:\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e\nextern \"C\" {\n    JNIEXPORT jstring JNICALL Java_org_libsdl_app_SDLActivity_returnWebviewUrl (JNIEnv *env, jobject obj, jstring url)\n    {\n        LOGDEBUG(\"Java_org_libsdl_app_SDLActivity_returnWebviewUrl()\");\n        const char* result = env-\u0026gt;GetStringUTFChars(url, 0);\n        if (result != NULL)\n        {\n            String s = String(result);\n            LOGDEBUG(s);\n        }\n        env-\u0026gt;ReleaseStringUTFChars(url, result);\n        return env-\u0026gt;NewStringUTF(\"Hello from C++ over JNI!\");\n    }\n}\n#endif\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eNote the name of the function, it has to follow a strict naming convention for Java to find it. It should also be in the global scope.\u003c/p\u003e\n\u003cp\u003eAnd that’s it ! Pretty simple, although you will need to put your own logic in. Also, currently there’s no way to escape the webview if it gets stuck loading-- so you will need to provide your own options (eg, capture the ‘back’ button, provide GUI elements, etc).\u003c/p\u003e","post_number":1,"post_type":1,"updated_at":"2017-01-02T01:00:22.783Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":291,"reads":18,"readers_count":17,"score":1455.6,"yours":false,"topic_id":436,"topic_slug":"android-jni-talking-with-java-setting-up-a-webview","display_username":"hd_","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":"Contributor","title_is_group":false,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":114,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false}],"stream":[2336]},"timeline_lookup":[[1,2992]],"suggested_topics":[{"id":7099,"title":":fallen_leaf: Polynomials \u0026 Harmonics","fancy_title":":fallen_leaf: Polynomials \u0026amp; Harmonics","slug":"polynomials-harmonics","posts_count":6,"reply_count":0,"highest_post_number":7,"image_url":null,"created_at":"2021-12-13T05:06:04.641Z","last_posted_at":"2021-12-27T23:27:39.489Z","bumped":true,"bumped_at":"2021-12-27T23:27:39.489Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"unicode_title":"🍂 Polynomials \u0026 Harmonics","tags_descriptions":{},"like_count":6,"views":392,"category_id":13,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest single","description":"Original Poster, Most Recent Poster","user":{"id":192,"username":"Modanung","name":"魔大农 𝞍𝞎𝝳 現招蜍","avatar_template":"/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png"}}]},{"id":7103,"title":":test_tube: DebugRenderer as GUI","fancy_title":":test_tube: DebugRenderer as GUI","slug":"debugrenderer-as-gui","posts_count":4,"reply_count":1,"highest_post_number":4,"image_url":null,"created_at":"2021-12-17T02:25:06.606Z","last_posted_at":"2021-12-18T01:09:27.738Z","bumped":true,"bumped_at":"2021-12-18T01:09:27.738Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"unicode_title":"🧪 DebugRenderer as GUI","tags_descriptions":{},"like_count":4,"views":267,"category_id":13,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":192,"username":"Modanung","name":"魔大农 𝞍𝞎𝝳 現招蜍","avatar_template":"/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":861,"username":"GodMan","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/g/e79b87/{size}.png"}}]},{"id":7110,"title":"Resource fetch define","fancy_title":"Resource fetch define","slug":"resource-fetch-define","posts_count":2,"reply_count":0,"highest_post_number":2,"image_url":null,"created_at":"2021-12-27T12:28:55.126Z","last_posted_at":"2021-12-27T17:00:37.699Z","bumped":true,"bumped_at":"2021-12-27T17:00:37.699Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":7,"views":184,"category_id":13,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":null,"description":"Original Poster","user":{"id":192,"username":"Modanung","name":"魔大农 𝞍𝞎𝝳 現招蜍","avatar_template":"/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png"}},{"extras":"latest","description":"Most Recent Poster","user":{"id":1304,"username":"lebrewer","name":"lebrewer","avatar_template":"/user_avatar/discourse.urho3d.io/lebrewer/{size}/2811_2.png"}}]},{"id":7120,"title":"Log Error Once Macro","fancy_title":"Log Error Once Macro","slug":"log-error-once-macro","posts_count":1,"reply_count":0,"highest_post_number":1,"image_url":null,"created_at":"2022-01-04T02:24:37.857Z","last_posted_at":"2022-01-04T02:24:37.925Z","bumped":true,"bumped_at":"2022-01-04T02:24:37.925Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":3,"views":143,"category_id":13,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest single","description":"Original Poster, Most Recent Poster","user":{"id":628,"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}}]},{"id":7159,"title":"Urho3D 1.8 release","fancy_title":"Urho3D 1.8 release","slug":"urho3d-1-8-release","posts_count":5,"reply_count":2,"highest_post_number":5,"image_url":null,"created_at":"2022-01-28T09:11:58.312Z","last_posted_at":"2022-08-03T12:48:01.717Z","bumped":true,"bumped_at":"2022-08-03T12:48:01.717Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":0,"views":444,"category_id":16,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":263,"username":"1vanK","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/1vank/{size}/768_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":861,"username":"GodMan","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/g/e79b87/{size}.png"}}]}],"tags_descriptions":{},"id":436,"title":"Android JNI / Talking with Java / Setting up a WebView","fancy_title":"Android JNI / Talking with Java / Setting up a WebView","posts_count":1,"created_at":"2014-09-14T03:05:51.000Z","views":944,"reply_count":0,"like_count":0,"last_posted_at":"2014-09-14T03:05:51.000Z","visible":true,"closed":false,"archived":false,"has_summary":false,"archetype":"regular","slug":"android-jni-talking-with-java-setting-up-a-webview","category_id":13,"word_count":1039,"deleted_at":null,"user_id":114,"featured_link":null,"pinned_globally":false,"pinned_at":null,"pinned_until":null,"image_url":null,"slow_mode_seconds":0,"draft":null,"draft_key":"topic_436","draft_sequence":null,"unpinned":null,"pinned":false,"current_post_number":1,"highest_post_number":1,"deleted_by":null,"actions_summary":[{"id":4,"count":0,"hidden":false,"can_act":false},{"id":8,"count":0,"hidden":false,"can_act":false},{"id":7,"count":0,"hidden":false,"can_act":false}],"chunk_size":20,"bookmarked":false,"bookmarks":[],"topic_timer":null,"message_bus_last_id":0,"participant_count":1,"show_read_indicator":false,"thumbnails":null,"slow_mode_enabled_until":null,"tags_disable_ads":false,"details":{"can_edit":false,"notification_level":1,"participants":[{"id":114,"username":"hdunderscore","name":"hd_","avatar_template":"/user_avatar/discourse.urho3d.io/hdunderscore/{size}/1151_2.png","post_count":1,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"trust_level":2}],"created_by":{"id":114,"username":"hdunderscore","name":"hd_","avatar_template":"/user_avatar/discourse.urho3d.io/hdunderscore/{size}/1151_2.png"},"last_poster":{"id":114,"username":"hdunderscore","name":"hd_","avatar_template":"/user_avatar/discourse.urho3d.io/hdunderscore/{size}/1151_2.png"}}}