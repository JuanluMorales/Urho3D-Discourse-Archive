{"post_stream":{"posts":[{"id":2361,"name":"","username":"vivienneanthony","avatar_template":"/user_avatar/discourse.urho3d.io/vivienneanthony/{size}/942_2.png","created_at":"2014-09-16T15:14:47.000Z","cooked":"\u003cp\u003eHey!\u003c/p\u003e\n\u003cp\u003eDoes this make any sense to anyone? I’m trying to get the basic concept of this.I’m asking because if its done its pretty much a field diamond square procedual method that could use time and a hash table to create infinite terrain with wrapping.\u003c/p\u003e\n\u003cp\u003eGenerated picture \u003ca href=\"http://tinypic.com/view.php?pic=aaho3t\u0026amp;s=8#.VBjW3K1hWio\" rel=\"nofollow noopener\"\u003etinypic.com/view.php?pic=aaho3t\u0026amp;s=8#.VBjW3K1hWio\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eJavascript demostration \u003ca href=\"http://tatarize.nfshost.com/FieldDiamondSquare.htm\" rel=\"nofollow noopener\"\u003etatarize.nfshost.com/FieldDiamondSquare.htm\u003c/a\u003e\u003cbr\u003e\nBasic Algorithm and theory of use \u003ca href=\"http://godsnotwheregodsnot.blogspot.com/2013/11/field-diamond-squared-fractal-terrain.html\" rel=\"nofollow noopener\"\u003egodsnotwheregodsnot.blogspot.com … rrain.html\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eVivienne\u003c/p\u003e\n\u003cp\u003eThe Javascript Code\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003efunction diamondSquaredMap(x, y, width, height, iterations) {\n    var map = fieldDiamondSquared(x, y, x+width, y+height, iterations);\n\n    var maxdeviation = getMaxDeviation(iterations);\n\n    for (var j = 0; j \u0026lt; width; j++) {\n        for (var k = 0; k \u0026lt; height; k++) {\n            map[j][k] = map[j][k] / maxdeviation;\n        }\n    }\n    return map;\n\n    function create2DArray(d1, d2) {\n        var x = new Array(d1),\n                i = 0,\n                j = 0;\n\n        for (i = 0; i \u0026lt; d1; i += 1) {\n            x[i] = new Array(d2);\n        }\n        return x;\n    }\n\n    function fieldDiamondSquared(x0, y0, x1, y1, iterations) {\n        if (x1 \u0026lt; x0) { return null; }\n        if (y1 \u0026lt; y0) { return null; }\n        var finalwidth  = x1 - x0;\n        var finalheight = y1 - y0;\n        var finalmap = create2DArray(finalwidth, finalheight);\n        if (iterations === 0) {\n            for (var j = 0; j \u0026lt; finalwidth; j++) {\n                for (var k = 0; k \u0026lt; finalheight; k++) {\n                    finalmap[j][k] =  displace(iterations,x0+j,y0+k) ;\n                }\n            }\n            return finalmap;\n        }\n        var ux0 = Math.floor(x0 / 2) - 1;\n        var uy0 = Math.floor(y0 / 2) - 1;\n        var ux1 = Math.ceil(x1 / 2) + 1;\n        var uy1 = Math.ceil(y1 / 2) + 1;\n        var uppermap = fieldDiamondSquared(ux0, uy0, ux1, uy1, iterations-1);\n\n        var uw = ux1 - ux0;\n        var uh = uy1 - uy0;\n\n        var cx0 = ux0 * 2;\n        var cy0 = uy0 * 2;\n\n        var cw = uw*2-1;\n        var ch = uh*2-1;\n        var currentmap = create2DArray(cw,ch);\n\n        for (var j = 0; j \u0026lt; uw; j++) {\n            for (var k = 0; k \u0026lt; uh; k++) {\n                currentmap[j*2][k*2] = uppermap[j][k];\n            }\n        }\n        var xoff = x0 - cx0;\n        var yoff = y0 - cy0;\n        for (var j = 1; j \u0026lt; cw-1; j += 2) {\n            for (var k = 1; k \u0026lt; ch-1; k += 2) {\n                currentmap[j][k] = ((currentmap[j - 1][k - 1] + currentmap[j - 1][k + 1] + currentmap[j + 1][k - 1] + currentmap[j + 1][k + 1]) / 4) + displace(iterations,cx0+j,cy0+k);\n            }\n        }\n        for (var j = 1; j \u0026lt; cw-1; j += 2) {\n            for (var k = 2; k \u0026lt; ch-1; k += 2) {\n                currentmap[j][k] = ((currentmap[j - 1][k]     + currentmap[j + 1][k]     + currentmap[j][k - 1]     + currentmap[j][k + 1]) / 4) + displace(iterations,cx0+j,cy0+k);\n            }\n        }\n        for (var j = 2; j \u0026lt; cw-1; j += 2) {\n            for (var k = 1; k \u0026lt; ch-1; k += 2) {\n                currentmap[j][k] = ((currentmap[j - 1][k]     + currentmap[j + 1][k]     + currentmap[j][k - 1]     + currentmap[j][k + 1]) / 4) + displace(iterations,cx0+j,cy0+k);\n            }\n        }\n\n        for (var j = 0; j \u0026lt; finalwidth; j++) {\n            for (var k = 0; k \u0026lt; finalheight; k++) {\n                finalmap[j][k] = currentmap[j+xoff][k+yoff];\n            }\n        }\n\n        return finalmap;\n    }\n\n    // Random function to offset\n    function displace(iterations, x, y) {\n        return (((PRH(iterations,x,y) - 0.5)*2)) / (iterations+1);\n    }\n\n    function getMaxDeviation(iterations) {\n        var dev = 0.5 / (iterations+1);\n        if (iterations \u0026lt;= 0) return dev;\n        return getMaxDeviation(iterations-1) + dev;\n    }\n\n    //This function returns the same result for given values but should be somewhat random.\n    function PRH(iterations,x,y) {\n        var hash;\n        x \u0026amp;= 0xFFF;\n        y \u0026amp;= 0xFFF;\n        iterations \u0026amp;= 0xFF;\n        hash = (iterations \u0026lt;\u0026lt; 24);\n        hash |= (y \u0026lt;\u0026lt; 12);\n        hash |= x;\n        var rem = hash \u0026amp; 3;\n        var h = hash;\n\n        switch (rem) {\n            case 3:\n                hash += h;\n                hash ^= hash \u0026lt;\u0026lt; 32;\n                hash ^= h \u0026lt;\u0026lt; 36;\n                hash += hash \u0026gt;\u0026gt; 22;\n                break;\n            case 2:\n                hash += h;\n                hash ^= hash \u0026lt;\u0026lt; 22;\n                hash += hash \u0026gt;\u0026gt; 34;\n                break;\n            case 1:\n                hash += h;\n                hash ^= hash \u0026lt;\u0026lt; 20;\n                hash += hash \u0026gt;\u0026gt; 2;\n        }\n        hash ^= hash \u0026lt;\u0026lt; 6;\n        hash += hash \u0026gt;\u0026gt; 10;\n        hash ^= hash \u0026lt;\u0026lt; 8;\n        hash += hash \u0026gt;\u0026gt; 34;\n        hash ^= hash \u0026lt;\u0026lt; 50;\n        hash += hash \u0026gt;\u0026gt; 12;\n\n        return (hash \u0026amp; 0xFFFF) / 0xFFFF;\n    }[/code]\n\nC++ Code / Somewhat functional at least no memory leak error\n[code]///Headers\n#include \u0026lt;vector\u0026gt;\n#include \u0026lt;cstdio\u0026gt;\n#include \u0026lt;cmath\u0026gt;\n#include \u0026lt;iostream\u0026gt;\n\n#include \u0026lt;stdio.h\u0026gt;\n#include \u0026lt;stdlib.h\u0026gt;\n\n#include \u0026lt;png++/png.hpp\u0026gt;\n#include \u0026lt;png++/image.hpp\u0026gt;\n#include \u0026lt;png++/rgb_pixel.hpp\u0026gt;\n\n\n\nusing namespace std;\n\n/// Terraub Functions\ndouble * getFieldSquareTerrain(int x0,int y0, int x1, int y1, unsigned int iterations);\ndouble displace(unsigned int iterations,int x, int y);\ndouble getMaxDeviation(unsigned int iterations);\ndouble PRH(unsigned iterations, int x, int y);\ndouble * getFieldDiamondSquaredMap(int x, int y, int width, int height, unsigned int iterations);\n\n//Size of the grid to generate\n//This must be 2^n+1 (e.g. 257)\nconst int DATA_SIZE = 1024;\n\nvoid SaveTerrFile(const double * image);\n\n/// Main function\nint main()\n{\n    /// Define Settings\n    int width=1024;\n    int height=1024;\n    int iterations=1023;\n    int x=0;\n    int y=0;\n\n    // allocate memory\n    double * map=new double[width*height];\n\n    map=getFieldDiamondSquaredMap(x,y,width,height,iterations);\n\n    SaveTerrFile(map);\n\n    return 1;\n}\n\ndouble * getFieldDiamondSquaredMap(int x, int y, int width, int height, unsigned int iterations)\n{\n    /// Allocate memory for final mapdouble\n    double * map = new double[width*height];\n\n    map = getFieldSquareTerrain(x, y, x+width, y+height, iterations);\n\n    double maxdeviation = getMaxDeviation(iterations);\n\n    for (unsigned int x = 0; x \u0026lt; width; x++)\n    {\n        for (unsigned int  y = 0; y \u0026lt; height; y++)\n        {\n            map[x*y] = map[x*y] / maxdeviation;\n        }\n    }\n\n    return map;\n}\n\ndouble * getFieldSquareTerrain(int x0, int y0, int x1, int y1, unsigned int iterations)\n{\n    /// Define final height and width\n    int finalwidth  = x1 - x0;\n    int finalheight = y1 - y0;\n\n    /// Allocate memory for final map\n    double * finalmap = new double[finalwidth*finalheight];\n\n    /// Test iteration\n    if (iterations == 0)\n    {\n        for (unsigned int x = 0; x \u0026lt; finalwidth; x++)\n        {\n            for (unsigned int y = 0; y \u0026lt; finalheight; y++)\n            {\n                finalmap[x*y] =  displace(iterations,x0+x,y0+y) ;\n            }\n            return finalmap;\n        }\n    }\n\n    /// Define ceil and floor\n    int upper_x0=floor(x0/2) - 1;\n    int upper_y0=floor(y0/2) - 1;\n    int upper_x1=ceil(x1/2)+1;\n    int upper_y1=ceil(y1/2)+1;\n\n    /// Define upper height and width for upper maps\n    int upper_xwidth= upper_x1-upper_x0;\n    int upper_yheight= upper_y1-upper_y0;\n\n    /// Allocate memory for upper map width and height\n    double * uppermap = new double[upper_xwidth*upper_yheight];\n\n    /// Pass another iteration\n    uppermap = getFieldSquareTerrain(upper_x0, upper_y0, upper_x1, upper_y1, iterations-1);\n\n    /// Define counter height and width\n    int counter_x0= upper_x0 * 2;\n    int counter_y0= upper_y0 * 2;\n\n    int counter_width = upper_xwidth*2-1;\n    int counter_height = upper_yheight*2-1;\n\n    /// Allocate memory for currentmap using counter height and width\n    double * currentmap = new double[counter_width*counter_height];\n\n    /// Copy information to double map\n    for (unsigned int x = 0; x \u0026lt; upper_xwidth; x++)\n    {\n        for (unsigned int y = 0; y\u0026lt; upper_yheight; y++)\n        {\n            currentmap[(x*2)*(y*2)] = uppermap[x*y];\n        }\n    }\n\n    /// Define offset\n    int xoff = x0 - counter_x0;\n    int yoff = y0 - counter_y0;\n\n    /// Use a diamond mehod algorithm\n    for (unsigned int x = 1; x \u0026lt; counter_width-1; x += 2)\n    {\n        for (unsigned int y = 1; y \u0026lt; counter_height-1; y += 2)\n        {\n            currentmap[x*y] = ((currentmap[(x - 1)*(y - 1)] + currentmap[(x - 1)*(y + 1)] + currentmap[(x + 1)*(y - 1)] + currentmap[(x + 1)*(y + 1)]) / 4) + displace(iterations,counter_x0+x,counter_y0+y);\n        }\n    }\n    for (unsigned int x = 1; x \u0026lt; counter_width-1; x += 2)\n    {\n        for (unsigned int y = 2; y \u0026lt; counter_height-1; y += 2)\n        {\n            currentmap[x*y] = ((currentmap[(x - 1)*y]     + currentmap[(x + 1)*y]     + currentmap[x*(y - 1)]     + currentmap[x*(y + 1)]) / 4) + displace(iterations,counter_x0+x,counter_y0+y);\n        }\n    }\n    for (unsigned int x = 2; x \u0026lt; counter_width-1; x += 2)\n    {\n        for (unsigned int y = 1; y \u0026lt; counter_height-1; y += 2)\n        {\n            currentmap[x*y] = ((currentmap[(x - 1)*y]     + currentmap[(x + 1)*y]     + currentmap[x*(y - 1)]     + currentmap[x*(y + 1)]) / 4) + displace(iterations,counter_x0+x,counter_y0+y);\n        }\n    }\n\n    /// Copy actual information to returned map\n    for (unsigned int x = 0; x \u0026lt; finalwidth; x++)\n    {\n        for (unsigned int y = 0; y \u0026lt; finalheight; y++)\n        {\n            finalmap[x*y] = currentmap[(x+xoff)*(y+yoff)];\n\n        }\n    }\n\n    return finalmap;\n}\n\n/// Random function to offset\ndouble displace(unsigned int  iterations, int x, int y)\n{\n    return (((PRH(iterations,x,y) - 0.5)*2)) / (iterations+1);\n}\n\n/// Get maximum deviations\ndouble getMaxDeviation(unsigned int iterations)\n{\n    double dev = 0.5 / (iterations+1);\n    if (iterations \u0026lt;= 0) return dev;\n    return getMaxDeviation(iterations-1) + dev;\n}\n\n///This function returns the same result for given values but should be somewhat random.\ndouble PRH(unsigned iterations, int x, int y)\n{\n    unsigned long long hash;\n    x \u0026amp;= 0xFFF;\n    y \u0026amp;= 0xFFF;\n    iterations \u0026amp;= 0xFF;\n    hash = (iterations \u0026lt;\u0026lt; 24);\n    hash |= (y \u0026lt;\u0026lt; 12);\n    hash |= x;\n    unsigned long long rem = hash \u0026amp; 3;\n    unsigned long long h = hash;\n\n    switch (rem)\n    {\n    case 3:\n        hash += h;\n        hash ^= hash \u0026lt;\u0026lt; 32;\n        hash ^= h \u0026lt;\u0026lt; 36;\n        hash += hash \u0026gt;\u0026gt; 22;\n        break;\n    case 2:\n        hash += h;\n        hash ^= hash \u0026lt;\u0026lt; 22;\n        hash += hash \u0026gt;\u0026gt; 34;\n        break;\n    case 1:\n        hash += h;\n        hash ^= hash \u0026lt;\u0026lt; 20;\n        hash += hash \u0026gt;\u0026gt; 2;\n    }\n    hash ^= hash \u0026lt;\u0026lt; 6;\n    hash += hash \u0026gt;\u0026gt; 10;\n    hash ^= hash \u0026lt;\u0026lt; 8;\n    hash += hash \u0026gt;\u0026gt; 34;\n    hash ^= hash \u0026lt;\u0026lt; 50;\n    hash += hash \u0026gt;\u0026gt; 12;\n\n    return (hash \u0026amp; 0xFFFF) / static_cast\u0026lt;double\u0026gt;(0xFFFF);\n}\n\n\nvoid SaveTerrFile(const double * image)\n{\n    png::image\u0026lt; png::rgb_pixel \u0026gt; newimage(1024, 1024);\n\n\n    for (unsigned int y = 0; y \u0026lt; newimage.get_width(); ++y)\n    {\n        for (unsigned int x = 0; x \u0026lt; newimage.get_height(); ++x)\n        {\n            int col=(int)(image[x*y]+1)*255;\n            newimage[y][x] = png::rgb_pixel(col,col,col);\n            // non-checking equivalent of image.set_pixel(x, y, ...);\n        }\n    }\n\n    newimage.write(\"rgb.png\");\n}\u003c/code\u003e\u003c/pre\u003e","post_number":1,"post_type":1,"updated_at":"2017-01-02T01:00:24.721Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":2,"reads":6,"readers_count":5,"score":11.2,"yours":false,"topic_id":440,"topic_slug":"field-diamond-square-for-terrain-generation","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"link_counts":[{"url":"http://tinypic.com/view.php?pic=aaho3t\u0026s=8#.VBjW3K1hWio","internal":false,"reflection":false,"title":"Image - TinyPic - Free Image Hosting, Photo Sharing \u0026 Video Hosting","clicks":1},{"url":"http://tatarize.nfshost.com/FieldDiamondSquare.htm","internal":false,"reflection":false,"title":"Canvas Terrain Generator","clicks":0},{"url":"http://godsnotwheregodsnot.blogspot.com/2013/11/field-diamond-squared-fractal-terrain.html","internal":false,"reflection":false,"title":"Ssnot!: Field Diamond Squared Fractal Terrain Algorithm","clicks":0}],"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":88,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":2380,"name":"","username":"vivienneanthony","avatar_template":"/user_avatar/discourse.urho3d.io/vivienneanthony/{size}/942_2.png","created_at":"2014-09-17T01:11:15.000Z","cooked":"\u003cp\u003eNon-Working revised for the 1d array\u003c/p\u003e\n\u003cp\u003e[code]///Headers\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u003c/p\u003e\n\u003cp\u003e\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;stdio.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;stdlib.h\u0026gt;\u003c/p\u003e\n\u003cp\u003e\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;png++/png.hpp\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;png++/image.hpp\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;png++/rgb_pixel.hpp\u0026gt;\u003c/p\u003e\n\u003cp\u003eusing namespace std;\u003c/p\u003e\n\u003cp\u003e/// Terraub Functions\u003cbr\u003e\ndouble * getFieldSquareTerrain(int x0,int y0, int x1, int y1, unsigned int iterations);\u003cbr\u003e\ndouble displace(unsigned int iterations,int x, int y);\u003cbr\u003e\ndouble getMaxDeviation(unsigned int iterations);\u003cbr\u003e\ndouble PRH(unsigned iterations, int x, int y);\u003cbr\u003e\ndouble * getFieldDiamondSquaredMap(int x, int y, int width, int height, unsigned int iterations);\u003c/p\u003e\n\u003cp\u003e//Size of the grid to generate\u003cbr\u003e\n//This must be 2^n+1 (e.g. 257)\u003cbr\u003e\nconst int DATA_SIZE = 1024;\u003c/p\u003e\n\u003cp\u003evoid SaveTerrFile(const double * image);\u003c/p\u003e\n\u003cp\u003e/// Main function\u003cbr\u003e\nint main()\u003cbr\u003e\n{\u003cbr\u003e\n/// Define Settings\u003cbr\u003e\nint width=1024;\u003cbr\u003e\nint height=1024;\u003cbr\u003e\nint iterations=12;\u003cbr\u003e\nint x=0;\u003cbr\u003e\nint y=0;\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e// allocate memory\ndouble * map=new double[width*height];\n\nmap=getFieldDiamondSquaredMap(x,y,width,height,iterations);\n\nSaveTerrFile(map);\n\nreturn 1;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e}\u003c/p\u003e\n\u003cp\u003edouble * getFieldDiamondSquaredMap(int x, int y, int width, int height, unsigned int iterations)\u003cbr\u003e\n{\u003cbr\u003e\n/// Allocate memory for final mapdouble\u003cbr\u003e\ndouble * map = new double[width*height];\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003emap = getFieldSquareTerrain(x, y, x+width, y+height, iterations);\n\ndouble maxdeviation = getMaxDeviation(iterations);\n\nfor (unsigned int x = 0; x \u0026lt; width; x++)\n{\n    for (unsigned int  y = 0; y \u0026lt; height; y++)\n    {\n        map[x+(y*width)] = map[x+(y*width)] / maxdeviation;\n    }\n}\n\nreturn map;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e}\u003c/p\u003e\n\u003cp\u003edouble * getFieldSquareTerrain(int x0, int y0, int x1, int y1, unsigned int iterations)\u003cbr\u003e\n{\u003cbr\u003e\n/// Define final height and width\u003cbr\u003e\nint finalwidth  = x1 - x0;\u003cbr\u003e\nint finalheight = y1 - y0;\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e/// Allocate memory for final map\ndouble * finalmap = new double[finalwidth*finalheight];\n\n/// Test iteration\nif (iterations == 0)\n{\n    for (unsigned int x = 0; x \u0026lt; finalwidth; x++)\n    {\n        for (unsigned int y = 0; y \u0026lt; finalheight; y++)\n        {\n            finalmap[x+(y*finalwidth)] =  displace(iterations,x0+x,y0+y) ;\n        }\n        return finalmap;\n    }\n}\n\n/// Define ceil and floor\nint upper_x0=floor(x0/2) - 1;\nint upper_y0=floor(y0/2) - 1;\nint upper_x1=ceil(x1/2)+1;\nint upper_y1=ceil(y1/2)+1;\n\n/// Define upper height and width for upper maps\nint upper_xwidth= upper_x1-upper_x0;\nint upper_yheight= upper_y1-upper_y0;\n\n/// Allocate memory for upper map width and height\ndouble * uppermap = new double[upper_xwidth*upper_yheight];\n\n/// Pass another iteration\nuppermap = getFieldSquareTerrain(upper_x0, upper_y0, upper_x1, upper_y1, iterations-1);\n\n/// Define counter height and width\nint counter_x0= upper_x0 * 2;\nint counter_y0= upper_y0 * 2;\n\nint counter_width = upper_xwidth*2-1;\nint counter_height = upper_yheight*2-1;\n\n/// Allocate memory for currentmap using counter height and width\ndouble * currentmap = new double[counter_width*counter_height];\n\n/// Copy information to double map\nfor (unsigned int x = 0; x \u0026lt; upper_xwidth; x++)\n{\n    for (unsigned int y = 0; y\u0026lt; upper_yheight; y++)\n    {\n        currentmap[(x*2)+((y*counter_width)*2)] = uppermap[x+(y*upper_xwidth)];\n    }\n}\n\n/// Define offset\nint xoff = x0 - counter_x0;\nint yoff = y0 - counter_y0;\n\n/// Use a diamond mehod algorithm\nfor (unsigned int x = 1; x \u0026lt; counter_width-1; x += 2)\n{\n    for (unsigned int y = 1; y \u0026lt; counter_height-1; y += 2)\n    {\n        currentmap[x+(y*counter_width)] = ((currentmap[(x - 1)+((y-1)*counter_width)] + currentmap[(x - 1)+((y+1)*counter_width)] + currentmap[(x + 1)+((y-1)*counter_width)] + currentmap[(x + 1)+((y+1)*counter_width)]) / 4) + displace(iterations,counter_x0+x,counter_y0+y);\n    }\n}\nfor (unsigned int x = 1; x \u0026lt; counter_width-1; x += 2)\n{\n    for (unsigned int y = 2; y \u0026lt; counter_height-1; y += 2)\n    {\n        currentmap[x+(y*counter_width)] = ((currentmap[(x - 1)+(y*counter_width)]     + currentmap[(x + 1)+(y*counter_width)]     + currentmap[x+((y-1)*counter_width)]     + currentmap[x+((y+1)*counter_width)]) / 4) + displace(iterations,counter_x0+x,counter_y0+y);\n    }\n}\nfor (unsigned int x = 2; x \u0026lt; counter_width-1; x += 2)\n{\n    for (unsigned int y = 1; y \u0026lt; counter_height-1; y += 2)\n    {\n        currentmap[x+(y*counter_width)] = ((currentmap[(x - 1)+(y*counter_width)]     + currentmap[(x + 1)+(y*counter_width)]     + currentmap[x+((y-1)*counter_width)]     + currentmap[x+((y+1)*counter_width) ]) / 4) + displace(iterations,counter_x0+x,counter_y0+y);\n    }\n}\n\n/// Copy actual information to returned map\nfor (unsigned int x = 0; x \u0026lt; finalwidth; x++)\n{\n    for (unsigned int y = 0; y \u0026lt; finalheight; y++)\n    {\n        finalmap[x+(y*finalwidth)] = currentmap[(x+xoff)+((y+yoff)*counter_width)];\n\n    }\n}\n\nreturn finalmap;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e}\u003c/p\u003e\n\u003cp\u003e/// Random function to offset\u003cbr\u003e\ndouble displace(unsigned int  iterations, int x, int y)\u003cbr\u003e\n{\u003cbr\u003e\nreturn (((PRH(iterations,x,y) - 0.5)*2)) / (iterations+1);\u003cbr\u003e\n}\u003c/p\u003e\n\u003cp\u003e/// Get maximum deviations\u003cbr\u003e\ndouble getMaxDeviation(unsigned int iterations)\u003cbr\u003e\n{\u003cbr\u003e\ndouble dev = 0.5 / (iterations+1);\u003cbr\u003e\nif (iterations \u0026lt;= 0) return dev;\u003cbr\u003e\nreturn getMaxDeviation(iterations-1) + dev;\u003cbr\u003e\n}\u003c/p\u003e\n\u003cp\u003e///This function returns the same result for given values but should be somewhat random.\u003cbr\u003e\ndouble PRH(unsigned iterations, int x, int y)\u003cbr\u003e\n{\u003cbr\u003e\nunsigned long long hash;\u003cbr\u003e\nx \u0026amp;= 0xFFF;\u003cbr\u003e\ny \u0026amp;= 0xFFF;\u003cbr\u003e\niterations \u0026amp;= 0xFF;\u003cbr\u003e\nhash = (iterations \u0026lt;\u0026lt; 24);\u003cbr\u003e\nhash |= (y \u0026lt;\u0026lt; 12);\u003cbr\u003e\nhash |= x;\u003cbr\u003e\nunsigned long long rem = hash \u0026amp; 3;\u003cbr\u003e\nunsigned long long h = hash;\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eswitch (rem)\n{\ncase 3:\n    hash += h;\n    hash ^= hash \u0026lt;\u0026lt; 32;\n    hash ^= h \u0026lt;\u0026lt; 36;\n    hash += hash \u0026gt;\u0026gt; 22;\n    break;\ncase 2:\n    hash += h;\n    hash ^= hash \u0026lt;\u0026lt; 22;\n    hash += hash \u0026gt;\u0026gt; 34;\n    break;\ncase 1:\n    hash += h;\n    hash ^= hash \u0026lt;\u0026lt; 20;\n    hash += hash \u0026gt;\u0026gt; 2;\n}\nhash ^= hash \u0026lt;\u0026lt; 6;\nhash += hash \u0026gt;\u0026gt; 10;\nhash ^= hash \u0026lt;\u0026lt; 8;\nhash += hash \u0026gt;\u0026gt; 34;\nhash ^= hash \u0026lt;\u0026lt; 50;\nhash += hash \u0026gt;\u0026gt; 12;\n\nreturn (hash \u0026amp; 0xFFFF) / static_cast\u0026lt;double\u0026gt;(0xFFFF);\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e}\u003c/p\u003e\n\u003cp\u003evoid SaveTerrFile(const double * image)\u003cbr\u003e\n{\u003cbr\u003e\npng::image\u0026lt; png::rgb_pixel \u0026gt; newimage(1024, 1024);\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003efor (unsigned int y = 0; y \u0026lt; newimage.get_width(); ++y)\n{\n    for (unsigned int x = 0; x \u0026lt; newimage.get_height(); ++x)\n    {\n        int col=(int)(image[x+(y*newimage.get_width())]+1)*255;\n        newimage[y][x] = png::rgb_pixel(col,col,col);\n        // non-checking equivalent of image.set_pixel(x, y, ...);\n    }\n}\n\nnewimage.write(\"rgb.png\");\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e}\u003c/p\u003e\n\u003cp\u003e[/code]\u003c/p\u003e","post_number":2,"post_type":1,"updated_at":"2017-01-02T01:00:26.142Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":0,"reads":6,"readers_count":5,"score":1.2,"yours":false,"topic_id":440,"topic_slug":"field-diamond-square-for-terrain-generation","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":88,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":2381,"name":"","username":"vivienneanthony","avatar_template":"/user_avatar/discourse.urho3d.io/vivienneanthony/{size}/942_2.png","created_at":"2014-09-17T02:25:57.000Z","cooked":"\u003cp\u003eThis code test resulted in. The image before additional processing and saving to disk in a png.\u003c/p\u003e\n\u003cp\u003e0\u003cbr\u003e\n-0.000926858\u003cbr\u003e\n-8.59313e-05\u003cbr\u003e\n0.000740951\u003cbr\u003e\n-0.00112015\u003cbr\u003e\n-0.00146794\u003cbr\u003e\n0.000344809\u003cbr\u003e\n1.85939e-05\u003cbr\u003e\n-0.000501624\u003cbr\u003e\n0.000191158\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003evoid SaveTerrFile(const double * image)\n{\n    png::image\u0026lt; png::rgb_pixel \u0026gt; newimage(1024, 1024);\n\n\n    cout \u0026lt;\u0026lt; \"\\r\\n\" \u0026lt;\u0026lt; image[0];\n    cout \u0026lt;\u0026lt; \"\\r\\n\" \u0026lt;\u0026lt; image[1];\n    cout \u0026lt;\u0026lt; \"\\r\\n\" \u0026lt;\u0026lt; image[2];\n    cout \u0026lt;\u0026lt; \"\\r\\n\" \u0026lt;\u0026lt; image[3];\n    cout \u0026lt;\u0026lt; \"\\r\\n\" \u0026lt;\u0026lt; image[4];\n    cout \u0026lt;\u0026lt; \"\\r\\n\" \u0026lt;\u0026lt; image[5];\n    cout \u0026lt;\u0026lt; \"\\r\\n\" \u0026lt;\u0026lt; image[6];\n    cout \u0026lt;\u0026lt; \"\\r\\n\" \u0026lt;\u0026lt; image[7];\n    cout \u0026lt;\u0026lt; \"\\r\\n\" \u0026lt;\u0026lt; image[8];\n    cout \u0026lt;\u0026lt; \"\\r\\n\" \u0026lt;\u0026lt; image[9];\n\n\n    for (unsigned int y = 0; y \u0026lt; newimage.get_width(); ++y)\n    {\n        for (unsigned int x = 0; x \u0026lt; newimage.get_height(); ++x)\n        {\n            int col=(int)(image[x+(y*newimage.get_width())]+.1)*255;\n            newimage[y][x] = png::rgb_pixel(col,col,col);\n            // non-checking equivalent of image.set_pixel(x, y, ...);\n        }\n    }\n\n    newimage.write(\"rgb.png\");\n}\u003c/code\u003e\u003c/pre\u003e","post_number":3,"post_type":1,"updated_at":"2017-01-02T01:00:26.218Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":0,"reads":6,"readers_count":5,"score":1.2,"yours":false,"topic_id":440,"topic_slug":"field-diamond-square-for-terrain-generation","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":88,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":2383,"name":"","username":"vivienneanthony","avatar_template":"/user_avatar/discourse.urho3d.io/vivienneanthony/{size}/942_2.png","created_at":"2014-09-17T03:19:46.000Z","cooked":"\u003cp\u003eCurrent Code (Still little bug - \u003ca href=\"http://tinypic.com/r/oistxi/8\" rel=\"nofollow noopener\"\u003etinypic.com/r/oistxi/8\u003c/a\u003e)\u003c/p\u003e\n\u003cp\u003eClose but still. Argh :-/\u003c/p\u003e\n\u003cp\u003e[code]///Headers\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u003c/p\u003e\n\u003cp\u003e\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;stdio.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;stdlib.h\u0026gt;\u003c/p\u003e\n\u003cp\u003e\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;png++/png.hpp\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;png++/image.hpp\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;png++/rgb_pixel.hpp\u0026gt;\u003c/p\u003e\n\u003cp\u003eusing namespace std;\u003c/p\u003e\n\u003cp\u003e/// Terraub Functions\u003cbr\u003e\ndouble * getFieldSquareTerrain(int x0,int y0, int x1, int y1, double iterations);\u003cbr\u003e\ndouble displace(double iterations,int x, int y);\u003cbr\u003e\ndouble getMaxDeviation(double iterations);\u003cbr\u003e\ndouble PRH(unsigned iterations, int x, int y);\u003cbr\u003e\ndouble * getFieldDiamondSquaredMap(int x, int y, int width, int height, double iterations);\u003c/p\u003e\n\u003cp\u003e//Size of the grid to generate\u003cbr\u003e\n//This must be 2^n+1 (e.g. 257)\u003cbr\u003e\nconst int DATA_SIZE = 1024;\u003c/p\u003e\n\u003cp\u003evoid SaveTerrFile(const double * image);\u003c/p\u003e\n\u003cp\u003e/// Main function\u003cbr\u003e\nint main()\u003cbr\u003e\n{\u003cbr\u003e\n/// Define Settings\u003cbr\u003e\nint width=1024;\u003cbr\u003e\nint height=1024;\u003cbr\u003e\ndouble iterations=12.0f;\u003cbr\u003e\nint x=0;\u003cbr\u003e\nint y=0;\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e// allocate memory\ndouble * map=new double[width*height];\n\nmap=getFieldDiamondSquaredMap(x,y,width,height,iterations);\n\nSaveTerrFile(map);\n\nreturn 1;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e}\u003c/p\u003e\n\u003cp\u003edouble * getFieldDiamondSquaredMap(int x, int y, int width, int height, double iterations)\u003cbr\u003e\n{\u003cbr\u003e\n/// Allocate memory for final mapdouble\u003cbr\u003e\ndouble * map = new double[width*height];\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003emap = getFieldSquareTerrain(x, y, x+width, y+height, iterations);\n\ndouble maxdeviation = getMaxDeviation(iterations);\n\nfor (unsigned int x = 0; x \u0026lt; width; x++)\n{\n    for (unsigned int  y = 0; y \u0026lt; height; y++)\n    {\n        map[x+(y*width)] = map[x+(y*width)] / maxdeviation;\n    }\n}\n\nreturn map;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e}\u003c/p\u003e\n\u003cp\u003edouble * getFieldSquareTerrain(int x0, int y0, int x1, int y1, double iterations)\u003cbr\u003e\n{\u003cbr\u003e\n/// Define final height and width\u003cbr\u003e\nint finalwidth  = x1 - x0;\u003cbr\u003e\nint finalheight = y1 - y0;\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e/// Allocate memory for final map\ndouble * finalmap = new double[finalwidth*finalheight];\n\n/// Test iteration\nif (iterations == 0)\n{\n    for (unsigned int x = 0; x \u0026lt; finalwidth; x++)\n    {\n        for (unsigned int y = 0; y \u0026lt; finalheight; y++)\n        {\n            finalmap[x+(y*finalwidth)] =  displace(iterations,x0+x,y0+y) ;\n        }\n        return finalmap;\n    }\n}\n\n/// Define ceil and floor\nint upper_x0=floor(x0/2) - 1;\nint upper_y0=floor(y0/2) - 1;\nint upper_x1=ceil(x1/2)+1;\nint upper_y1=ceil(y1/2)+1;\n\n/// Define upper height and width for upper maps\nint upper_xwidth= upper_x1-upper_x0;\nint upper_yheight= upper_y1-upper_y0;\n\n/// Allocate memory for upper map width and height\ndouble * uppermap = new double[upper_xwidth*upper_yheight];\n\n/// Pass another iteration\nuppermap = getFieldSquareTerrain(upper_x0, upper_y0, upper_x1, upper_y1, iterations-1);\n\n/// Define counter height and width\nint counter_x0= upper_x0 * 2;\nint counter_y0= upper_y0 * 2;\n\nint counter_width = upper_xwidth*2-1;\nint counter_height = upper_yheight*2-1;\n\n/// Allocate memory for currentmap using counter height and width\ndouble * currentmap = new double[counter_width*counter_height];\n\n/// Copy information to double map\nfor (unsigned int x = 0; x \u0026lt; upper_xwidth; x++)\n{\n    for (unsigned int y = 0; y\u0026lt; upper_yheight; y++)\n    {\n        currentmap[(x*2)+((y*counter_width)*2)] = uppermap[x+(y*upper_xwidth)];\n    }\n}\n\n/// Define offset\nint xoff = x0 - counter_x0;\nint yoff = y0 - counter_y0;\n\n/// Use a diamond mehod algorithm\nfor (unsigned int x = 1; x \u0026lt; counter_width-1; x += 2)\n{\n    for (unsigned int y = 1; y \u0026lt; counter_height-1; y += 2)\n    {\n        currentmap[x+(y*counter_width)] = ((currentmap[(x - 1)+((y-1)*counter_width)] + currentmap[(x - 1)+((y+1)*counter_width)] + currentmap[(x + 1)+((y-1)*counter_width)] + currentmap[(x + 1)+((y+1)*counter_width)]) / 4) + displace(iterations,counter_x0+x,counter_y0+y);\n    }\n}\nfor (unsigned int x = 1; x \u0026lt; counter_width-1; x += 2)\n{\n    for (unsigned int y = 2; y \u0026lt; counter_height-1; y += 2)\n    {\n        currentmap[x+(y*counter_width)] = ((currentmap[(x - 1)+(y*counter_width)]     + currentmap[(x + 1)+(y*counter_width)]     + currentmap[x+((y-1)*counter_width)]     + currentmap[x+((y+1)*counter_width)]) / 4) + displace(iterations,counter_x0+x,counter_y0+y);\n    }\n}\nfor (unsigned int x = 2; x \u0026lt; counter_width-1; x += 2)\n{\n    for (unsigned int y = 1; y \u0026lt; counter_height-1; y += 2)\n    {\n        currentmap[x+(y*counter_width)] = ((currentmap[(x - 1)+(y*counter_width)]     + currentmap[(x + 1)+(y*counter_width)]     + currentmap[x+((y-1)*counter_width)]     + currentmap[x+((y+1)*counter_width) ]) / 4) + displace(iterations,counter_x0+x,counter_y0+y);\n    }\n}\n\n/// Copy actual information to returned map\nfor (unsigned int x = 0; x \u0026lt; finalwidth; x++)\n{\n    for (unsigned int y = 0; y \u0026lt; finalheight; y++)\n    {\n        finalmap[x+(y*finalwidth)] = currentmap[(x+xoff)+((y+yoff)*counter_width)];\n\n    }\n}\n\nreturn finalmap;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e}\u003c/p\u003e\n\u003cp\u003e/// Random function to offset\u003cbr\u003e\ndouble displace(double iterations,int x, int y)\u003cbr\u003e\n{\u003cbr\u003e\nreturn (((PRH(iterations,x,y) - 0.5)*2)) / (iterations+1);\u003cbr\u003e\n}\u003c/p\u003e\n\u003cp\u003e/// Get maximum deviations\u003cbr\u003e\ndouble getMaxDeviation(double iterations)\u003cbr\u003e\n{\u003cbr\u003e\ndouble dev = 0.5 / (iterations+1);\u003cbr\u003e\nif (iterations \u0026lt;= 0) return dev;\u003cbr\u003e\nreturn getMaxDeviation(iterations-1) + dev;\u003cbr\u003e\n}\u003c/p\u003e\n\u003cp\u003e///This function returns the same result for given values but should be somewhat random.\u003cbr\u003e\ndouble PRH(unsigned iterations, int x, int y)\u003cbr\u003e\n{\u003cbr\u003e\nunsigned long long hash;\u003cbr\u003e\nx \u0026amp;= 0xFFF;\u003cbr\u003e\ny \u0026amp;= 0xFFF;\u003cbr\u003e\niterations \u0026amp;= 0xFF;\u003cbr\u003e\nhash = (iterations \u0026lt;\u0026lt; 24);\u003cbr\u003e\nhash |= (y \u0026lt;\u0026lt; 12);\u003cbr\u003e\nhash |= x;\u003cbr\u003e\nunsigned long long rem = hash \u0026amp; 3;\u003cbr\u003e\nunsigned long long h = hash;\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eswitch (rem)\n{\ncase 3:\n    hash += h;\n    hash ^= hash \u0026lt;\u0026lt; 32;\n    hash ^= h \u0026lt;\u0026lt; 36;\n    hash += hash \u0026gt;\u0026gt; 22;\n    break;\ncase 2:\n    hash += h;\n    hash ^= hash \u0026lt;\u0026lt; 22;\n    hash += hash \u0026gt;\u0026gt; 34;\n    break;\ncase 1:\n    hash += h;\n    hash ^= hash \u0026lt;\u0026lt; 20;\n    hash += hash \u0026gt;\u0026gt; 2;\n}\nhash ^= hash \u0026lt;\u0026lt; 6;\nhash += hash \u0026gt;\u0026gt; 10;\nhash ^= hash \u0026lt;\u0026lt; 8;\nhash += hash \u0026gt;\u0026gt; 34;\nhash ^= hash \u0026lt;\u0026lt; 50;\nhash += hash \u0026gt;\u0026gt; 12;\n\nreturn (hash \u0026amp; 0xFFFF) / static_cast\u0026lt;double\u0026gt;(0xFFFF);\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e}\u003c/p\u003e\n\u003cp\u003evoid SaveTerrFile(const double * image)\u003cbr\u003e\n{\u003cbr\u003e\npng::image\u0026lt; png::rgb_pixel \u0026gt; newimage(1024, 1024);\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003efor (unsigned int y = 0; y \u0026lt; newimage.get_width(); ++y)\n{\n    for (unsigned int x = 0; x \u0026lt; newimage.get_height(); ++x)\n    {\n        int col=(int)(image[x+(y*newimage.get_width())]+1)*255;\n        newimage[y][x] = png::rgb_pixel(col,col,col);\n        // non-checking equivalent of image.set_pixel(x, y, ...);\n    }\n}\n\nnewimage.write(\"rgb.png\");\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e}\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e[/code]\u003c/code\u003e\u003c/pre\u003e","post_number":4,"post_type":1,"updated_at":"2017-01-02T01:00:26.383Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":0,"reads":6,"readers_count":5,"score":1.2,"yours":false,"topic_id":440,"topic_slug":"field-diamond-square-for-terrain-generation","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"link_counts":[{"url":"http://tinypic.com/r/oistxi/8","internal":false,"reflection":false,"title":"Image - TinyPic - Free Image Hosting, Photo Sharing \u0026 Video Hosting","clicks":0}],"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":88,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":2385,"name":"hd_","username":"hdunderscore","avatar_template":"/user_avatar/discourse.urho3d.io/hdunderscore/{size}/1151_2.png","created_at":"2014-09-17T03:30:50.000Z","cooked":"\u003cp\u003eYou left out a few functions from the last snippet.\u003c/p\u003e","post_number":5,"post_type":1,"updated_at":"2017-01-02T01:00:26.563Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":0,"reads":1,"readers_count":0,"score":0.2,"yours":false,"topic_id":440,"topic_slug":"field-diamond-square-for-terrain-generation","display_username":"hd_","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":"Contributor","title_is_group":false,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":114,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":2386,"name":"","username":"vivienneanthony","avatar_template":"/user_avatar/discourse.urho3d.io/vivienneanthony/{size}/942_2.png","created_at":"2014-09-17T03:47:22.000Z","cooked":"\u003caside class=\"quote\"\u003e\n\u003cdiv class=\"title\"\u003e\n\u003cdiv class=\"quote-controls\"\u003e\u003c/div\u003e\n hd_:\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003eYou left out a few functions from the last snippet.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/aside\u003e\n\u003cp\u003eThanks. I placed the whole code.\u003c/p\u003e","post_number":6,"post_type":1,"updated_at":"2017-01-02T01:00:26.633Z","reply_count":0,"reply_to_post_number":null,"quote_count":1,"incoming_link_count":1,"reads":2,"readers_count":1,"score":5.4,"yours":false,"topic_id":440,"topic_slug":"field-diamond-square-for-terrain-generation","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":88,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":2387,"name":"hd_","username":"hdunderscore","avatar_template":"/user_avatar/discourse.urho3d.io/hdunderscore/{size}/1151_2.png","created_at":"2014-09-17T03:53:56.000Z","cooked":"\u003cp\u003eThe last thing I can think of is this:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003e\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eProbably should be double too.\u003c/p\u003e\n\u003cp\u003eEdit:\u003c/p\u003e\n\u003cp\u003eNevermind, it should probably be a signed int:\u003cbr\u003e\n\u003ca href=\"http://stackoverflow.com/questions/1822350/what-is-the-javascript-operator-and-how-do-you-use-it\" rel=\"nofollow noopener\"\u003estackoverflow.com/questions/1822 … you-use-it\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eIn Javascript, numbers are usually doubles but when you bit shift them they are treated as signed ints. In JavaScript, there is a special operator for unsigned bit shift but the code supplied only uses the signed bit shift, so you probably want to use signed int on PRH.\u003c/p\u003e","post_number":7,"post_type":1,"updated_at":"2017-01-02T01:00:26.703Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":0,"reads":2,"readers_count":1,"score":0.4,"yours":false,"topic_id":440,"topic_slug":"field-diamond-square-for-terrain-generation","display_username":"hd_","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"link_counts":[{"url":"http://stackoverflow.com/questions/1822350/what-is-the-javascript-operator-and-how-do-you-use-it","internal":false,"reflection":false,"title":"What is the JavaScript \u003e\u003e\u003e operator and how do you use it? - Stack Overflow","clicks":0}],"read":true,"user_title":"Contributor","title_is_group":false,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":114,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":2388,"name":"","username":"vivienneanthony","avatar_template":"/user_avatar/discourse.urho3d.io/vivienneanthony/{size}/942_2.png","created_at":"2014-09-17T04:01:58.000Z","cooked":"\u003cp\u003e[quote=“hd_”]The last thing I can think of is this:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003e\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eProbably should be double too.[/quote]\u003c/p\u003e\n\u003cp\u003eChanging that causes a  error.\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e/media/home2/vivienne/testingc++/HeightWidth.cpp||In function ?double PRH(double, int, int)?:|\n/media/home2/vivienne/testingc++/HeightWidth.cpp|186|error: invalid operands of types ?double? and ?int? to binary ?operator\u0026amp;?|\n/media/home2/vivienne/testingc++/HeightWidth.cpp|186|error:   in evaluation of ?operator\u0026amp;=(double, int)?|\n/media/home2/vivienne/testingc++/HeightWidth.cpp|187|error: invalid operands of types ?double? and ?int? to binary ?operator\u0026lt;\u0026lt;?|\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003ein\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e\n    iterations \u0026amp;= 0xFF;\n    hash = (iterations \u0026lt;\u0026lt; 24);\u003c/code\u003e\u003c/p\u003e","post_number":8,"post_type":1,"updated_at":"2017-01-02T01:00:26.777Z","reply_count":0,"reply_to_post_number":null,"quote_count":1,"incoming_link_count":0,"reads":4,"readers_count":3,"score":0.8,"yours":false,"topic_id":440,"topic_slug":"field-diamond-square-for-terrain-generation","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":88,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":2391,"name":"","username":"vivienneanthony","avatar_template":"/user_avatar/discourse.urho3d.io/vivienneanthony/{size}/942_2.png","created_at":"2014-09-17T13:12:10.000Z","cooked":"\u003cp\u003eThis is a modification. I converted of final image to range to 0 to 1, then muiltiplied that to 255. Which gets better results but.\u003c/p\u003e\n\u003cp\u003eI rather the final image to be 0 and above only, no negative before saving without extra processing. I’m assuming the floor and ceil has to be changed??? This would allow infinite terrain a lot better. If it went from 0 to 1(or above)  without disturbing produced double data.\u003c/p\u003e\n\u003cp\u003eThe extra c++ library I used is libpng.\u003c/p\u003e\n\u003cp\u003eImage produced from this method \u003ca href=\"http://tinypic.com/r/2rr2cqt/8\" rel=\"nofollow noopener\"\u003etinypic.com/r/2rr2cqt/8\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e[code]///Headers\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u003c/p\u003e\n\u003cp\u003e\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;stdio.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;stdlib.h\u0026gt;\u003c/p\u003e\n\u003cp\u003e\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;png++/png.hpp\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;png++/image.hpp\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;png++/rgb_pixel.hpp\u0026gt;\u003c/p\u003e\n\u003cp\u003eusing namespace std;\u003c/p\u003e\n\u003cp\u003e/// Terraub Functions\u003cbr\u003e\ndouble * getFieldSquareTerrain(int x0,int y0, int x1, int y1, double iterations);\u003cbr\u003e\ndouble displace(double iterations,int x, int y);\u003cbr\u003e\ndouble getMaxDeviation(double iterations);\u003cbr\u003e\ndouble PRH(unsigned iterations, int x, int y);\u003cbr\u003e\ndouble * getFieldDiamondSquaredMap(int x, int y, int width, int height, double iterations);\u003c/p\u003e\n\u003cp\u003e//Size of the grid to generate\u003cbr\u003e\n//This must be 2^n+1 (e.g. 257)\u003cbr\u003e\nconst int DATA_SIZE = 1024;\u003c/p\u003e\n\u003cp\u003evoid SaveTerrFile(const double * image);\u003c/p\u003e\n\u003cp\u003e/// Main function\u003cbr\u003e\nint main()\u003cbr\u003e\n{\u003cbr\u003e\n/// Define Settings\u003cbr\u003e\nint width=1024;\u003cbr\u003e\nint height=1024;\u003cbr\u003e\ndouble iterations=52.0f;\u003cbr\u003e\nint x=0;\u003cbr\u003e\nint y=0;\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e// allocate memory\ndouble * map=new double[width*height];\n\nmap=getFieldDiamondSquaredMap(x,y,width,height,iterations);\n\n/// Set maxY and minY to 0.0f\ndouble maxY = map[2];\ndouble minY = map[2];\n\nfor (int x = 0; x\u0026lt;width; x++)\n{\n    for(int y = 0; y\u0026lt;height; y++)\n    {\n        if ((double)map[x+(y*width)] \u0026gt; maxY)\n        {\n            maxY = map[x+(y*width)];\n        }\n        if ((double)map[x+(y*width)] \u0026lt; minY)\n        {\n            minY = map[x+(y*width)];\n        }\n    }\n}\n\n/// Calculate height_ from 0 to 1\nfor(int x=0; x \u0026lt; width; x++)\n{\n    for(int y=0; y \u0026lt; height; y++)\n    {\n        //change range to 0..1\n        map[x+(y*width)]  = (map[x+(y*width)] - minY) / (maxY - minY);\n\n\n    }\n}\n\nSaveTerrFile(map);\n\nreturn 1;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e}\u003c/p\u003e\n\u003cp\u003edouble * getFieldDiamondSquaredMap(int x, int y, int width, int height, double iterations)\u003cbr\u003e\n{\u003cbr\u003e\n/// Allocate memory for final mapdouble\u003cbr\u003e\ndouble * map = new double[width*height];\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003emap = getFieldSquareTerrain(x, y, x+width, y+height, iterations);\n\ndouble maxdeviation = getMaxDeviation(iterations);\n\nfor (unsigned int x = 0; x \u0026lt; width; x++)\n{\n    for (unsigned int  y = 0; y \u0026lt; height; y++)\n    {\n        map[x+(y*width)] = map[x+(y*width)] / maxdeviation;\n\n    }\n}\n\nreturn map;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e}\u003c/p\u003e\n\u003cp\u003edouble * getFieldSquareTerrain(int x0, int y0, int x1, int y1, double iterations)\u003cbr\u003e\n{\u003cbr\u003e\n/// Define final height and width\u003cbr\u003e\nint finalwidth  = x1 - x0;\u003cbr\u003e\nint finalheight = y1 - y0;\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e/// Allocate memory for final map\ndouble * finalmap = new double[finalwidth*finalheight];\n\n/// Test iteration\nif (iterations == 0)\n{\n    for (unsigned int x = 0; x \u0026lt; finalwidth; x++)\n    {\n        for (unsigned int y = 0; y \u0026lt; finalheight; y++)\n        {\n            finalmap[x+(y*finalwidth)] =  displace(iterations,x0+x,y0+y) ;\n        }\n        return finalmap;\n    }\n}\n\n/// Define ceil and floor\nint upper_x0=floor(x0/2) - 1;\nint upper_y0=floor(y0/2) - 1;\nint upper_x1=ceil(x1/2)+1;\nint upper_y1=ceil(y1/2)+1;\n\n/// Define upper height and width for upper maps\nint upper_xwidth= upper_x1-upper_x0;\nint upper_yheight= upper_y1-upper_y0;\n\n/// Allocate memory for upper map width and height\ndouble * uppermap = new double[upper_xwidth*upper_yheight];\n\n/// Pass another iteration\nuppermap = getFieldSquareTerrain(upper_x0, upper_y0, upper_x1, upper_y1, iterations-1);\n\n/// Define counter height and width\nint counter_x0= upper_x0 * 2;\nint counter_y0= upper_y0 * 2;\n\nint counter_width = upper_xwidth*2-1;\nint counter_height = upper_yheight*2-1;\n\n/// Allocate memory for currentmap using counter height and width\ndouble * currentmap = new double[counter_width*counter_height];\n\n/// Copy information to double map\nfor (unsigned int x = 0; x \u0026lt; upper_xwidth; x++)\n{\n    for (unsigned int y = 0; y\u0026lt; upper_yheight; y++)\n    {\n        currentmap[(x*2)+((y*counter_width)*2)] = uppermap[x+(y*upper_xwidth)];\n    }\n}\n\n/// Define offset\nint xoff = x0 - counter_x0;\nint yoff = y0 - counter_y0;\n\n/// Use a diamond mehod algorithm\nfor (unsigned int x = 1; x \u0026lt; counter_width-1; x += 2)\n{\n    for (unsigned int y = 1; y \u0026lt; counter_height-1; y += 2)\n    {\n        currentmap[x+(y*counter_width)] = ((currentmap[(x - 1)+((y-1)*counter_width)] + currentmap[(x - 1)+((y+1)*counter_width)] + currentmap[(x + 1)+((y-1)*counter_width)] + currentmap[(x + 1)+((y+1)*counter_width)]) / 4) + displace(iterations,counter_x0+x,counter_y0+y);\n    }\n}\nfor (unsigned int x = 1; x \u0026lt; counter_width-1; x += 2)\n{\n    for (unsigned int y = 2; y \u0026lt; counter_height-1; y += 2)\n    {\n        currentmap[x+(y*counter_width)] = ((currentmap[(x - 1)+(y*counter_width)]     + currentmap[(x + 1)+(y*counter_width)]     + currentmap[x+((y-1)*counter_width)]     + currentmap[x+((y+1)*counter_width)]) / 4) + displace(iterations,counter_x0+x,counter_y0+y);\n    }\n}\nfor (unsigned int x = 2; x \u0026lt; counter_width-1; x += 2)\n{\n    for (unsigned int y = 1; y \u0026lt; counter_height-1; y += 2)\n    {\n        currentmap[x+(y*counter_width)] = ((currentmap[(x - 1)+(y*counter_width)]     + currentmap[(x + 1)+(y*counter_width)]     + currentmap[x+((y-1)*counter_width)]     + currentmap[x+((y+1)*counter_width) ]) / 4) + displace(iterations,counter_x0+x,counter_y0+y);\n    }\n}\n\n/// Copy actual information to returned map\nfor (unsigned int x = 0; x \u0026lt; finalwidth; x++)\n{\n    for (unsigned int y = 0; y \u0026lt; finalheight; y++)\n    {\n        finalmap[x+(y*finalwidth)] = currentmap[(x+xoff)+((y+yoff)*counter_width)];\n\n    }\n}\n\n/// Clear Memory\ndelete currentmap;\ndelete uppermap;\n\nreturn finalmap;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e}\u003c/p\u003e\n\u003cp\u003e/// Random function to offset\u003cbr\u003e\ndouble displace(double iterations,int x, int y)\u003cbr\u003e\n{\u003cbr\u003e\nreturn (((PRH(iterations,x,y) - 0.5)*2)) / (iterations+1);\u003cbr\u003e\n}\u003c/p\u003e\n\u003cp\u003e/// Get maximum deviations\u003cbr\u003e\ndouble getMaxDeviation(double iterations)\u003cbr\u003e\n{\u003cbr\u003e\ndouble dev = 0.5 / (iterations+1);\u003cbr\u003e\nif (iterations \u0026lt;= 0) return dev;\u003cbr\u003e\nreturn getMaxDeviation(iterations-1) + dev;\u003cbr\u003e\n}\u003c/p\u003e\n\u003cp\u003e///This function returns the same result for given values but should be somewhat random.\u003cbr\u003e\ndouble PRH(unsigned iterations, int x, int y)\u003cbr\u003e\n{\u003cbr\u003e\nunsigned long long hash;\u003cbr\u003e\nx \u0026amp;= 0xFFF;\u003cbr\u003e\ny \u0026amp;= 0xFFF;\u003cbr\u003e\niterations \u0026amp;= 0xFF;\u003cbr\u003e\nhash = (iterations \u0026lt;\u0026lt; 24);\u003cbr\u003e\nhash |= (y \u0026lt;\u0026lt; 12);\u003cbr\u003e\nhash |= x;\u003cbr\u003e\nunsigned long long rem = hash \u0026amp; 3;\u003cbr\u003e\nunsigned long long h = hash;\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eswitch (rem)\n{\ncase 3:\n    hash += h;\n    hash ^= hash \u0026lt;\u0026lt; 32;\n    hash ^= h \u0026lt;\u0026lt; 36;\n    hash += hash \u0026gt;\u0026gt; 22;\n    break;\ncase 2:\n    hash += h;\n    hash ^= hash \u0026lt;\u0026lt; 22;\n    hash += hash \u0026gt;\u0026gt; 34;\n    break;\ncase 1:\n    hash += h;\n    hash ^= hash \u0026lt;\u0026lt; 20;\n    hash += hash \u0026gt;\u0026gt; 2;\n}\nhash ^= hash \u0026lt;\u0026lt; 6;\nhash += hash \u0026gt;\u0026gt; 10;\nhash ^= hash \u0026lt;\u0026lt; 8;\nhash += hash \u0026gt;\u0026gt; 34;\nhash ^= hash \u0026lt;\u0026lt; 50;\nhash += hash \u0026gt;\u0026gt; 12;\n\nreturn (hash \u0026amp; 0xFFFF) / static_cast\u0026lt;double\u0026gt;(0xFFFF);\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e}\u003c/p\u003e\n\u003cp\u003evoid SaveTerrFile(const double * image)\u003cbr\u003e\n{\u003cbr\u003e\npng::image\u0026lt; png::rgb_pixel \u0026gt; newimage(1024, 1024);\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003efor (unsigned int y = 0; y \u0026lt; newimage.get_width(); ++y)\n{\n    for (unsigned int x = 0; x \u0026lt; newimage.get_height(); ++x)\n    {\n        int col = int(image[x+(y*newimage.get_width())]*255);\n        newimage[y][x] = png::rgb_pixel(col,col,col);\n        // non-checking equivalent of image.set_pixel(x, y, ...);\n    }\n}\n\nnewimage.write(\"rgb.png\");\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e}\u003cbr\u003e\n[/code]\u003c/p\u003e","post_number":9,"post_type":1,"updated_at":"2017-01-02T01:00:27.034Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":0,"reads":5,"readers_count":4,"score":1.0,"yours":false,"topic_id":440,"topic_slug":"field-diamond-square-for-terrain-generation","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"link_counts":[{"url":"http://tinypic.com/r/2rr2cqt/8","internal":false,"reflection":false,"title":"Image - TinyPic - Free Image Hosting, Photo Sharing \u0026 Video Hosting","clicks":1}],"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":88,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false}],"stream":[2361,2380,2381,2383,2385,2386,2387,2388,2391]},"timeline_lookup":[[1,2990],[2,2989]],"suggested_topics":[{"id":7263,"title":"Is Steam integration like this possible?","fancy_title":"Is Steam integration like this possible?","slug":"is-steam-integration-like-this-possible","posts_count":4,"reply_count":0,"highest_post_number":4,"image_url":null,"created_at":"2022-05-12T22:06:15.739Z","last_posted_at":"2022-05-14T22:02:38.197Z","bumped":true,"bumped_at":"2022-05-14T22:02:38.197Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":0,"views":202,"category_id":10,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":1292,"username":"evolgames","name":"evol","avatar_template":"/user_avatar/discourse.urho3d.io/evolgames/{size}/3169_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":1358,"username":"JSandusky","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/jsandusky/{size}/3220_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":184,"username":"Enhex","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png"}}]},{"id":7086,"title":"Handling CrowdAgents that get stuck","fancy_title":"Handling CrowdAgents that get stuck","slug":"handling-crowdagents-that-get-stuck","posts_count":2,"reply_count":0,"highest_post_number":2,"image_url":null,"created_at":"2021-12-04T01:26:23.062Z","last_posted_at":"2021-12-05T04:37:54.143Z","bumped":true,"bumped_at":"2021-12-05T04:37:54.143Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":0,"views":137,"category_id":10,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest single","description":"Original Poster, Most Recent Poster","user":{"id":861,"username":"GodMan","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/g/e79b87/{size}.png"}}]},{"id":7177,"title":"Attaching a shader to a BorderImage","fancy_title":"Attaching a shader to a BorderImage","slug":"attaching-a-shader-to-a-borderimage","posts_count":4,"reply_count":1,"highest_post_number":4,"image_url":null,"created_at":"2022-01-31T17:49:50.734Z","last_posted_at":"2022-02-01T02:22:10.927Z","bumped":true,"bumped_at":"2022-02-01T02:22:10.927Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":0,"views":151,"category_id":10,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":null,"description":"Original Poster","user":{"id":1165,"username":"throwawayerino","name":"Actually Permanent","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/t/da6949/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":484,"username":"Eugene","name":"Eugene Kozlov","avatar_template":"/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png"}},{"extras":"latest","description":"Most Recent Poster","user":{"id":631,"username":"JTippetts1","name":"J Tippetts","avatar_template":"/user_avatar/discourse.urho3d.io/jtippetts1/{size}/96_2.png"}}]},{"id":7081,"title":"Install Urho3D Library - Windows 10 - rake build - \"project does not exist\"","fancy_title":"Install Urho3D Library - Windows 10 - rake build - \u0026ldquo;project does not exist\u0026rdquo;","slug":"install-urho3d-library-windows-10-rake-build-project-does-not-exist","posts_count":4,"reply_count":1,"highest_post_number":4,"image_url":null,"created_at":"2021-12-03T03:06:40.974Z","last_posted_at":"2021-12-03T17:53:10.844Z","bumped":true,"bumped_at":"2021-12-03T17:53:10.844Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":0,"views":190,"category_id":10,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":1488,"username":"ToolmakerSteve","name":"ToolmakerSteve","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/t/ba9def/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":1491,"username":"xlat","name":"Alex Kuch","avatar_template":"/user_avatar/discourse.urho3d.io/xlat/{size}/3620_2.png"}}]},{"id":7281,"title":"Cannot launch + Converting .fbx to .ani","fancy_title":"Cannot launch + Converting .fbx to .ani","slug":"cannot-launch-converting-fbx-to-ani","posts_count":14,"reply_count":10,"highest_post_number":14,"image_url":null,"created_at":"2022-06-17T04:59:42.992Z","last_posted_at":"2022-06-20T16:21:59.555Z","bumped":true,"bumped_at":"2022-06-20T16:21:59.555Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":3,"views":258,"category_id":10,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":null,"description":"Original Poster","user":{"id":1526,"username":"NoobBeggar","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/n/e68b1a/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":631,"username":"JTippetts1","name":"J Tippetts","avatar_template":"/user_avatar/discourse.urho3d.io/jtippetts1/{size}/96_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":263,"username":"1vanK","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/1vank/{size}/768_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":484,"username":"Eugene","name":"Eugene Kozlov","avatar_template":"/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png"}},{"extras":"latest","description":"Most Recent Poster","user":{"id":628,"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}}]}],"tags_descriptions":{},"id":440,"title":"Field Diamond Square for Terrain Generation","fancy_title":"Field Diamond Square for Terrain Generation","posts_count":9,"created_at":"2014-09-16T15:14:47.000Z","views":245,"reply_count":0,"like_count":0,"last_posted_at":"2014-09-17T13:12:10.000Z","visible":true,"closed":false,"archived":false,"has_summary":false,"archetype":"regular","slug":"field-diamond-square-for-terrain-generation","category_id":10,"word_count":4591,"deleted_at":null,"user_id":88,"featured_link":null,"pinned_globally":false,"pinned_at":null,"pinned_until":null,"image_url":null,"slow_mode_seconds":0,"draft":null,"draft_key":"topic_440","draft_sequence":null,"unpinned":null,"pinned":false,"current_post_number":1,"highest_post_number":9,"deleted_by":null,"actions_summary":[{"id":4,"count":0,"hidden":false,"can_act":false},{"id":8,"count":0,"hidden":false,"can_act":false},{"id":7,"count":0,"hidden":false,"can_act":false}],"chunk_size":20,"bookmarked":false,"bookmarks":[],"topic_timer":null,"message_bus_last_id":0,"participant_count":2,"show_read_indicator":false,"thumbnails":null,"slow_mode_enabled_until":null,"tags_disable_ads":false,"details":{"can_edit":false,"notification_level":1,"participants":[{"id":88,"username":"vivienneanthony","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/vivienneanthony/{size}/942_2.png","post_count":7,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"trust_level":2},{"id":114,"username":"hdunderscore","name":"hd_","avatar_template":"/user_avatar/discourse.urho3d.io/hdunderscore/{size}/1151_2.png","post_count":2,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"trust_level":2}],"created_by":{"id":88,"username":"vivienneanthony","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/vivienneanthony/{size}/942_2.png"},"last_poster":{"id":88,"username":"vivienneanthony","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/vivienneanthony/{size}/942_2.png"},"links":[{"url":"http://tinypic.com/r/2rr2cqt/8","title":"Image - TinyPic - Free Image Hosting, Photo Sharing \u0026 Video Hosting","internal":false,"attachment":false,"reflection":false,"clicks":1,"user_id":88,"domain":"tinypic.com","root_domain":"tinypic.com"},{"url":"http://tinypic.com/view.php?pic=aaho3t\u0026s=8#.VBjW3K1hWio","title":"Image - TinyPic - Free Image Hosting, Photo Sharing \u0026 Video Hosting","internal":false,"attachment":false,"reflection":false,"clicks":1,"user_id":88,"domain":"tinypic.com","root_domain":"tinypic.com"}]}}