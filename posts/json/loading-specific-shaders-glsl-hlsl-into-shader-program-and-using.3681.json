{"post_stream":{"posts":[{"id":21402,"name":"","username":"vivienneanthony","avatar_template":"/user_avatar/discourse.urho3d.io/vivienneanthony/{size}/942_2.png","created_at":"2017-10-24T18:23:19.814Z","cooked":"\u003cp\u003eHello,\u003c/p\u003e\n\u003cp\u003eI’m trying to implement some code. How can you directly load a glsl or hlsl into Urho3D that can be used by the shader program? I have to pass information into it utilizing the GPU. The code is the following.\u003c/p\u003e\n\u003cp\u003eAny input will help… I can provide a sample of the code it’s being used in at least the calls to the shader.\u003c/p\u003e\n\u003cp\u003eVivienne\u003c/p\u003e\n\u003cp\u003ePlanet.GLSL\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e#include \"Uniforms.glsl\"\n#include \"Samplers.glsl\"\n\nuniform vec3      lightDir;\nuniform sampler2D colormap;\nuniform sampler2D heightmap;\nuniform sampler2D normalmap;\nuniform vec3      atmosphereColor;\nvarying vec3      planetNormal;\nvarying vec2      texCoord;\nvarying float     dist;\nvarying vec3  \t  planetNormal;\nvarying vec2  \t  texCoord;\nvarying float \t  dist;\n\nvoid PS()\n\n{\n  gl_FragColor = vec4(0.0, 1.0, 0.0, 1.0);\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e \u003c/p\u003e\n\u003cp\u003ePositionHeightMap.glsl\u003cbr\u003e\n \u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003evoid VS()\n{\n  planetNormal = normalize(gl_Vertex.xyz);\n  texCoord = gl_MultiTexCoord0.st;\n  gl_Position = gl_ModelViewProjectionMatrix * gl_Vertex;\n  dist = gl_Position.z;\n}\n\n#include \"Uniforms.glsl\"\n#include \"Samplers.glsl\"\n\nuniform sampler2D positionmap;\nuniform float texelSize;\n\nvoid VS()\n{\n  gl_TexCoord[0].st = gl_MultiTexCoord0.st;\n\tgl_Position = gl_ModelViewProjectionMatrix * gl_Vertex;\n}\n\nNormalHeightMap.glsl\nvoid PS()\n{\n  // Sample positions\n  vec3 posX0Y0 = texture2D(positionmap, gl_TexCoord[0].st).rgb;\n  vec3 posXMY0 = texture2D(positionmap, gl_TexCoord[0].st - vec2(texelSize, 0.0)).rgb;\n  vec3 posXPY0 = texture2D(positionmap, gl_TexCoord[0].st + vec2(texelSize, 0.0)).rgb;\n  vec3 posX0YM = texture2D(positionmap, gl_TexCoord[0].st - vec2(0.0, texelSize)).rgb;\n  vec3 posX0YP = texture2D(positionmap, gl_TexCoord[0].st + vec2(0.0, texelSize)).rgb;\n  \n  // Edges connecting the samples\n  vec3 edgeXM = posXMY0 - posX0Y0;\n  vec3 edgeXP = posXPY0 - posX0Y0;\n  vec3 edgeYM = posX0YM - posX0Y0;\n  vec3 edgeYP = posX0YP - posX0Y0;\n  \n  // Using only one of these normals is faster but not as accurate\n  vec3 normalM = cross(edgeXM, edgeYM);\n  vec3 normalP = cross(edgeXP, edgeYP);\n  \n  // Normalize the sum of both normals (averaging happens automatically)\n  vec3 normal = normalize(normalM + normalP);\n  gl_FragData[0] = 0.5 + 0.5 * vec4(normal, 1.0);\n  gl_FragData[1] = vec4(texture2D(positionmap, gl_TexCoord[0].st).a);\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e \u003c/p\u003e\n\u003cp\u003ePositionMap.glsl\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e#include \"Uniforms.glsl\"\n#include \"Samplers.glsl\"\nuniform sampler2D permTex;\nuniform float heightScale;\nuniform unsigned int octaves;\nuniform float gain;\nuniform float lacunarity;\nuniform float offset;\nuniform float h;\nuniform float radius;\nvarying vec3  cubePosition;\n\n#define TEXEL_FULL 0.003906250\n#define TEXEL_HALF 0.001953125\n#define FADE(t) ((t) * (t) * (t) * ((t) * ((t) * 6.0 - 15.0) + 10.0))\n\nfloat perlin(vec3 p)\n{\n  vec3 p0i = TEXEL_FULL * floor(p) + TEXEL_HALF;\n  vec3 p1i = p0i + TEXEL_FULL;\n  vec3 p0f = fract(p);\n  vec3 p1f = p0f - 1.0;\n  \n  vec3 u = FADE(p0f);\n  \n  // Could using a single RGBA texture for the four permutation table lookups increase performance?\n  float perm00 = texture2D(permTex, vec2(p0i.y, p0i.z)).a;\n  float perm10 = texture2D(permTex, vec2(p1i.y, p0i.z)).a;\n  float perm01 = texture2D(permTex, vec2(p0i.y, p1i.z)).a;\n  float perm11 = texture2D(permTex, vec2(p1i.y, p1i.z)).a;\n  \n  float a = dot(texture2D(permTex, vec2(p0i.x, perm00)).rgb * 4.0 - 1.0, vec3(p0f.x, p0f.y, p0f.z));\n  float b = dot(texture2D(permTex, vec2(p1i.x, perm00)).rgb * 4.0 - 1.0, vec3(p1f.x, p0f.y, p0f.z));\n  float c = dot(texture2D(permTex, vec2(p0i.x, perm10)).rgb * 4.0 - 1.0, vec3(p0f.x, p1f.y, p0f.z));\n  float d = dot(texture2D(permTex, vec2(p1i.x, perm10)).rgb * 4.0 - 1.0, vec3(p1f.x, p1f.y, p0f.z));\n  float e = dot(texture2D(permTex, vec2(p0i.x, perm01)).rgb * 4.0 - 1.0, vec3(p0f.x, p0f.y, p1f.z));\n  float f = dot(texture2D(permTex, vec2(p1i.x, perm01)).rgb * 4.0 - 1.0, vec3(p1f.x, p0f.y, p1f.z));\n  float g = dot(texture2D(permTex, vec2(p0i.x, perm11)).rgb * 4.0 - 1.0, vec3(p0f.x, p1f.y, p1f.z));\n  float h = dot(texture2D(permTex, vec2(p1i.x, perm11)).rgb * 4.0 - 1.0, vec3(p1f.x, p1f.y, p1f.z));\n  \n  vec4 lerpZ = mix(vec4(a, c, b, d), vec4(e, g, f, h), u.z);\n  vec2 lerpY = mix(lerpZ.xz, lerpZ.yw, u.y);\n  return mix(lerpY.x, lerpY.y, u.x);\n}\n\n// http://mathproofs.blogspot.com/2005/07/mapping-cube-to-sphere.html\nvec3 cubeToSphere(vec3 pt)\n{\n  vec3 ptSq = pt * pt;\n  return pt.xyz * sqrt(max(1.0 - (ptSq.yzx + ptSq.zxy) * 0.5 + ptSq.yzx * ptSq.zxy * 0.3333333, 0.0));\n}\n\nfloat ridgedMultifractal(vec3 dir)\n{\n  float frequency = lacunarity, signal, weight;\n  \n  // Get the base signal (absolute value to create the ridges; square for sharper ridges)\n  signal = offset - abs(perlin(dir));\n  signal *= signal;\n  float result = signal;\n  \n  float exponentArraySum = 1.0;\n  for (int i = 1; i \u0026lt; octaves; i++)\n  {\n    // This could be precalculated\n    float exponentValue = pow(frequency, -h);\n    exponentArraySum += exponentValue;\n    frequency *= lacunarity;\n    \n    dir *= lacunarity;\n    weight = clamp(signal * gain, 0.0, 1.0);\n    \n    // Get the next \"octave\" (only true octave if lacunarity = 2.0, right?)\n    signal = offset - abs(perlin(dir));\n    signal *= signal;\n    signal *= weight;\n    \n    result += signal * exponentValue;\n  }\n  \n  // Scale result to [0,1] (not true when offset != 1.0)\n  result /= exponentArraySum;\n  \n  return result;\n}\n\nvoid VS()\n{\n\tvarying vec3 cubePosition;\n\n\t// Vertex position on the cube [-1,1] is passed as texture coordinates\n \tcubePosition = gl_MultiTexCoord0.xyz;\n  \n\tgl_Position = gl_ModelViewProjectionMatrix * gl_Vertex;\n}\n\nvoid PS()\n{\n  // Transform from cube [-1,1] to unit sphere\n  vec3 spherePosition = cubeToSphere(cubePosition);\n  \n  // Calculate height value\n  float rmf0 = ridgedMultifractal(spherePosition);\n  \n  // Scale and bias to match CPU implementation [-1,1]\n  float rmf1 = rmf0 * 2.0 - 1.0;\n  float height = 1.0 + rmf1 * heightScale;\n  //height *= radius;\n  \n  // RGBA with surface position (RGB) and RMF value (A)\n  gl_FragColor = vec4(spherePosition * height, rmf0);\n}\u003c/code\u003e\u003c/pre\u003e","post_number":1,"post_type":1,"updated_at":"2017-10-24T18:26:51.190Z","reply_count":1,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":96,"reads":52,"readers_count":51,"score":495.4,"yours":false,"topic_id":3681,"topic_slug":"loading-specific-shaders-glsl-hlsl-into-shader-program-and-using","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":88,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":21410,"name":"","username":"vivienneanthony","avatar_template":"/user_avatar/discourse.urho3d.io/vivienneanthony/{size}/942_2.png","created_at":"2017-10-24T21:47:41.409Z","cooked":"\u003cp\u003eI’m thinking that ShadeProgram should initalize and load a resource that adds then compile some source.\u003c/p\u003e","post_number":2,"post_type":1,"updated_at":"2017-10-24T21:47:41.409Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":0,"reads":46,"readers_count":45,"score":9.2,"yours":false,"topic_id":3681,"topic_slug":"loading-specific-shaders-glsl-hlsl-into-shader-program-and-using","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":88,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":21412,"name":"Eugene Kozlov","username":"Eugene","avatar_template":"/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png","created_at":"2017-10-24T21:56:44.877Z","cooked":"\u003caside class=\"quote\" data-post=\"1\" data-topic=\"3681\"\u003e\n\u003cdiv class=\"title\"\u003e\n\u003cdiv class=\"quote-controls\"\u003e\u003c/div\u003e\n\u003cimg alt width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/vivienneanthony/40/942_1.png\" class=\"avatar\"\u003e vivienneanthony:\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003eHow can you directly load a glsl or hlsl into Urho3D that can be used by the shader program?\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/aside\u003e\n\u003cp\u003e\u003ccode\u003eShaderProgram\u003c/code\u003e constructor explicitly consumes \u003ccode\u003eShaderVariation\u003c/code\u003es that are generated by \u003ccode\u003eShader\u003c/code\u003e.\u003cbr\u003e\nSo, you load \u003ccode\u003eShader\u003c/code\u003e, make \u003ccode\u003eShaderVariation\u003c/code\u003e and finally got a \u003ccode\u003eShaderProgram\u003c/code\u003e\u003c/p\u003e","post_number":3,"post_type":1,"updated_at":"2017-10-24T21:57:24.140Z","reply_count":1,"reply_to_post_number":null,"quote_count":1,"incoming_link_count":0,"reads":44,"readers_count":43,"score":13.8,"yours":false,"topic_id":3681,"topic_slug":"loading-specific-shaders-glsl-hlsl-into-shader-program-and-using","display_username":"Eugene Kozlov","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":"Core developer","title_is_group":false,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":484,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":21413,"name":"","username":"vivienneanthony","avatar_template":"/user_avatar/discourse.urho3d.io/vivienneanthony/{size}/942_2.png","created_at":"2017-10-24T23:26:40.170Z","cooked":"\u003cp\u003eAfter a compile I’m looking at that currently.  I’m checking would for the purpose I’m doing creating a global shader then telling a Graphics subsystem to use a shader at a particular time.\u003c/p\u003e","post_number":4,"post_type":1,"updated_at":"2017-10-24T23:26:40.170Z","reply_count":0,"reply_to_post_number":3,"quote_count":0,"incoming_link_count":0,"reads":42,"readers_count":41,"score":8.4,"yours":false,"topic_id":3681,"topic_slug":"loading-specific-shaders-glsl-hlsl-into-shader-program-and-using","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"reply_to_user":{"username":"Eugene","name":"Eugene Kozlov","avatar_template":"/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png"},"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":88,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false}],"stream":[21402,21410,21412,21413]},"timeline_lookup":[[1,1855]],"suggested_topics":[{"id":7146,"title":"How create affordable comfortable and modern terrain?","fancy_title":"How create affordable comfortable and modern terrain?","slug":"how-create-affordable-comfortable-and-modern-terrain","posts_count":5,"reply_count":1,"highest_post_number":5,"image_url":null,"created_at":"2022-01-21T15:20:08.910Z","last_posted_at":"2022-01-21T21:51:58.799Z","bumped":true,"bumped_at":"2022-01-21T22:03:14.896Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":4,"views":193,"category_id":10,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":null,"description":"Original Poster","user":{"id":1497,"username":"timob256","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/t/b782af/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":1304,"username":"lebrewer","name":"lebrewer","avatar_template":"/user_avatar/discourse.urho3d.io/lebrewer/{size}/2811_2.png"}},{"extras":"latest","description":"Most Recent Poster","user":{"id":230,"username":"Nerrik","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/n/958977/{size}.png"}}]},{"id":7074,"title":"First Person and 3rd person camera and water reflections","fancy_title":"First Person and 3rd person camera and water reflections","slug":"first-person-and-3rd-person-camera-and-water-reflections","posts_count":4,"reply_count":1,"highest_post_number":4,"image_url":null,"created_at":"2021-12-01T18:37:28.669Z","last_posted_at":"2021-12-01T21:19:51.519Z","bumped":true,"bumped_at":"2021-12-01T21:19:51.519Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":1,"views":158,"category_id":10,"featured_link":null,"has_accepted_answer":true,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster, Accepted Answer","user":{"id":861,"username":"GodMan","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/g/e79b87/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":484,"username":"Eugene","name":"Eugene Kozlov","avatar_template":"/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png"}}]},{"id":7177,"title":"Attaching a shader to a BorderImage","fancy_title":"Attaching a shader to a BorderImage","slug":"attaching-a-shader-to-a-borderimage","posts_count":4,"reply_count":1,"highest_post_number":4,"image_url":null,"created_at":"2022-01-31T17:49:50.734Z","last_posted_at":"2022-02-01T02:22:10.927Z","bumped":true,"bumped_at":"2022-02-01T02:22:10.927Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":0,"views":151,"category_id":10,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":null,"description":"Original Poster","user":{"id":1165,"username":"throwawayerino","name":"Actually Permanent","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/t/da6949/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":484,"username":"Eugene","name":"Eugene Kozlov","avatar_template":"/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png"}},{"extras":"latest","description":"Most Recent Poster","user":{"id":631,"username":"JTippetts1","name":"J Tippetts","avatar_template":"/user_avatar/discourse.urho3d.io/jtippetts1/{size}/96_2.png"}}]},{"id":7178,"title":"Medium-Quality Technique for Semi-Reflective/Specular Glass in Urho","fancy_title":"Medium-Quality Technique for Semi-Reflective/Specular Glass in Urho","slug":"medium-quality-technique-for-semi-reflective-specular-glass-in-urho","posts_count":3,"reply_count":0,"highest_post_number":3,"image_url":"https://global.discourse-cdn.com/standard17/uploads/urho3d/original/2X/5/51408fe152ba02eb8b92237cc9a9411c8ee922e6.jpeg","created_at":"2022-01-31T22:57:50.134Z","last_posted_at":"2022-02-01T04:32:37.418Z","bumped":true,"bumped_at":"2022-02-01T04:32:37.418Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":1,"views":154,"category_id":10,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":1334,"username":"najak3d","name":"Brian Knox","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/n/6a8cbe/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":1317,"username":"Lys0gen","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/l/57b2e6/{size}.png"}}]},{"id":7185,"title":"Update Ray ray direction","fancy_title":"Update Ray ray direction","slug":"update-ray-ray-direction","posts_count":5,"reply_count":1,"highest_post_number":5,"image_url":null,"created_at":"2022-02-05T00:28:45.414Z","last_posted_at":"2022-02-05T20:19:51.238Z","bumped":true,"bumped_at":"2022-02-05T20:19:51.238Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":0,"views":144,"category_id":10,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":861,"username":"GodMan","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/g/e79b87/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":628,"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}}]}],"tags_descriptions":{},"id":3681,"title":"Loading specific shaders GLSL/HLSL into shader program and using?","fancy_title":"Loading specific shaders GLSL/HLSL into shader program and using?","posts_count":4,"created_at":"2017-10-24T18:23:19.719Z","views":894,"reply_count":1,"like_count":0,"last_posted_at":"2017-10-24T23:26:40.170Z","visible":true,"closed":false,"archived":false,"has_summary":false,"archetype":"regular","slug":"loading-specific-shaders-glsl-hlsl-into-shader-program-and-using","category_id":10,"word_count":967,"deleted_at":null,"user_id":88,"featured_link":null,"pinned_globally":false,"pinned_at":null,"pinned_until":null,"image_url":null,"slow_mode_seconds":0,"draft":null,"draft_key":"topic_3681","draft_sequence":null,"unpinned":null,"pinned":false,"current_post_number":1,"highest_post_number":4,"deleted_by":null,"actions_summary":[{"id":4,"count":0,"hidden":false,"can_act":false},{"id":8,"count":0,"hidden":false,"can_act":false},{"id":7,"count":0,"hidden":false,"can_act":false}],"chunk_size":20,"bookmarked":false,"bookmarks":[],"topic_timer":null,"message_bus_last_id":0,"participant_count":2,"show_read_indicator":false,"thumbnails":null,"slow_mode_enabled_until":null,"tags_disable_ads":false,"details":{"can_edit":false,"notification_level":1,"participants":[{"id":88,"username":"vivienneanthony","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/vivienneanthony/{size}/942_2.png","post_count":3,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"trust_level":2},{"id":484,"username":"Eugene","name":"Eugene Kozlov","avatar_template":"/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png","post_count":1,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"trust_level":2}],"created_by":{"id":88,"username":"vivienneanthony","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/vivienneanthony/{size}/942_2.png"},"last_poster":{"id":88,"username":"vivienneanthony","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/vivienneanthony/{size}/942_2.png"}}}