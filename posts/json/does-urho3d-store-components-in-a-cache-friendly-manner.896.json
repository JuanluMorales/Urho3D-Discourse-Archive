{"post_stream":{"posts":[{"id":5135,"name":"","username":"GoogleBot42","avatar_template":"/user_avatar/discourse.urho3d.io/googlebot42/{size}/62_2.png","created_at":"2015-03-03T00:51:41.000Z","cooked":"\u003cp\u003eTitle says it all.  I have a simple question.\u003c/p\u003e\n\u003cp\u003eDoes Urho3D store components in a cache friendly manner?  For example, the latest version of \u003ca href=\"https://github.com/alecthomas/entityx\" data-bbcode=\"true\" rel=\"nofollow noopener\"\u003ethis project\u003c/a\u003e stores components in a cache friendly way.\u003c/p\u003e","post_number":1,"post_type":1,"updated_at":"2017-01-02T01:03:54.616Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":6,"reads":4,"readers_count":3,"score":30.8,"yours":false,"topic_id":896,"topic_slug":"does-urho3d-store-components-in-a-cache-friendly-manner","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"link_counts":[{"url":"https://github.com/alecthomas/entityx","internal":false,"reflection":false,"title":"GitHub - alecthomas/entityx: EntityX - A fast, type-safe C++ Entity-Component system","clicks":1}],"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":197,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":5138,"name":"Lasse Öörni","username":"cadaver","avatar_template":"/user_avatar/discourse.urho3d.io/cadaver/{size}/3_2.png","created_at":"2015-03-03T09:18:48.000Z","cooked":"\u003cp\u003eNo. Components are allocated with new from the heap when created.\u003c/p\u003e\n\u003cp\u003eHowever, there aren’t actually any places in the code where it would need to iterate all components of a given type in order. For example Urho’s rigidbody component just contains a pointer to the Bullet rigidbody object, and Bullet does all the heavy lifting of the physics simulation within its own data structures. Culling when rendering a view is another; we don’t iterate all drawables, but rather those that are visible in the frustum.\u003c/p\u003e\n\u003cp\u003eA few weeks ago I profiled Ogre 2.1 which goes to quite significant pains to allocate the scene objects in a cache and SIMD friendly way. I did the 250 x 250 individual object test (20_HugeObjectCount), which on both Ogre 2.1 and Urho, results in the renderer first frustum culling all the objects, then forming instanced rendering batches of them. Urho was 2x faster \u003cimg src=\"https://emoji.discourse-cdn.com/twitter/smiley.png?v=5\" title=\":smiley:\" class=\"emoji\" alt=\":smiley:\"\u003e\u003c/p\u003e","post_number":2,"post_type":1,"updated_at":"2017-01-02T01:03:54.836Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":1,"reads":5,"readers_count":4,"score":6.0,"yours":false,"topic_id":896,"topic_slug":"does-urho3d-store-components-in-a-cache-friendly-manner","display_username":"Lasse Öörni","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":"Urho3D Author","title_is_group":false,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":true,"staff":true,"user_id":3,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":5153,"name":"","username":"GoogleBot42","avatar_template":"/user_avatar/discourse.urho3d.io/googlebot42/{size}/62_2.png","created_at":"2015-03-03T16:12:15.000Z","cooked":"\u003caside class=\"quote\"\u003e\n\u003cdiv class=\"title\"\u003e\n\u003cdiv class=\"quote-controls\"\u003e\u003c/div\u003e\n\u003cimg alt width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/cadaver/40/3_1.png\" class=\"avatar\"\u003e cadaver:\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003eA few weeks ago I profiled Ogre 2.1 which goes to quite significant pains to allocate the scene objects in a cache and SIMD friendly way. I did the 250 x 250 individual object test (20_HugeObjectCount), which on both Ogre 2.1 and Urho, results in the renderer first frustum culling all the objects, then forming instanced rendering batches of them. Urho was 2x faster \u003cimg src=\"https://emoji.discourse-cdn.com/twitter/smiley.png?v=5\" title=\":smiley:\" class=\"emoji\" alt=\":smiley:\"\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/aside\u003e\n\u003cp\u003e\u003cimg src=\"https://emoji.discourse-cdn.com/twitter/astonished.png?v=5\" title=\":astonished:\" class=\"emoji\" alt=\":astonished:\"\u003e  That’s crazy!  Wow!  I never would have guessed that the performance gap would be so great!\u003c/p\u003e\n\u003cp\u003eJust a quick question.  Will the rendering refactor update increase the speed even more?  Also will the rendering speed be improved for older versions of DirectX and OpenGL?  I use OpenGL 2.1. (yes my comp is pretty old  \u003cimg src=\"https://emoji.discourse-cdn.com/twitter/confused.png?v=5\" title=\":confused:\" class=\"emoji\" alt=\":confused:\"\u003e )\u003c/p\u003e","post_number":3,"post_type":1,"updated_at":"2017-01-02T01:03:55.932Z","reply_count":0,"reply_to_post_number":null,"quote_count":1,"incoming_link_count":0,"reads":4,"readers_count":3,"score":0.8,"yours":false,"topic_id":896,"topic_slug":"does-urho3d-store-components-in-a-cache-friendly-manner","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":197,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":5155,"name":"","username":"friesencr","avatar_template":"/user_avatar/discourse.urho3d.io/friesencr/{size}/827_2.png","created_at":"2015-03-03T17:35:10.000Z","cooked":"\u003cp\u003e[quote=“cadaver”]No. Components are allocated with new from the heap when created.\u003c/p\u003e\n\u003cp\u003eHowever, there aren’t actually any places in the code where it would need to iterate all components of a given type in order. For example Urho’s rigidbody component just contains a pointer to the Bullet rigidbody object, and Bullet does all the heavy lifting of the physics simulation within its own data structures. Culling when rendering a view is another; we don’t iterate all drawables, but rather those that are visible in the frustum.\u003c/p\u003e\n\u003cp\u003eA few weeks ago I profiled Ogre 2.1 which goes to quite significant pains to allocate the scene objects in a cache and SIMD friendly way. I did the 250 x 250 individual object test (20_HugeObjectCount), which on both Ogre 2.1 and Urho, results in the renderer first frustum culling all the objects, then forming instanced rendering batches of them. Urho was 2x faster \u003cimg src=\"https://emoji.discourse-cdn.com/twitter/smiley.png?v=5\" title=\":smiley:\" class=\"emoji\" alt=\":smiley:\"\u003e[/quote]\u003c/p\u003e\n\u003cp\u003eI heard that last week. I twirled my mustache and laughed maniacally for you.\u003c/p\u003e","post_number":4,"post_type":1,"updated_at":"2017-01-02T01:03:56.076Z","reply_count":0,"reply_to_post_number":null,"quote_count":1,"incoming_link_count":0,"reads":6,"readers_count":5,"score":1.2,"yours":false,"topic_id":896,"topic_slug":"does-urho3d-store-components-in-a-cache-friendly-manner","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":"Core developer","title_is_group":false,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":15,"hidden":false,"trust_level":1,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":5161,"name":"Lasse Öörni","username":"cadaver","avatar_template":"/user_avatar/discourse.urho3d.io/cadaver/{size}/3_2.png","created_at":"2015-03-03T20:21:12.000Z","cooked":"\u003cp\u003eYou can expect some CPU / memory related improvements across all APIs in the render-refactor branch, though not that dramatic. Note that the 2x measurement was done using that branch.\u003c/p\u003e\n\u003cp\u003eD3D11 will have less expensive state changes compared to D3D9, but I’ve also seen cases where D3D9 is actually faster; guess the driver vendors have optimized some cases like your standard “for (all objects) SetUniform(); Draw();” quite extremely. The full benefit remains to be seen. I did some Turso3D vs Urho3D tests earlier, where D3D11 looked like a clear winner, but those are not completely fair as Urho has far more features and more complex shaders. After finishing D3D11 I will examine GL3 vs GL2, where the only difference will be the use of constant buffers. I’m not expecting that large gains from that.\u003c/p\u003e","post_number":5,"post_type":1,"updated_at":"2017-01-02T01:03:56.474Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":0,"reads":5,"readers_count":4,"score":1.0,"yours":false,"topic_id":896,"topic_slug":"does-urho3d-store-components-in-a-cache-friendly-manner","display_username":"Lasse Öörni","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":"Urho3D Author","title_is_group":false,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":true,"staff":true,"user_id":3,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":5167,"name":"","username":"GoogleBot42","avatar_template":"/user_avatar/discourse.urho3d.io/googlebot42/{size}/62_2.png","created_at":"2015-03-03T21:59:26.000Z","cooked":"\u003cp\u003eThat makes sense.   \u003cimg src=\"https://emoji.discourse-cdn.com/twitter/wink.png?v=5\" title=\":wink:\" class=\"emoji\" alt=\":wink:\"\u003e   I really appreciate the effort of the Urho3D development team.  I am just a beginning CS student so I won’t be of much help.   \u003cimg src=\"https://emoji.discourse-cdn.com/twitter/confused.png?v=5\" title=\":confused:\" class=\"emoji\" alt=\":confused:\"\u003e\u003c/p\u003e","post_number":6,"post_type":1,"updated_at":"2017-01-02T01:03:56.915Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":0,"reads":3,"readers_count":2,"score":0.6,"yours":false,"topic_id":896,"topic_slug":"does-urho3d-store-components-in-a-cache-friendly-manner","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":197,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":5212,"name":"Lasse Öörni","username":"cadaver","avatar_template":"/user_avatar/discourse.urho3d.io/cadaver/{size}/3_2.png","created_at":"2015-03-05T21:48:45.000Z","cooked":"\u003cp\u003eNow I have some more test data from a complex scene with many objects \u0026amp; shadowcasting lights. On my dev machine D3D11 is 1.35x the speed of D3D9, which I find quite nice considering that the D3D11 code is still rather early yet.\u003c/p\u003e","post_number":7,"post_type":1,"updated_at":"2017-01-02T01:04:00.192Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":0,"reads":4,"readers_count":3,"score":0.8,"yours":false,"topic_id":896,"topic_slug":"does-urho3d-store-components-in-a-cache-friendly-manner","display_username":"Lasse Öörni","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":"Urho3D Author","title_is_group":false,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":true,"staff":true,"user_id":3,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":5213,"name":"hd_","username":"hdunderscore","avatar_template":"/user_avatar/discourse.urho3d.io/hdunderscore/{size}/1151_2.png","created_at":"2015-03-05T21:50:33.000Z","cooked":"\u003cp\u003eThat sounds great cadaver, looking forward to it!\u003c/p\u003e","post_number":8,"post_type":1,"updated_at":"2017-01-02T01:04:00.260Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":0,"reads":4,"readers_count":3,"score":0.8,"yours":false,"topic_id":896,"topic_slug":"does-urho3d-store-components-in-a-cache-friendly-manner","display_username":"hd_","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":"Contributor","title_is_group":false,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":114,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false}],"stream":[5135,5138,5153,5155,5161,5167,5212,5213]},"timeline_lookup":[[1,2822],[4,2821],[7,2819]],"suggested_topics":[{"id":7347,"title":"How does Urho handle script objects each frame?","fancy_title":"How does Urho handle script objects each frame?","slug":"how-does-urho-handle-script-objects-each-frame","posts_count":3,"reply_count":1,"highest_post_number":3,"image_url":null,"created_at":"2022-11-08T02:33:56.461Z","last_posted_at":"2022-11-08T14:46:09.857Z","bumped":true,"bumped_at":"2022-11-08T14:46:09.857Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":0,"views":64,"category_id":9,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":1292,"username":"evolgames","name":"evol","avatar_template":"/user_avatar/discourse.urho3d.io/evolgames/{size}/3169_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":628,"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}}]},{"id":7304,"title":"Urho3D is crashing on Android 12","fancy_title":"Urho3D is crashing on Android 12","slug":"urho3d-is-crashing-on-android-12","posts_count":1,"reply_count":0,"highest_post_number":1,"image_url":null,"created_at":"2022-07-28T10:03:51.280Z","last_posted_at":"2022-07-28T10:03:51.349Z","bumped":true,"bumped_at":"2022-07-28T10:38:06.014Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":1,"views":126,"category_id":9,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest single","description":"Original Poster, Most Recent Poster","user":{"id":809,"username":"elix22","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/elix22/{size}/1437_2.png"}}]},{"id":7344,"title":"Do we give up supporting dx11？","fancy_title":"Do we give up supporting dx11？","slug":"do-we-give-up-supporting-dx11","posts_count":3,"reply_count":1,"highest_post_number":3,"image_url":null,"created_at":"2022-11-03T09:37:37.893Z","last_posted_at":"2022-11-03T13:09:15.153Z","bumped":true,"bumped_at":"2022-11-03T15:28:58.128Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":0,"views":78,"category_id":9,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":1510,"username":"SoNewBee","name":"So New Bee","avatar_template":"/user_avatar/discourse.urho3d.io/sonewbee/{size}/3755_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":263,"username":"1vanK","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/1vank/{size}/768_2.png"}}]},{"id":7268,"title":"Get vertex position before Morph in shader","fancy_title":"Get vertex position before Morph in shader","slug":"get-vertex-position-before-morph-in-shader","posts_count":8,"reply_count":6,"highest_post_number":8,"image_url":null,"created_at":"2022-05-15T19:44:19.139Z","last_posted_at":"2022-05-16T06:11:07.099Z","bumped":true,"bumped_at":"2022-08-12T22:38:31.553Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":5,"views":209,"category_id":10,"featured_link":null,"has_accepted_answer":true,"posters":[{"extras":null,"description":"Original Poster","user":{"id":1205,"username":"Askhento","name":"Askhento","avatar_template":"/user_avatar/discourse.urho3d.io/askhento/{size}/3849_2.png"}},{"extras":"latest","description":"Most Recent Poster, Accepted Answer","user":{"id":484,"username":"Eugene","name":"Eugene Kozlov","avatar_template":"/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":1358,"username":"JSandusky","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/jsandusky/{size}/3220_2.png"}}]},{"id":7085,"title":"Blender 3 Asset Browser","fancy_title":"Blender 3 Asset Browser","slug":"blender-3-asset-browser","posts_count":1,"reply_count":0,"highest_post_number":1,"image_url":null,"created_at":"2021-12-03T17:39:10.192Z","last_posted_at":"2021-12-03T17:39:10.252Z","bumped":true,"bumped_at":"2021-12-03T17:39:10.252Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":1,"views":149,"category_id":7,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest single","description":"Original Poster, Most Recent Poster","user":{"id":1304,"username":"lebrewer","name":"lebrewer","avatar_template":"/user_avatar/discourse.urho3d.io/lebrewer/{size}/2811_2.png"}}]}],"tags_descriptions":{},"id":896,"title":"Does Urho3D store components in a cache friendly manner?","fancy_title":"Does Urho3D store components in a cache friendly manner?","posts_count":8,"created_at":"2015-03-03T00:51:41.000Z","views":219,"reply_count":0,"like_count":0,"last_posted_at":"2015-03-05T21:50:33.000Z","visible":true,"closed":false,"archived":false,"has_summary":false,"archetype":"regular","slug":"does-urho3d-store-components-in-a-cache-friendly-manner","category_id":9,"word_count":712,"deleted_at":null,"user_id":197,"featured_link":null,"pinned_globally":false,"pinned_at":null,"pinned_until":null,"image_url":null,"slow_mode_seconds":0,"draft":null,"draft_key":"topic_896","draft_sequence":null,"unpinned":null,"pinned":false,"current_post_number":1,"highest_post_number":8,"deleted_by":null,"actions_summary":[{"id":4,"count":0,"hidden":false,"can_act":false},{"id":8,"count":0,"hidden":false,"can_act":false},{"id":7,"count":0,"hidden":false,"can_act":false}],"chunk_size":20,"bookmarked":false,"bookmarks":[],"topic_timer":null,"message_bus_last_id":0,"participant_count":4,"show_read_indicator":false,"thumbnails":null,"slow_mode_enabled_until":null,"tags_disable_ads":false,"details":{"can_edit":false,"notification_level":1,"participants":[{"id":3,"username":"cadaver","name":"Lasse Öörni","avatar_template":"/user_avatar/discourse.urho3d.io/cadaver/{size}/3_2.png","post_count":3,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"admin":true,"trust_level":2},{"id":197,"username":"GoogleBot42","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/googlebot42/{size}/62_2.png","post_count":3,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"trust_level":2},{"id":15,"username":"friesencr","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/friesencr/{size}/827_2.png","post_count":1,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"trust_level":1},{"id":114,"username":"hdunderscore","name":"hd_","avatar_template":"/user_avatar/discourse.urho3d.io/hdunderscore/{size}/1151_2.png","post_count":1,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"trust_level":2}],"created_by":{"id":197,"username":"GoogleBot42","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/googlebot42/{size}/62_2.png"},"last_poster":{"id":114,"username":"hdunderscore","name":"hd_","avatar_template":"/user_avatar/discourse.urho3d.io/hdunderscore/{size}/1151_2.png"},"links":[{"url":"https://github.com/alecthomas/entityx","title":"GitHub - alecthomas/entityx: EntityX - A fast, type-safe C++ Entity-Component system","internal":false,"attachment":false,"reflection":false,"clicks":1,"user_id":197,"domain":"github.com","root_domain":"github.com"}]}}