{"post_stream":{"posts":[{"id":8896,"name":"","username":"freegodsoul","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/f/71c47a/{size}.png","created_at":"2015-12-09T12:52:03.000Z","cooked":"\u003cp\u003eHello, Devs!\u003c/p\u003e\n\u003cp\u003eI think math library of Urho3D really needs in some improvements.\u003cbr\u003e\nHere is my proposal draft about some useful additions to the lib.\u003cbr\u003e\nThe proposal consists of three parts which may refer to each other.\u003c/p\u003e\n\u003cp\u003e[size=150]\u003cspan class=\"bbcode-b\"\u003e1. Subscript [] operator\u003c/span\u003e[/size]\u003c/p\u003e\n\u003cp\u003eAbility to access to elements of Vectors and Matrices by subscript [] operator. Vectors must return float reference and Matrices - major-vector reference. Usage example:\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eMatrix3x3 m; \t// create matrix\n... \t\t\t// fill matrix with some initial values\nm[2][1] = 1.0f;\t// element at [row:3, col:2] will be modified,\nm[0].z = 5.0f;\t// element at [row:1, col:3] will be modified (\"z\" was used instead of \"z_\" since Part 2)\n// cross product will be accomplished between first and second rows of matrix\nVector3 cross = m[0].Cross( m[1] ); // \"Cross\" instead of \"CrossProduct\" since Part 3\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003ee.g implementation for Vector3:\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003econst float\u0026amp; operator [] ( int i ) const\n{\n\treturn ( \u0026amp;x_ )[ i ];\n}\nfloat\u0026amp; operator [] ( int i )\n{\n\treturn ( \u0026amp;x_ )[ i ];\n}\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003ee.g. implementation for Matrix3x3:\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003econst Vector3\u0026amp; operator [] ( int i ) const\n{\n\treturn ( ( const Vector3* ) \u0026amp;m00_ )[ i ];\n}\nVector4\u0026amp; operator [] ( int i )\n{\n\treturn ( ( Vector3* ) \u0026amp;m00_ )[ i ];\n}\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eFull list of classes, which should support subscript [] operator:\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eVector2\nVector3\nVector4\nIntVector2\nMatrix3\nMatrix3x4\nMatrix4\nColor\nQuaternion (Under doubt, because I've never used quaternions directly through member variables, but only via methods and Euler-values)\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e[size=150]\u003cspan class=\"bbcode-b\"\u003e2. Shorthands for useful member variables\u003c/span\u003e[/size]\u003c/p\u003e\n\u003cp\u003eAbility to access to public fields of high-usage classes through short notation, e.g. “x”, “y” and “z” for Vector3 instead of “x_”, “y_”, “z_”.\u003cbr\u003e\nThis part can be considered as continuation of thread, that i’ve created earlier: \u003ca href=\"http://discourse.urho3d.io/t/math-shorter-aliases-for-public-fields-of-core-classes/1546/1\" data-bbcode=\"true\"\u003ehttp://discourse.urho3d.io/t/math-shorter-aliases-for-public-fields-of-core-classes/1546/1\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eI offer to introduce an additional rule into coding conventions (\u003ca href=\"http://urho3d.github.io/documentation/HEAD/_coding_conventions.html\" data-bbcode=\"true\" rel=\"nofollow noopener\"\u003ehttp://urho3d.github.io/documentation/HEAD/_coding_conventions.html\u003c/a\u003e), because it seems to be reasonable:\u003cbr\u003e\n\u003cspan class=\"bbcode-i\"\u003eIf class considered as POD and \u003cem\u003ehigh-usage\u003c/em\u003e, if it has only public member fields (examples: Vector3, Color, Ray), then there must be \u003cem\u003eShorthands\u003c/em\u003e or \u003cem\u003eProperties\u003c/em\u003e or \u003cem\u003eAliases\u003c/em\u003e (call as you want) for standard member variables in notation: lower-camelcase, have \u003cspan class=\"bbcode-b\"\u003eNOT\u003c/span\u003e an underscore appended.\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003eFor example, that how could be declared and documented member variables of Vector2:\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eunion\n{\n\t/// X coordinate.\n\tfloat x_;\n\t/// [Shorthand] X coordinate.\n\tfloat x;\n};\nunion\n{\n\t/// Y coordinate.\n\tfloat y_;\n\t/// [Shorthand] Y coordinate.\n\tfloat y;\n};\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eor Ray:\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eunion\n{\n\t/// Ray origin.\n\tVector3 origin_;\n\t/// Same as origin_\n\tVector3 o;\n};\nunion\n{\n\t/// Ray direction.\n\tVector3 direction_;\n\t/// Same as direction_\n\tVector3 d;\n};\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eWith \u003cspan class=\"bbcode-b\"\u003eunion \u003c/span\u003estatements there is no conflict or conformance exception with fifth rule in Coding conventions:\u003c/p\u003e\n\u003caside class=\"quote\"\u003e\n\u003cblockquote\u003e\n\u003cp\u003eVariables are in lower-camelcase. Member variables have an underscore appended. For example numContacts, randomSeed_.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/aside\u003e\n\u003cp\u003eWhat I’m offering is just an \u003cspan class=\"bbcode-b\"\u003eaddition\u003c/span\u003e to already existed rules.\u003c/p\u003e\n\u003cp\u003eList of classes (in my opinion) which should have shorthands by default:\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eVector2\nVector3\nVector4\nIntVector2\nIntRect\nColor\nRect\nRay\nPlane\nSphere\nBoundingBox\n\u003c/code\u003e\u003cbr\u003e\nUnder doubt:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003e\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eUnnecessary since Part 1:\u003cbr\u003e\n(as matrices usually considered as (two-dimensional) arrays and it is more logically to access to their elements through index)\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e\nMatrix3\nMatrix3x4\nMatrix4\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e[size=150]\u003cspan class=\"bbcode-b\"\u003ePart 3. Shorter methods\u003c/span\u003e[/size]\u003c/p\u003e\n\u003cp\u003eAlso it is may be useful to use shorter names for classic methods like\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003ev1.Dot( v2 );\nv1.Cross( v2 );\u003c/code\u003e\u003cbr\u003e\ninstead of\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003ev1.DotProduct( v2 );\nv2.CrossProduct( v2 );\u003c/code\u003e\u003cbr\u003e\nBecause they can’t be confused with something else.\u003c/p\u003e\n\u003cp\u003e[size=150]\u003cspan class=\"bbcode-b\"\u003eConclusion\u003c/span\u003e[/size]\u003c/p\u003e\n\u003cp\u003eMy current modification of the math library which I’m using: \u003ca href=\"http://gdurl.com/148O\" data-bbcode=\"true\" rel=\"nofollow noopener\"\u003ehttp://gdurl.com/148O\u003c/a\u003e\u003cbr\u003e\nIt’s not a final proposal, but an opening point for discussion and suggestions. I really like the Urho3D and want it to be even better.\u003cbr\u003e\nI thought about making a pull request as guy with nick \u003cspan class=\"bbcode-b\"\u003efranck22000\u003c/span\u003e advised me, but I’ve never did make it before. So in order to not spend time for reading git help I’ve decided just to create this thread, as I think every day Urho3D have new user and we can save him from PITA \u003cimg src=\"https://emoji.discourse-cdn.com/twitter/smiley.png?v=5\" title=\":smiley:\" class=\"emoji\" alt=\":smiley:\"\u003e\u003c/p\u003e","post_number":1,"post_type":1,"updated_at":"2017-01-02T01:08:29.736Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":3,"reads":8,"readers_count":7,"score":16.6,"yours":false,"topic_id":1558,"topic_slug":"math-library-improvement-proposal","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"link_counts":[{"url":"http://urho3d.github.io/documentation/HEAD/_coding_conventions.html","internal":false,"reflection":false,"title":"Urho3D - Documentation - Coding conventions","clicks":0},{"url":"http://gdurl.com/148O","internal":false,"reflection":false,"clicks":0},{"url":"http://discourse.urho3d.io/t/math-shorter-aliases-for-public-fields-of-core-classes/1546","internal":true,"reflection":false,"title":"Math :: shorter aliases for public fields of core classes","clicks":0},{"url":"http://discourse.urho3d.io/t/math-shorter-aliases-for-public-fields-of-core-classes/1546/15","internal":true,"reflection":true,"title":"Math :: shorter aliases for public fields of core classes","clicks":0}],"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":339,"hidden":false,"trust_level":1,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":8899,"name":"","username":"codingmonkey","avatar_template":"/user_avatar/discourse.urho3d.io/codingmonkey/{size}/119_2.png","created_at":"2015-12-09T13:35:21.000Z","cooked":"\u003cp\u003eI guess this extremely short names produce code’s low informativity then you see code first time\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e   union\n    {\n        /// Ray origin.\n        Vector3 origin_;\n        /// [Shorthand] Ray origin.\n        Vector3 o;\n    };\n    union\n    {\n        /// Ray direction.\n        Vector3 direction_;\n        /// [Shorthand] Ray direction.\n        Vector3 d;\n    };\n};\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eWhy not just?\u003c/p\u003e\n\u003cp\u003eVector3 dir\u003cbr\u003e\nVector3 orig\u003c/p\u003e\n\u003cp\u003eat last just omit this underscore at the end will be also nice\u003c/p\u003e\n\u003cp\u003eVector3 direction\u003cbr\u003e\nVector3 origin\u003c/p\u003e\n\u003cp\u003ei want mention what only underscores as the end are my “pain” and not lenth of names.\u003c/p\u003e","post_number":2,"post_type":1,"updated_at":"2017-01-02T01:08:30.014Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":0,"reads":8,"readers_count":7,"score":1.6,"yours":false,"topic_id":1558,"topic_slug":"math-library-improvement-proposal","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":148,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":8901,"name":"","username":"freegodsoul","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/f/71c47a/{size}.png","created_at":"2015-12-09T13:56:44.000Z","cooked":"\u003cp\u003e[quote=“codingmonkey”]I guess this extremely short names produce code’s low normativity then you see code first time\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e   union\n    {\n        /// Ray origin.\n        Vector3 origin_;\n        /// [Shorthand] Ray origin.\n        Vector3 o;\n    };\n    union\n    {\n        /// Ray direction.\n        Vector3 direction_;\n        /// [Shorthand] Ray direction.\n        Vector3 d;\n    };\n};\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eWhy not just?\u003c/p\u003e\n\u003cp\u003eVector3 dir\u003cbr\u003e\nVector3 orig\u003c/p\u003e\n\u003cp\u003eat last just omit this underscore at the end will be also nice\u003c/p\u003e\n\u003cp\u003eVector3 direction\u003cbr\u003e\nVector3 origin\u003c/p\u003e\n\u003cp\u003ei want mention what only underscores as the end are my “pain” and not lenth of names.[/quote]\u003c/p\u003e\n\u003cp\u003eSimply omitting underscore will be OK too. Here I just wanted to show more variants than one and see what people think about it. Because of ray has so simple structure, and due to a fact that people who using 3D game engine have at least school math background, why not to use mathematically-conventional concepts as names like “O” for origin or “D” for direction vector, but in lowercase. It’s hard to confuse it with something else.\u003c/p\u003e","post_number":3,"post_type":1,"updated_at":"2017-01-02T01:08:30.150Z","reply_count":0,"reply_to_post_number":null,"quote_count":1,"incoming_link_count":0,"reads":8,"readers_count":7,"score":1.6,"yours":false,"topic_id":1558,"topic_slug":"math-library-improvement-proposal","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":339,"hidden":false,"trust_level":1,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":8913,"name":"","username":"thebluefish","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/t/f04885/{size}.png","created_at":"2015-12-09T20:51:16.000Z","cooked":"\u003caside class=\"quote no-group\" data-username=\"freegodsoul\"\u003e\n\u003cdiv class=\"title\"\u003e\n\u003cdiv class=\"quote-controls\"\u003e\u003c/div\u003e\n\u003cimg alt=\"\" width=\"20\" height=\"20\" src=\"https://avatars.discourse-cdn.com/v4/letter/f/71c47a/40.png\" class=\"avatar\"\u003e freegodsoul:\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003edue to a fact that people who using 3D game engine have at least school math background\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/aside\u003e\n\u003cp\u003eYou’re presuming a lot with that line. Truth be told, a lot of people getting into game dev do NOT have high mathematics education. Sure there’s a lot of devs who are math geniuses, but not all. For example, I barely cleared Algebra.\u003c/p\u003e","post_number":4,"post_type":1,"updated_at":"2017-01-02T01:08:31.072Z","reply_count":0,"reply_to_post_number":null,"quote_count":1,"incoming_link_count":0,"reads":8,"readers_count":7,"score":1.6,"yours":false,"topic_id":1558,"topic_slug":"math-library-improvement-proposal","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":80,"hidden":false,"trust_level":1,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":10056,"name":"","username":"billyquith","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/b/e68b1a/{size}.png","created_at":"2016-02-07T23:06:07.000Z","cooked":"\u003cp\u003eI think the math library is fine as it is. Longer, explanatory variables are good practice, they make code more readable. There are other suggestions to rename the math library, but they generally aim at changing the names to a users individual preference. Soon, someone else will suggest changes that they like, but you don’t. Also, most editors have code completion these days so this can save a lot of typing.\u003c/p\u003e\n\u003cp\u003eYou should be careful with C/reinterpret casting like that in C++ as it tends to inhibit the compiler from making certain optimisations. It confuses the aliasing. Always use a union where possible.\u003c/p\u003e","post_number":5,"post_type":1,"updated_at":"2017-01-02T01:09:54.853Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":0,"reads":8,"readers_count":7,"score":1.6,"yours":false,"topic_id":1558,"topic_slug":"math-library-improvement-proposal","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":363,"hidden":false,"trust_level":1,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false}],"stream":[8896,8899,8901,8913,10056]},"timeline_lookup":[[1,2541],[4,2540],[5,2480]],"suggested_topics":[{"id":7227,"title":"How to use -s MAX_WEBGL_VERSION=2","fancy_title":"How to use -s MAX_WEBGL_VERSION=2","slug":"how-to-use-s-max-webgl-version-2","posts_count":3,"reply_count":1,"highest_post_number":3,"image_url":null,"created_at":"2022-03-30T13:12:17.248Z","last_posted_at":"2022-03-30T14:09:14.646Z","bumped":true,"bumped_at":"2022-03-30T14:09:14.646Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":1,"views":103,"category_id":16,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":997,"username":"huminzheng","name":"huminzheng","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/h/9de0a6/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":628,"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}}]},{"id":7122,"title":"Faster allocations with PMR","fancy_title":"Faster allocations with PMR","slug":"faster-allocations-with-pmr","posts_count":2,"reply_count":0,"highest_post_number":2,"image_url":null,"created_at":"2022-01-10T16:23:15.053Z","last_posted_at":"2022-01-10T16:42:29.752Z","bumped":true,"bumped_at":"2022-01-10T17:55:02.117Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":1,"views":209,"category_id":16,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest single","description":"Original Poster, Most Recent Poster","user":{"id":1363,"username":"vmost","name":null,"avatar_template":"https://avatars.discourse-cdn.com/v4/letter/v/5f9b8f/{size}.png"}}]},{"id":7062,"title":"Is WebGL2.0 \u0026 GLES3.0 being supported in the near future?","fancy_title":"Is WebGL2.0 \u0026amp; GLES3.0 being supported in the near future?","slug":"is-webgl2-0-gles3-0-being-supported-in-the-near-future","posts_count":2,"reply_count":0,"highest_post_number":2,"image_url":null,"created_at":"2021-11-23T09:04:28.802Z","last_posted_at":"2021-11-23T21:44:08.088Z","bumped":true,"bumped_at":"2021-11-23T21:44:08.088Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":1,"views":199,"category_id":16,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":null,"description":"Original Poster","user":{"id":1490,"username":"Sunc","name":"DoubleSuper","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/df788c/{size}.png"}},{"extras":"latest","description":"Most Recent Poster","user":{"id":631,"username":"JTippetts1","name":"J Tippetts","avatar_template":"/user_avatar/discourse.urho3d.io/jtippetts1/{size}/96_2.png"}}]},{"id":7216,"title":"Why occlusion culling rasterization is implemented by software?","fancy_title":"Why occlusion culling rasterization is implemented by software?","slug":"why-occlusion-culling-rasterization-is-implemented-by-software","posts_count":4,"reply_count":2,"highest_post_number":4,"image_url":null,"created_at":"2022-03-11T11:36:18.222Z","last_posted_at":"2022-03-13T02:39:16.613Z","bumped":true,"bumped_at":"2022-03-13T02:39:16.613Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":0,"views":193,"category_id":16,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":null,"description":"Original Poster","user":{"id":1490,"username":"Sunc","name":"DoubleSuper","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/df788c/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":484,"username":"Eugene","name":"Eugene Kozlov","avatar_template":"/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png"}},{"extras":"latest","description":"Most Recent Poster","user":{"id":1358,"username":"JSandusky","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/jsandusky/{size}/3220_2.png"}}]},{"id":7264,"title":"Mesh not rendering right and no idea why [SOLVED]","fancy_title":"Mesh not rendering right and no idea why [SOLVED]","slug":"mesh-not-rendering-right-and-no-idea-why-solved","posts_count":4,"reply_count":1,"highest_post_number":4,"image_url":"https://global.discourse-cdn.com/standard17/uploads/urho3d/optimized/2X/5/58b096d0ea560021fc4301ffe097f4b1350670af_2_1024x519.jpeg","created_at":"2022-05-13T01:26:06.152Z","last_posted_at":"2022-05-13T20:26:12.059Z","bumped":true,"bumped_at":"2022-05-13T20:26:12.059Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":2,"views":147,"category_id":16,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":1507,"username":"Kest","name":"Kest","avatar_template":"/user_avatar/discourse.urho3d.io/kest/{size}/3734_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":628,"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":1358,"username":"JSandusky","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/jsandusky/{size}/3220_2.png"}}]}],"tags_descriptions":{},"id":1558,"title":"Math library improvement proposal","fancy_title":"Math library improvement proposal","posts_count":5,"created_at":"2015-12-09T12:52:03.000Z","views":595,"reply_count":0,"like_count":0,"last_posted_at":"2016-02-07T23:06:07.000Z","visible":true,"closed":false,"archived":false,"has_summary":false,"archetype":"regular","slug":"math-library-improvement-proposal","category_id":16,"word_count":1114,"deleted_at":null,"user_id":339,"featured_link":null,"pinned_globally":false,"pinned_at":null,"pinned_until":null,"image_url":null,"slow_mode_seconds":0,"draft":null,"draft_key":"topic_1558","draft_sequence":null,"unpinned":null,"pinned":false,"current_post_number":1,"highest_post_number":5,"deleted_by":null,"actions_summary":[{"id":4,"count":0,"hidden":false,"can_act":false},{"id":8,"count":0,"hidden":false,"can_act":false},{"id":7,"count":0,"hidden":false,"can_act":false}],"chunk_size":20,"bookmarked":false,"bookmarks":[],"topic_timer":null,"message_bus_last_id":0,"participant_count":4,"show_read_indicator":false,"thumbnails":null,"slow_mode_enabled_until":null,"tags_disable_ads":false,"details":{"can_edit":false,"notification_level":1,"participants":[{"id":339,"username":"freegodsoul","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/f/71c47a/{size}.png","post_count":2,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"trust_level":1},{"id":80,"username":"thebluefish","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/t/f04885/{size}.png","post_count":1,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"trust_level":1},{"id":148,"username":"codingmonkey","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/codingmonkey/{size}/119_2.png","post_count":1,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"trust_level":2},{"id":363,"username":"billyquith","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/b/e68b1a/{size}.png","post_count":1,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"trust_level":1}],"created_by":{"id":339,"username":"freegodsoul","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/f/71c47a/{size}.png"},"last_poster":{"id":363,"username":"billyquith","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/b/e68b1a/{size}.png"}}}