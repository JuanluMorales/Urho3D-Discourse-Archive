{"post_stream": {"posts": [{"id": 23161, "name": "QB'k Games", "username": "QBkGames", "avatar_template": "/user_avatar/discourse.urho3d.io/qbkgames/{size}/646_2.png", "created_at": "2018-02-07T03:55:50.353Z", "cooked": "<p>I started looking through the engine code in more detail, and I noticed a few possible issues that could cause unnecessary memory fragmentation (which PCs could live with but could affect performance on mobile and maybe even on consoles).</p>\n<ol>\n<li>\n<p>RefCounted class contains an instance of RefCount struct which is allocated on the heap with new() in the constructor. I\u2019m not an expert at reference counting, but is there a good reason for this and not having the struct as a plain member of the class?</p>\n<p>RefCounted::RefCounted() :<br>\nrefCount_(new RefCount())</p>\n</li>\n</ol>\n<p>Looks like the constructor always allocates a new RefCount struct, so I cannot see any reason why it couldn\u2019t be a plain member. Creating and deleting game entities based on RefCounted, would created extra (apparently unnecessary) memory fragmentation by always also allocating/deleting the RefCount struct separately.</p>\n<ol start=\"2\">\n<li>Passing String as a parameter to ResourceCache functions, node creation functions, etc, again unnecessarily allocates, copies then deallocates temporary string of chars, just so that they get passed to a function. Passing \u201cconst char*\u201d to all these functions would be much more efficient as it would not require allocating and copying buffers.<br>\nThis is especially ridiculous for ResourceCache which all it really requires is actually a StringHash.</li>\n</ol>\n<p>A possible alternative (to passing \u201cconst char*\u201d) solution would be to modify the String class to support shared buffers.</p>\n<p>Can someone enlighten me as to whether there is a good reason for the way things are? Thanks.</p>", "post_number": 1, "post_type": 1, "updated_at": "2018-02-07T03:55:50.353Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 27, "reads": 42, "readers_count": 41, "score": 143.4, "yours": false, "topic_id": 3994, "topic_slug": "memory-fragmentation-concerns", "display_username": "QB'k Games", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 780, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 23163, "name": "Jonathan", "username": "Sinoid", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/f19dbf/{size}.png", "created_at": "2018-02-07T08:31:05.196Z", "cooked": "<p>The refcount has to be a pointer for the WeakPtr types to work sanely. Otherwise you\u2019d need a list for every living WeakPtr instance to mark them invalid - instead they can just point at the RefCount and the last WeakPtr can delete it when it\u2019s time.</p>\n<p>There is no better solution. It\u2019s basically the same as std::shared_ptr.</p>\n<hr>\n<blockquote>\n<p>Passing String as a parameter to ResourceCache functions, node creation functions, etc, again unnecessarily allocates, copies then deallocates temporary string of chars, just so that they get passed to a function.</p>\n</blockquote>\n<p>No. They\u2019re almost always passed as <code>const&amp;</code>, nothing is allocated. Every single function in <code>ResourceCache</code> that takes a string does so by reference - not copy.</p>\n<p>That\u2019s fundamental C.</p>\n<blockquote>\n<p>Passing \u201cconst char*\u201d to all these functions would be much more efficient as it would not require allocating and copying buffers.</p>\n</blockquote>\n<p>No. The data-segment (where those <code>\"My Explicitly typed string\"</code> live is a cache minefield and strings in it are a cache-miss everytime. Unless you\u2019re actively in it It\u2019s likely to be the single furthest thing from any point in your program\u2019s lifecycle. It\u2019s only fast when all you care about is the address, dereference that pointer, <code>strlen</code> it, etc and the magic is gone.</p>\n<p>That\u2019s also fundamental C and an eternal compiler development dilemma.</p>\n<blockquote>\n<p>This is especially ridiculous for ResourceCache which all it really requires is actually a StringHash</p>\n</blockquote>\n<p>Again, every single String passed in as an alias, there is <strong>no copy</strong> until the ResourceCache needs to remap a path or store it for itself.</p>\n<p>Also, they\u2019re <strong>paths</strong>, not names.</p>\n<p>How would you remap paths or select appropriate loaders from a StringHash? You can\u2019t, the information required is lost - any structure based solution around it is just reinventing paths but worse.</p>", "post_number": 2, "post_type": 1, "updated_at": "2018-02-07T08:31:05.196Z", "reply_count": 2, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 1, "reads": 40, "readers_count": 39, "score": 23.0, "yours": false, "topic_id": 3994, "topic_slug": "memory-fragmentation-concerns", "display_username": "Jonathan", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 669, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 23177, "name": "QB'k Games", "username": "QBkGames", "avatar_template": "/user_avatar/discourse.urho3d.io/qbkgames/{size}/646_2.png", "created_at": "2018-02-09T12:19:01.220Z", "cooked": "<p>Thanks for the reply and clarifications.</p>", "post_number": 3, "post_type": 1, "updated_at": "2018-02-09T12:19:01.220Z", "reply_count": 0, "reply_to_post_number": 2, "quote_count": 0, "incoming_link_count": 0, "reads": 33, "readers_count": 32, "score": 6.6, "yours": false, "topic_id": 3994, "topic_slug": "memory-fragmentation-concerns", "display_username": "QB'k Games", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "reply_to_user": {"username": "Sinoid", "name": "Jonathan", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/f19dbf/{size}.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 780, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 23183, "name": "", "username": "TheComet", "avatar_template": "/user_avatar/discourse.urho3d.io/thecomet/{size}/1493_2.png", "created_at": "2018-02-09T22:10:17.767Z", "cooked": "<aside class=\"quote no-group quote-modified\" data-username=\"Sinoid\" data-post=\"2\" data-topic=\"3994\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"20\" height=\"20\" src=\"https://avatars.discourse-cdn.com/v4/letter/s/f19dbf/40.png\" class=\"avatar\"> Sinoid:</div>\n<blockquote>\n<p>Passing String as a parameter to ResourceCache functions, node creation functions, etc, agay unnecessarily allocates, copies then deallocates temporary string of chars, just so that they get passed to a function.</p>\n<p>No. They\u2019re almost always passed as const&amp;, nothing is allocated. Every single function in ResourceCache that takes a string does so by reference - not copy.</p>\n<p>That\u2019s fundamental C.</p>\n</blockquote>\n</aside>\n<p>Unless he means the cases where you pass in a c string to these functions (e.g. if you call the function <code>void Foo(const String&amp; s);</code> with <code>Foo(\"test\");</code>) then this will definitely be a memory allocation, string copy, followed by a deallocation. <code>std::string</code> has a small size optimization which gets around that allocation for small strings, but I don\u2019t think Urho3D does this.</p>", "post_number": 4, "post_type": 1, "updated_at": "2018-02-09T22:10:17.767Z", "reply_count": 2, "reply_to_post_number": 2, "quote_count": 1, "incoming_link_count": 2, "reads": 33, "readers_count": 32, "score": 26.6, "yours": false, "topic_id": 3994, "topic_slug": "memory-fragmentation-concerns", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Community repository maintainer", "title_is_group": false, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 37, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 23184, "name": "Eugene Kozlov", "username": "Eugene", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png", "created_at": "2018-02-09T22:16:52.782Z", "cooked": "<p><a class=\"mention\" href=\"/u/qbkgames\">@QBkGames</a>, I tried to use <code>const char*</code> in my pet engine, but it sux.<br>\nSo unhandy to deal with any string ops and always do these nasty <code>std::string(my_arg)</code> and <code>foo(str.c_str())</code>.</p>", "post_number": 5, "post_type": 1, "updated_at": "2018-02-09T22:16:52.782Z", "reply_count": 0, "reply_to_post_number": 4, "quote_count": 0, "incoming_link_count": 0, "reads": 32, "readers_count": 31, "score": 6.4, "yours": false, "topic_id": 3994, "topic_slug": "memory-fragmentation-concerns", "display_username": "Eugene Kozlov", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Core developer", "title_is_group": false, "reply_to_user": {"username": "TheComet", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/thecomet/{size}/1493_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 484, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 23185, "name": "Jonathan", "username": "Sinoid", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/f19dbf/{size}.png", "created_at": "2018-02-09T23:05:13.155Z", "cooked": "<p><a class=\"mention\" href=\"/u/thecomet\">@TheComet</a>, right that slipped my mind, and C++11 forbid copy-on-write strings so it\u2019s mandatory (which probably made GCC folks grumble at the time).</p>\n<p>StringHash is used so extensively throughout Urho3D that when there\u2019s a string showing up it generally has a reason (came from data, is script / user facing, the string is meaningful like a path / text / shader <span class=\"hashtag\">#define</span> / etc).</p>", "post_number": 6, "post_type": 1, "updated_at": "2018-02-09T23:05:13.155Z", "reply_count": 0, "reply_to_post_number": 4, "quote_count": 0, "incoming_link_count": 0, "reads": 30, "readers_count": 29, "score": 6.0, "yours": false, "topic_id": 3994, "topic_slug": "memory-fragmentation-concerns", "display_username": "Jonathan", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "reply_to_user": {"username": "TheComet", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/thecomet/{size}/1493_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 669, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 23199, "name": "QB'k Games", "username": "QBkGames", "avatar_template": "/user_avatar/discourse.urho3d.io/qbkgames/{size}/646_2.png", "created_at": "2018-02-11T08:24:43.775Z", "cooked": "<p>Regarding Strings, the scenario that <a class=\"mention\" href=\"/u/thecomet\">@TheComet</a> refers to is exactly what I meant.</p>\n<p>Although a lot of string data comes from external files which are read in as String, you still refer to a lot of constant strings throughout the game: when getting some resources, when referring to specific UI elements, when referring to specific objects in a XML or JSON file, when looking for specific Nodes or component, etc.<br>\nSo there is quite a lot of scenarios where the String acts simply as a temporary wrapper around a const char* only because the function you are calling requires a const String reference instead of simply accepting a const char* (which is what you are really supplying). Most of these calls happen when the game initialises so your memory gets trashed even before the game begins.</p>\n<p>I\u2019m currently working on a potential solution that should have a minimal impact on existing code base (some changes to String to allow for a shared buffer, thus not requiring allocating and copying the source buffer).</p>", "post_number": 7, "post_type": 1, "updated_at": "2018-02-11T08:24:43.775Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 31, "readers_count": 30, "score": 6.2, "yours": false, "topic_id": 3994, "topic_slug": "memory-fragmentation-concerns", "display_username": "QB'k Games", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 780, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 23200, "name": "Jonathan", "username": "Sinoid", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/f19dbf/{size}.png", "created_at": "2018-02-11T10:57:05.227Z", "cooked": "<blockquote>\n<p>I\u2019m currently working on a potential solution that should have a minimal impact on existing code base (some changes to String to allow for a shared buffer, thus not requiring allocating and copying the source buffer).</p>\n</blockquote>\n<p>I assume you\u2019re turning off threads then. Are you\u2019re going to add a refcount or mutex to string? COW plus threads doesn\u2019t mix.</p>\n<p>Do you have histograms or anything that show fragmentation to be a problem?</p>", "post_number": 8, "post_type": 1, "updated_at": "2018-02-11T10:57:05.227Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 28, "readers_count": 27, "score": 5.6, "yours": false, "topic_id": 3994, "topic_slug": "memory-fragmentation-concerns", "display_username": "Jonathan", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 669, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 23204, "name": "SirNate0", "username": "SirNate0", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png", "created_at": "2018-02-11T20:30:13.199Z", "cooked": "<p>Would it be possible to create a constexpr string literal operator (maybe _S or _US) to construct an Urho3D::String, and would that alleviate the fragmentation concerns raised? I have no idea \u2013 I assume it should be possible to create it, but I really don\u2019t know if it would alleviate the concerns about fragmentation. My guess is that it might, provided all calls to the functions in question added the new suffix to the hard-coded string.</p>", "post_number": 9, "post_type": 1, "updated_at": "2018-02-11T20:30:13.199Z", "reply_count": 1, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 27, "readers_count": 26, "score": 10.4, "yours": false, "topic_id": 3994, "topic_slug": "memory-fragmentation-concerns", "display_username": "SirNate0", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 628, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 23206, "name": "", "username": "S.L.C", "avatar_template": "/user_avatar/discourse.urho3d.io/s.l.c/{size}/1016_2.png", "created_at": "2018-02-11T23:48:42.726Z", "cooked": "<p>Regarding the string issue. I see two options. Implement a <code>std::string_view</code> like the new c++17 standard. Which might be a little more difficult than expected with C++11. Having C++14 would be favorable since they\u2019ve removed some <code>constexpr</code> limitations. But even with just C++11, where you\u2019re forced to have an immutable implementation. It would still work. I remember trying it a while ago.</p>\n<p>Or, implement the small buffer optimization like many new libraries do these days. The local string implementation really is just a:</p>\n<pre><code>struct String\n{\n\tString() : data(local_), size(0) { }\n\t~String() { if (data_ != local_) delete[] data_; }\nprivate:\n\n\tchar * \t\t\tdata_;\n\tunsigned\t\tsize_;\n\tunion {\n\t\tunsigned \tcapacity_;\n\t\tchar \t\tlocal_[20];\n\t};\n};\n</code></pre>\n<p>And you have 32 byte (<em>regardless of architecture</em>) <code>String</code> implementation with room for 19 usable bytes. <code>std::string</code> uses <code>size_t</code> so they loose 4 bytes. but it only occupies 24 bytes on 32-bit.</p>\n<p>Or even better, have them both <img src=\"https://emoji.discourse-cdn.com/twitter/smiley.png?v=5\" title=\":smiley:\" class=\"emoji\" alt=\":smiley:\"> Gotta say it looks fun and I might even try it this week. Out of curiosity.</p>", "post_number": 10, "post_type": 1, "updated_at": "2018-02-11T23:52:25.593Z", "reply_count": 1, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 27, "readers_count": 26, "score": 10.4, "yours": false, "topic_id": 3994, "topic_slug": "memory-fragmentation-concerns", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 180, "hidden": false, "trust_level": 0, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "user_suspended": true, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 23207, "name": "", "username": "TheComet", "avatar_template": "/user_avatar/discourse.urho3d.io/thecomet/{size}/1493_2.png", "created_at": "2018-02-12T01:55:52.144Z", "cooked": "<p>If you make the change, it would be beneficial if you could also <em>measure</em> the impact these changes have, to see if it matters or not.</p>", "post_number": 11, "post_type": 1, "updated_at": "2018-02-12T01:56:05.247Z", "reply_count": 2, "reply_to_post_number": 10, "quote_count": 0, "incoming_link_count": 0, "reads": 25, "readers_count": 24, "score": 15.0, "yours": false, "topic_id": 3994, "topic_slug": "memory-fragmentation-concerns", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Community repository maintainer", "title_is_group": false, "reply_to_user": {"username": "S.L.C", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/s.l.c/{size}/1016_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 37, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 23208, "name": "Yao Wei Tjong", "username": "weitjong", "avatar_template": "/user_avatar/discourse.urho3d.io/weitjong/{size}/4_2.png", "created_at": "2018-02-12T02:05:44.403Z", "cooked": "<p>Personally I like this idea more, although I am not sure yet whether it can be pulled off but using <code>constexpr</code> or user-defined suffix for the <code>String</code> literal looks promising.</p>", "post_number": 12, "post_type": 1, "updated_at": "2018-02-12T11:27:31.095Z", "reply_count": 0, "reply_to_post_number": 9, "quote_count": 0, "incoming_link_count": 0, "reads": 26, "readers_count": 25, "score": 5.2, "yours": false, "topic_id": 3994, "topic_slug": "memory-fragmentation-concerns", "display_username": "Yao Wei Tjong", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Admin", "title_is_group": false, "reply_to_user": {"username": "SirNate0", "name": "SirNate0", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": true, "staff": true, "user_id": 4, "hidden": false, "trust_level": 4, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 23209, "name": "", "username": "S.L.C", "avatar_template": "/user_avatar/discourse.urho3d.io/s.l.c/{size}/1016_2.png", "created_at": "2018-02-12T02:14:11.267Z", "cooked": "<p>I did make a dummy implementation of a local string in my fork of the engine. Currently the Editor crashes. I\u2019ll have to look into it. And the Variant type is forced to be 32 bytes regardless of architecture.</p>\n<p>As for actual performance, I couldn\u2019t see anything significant. Probably because there is no project that actually puts the engine to a more realistic situation. And in the samples, most of the execution time is spent in physics, math, occlusion, encoding, decoding etc. Very little that stresses the String implementation.</p>\n<p>So to get an idea of the actual performance. I\u2019d have to run some synthetic benchmarks. Which I might do. I\u2019ll be back with some results.</p>", "post_number": 13, "post_type": 1, "updated_at": "2018-02-12T02:14:42.926Z", "reply_count": 0, "reply_to_post_number": 11, "quote_count": 0, "incoming_link_count": 0, "reads": 27, "readers_count": 26, "score": 5.4, "yours": false, "topic_id": 3994, "topic_slug": "memory-fragmentation-concerns", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "reply_to_user": {"username": "TheComet", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/thecomet/{size}/1493_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 180, "hidden": false, "trust_level": 0, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "user_suspended": true, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 23210, "name": "QB'k Games", "username": "QBkGames", "avatar_template": "/user_avatar/discourse.urho3d.io/qbkgames/{size}/646_2.png", "created_at": "2018-02-12T02:19:43.401Z", "cooked": "<p>After thinking about it for a whole day (and half a night), this is what I came up with:</p>\n<pre><code>/// Only meant as a temporary wrapper around a const char*. Only supports const functions as it does not own the char buffer.\n/// Calling functions that change the char buffer can result in memory corruptions.\nclass URHO3D_API ConstString : public String\n{\npublic:\n\t/// Construct from another string.\n\tConstString(const String&amp; str)\n\t{\n\t\tlength_ = str.Length();\n\t\tbuffer_ = (char*)str.CString();\n\t}\n\n\t/// Construct from a C string.\n\tConstString(const char* str)\n\t{\n\t\tlength_ = CStringLength(str);\n\t\tbuffer_ = (char*)str;\n\t}\n};\n</code></pre>\n<p>It\u2019s a bit hacky, but works. Then you use it:</p>\n<pre><code>mushroomObject-&gt;SetModel(cache-&gt;GetResource&lt;Model&gt;(ConstString(\"Models/Mushroom.mdl\")));\nmushroomObject-&gt;SetMaterial(cache-&gt;GetResource&lt;Material&gt;(ConstString(\"Materials/Mushroom.xml\")));\n</code></pre>\n<p>This is the best solution I can think of that requires minimum changes.</p>", "post_number": 14, "post_type": 1, "updated_at": "2018-02-12T02:19:43.401Z", "reply_count": 1, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 27, "readers_count": 26, "score": 10.4, "yours": false, "topic_id": 3994, "topic_slug": "memory-fragmentation-concerns", "display_username": "QB'k Games", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 780, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 23211, "name": "QB'k Games", "username": "QBkGames", "avatar_template": "/user_avatar/discourse.urho3d.io/qbkgames/{size}/646_2.png", "created_at": "2018-02-12T02:22:37.447Z", "cooked": "<p>By the way, I\u2019m not very familiar with git, do you need some special permission to create a branch and open a pull request? I\u2019ve cloned the repository, created a branch but I\u2019m unable to publish it.</p>", "post_number": 15, "post_type": 1, "updated_at": "2018-02-12T02:22:37.447Z", "reply_count": 1, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 1, "reads": 26, "readers_count": 25, "score": 15.2, "yours": false, "topic_id": 3994, "topic_slug": "memory-fragmentation-concerns", "display_username": "QB'k Games", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 780, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 23212, "name": "QB'k Games", "username": "QBkGames", "avatar_template": "/user_avatar/discourse.urho3d.io/qbkgames/{size}/646_2.png", "created_at": "2018-02-12T02:34:17.994Z", "cooked": "<p>As to how much String impacts the game/engine performance, probably not that significant (at least not on a PC, might make a bit more difference on a mobile), but to me any wasted clock cycle is taking away my option to add more entities or features that enrich the game.</p>\n<p>So, one of the attractions of Urho3D is that is advertised as light weight, which in my mind means very optimised and efficient. And the way String is used, does not fit with that attitude.</p>\n<p>There might be other subsystems of the engine that could do with more optimisation (maybe the event system ?), but String is something that jumped at me from the start.</p>", "post_number": 16, "post_type": 1, "updated_at": "2018-02-12T02:34:17.994Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 26, "readers_count": 25, "score": 5.2, "yours": false, "topic_id": 3994, "topic_slug": "memory-fragmentation-concerns", "display_username": "QB'k Games", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 780, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 23214, "name": "", "username": "S.L.C", "avatar_template": "/user_avatar/discourse.urho3d.io/s.l.c/{size}/1016_2.png", "created_at": "2018-02-12T03:07:30.486Z", "cooked": "<p>A string with a local buffer does have some benefits. But sometimes it can be even worse. More memory is used. Move semantics, swapping, copying, default construction etc. take a bit more work than usual. And that takes it\u2019s toll.</p>\n<p>There were definitely things that could have been improved. I might look more into it. I\u2019m pretty sure the quick and dirty implementation I did is far from perfect.</p>\n<p>But for now. I\u2019m starting to think that a string view coupled with the regular string implementation might work better. I\u2019ll have to try and see.</p>\n<p>Default construction empty:</p>\n<pre><code>static void Heap(benchmark::State&amp; state) {\n    for (auto _ : state) {\n        Urho3D::String s(\"abcd\");\n        benchmark::DoNotOptimize(s);\n    }\n}\nBENCHMARK(Heap);\n\nstatic void Local(benchmark::State&amp; state) {\n    for (auto _ : state) {\n        Urho3D::String2 s(\"abcd\");\n        benchmark::DoNotOptimize(s);\n    }\n}\nBENCHMARK(Local);\n</code></pre>\n<p>Output:</p>\n<pre><code>--------------------------------------------------\nBenchmark           Time           CPU Iterations\n--------------------------------------------------\nHeap                1 ns          1 ns 1000000000\nLocal               2 ns          2 ns  407922793\n</code></pre>\n<p>Default construction with C string of 4 chars:</p>\n<pre><code>static void Heap(benchmark::State&amp; state) {\n    for (auto _ : state) {\n        Urho3D::String s(\"abcd\");\n        benchmark::DoNotOptimize(s);\n    }\n}\nBENCHMARK(Heap);\n\nstatic void Local(benchmark::State&amp; state) {\n    for (auto _ : state) {\n        Urho3D::String2 s(\"abcd\");\n        benchmark::DoNotOptimize(s);\n    }\n}\nBENCHMARK(Local);\n</code></pre>\n<p>Output:</p>\n<pre><code>--------------------------------------------------\nBenchmark           Time           CPU Iterations\n--------------------------------------------------\nHeap               34 ns         34 ns   21367384\nLocal               5 ns          5 ns  100000000\n</code></pre>\n<p>Default construction with C string of 19 chars:</p>\n<pre><code>static void Heap(benchmark::State&amp; state) {\n    for (auto _ : state) {\n        Urho3D::String s(\"abcdefghijklmnefgh\");\n        benchmark::DoNotOptimize(s);\n    }\n}\nBENCHMARK(Heap);\n\nstatic void Local(benchmark::State&amp; state) {\n    for (auto _ : state) {\n        Urho3D::String2 s(\"abcdefghijklmnefgh\");\n        benchmark::DoNotOptimize(s);\n    }\n}\nBENCHMARK(Local);\n</code></pre>\n<p>Constructing with a string that exceeds the local buffer capacity:</p>\n<pre><code>--------------------------------------------------\nBenchmark           Time           CPU Iterations\n--------------------------------------------------\nHeap               33 ns         33 ns   22435754\nLocal               6 ns          6 ns  125840759\n</code></pre>\n<p>Default construction with C string of 24 chars:</p>\n<pre><code>static void Heap(benchmark::State&amp; state) {\n    for (auto _ : state) {\n        Urho3D::String s(\"abcdefghijklmnefghijklmn\");\n        benchmark::DoNotOptimize(s);\n    }\n}\nBENCHMARK(Heap);\n\nstatic void Local(benchmark::State&amp; state) {\n    for (auto _ : state) {\n        Urho3D::String2 s(\"abcdefghijklmnefghijklmn\");\n        benchmark::DoNotOptimize(s);\n    }\n}\nBENCHMARK(Local);\n</code></pre>\n<p>Output:</p>\n<pre><code>--------------------------------------------------\nBenchmark           Time           CPU Iterations\n--------------------------------------------------\nHeap               33 ns         33 ns   18643076\nLocal              37 ns         37 ns   18696461\n</code></pre>\n<p>Copying arrays of strings:</p>\n<pre><code>typedef Urho3D::Vector&lt; Urho3D::String &gt; StringVec;\ntypedef Urho3D::Vector&lt; Urho3D::String2 &gt; String2Vec;\n\nstatic const unsigned sizes[] = {\n\t0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,\n\t32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63\n};\nstatic const char * cstr = \"abcdefghijklmnefghijklmnabcdefghijklmnefghijklmnabcdefghijklmnefghijklmn\";\n\nstatic void Heap(benchmark::State&amp; state) {\n    StringVec v1, v2;\n    v1.Resize(64);\n    v2.Resize(64);\n    for (unsigned i = 0; i &lt; 64; ++i)\n        v1[i].Append(cstr, i);\n\n    for (auto _ : state) {\n        v1 = v2;\n    }\n}\nBENCHMARK(Heap);\n\nstatic void Local(benchmark::State&amp; state) {\n    String2Vec v1, v2;\n    v1.Resize(64);\n    v2.Resize(64);\n    for (unsigned i = 0; i &lt; 64; ++i)\n        v1[i].Append(cstr, i);\n\n    for (auto _ : state) {\n        v1 = v2;\n    }\n}\nBENCHMARK(Local);\n</code></pre>\n<p>Output:</p>\n<pre><code>--------------------------------------------------\nBenchmark           Time           CPU Iterations\n--------------------------------------------------\nHeap              308 ns        310 ns    2361658\nLocal             409 ns        407 ns    1725827\n</code></pre>\n<p>Integer conversion:</p>\n<pre><code>static void Heap(benchmark::State&amp; state) {\n    for (auto _ : state) {\n        Urho3D::String s(242554);\n        benchmark::DoNotOptimize(s);\n    }\n}\nBENCHMARK(Heap);\n\nstatic void Local(benchmark::State&amp; state) {\n    for (auto _ : state) {\n        Urho3D::String2 s(242554);\n        benchmark::DoNotOptimize(s);\n    }\n}\nBENCHMARK(Local);\n</code></pre>\n<p>Output:</p>\n<pre><code>\t--------------------------------------------------\nBenchmark           Time           CPU Iterations\n--------------------------------------------------\nHeap              111 ns        111 ns    5608938\nLocal              68 ns         68 ns    8974301\n</code></pre>\n<p>Environment:</p>\n<ul>\n<li>Windows 7 x64</li>\n<li>MinGW 7.2.0 x64 POSIX SEH</li>\n<li>Ryzen 5 1600x single threaded <span class=\"mention\">@3.7</span>.</li>\n</ul>", "post_number": 17, "post_type": 1, "updated_at": "2018-02-12T03:12:04.167Z", "reply_count": 0, "reply_to_post_number": 11, "quote_count": 0, "incoming_link_count": 0, "reads": 28, "readers_count": 27, "score": 5.6, "yours": false, "topic_id": 3994, "topic_slug": "memory-fragmentation-concerns", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "reply_to_user": {"username": "TheComet", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/thecomet/{size}/1493_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 180, "hidden": false, "trust_level": 0, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "user_suspended": true, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 23215, "name": "", "username": "S.L.C", "avatar_template": "/user_avatar/discourse.urho3d.io/s.l.c/{size}/1016_2.png", "created_at": "2018-02-12T03:19:42.772Z", "cooked": "<p>That\u2019s basically how a <code>string_view</code> is supposed to look like. Except you\u2019re playing with the destructor of the base class which destroys the buffer. And boy oh boy, destruction you\u2019ll get.</p>", "post_number": 18, "post_type": 1, "updated_at": "2018-02-12T03:20:01.241Z", "reply_count": 1, "reply_to_post_number": 14, "quote_count": 0, "incoming_link_count": 0, "reads": 26, "readers_count": 25, "score": 25.2, "yours": false, "topic_id": 3994, "topic_slug": "memory-fragmentation-concerns", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "reply_to_user": {"username": "QBkGames", "name": "QB'k Games", "avatar_template": "/user_avatar/discourse.urho3d.io/qbkgames/{size}/646_2.png"}, "bookmarked": false, "actions_summary": [{"id": 2, "count": 1}], "moderator": false, "admin": false, "staff": false, "user_id": 180, "hidden": false, "trust_level": 0, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "user_suspended": true, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 23216, "name": "SirNate0", "username": "SirNate0", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png", "created_at": "2018-02-12T03:46:01.211Z", "cooked": "<aside class=\"quote\" data-post=\"15\" data-topic=\"3994\" data-full=\"true\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/qbkgames/40/646_1.png\" class=\"avatar\"> QBkGames:</div>\n<blockquote>\n<p>By the way, I\u2019m not very familiar with git, do you need some special permission to create a branch and open a pull request? I\u2019ve cloned the repository, created a branch but I\u2019m unable to publish it.</p>\n</blockquote>\n</aside>\n<p>Did you fork it on GitHub and then clone your fork, or did you just clone the main repo? While you might be able to do it with just the main repo and your local machine, the only way I know too create a pull request is to do it through my fork on GitHub (push the branch to your fork, which you should have write access to, and then visit the GitHub page for your fork and it should give you the option to create a pull request).</p>", "post_number": 19, "post_type": 1, "updated_at": "2018-02-12T03:46:01.211Z", "reply_count": 1, "reply_to_post_number": 15, "quote_count": 1, "incoming_link_count": 0, "reads": 26, "readers_count": 25, "score": 10.2, "yours": false, "topic_id": 3994, "topic_slug": "memory-fragmentation-concerns", "display_username": "SirNate0", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 628, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 23219, "name": "Jonathan", "username": "Sinoid", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/f19dbf/{size}.png", "created_at": "2018-02-12T04:25:54.958Z", "cooked": "<p>If it wasn\u2019t forked first and was instead cloned from the main Urho3d repo then you have to fork on github then change the url on the local clone. <a href=\"https://help.github.com/articles/changing-a-remote-s-url/\" rel=\"nofollow noopener\">https://help.github.com/articles/changing-a-remote-s-url/</a></p>", "post_number": 20, "post_type": 1, "updated_at": "2018-02-12T04:25:54.958Z", "reply_count": 0, "reply_to_post_number": 19, "quote_count": 0, "incoming_link_count": 1, "reads": 26, "readers_count": 25, "score": 25.2, "yours": false, "topic_id": 3994, "topic_slug": "memory-fragmentation-concerns", "display_username": "Jonathan", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "https://help.github.com/articles/changing-a-remote-s-url/", "internal": false, "reflection": false, "title": "Changing a remote's URL - User Documentation", "clicks": 2}], "read": true, "user_title": null, "reply_to_user": {"username": "SirNate0", "name": "SirNate0", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}, "bookmarked": false, "actions_summary": [{"id": 2, "count": 1}], "moderator": false, "admin": false, "staff": false, "user_id": 669, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 23229, "name": "QB'k Games", "username": "QBkGames", "avatar_template": "/user_avatar/discourse.urho3d.io/qbkgames/{size}/646_2.png", "created_at": "2018-02-12T10:38:47.943Z", "cooked": "<aside class=\"quote\" data-post=\"18\" data-topic=\"3994\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/s.l.c/40/1016_1.png\" class=\"avatar\"> S.L.C:</div>\n<blockquote>\n<p>Except you\u2019re playing with the destructor of the base class which destroys the buffer. And boy oh boy, destruction you\u2019ll get.</p>\n</blockquote>\n</aside>\n<p>Actually, as long as the capacity variable remains at 0, the destructor shouldn\u2019t be a problem. I\u2019ve already tried it in practice.</p>\n<p>I\u2019m guessing that a \u201cproper\u201d string_view equivalent implementation would be to have the View as the base class with all const methods as its members, and then have the String inherit from the View.<br>\nI actually thought of that as well, but then you\u2019ll still have to change all function signatures throughout the engine to replace \u201cconst String&amp;\u201d to \u201cconst StringView&amp;\u201d, in which case it would be much easier to replace them simply with \u201cconst char*\u201d and not have to mess around with the view at all. I have no idea what the impact would be for the scripting language bindings but for C++ it should not really break too many things (if any at all).</p>\n<p>(Of course, you\u2019d still use String internally to store char data, but for passing strings around, I still think const char* is the best, most efficient option).</p>", "post_number": 21, "post_type": 1, "updated_at": "2018-02-12T11:05:45.028Z", "reply_count": 0, "reply_to_post_number": 18, "quote_count": 1, "incoming_link_count": 0, "reads": 25, "readers_count": 24, "score": 5.0, "yours": false, "topic_id": 3994, "topic_slug": "memory-fragmentation-concerns", "display_username": "QB'k Games", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 2, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 780, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 23230, "name": "QB'k Games", "username": "QBkGames", "avatar_template": "/user_avatar/discourse.urho3d.io/qbkgames/{size}/646_2.png", "created_at": "2018-02-12T10:40:56.583Z", "cooked": "<p><a class=\"mention\" href=\"/u/sirnate0\">@SirNate0</a> &amp; <a class=\"mention\" href=\"/u/Sinoid\">@Sinoid</a></p>\n<p>Thanks for the clarifications with GitHub. I didn\u2019t know you had to fork first, so I did clone the main repo. The article helped and I\u2019ve now changed the url to my fork.</p>", "post_number": 22, "post_type": 1, "updated_at": "2018-02-12T10:40:56.583Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 26, "readers_count": 25, "score": 5.2, "yours": false, "topic_id": 3994, "topic_slug": "memory-fragmentation-concerns", "display_username": "QB'k Games", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 780, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}], "stream": [23161, 23163, 23177, 23183, 23184, 23185, 23199, 23200, 23204, 23206, 23207, 23208, 23209, 23210, 23211, 23212, 23214, 23215, 23216, 23219, 23229, 23230]}, "timeline_lookup": [[1, 1750], [3, 1748], [4, 1747], [7, 1746], [9, 1745]], "tags_descriptions": {}, "id": 3994, "title": "Memory Fragmentation Concerns", "fancy_title": "Memory Fragmentation Concerns", "posts_count": 22, "created_at": "2018-02-07T03:55:50.250Z", "views": 1320, "reply_count": 12, "like_count": 2, "last_posted_at": "2018-02-12T10:40:56.583Z", "visible": true, "closed": false, "archived": false, "has_summary": false, "archetype": "regular", "slug": "memory-fragmentation-concerns", "category_id": 16, "word_count": 2805, "deleted_at": null, "user_id": 780, "featured_link": null, "pinned_globally": false, "pinned_at": null, "pinned_until": null, "image_url": null, "slow_mode_seconds": 0, "draft": null, "draft_key": "topic_3994", "draft_sequence": null, "unpinned": null, "pinned": false, "current_post_number": 1, "highest_post_number": 22, "deleted_by": null, "actions_summary": [{"id": 4, "count": 0, "hidden": false, "can_act": false}, {"id": 8, "count": 0, "hidden": false, "can_act": false}, {"id": 7, "count": 0, "hidden": false, "can_act": false}], "chunk_size": 20, "bookmarked": false, "bookmarks": [], "topic_timer": null, "message_bus_last_id": 0, "participant_count": 7, "show_read_indicator": false, "thumbnails": null, "slow_mode_enabled_until": null, "tags_disable_ads": false, "details": {"can_edit": false, "notification_level": 1, "participants": [{"id": 780, "username": "QBkGames", "name": "QB'k Games", "avatar_template": "/user_avatar/discourse.urho3d.io/qbkgames/{size}/646_2.png", "post_count": 8, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "trust_level": 2}, {"id": 669, "username": "Sinoid", "name": "Jonathan", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/f19dbf/{size}.png", "post_count": 4, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "trust_level": 2}, {"id": 180, "username": "S.L.C", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/s.l.c/{size}/1016_2.png", "post_count": 4, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "trust_level": 0}, {"id": 37, "username": "TheComet", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/thecomet/{size}/1493_2.png", "post_count": 2, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "trust_level": 2}, {"id": 628, "username": "SirNate0", "name": "SirNate0", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png", "post_count": 2, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "trust_level": 2}, {"id": 484, "username": "Eugene", "name": "Eugene Kozlov", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png", "post_count": 1, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "trust_level": 2}, {"id": 4, "username": "weitjong", "name": "Yao Wei Tjong", "avatar_template": "/user_avatar/discourse.urho3d.io/weitjong/{size}/4_2.png", "post_count": 1, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "admin": true, "trust_level": 4}], "created_by": {"id": 780, "username": "QBkGames", "name": "QB'k Games", "avatar_template": "/user_avatar/discourse.urho3d.io/qbkgames/{size}/646_2.png"}, "last_poster": {"id": 780, "username": "QBkGames", "name": "QB'k Games", "avatar_template": "/user_avatar/discourse.urho3d.io/qbkgames/{size}/646_2.png"}, "links": [{"url": "https://help.github.com/articles/changing-a-remote-s-url/", "title": "Changing a remote's URL - User Documentation", "internal": false, "attachment": false, "reflection": false, "clicks": 2, "user_id": 669, "domain": "help.github.com", "root_domain": "github.com"}]}, "suggested_topics": [{"id": 7285, "title": "Adding SFINAE for Container Operators", "fancy_title": "Adding SFINAE for Container Operators", "slug": "adding-sfinae-for-container-operators", "posts_count": 1, "reply_count": 0, "highest_post_number": 1, "image_url": null, "created_at": "2022-06-22T02:05:49.368Z", "last_posted_at": "2022-06-22T02:05:49.441Z", "bumped": true, "bumped_at": "2022-06-22T02:05:49.441Z", "archetype": "regular", "unseen": false, "pinned": false, "unpinned": null, "visible": true, "closed": false, "archived": false, "bookmarked": null, "liked": null, "tags_descriptions": {}, "like_count": 0, "views": 98, "category_id": 16, "featured_link": null, "has_accepted_answer": false, "posters": [{"extras": "latest single", "description": "Original Poster, Most Recent Poster", "user": {"id": 628, "username": "SirNate0", "name": "SirNate0", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}}]}, {"id": 7101, "title": "Unique Per-Node Shader Uniform for Model-Particles", "fancy_title": "Unique Per-Node Shader Uniform for Model-Particles", "slug": "unique-per-node-shader-uniform-for-model-particles", "posts_count": 2, "reply_count": 0, "highest_post_number": 2, "image_url": null, "created_at": "2021-12-16T03:16:09.579Z", "last_posted_at": "2021-12-16T09:40:41.978Z", "bumped": true, "bumped_at": "2021-12-16T09:40:41.978Z", "archetype": "regular", "unseen": false, "pinned": false, "unpinned": null, "visible": true, "closed": false, "archived": false, "bookmarked": null, "liked": null, "tags_descriptions": {}, "like_count": 0, "views": 139, "category_id": 16, "featured_link": null, "has_accepted_answer": false, "posters": [{"extras": null, "description": "Original Poster", "user": {"id": 628, "username": "SirNate0", "name": "SirNate0", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}}, {"extras": "latest", "description": "Most Recent Poster", "user": {"id": 192, "username": "Modanung", "name": "\u9b54\u5927\u519c \ud835\udf8d\ud835\udf8e\ud835\udf73 \u73fe\u62db\u870d", "avatar_template": "/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png"}}]}, {"id": 7218, "title": "Jolt Physics: physics engine from Horizon Forbidden West open-sourced", "fancy_title": "Jolt Physics: physics engine from Horizon Forbidden West open-sourced", "slug": "jolt-physics-physics-engine-from-horizon-forbidden-west-open-sourced", "posts_count": 4, "reply_count": 1, "highest_post_number": 4, "image_url": null, "created_at": "2022-03-14T15:23:58.296Z", "last_posted_at": "2022-03-21T03:18:16.555Z", "bumped": true, "bumped_at": "2022-03-21T03:18:16.555Z", "archetype": "regular", "unseen": false, "pinned": false, "unpinned": null, "visible": true, "closed": false, "archived": false, "bookmarked": null, "liked": null, "tags_descriptions": {}, "like_count": 10, "views": 439, "category_id": 16, "featured_link": "https://github.com/jrouwe/JoltPhysics", "featured_link_root_domain": "github.com", "has_accepted_answer": false, "posters": [{"extras": null, "description": "Original Poster", "user": {"id": 1304, "username": "lebrewer", "name": "lebrewer", "avatar_template": "/user_avatar/discourse.urho3d.io/lebrewer/{size}/2811_2.png"}}, {"extras": null, "description": "Frequent Poster", "user": {"id": 484, "username": "Eugene", "name": "Eugene Kozlov", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png"}}, {"extras": "latest", "description": "Most Recent Poster", "user": {"id": 1358, "username": "JSandusky", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/jsandusky/{size}/3220_2.png"}}]}, {"id": 7227, "title": "How to use -s MAX_WEBGL_VERSION=2", "fancy_title": "How to use -s MAX_WEBGL_VERSION=2", "slug": "how-to-use-s-max-webgl-version-2", "posts_count": 3, "reply_count": 1, "highest_post_number": 3, "image_url": null, "created_at": "2022-03-30T13:12:17.248Z", "last_posted_at": "2022-03-30T14:09:14.646Z", "bumped": true, "bumped_at": "2022-03-30T14:09:14.646Z", "archetype": "regular", "unseen": false, "pinned": false, "unpinned": null, "visible": true, "closed": false, "archived": false, "bookmarked": null, "liked": null, "tags_descriptions": {}, "like_count": 1, "views": 103, "category_id": 16, "featured_link": null, "has_accepted_answer": false, "posters": [{"extras": "latest", "description": "Original Poster, Most Recent Poster", "user": {"id": 997, "username": "huminzheng", "name": "huminzheng", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/h/9de0a6/{size}.png"}}, {"extras": null, "description": "Frequent Poster", "user": {"id": 628, "username": "SirNate0", "name": "SirNate0", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}}]}, {"id": 7309, "title": "Example of custom model format loader?", "fancy_title": "Example of custom model format loader?", "slug": "example-of-custom-model-format-loader", "posts_count": 3, "reply_count": 0, "highest_post_number": 3, "image_url": null, "created_at": "2022-08-10T13:34:32.831Z", "last_posted_at": "2022-08-12T13:54:56.766Z", "bumped": true, "bumped_at": "2022-08-12T13:54:56.766Z", "archetype": "regular", "unseen": false, "pinned": false, "unpinned": null, "visible": true, "closed": false, "archived": false, "bookmarked": null, "liked": null, "tags_descriptions": {}, "like_count": 1, "views": 129, "category_id": 16, "featured_link": null, "has_accepted_answer": false, "posters": [{"extras": "latest", "description": "Original Poster, Most Recent Poster", "user": {"id": 1529, "username": "hunkalloc", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/hunkalloc/{size}/3817_2.png"}}, {"extras": null, "description": "Frequent Poster", "user": {"id": 628, "username": "SirNate0", "name": "SirNate0", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}}]}]}