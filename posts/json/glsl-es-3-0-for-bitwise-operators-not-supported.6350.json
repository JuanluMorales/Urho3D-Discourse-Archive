{"post_stream":{"posts":[{"id":38795,"name":"Brian Knox","username":"najak3d","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/n/6a8cbe/{size}.png","created_at":"2020-08-27T04:48:05.722Z","cooked":"\u003cp\u003eWe‚Äôve gotten creative with shaders and are packing information into bits of the vertex position‚Äôs Y component (since for us Y == 0, always for these objects).   So we‚Äôre using the Y as a 16-bit integer value, and are wanting to extract information from these bits.\u003c/p\u003e\n\u003cp\u003eBut bitwise operators are only supported in OpenGL ES 3.0 and above.   When we use UrhoSharp (based on Urho3D 1.9.67) - it gives us an error for all bitwise ops saying ‚Äúbit-wise operator supported in GLSL ES 3.00 and above‚Äù and won‚Äôt allow it.\u003c/p\u003e\n\u003cp\u003eIs there a way to enable GLSL 3.0 mode with UrhoSharp?\u003c/p\u003e\n\u003cp\u003eEDIT: Eugene provided the actual answer to my question, which is that GLSL ES 3 is not supported via UrhoSharp (or even Urho3D at this point).     And then Lysogen‚Äôs answer is marked as solution, because this is the algorithm that we needed to use in lieu of the bitwise operators.\u003c/p\u003e","post_number":1,"post_type":1,"updated_at":"2020-08-27T14:57:25.866Z","reply_count":1,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":623,"reads":30,"readers_count":29,"score":3116.0,"yours":false,"topic_id":6350,"topic_slug":"glsl-es-3-0-for-bitwise-operators-not-supported","display_username":"Brian Knox","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":2,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":1334,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":38796,"name":"","username":"Lys0gen","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/l/57b2e6/{size}.png","created_at":"2020-08-27T05:01:05.532Z","cooked":"\u003cp\u003eNot sure about that, but if all you want to do is use a single float to store two values then you can do that with simple multiplication as well.\u003c/p\u003e\n\u003cp\u003ePacking the value:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003efloat encodeFloat(int valX, int valY)\n{\n   return valX + ((valY+0.49) * 0.00390625);//+0.49 because of possible rounding inaccuracies\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eUnpacking it in the shader:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003efloat packedXY = [YOURINPUTVARIABLE] * 256.0;\nfloat nX = floor(packedXY * 0.00390625);\nfloat nY = floor(packedXY - nX * 256.0);\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003ePretty sure this also works with floats but I just needed integers.\u003c/p\u003e","post_number":2,"post_type":1,"updated_at":"2020-08-27T14:55:40.106Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":16,"reads":29,"readers_count":28,"score":100.8,"yours":false,"topic_id":6350,"topic_slug":"glsl-es-3-0-for-bitwise-operators-not-supported","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[{"id":2,"count":1}],"moderator":false,"admin":false,"staff":false,"user_id":1317,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":true},{"id":38797,"name":"Eugene Kozlov","username":"Eugene","avatar_template":"/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png","created_at":"2020-08-27T08:21:29.359Z","cooked":"\u003caside class=\"quote no-group\" data-username=\"najak3d\" data-post=\"1\" data-topic=\"6350\"\u003e\n\u003cdiv class=\"title\"\u003e\n\u003cdiv class=\"quote-controls\"\u003e\u003c/div\u003e\n\u003cimg alt=\"\" width=\"20\" height=\"20\" src=\"https://avatars.discourse-cdn.com/v4/letter/n/6a8cbe/40.png\" class=\"avatar\"\u003e najak3d:\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003eIs there a way to enable GLSL 3.0 mode with UrhoSharp?\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/aside\u003e\n\u003cp\u003eI can say for sure that it can be done in C++ code with certain amount of work.\u003cbr\u003e\nTherefore, it‚Äôs impossible to do in C# interface alone.\u003c/p\u003e\n\u003cp\u003eAlso, I heard that GL ES 3.0 is not the stablest thing in the world, so I would be cautious about hard-locking app onto GL ES 3.0. Maybe these concerns are outdated tho.\u003c/p\u003e","post_number":3,"post_type":1,"updated_at":"2020-08-27T14:55:39.800Z","reply_count":0,"reply_to_post_number":null,"quote_count":1,"incoming_link_count":1,"reads":27,"readers_count":26,"score":25.4,"yours":false,"topic_id":6350,"topic_slug":"glsl-es-3-0-for-bitwise-operators-not-supported","display_username":"Eugene Kozlov","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":"Core developer","title_is_group":false,"bookmarked":false,"actions_summary":[{"id":2,"count":1}],"moderator":false,"admin":false,"staff":false,"user_id":484,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":38799,"name":"Brian Knox","username":"najak3d","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/n/6a8cbe/{size}.png","created_at":"2020-08-27T14:54:21.557Z","cooked":"\u003cp\u003eLysogen - thanks for the algorithm suggestion.  That‚Äôs what we‚Äôre going to have to go with.\u003c/p\u003e\n\u003cp\u003eEugene - thanks for the confirmation of what I was suspecting.  Before abandoning our bitwise operators, wanted to confirm that we had to use the more awkward math, as shown by Lysogen.\u003c/p\u003e","post_number":4,"post_type":1,"updated_at":"2020-08-27T14:54:21.557Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":2,"reads":22,"readers_count":21,"score":14.4,"yours":false,"topic_id":6350,"topic_slug":"glsl-es-3-0-for-bitwise-operators-not-supported","display_username":"Brian Knox","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":1334,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false}],"stream":[38795,38796,38797,38799]},"timeline_lookup":[[1,818]],"suggested_topics":[{"id":7132,"title":"How to Draw Anti-Aliased Outlined Line on the UI layer?","fancy_title":"How to Draw Anti-Aliased Outlined Line on the UI layer?","slug":"how-to-draw-anti-aliased-outlined-line-on-the-ui-layer","posts_count":8,"reply_count":5,"highest_post_number":8,"image_url":"https://global.discourse-cdn.com/standard17/uploads/urho3d/optimized/2X/c/c040fdbc2f1856c238ba6328fd7f5ff80b15858f_2_782x1024.jpeg","created_at":"2022-01-17T22:08:06.874Z","last_posted_at":"2022-01-20T20:13:30.614Z","bumped":true,"bumped_at":"2022-01-20T20:13:30.614Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":3,"views":173,"category_id":10,"featured_link":null,"has_accepted_answer":true,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":1334,"username":"najak3d","name":"Brian Knox","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/n/6a8cbe/{size}.png"}},{"extras":null,"description":"Frequent Poster, Accepted Answer","user":{"id":631,"username":"JTippetts1","name":"J Tippetts","avatar_template":"/user_avatar/discourse.urho3d.io/jtippetts1/{size}/96_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":628,"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":192,"username":"Modanung","name":"È≠îÂ§ßÂÜú ùûçùûéùù≥ ÁèæÊãõËúç","avatar_template":"/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png"}}]},{"id":7138,"title":"Build fails (linking phase) on Linux","fancy_title":"Build fails (linking phase) on Linux","slug":"build-fails-linking-phase-on-linux","posts_count":4,"reply_count":0,"highest_post_number":4,"image_url":null,"created_at":"2022-01-20T03:08:29.663Z","last_posted_at":"2022-01-21T15:27:41.192Z","bumped":true,"bumped_at":"2022-01-21T15:27:41.192Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":3,"views":178,"category_id":10,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":null,"description":"Original Poster","user":{"id":1502,"username":"jasperry","name":"Jason Perry","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/j/5fc32e/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":1038,"username":"dertom","name":"Thomas Trocha","avatar_template":"/user_avatar/discourse.urho3d.io/dertom/{size}/1815_2.png"}},{"extras":"latest","description":"Most Recent Poster","user":{"id":1304,"username":"lebrewer","name":"lebrewer","avatar_template":"/user_avatar/discourse.urho3d.io/lebrewer/{size}/2811_2.png"}}]},{"id":7156,"title":"Manual Mesh Part Animation (e.g. Rotate a propeller)","fancy_title":"Manual Mesh Part Animation (e.g. Rotate a propeller)","slug":"manual-mesh-part-animation-e-g-rotate-a-propeller","posts_count":4,"reply_count":1,"highest_post_number":4,"image_url":null,"created_at":"2022-01-26T23:50:29.343Z","last_posted_at":"2022-01-27T05:31:02.766Z","bumped":true,"bumped_at":"2022-01-27T05:31:02.766Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":4,"views":155,"category_id":10,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":1334,"username":"najak3d","name":"Brian Knox","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/n/6a8cbe/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":631,"username":"JTippetts1","name":"J Tippetts","avatar_template":"/user_avatar/discourse.urho3d.io/jtippetts1/{size}/96_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":1038,"username":"dertom","name":"Thomas Trocha","avatar_template":"/user_avatar/discourse.urho3d.io/dertom/{size}/1815_2.png"}}]},{"id":7176,"title":"Orthographic scene slowing down when zooming out","fancy_title":"Orthographic scene slowing down when zooming out","slug":"orthographic-scene-slowing-down-when-zooming-out","posts_count":1,"reply_count":0,"highest_post_number":1,"image_url":null,"created_at":"2022-01-30T10:05:50.218Z","last_posted_at":"2022-01-30T10:05:50.294Z","bumped":true,"bumped_at":"2022-01-30T10:05:50.294Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":0,"views":127,"category_id":10,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest single","description":"Original Poster, Most Recent Poster","user":{"id":1351,"username":"Haukinger","name":"Haukinger","avatar_template":"/user_avatar/discourse.urho3d.io/haukinger/{size}/3670_2.png"}}]},{"id":7097,"title":"View Physics event for ConvexCast","fancy_title":"View Physics event for ConvexCast","slug":"view-physics-event-for-convexcast","posts_count":11,"reply_count":5,"highest_post_number":11,"image_url":null,"created_at":"2021-12-09T23:56:27.507Z","last_posted_at":"2021-12-12T20:20:02.788Z","bumped":true,"bumped_at":"2021-12-12T20:20:02.788Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":6,"views":206,"category_id":10,"featured_link":null,"has_accepted_answer":true,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":861,"username":"GodMan","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/g/e79b87/{size}.png"}},{"extras":null,"description":"Frequent Poster, Accepted Answer","user":{"id":192,"username":"Modanung","name":"È≠îÂ§ßÂÜú ùûçùûéùù≥ ÁèæÊãõËúç","avatar_template":"/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":628,"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}}]}],"tags_descriptions":{},"id":6350,"title":"GLSL ES 3.0 - for bitwise operators - not supported?","fancy_title":"GLSL ES 3.0 - for bitwise operators - not supported?","posts_count":4,"created_at":"2020-08-27T04:48:05.614Z","views":1098,"reply_count":0,"like_count":2,"last_posted_at":"2020-08-27T14:54:21.557Z","visible":true,"closed":false,"archived":false,"has_summary":false,"archetype":"regular","slug":"glsl-es-3-0-for-bitwise-operators-not-supported","category_id":10,"word_count":380,"deleted_at":null,"user_id":1334,"featured_link":null,"pinned_globally":false,"pinned_at":null,"pinned_until":null,"image_url":null,"slow_mode_seconds":0,"draft":null,"draft_key":"topic_6350","draft_sequence":null,"unpinned":null,"pinned":false,"current_post_number":1,"highest_post_number":4,"deleted_by":null,"actions_summary":[{"id":4,"count":0,"hidden":false,"can_act":false},{"id":8,"count":0,"hidden":false,"can_act":false},{"id":7,"count":0,"hidden":false,"can_act":false}],"chunk_size":20,"bookmarked":false,"bookmarks":[],"topic_timer":null,"message_bus_last_id":0,"participant_count":3,"show_read_indicator":false,"thumbnails":null,"slow_mode_enabled_until":null,"tags_disable_ads":false,"accepted_answer":{"post_number":2,"username":"Lys0gen","excerpt":"Not sure about that, but if all you want to do is use a single float to store two values then you can do that with simple multiplication as well. \nPacking the value: \nfloat encodeFloat(int valX, int valY)\n{\n   return valX + ((valY+0.49) * 0.00390625);//+0.49 because of possible rounding inaccuracies\u0026hellip;"},"details":{"can_edit":false,"notification_level":1,"participants":[{"id":1334,"username":"najak3d","name":"Brian Knox","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/n/6a8cbe/{size}.png","post_count":2,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"trust_level":2},{"id":484,"username":"Eugene","name":"Eugene Kozlov","avatar_template":"/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png","post_count":1,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"trust_level":2},{"id":1317,"username":"Lys0gen","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/l/57b2e6/{size}.png","post_count":1,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"trust_level":2}],"created_by":{"id":1334,"username":"najak3d","name":"Brian Knox","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/n/6a8cbe/{size}.png"},"last_poster":{"id":1334,"username":"najak3d","name":"Brian Knox","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/n/6a8cbe/{size}.png"}}}