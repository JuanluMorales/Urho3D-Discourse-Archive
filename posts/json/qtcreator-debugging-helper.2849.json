{"post_stream":{"posts":[{"id":16365,"name":"SirNate0","username":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png","created_at":"2017-03-04T14:52:17.176Z","cooked":"\u003cp\u003eI was wondering if anyone had made a Debugging Helper for QtCreator for the Urho container classes, and if so would you be willing to share?\u003cbr\u003e\nThanks\u003c/p\u003e","post_number":1,"post_type":1,"updated_at":"2017-03-04T14:52:17.176Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":249,"reads":45,"readers_count":44,"score":1254.0,"yours":false,"topic_id":2849,"topic_slug":"qtcreator-debugging-helper","display_username":"SirNate0","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":628,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":16366,"name":"Eugene Kozlov","username":"Eugene","avatar_template":"/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png","created_at":"2017-03-04T15:00:14.992Z","cooked":"\u003cp\u003eI have one for Visual Studio, but it unlikely would be helpful.\u003c/p\u003e\n\u003cp\u003eIt’d be nice to gather such stuff somewhere.\u003c/p\u003e","post_number":2,"post_type":1,"updated_at":"2017-03-04T15:00:53.889Z","reply_count":1,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":2,"reads":46,"readers_count":45,"score":24.2,"yours":false,"topic_id":2849,"topic_slug":"qtcreator-debugging-helper","display_username":"Eugene Kozlov","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":"Core developer","title_is_group":false,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":484,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":16425,"name":"SirNate0","username":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png","created_at":"2017-03-07T02:51:52.473Z","cooked":"\u003cp\u003eI’ve made fair progress with QtCreator’s Debugging Helpers – Vector and HashMap are working, and I’m in the middle of Variant. I’ll probably finish it sometime, but if anyone wants what I have so far here:\u003c/p\u003e\n\u003cp\u003eNote: I’m using QtCreator 5.5.1 with gdb 7.11.1\u003c/p\u003e\n\u003cp\u003eyou can check your gdb version by running (inside gdb):\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003epy import sys; print(sys.version)\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eI have the following, so it might break on yours\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003e3.5.2 (default, Nov 17 2016, 17:05:23) \n[GCC 5.4.0 20160609]\n\u003c/code\u003e\u003c/pre\u003e\n\u003cpre\u003e\u003ccode class=\"lang-python\"\u003e#!/usr/bin/python\n\n#this line is VERY IMPORTANT! And not mentioned in the examples/docs, I'm pretty sure. It is what was causing most of my problems...\nfrom dumper import *\n#Thank you Stack Overflow: http://stackoverflow.com/questions/34354573/how-to-write-a-debugging-helper-for-qtcreator\n\ndef qdump__Urho3D__Vector(d, value):\n    array = value[\"buffer_\"]\n    size = value[\"size_\"]\n    maxDisplayItems = 100\n    innerType = d.templateArgument(value.type, 0)\n    p = array.cast(innerType.pointer())\n    d.putValue('[{0}] @{1}'.format(size,str(array)))\n    d.putItemCount(size)\n    if d.isExpanded():\n        d.putPlotData(p, size, innerType)\n        \ndef qdump__Urho3D__Variant(d, value):\n    t = value[\"type_\"]\n    d.putNumChild(0)\n    d.putValue(\"{} int({})\".format(str(t),int(t)))\n    i = int(t)\n    type_str = str(t)\n    if type_str == \"Urho3D::VAR_NONE\":\n        d.putValue(\"NONE\")\n    elif type_str == \"Urho3D::VAR_INT\":\n        d.putValue(\"int {}\".format(value[\"value_\"][\"int_\"]))\n    elif type_str == \"Urho3D::VAR_BOOL\":\n        if value[\"value_\"][\"bool_\"]:\n            d.putValue(\"(bool) true\")\n        else:\n            d.putValue(\"(bool) false\")\n    elif type_str == \"Urho3D::VAR_FLOAT\":\n        d.putValue(\"float {}\".format(value[\"value_\"][\"float_\"]))\n    return\n    #TODO: finish\n    if type_str == \"Urho3D::VAR_VECTOR2\":\n        d.putValue(\"\u0026lt;{},{}\u0026gt;\".format(value[\"value_\"][\"VECTOR2\"]))\n    if type_str == \"Urho3D::VAR_VECTOR3\":\n        d.putValue(\"VECTOR3\".format(value[\"value_\"][\"VECTOR3\"]))\n    if type_str == \"Urho3D::VAR_VECTOR4\":\n        d.putValue(\"VECTOR4\".format(value[\"value_\"][\"VECTOR4\"]))\n    if type_str == \"Urho3D::VAR_QUATERNION\":\n        d.putValue(\"QUATERNION\".format(value[\"value_\"][\"QUATERNION\"]))\n    if type_str == \"Urho3D::VAR_COLOR\":\n        d.putValue(\"COLOR\".format(value[\"value_\"][\"COLOR\"]))\n    if type_str == \"Urho3D::VAR_STRING\":\n        d.putValue(\"STRING\".format(value[\"value_\"][\"STRING\"]))\n    if type_str == \"Urho3D::VAR_BUFFER\":\n        d.putValue(\"BUFFER\".format(value[\"value_\"][\"BUFFER\"]))\n    if type_str == \"Urho3D::VAR_VOIDPTR\":\n        d.putValue(\"VOIDPTR\".format(value[\"value_\"][\"VOIDPTR\"]))\n    if type_str == \"Urho3D::VAR_RESOURCEREF\":\n        d.putValue(\"RESOURCEREF\".format(value[\"value_\"][\"RESOURCEREF\"]))\n    if type_str == \"Urho3D::VAR_RESOURCEREFLIST\":\n        d.putValue(\"RESOURCEREFLIST\".format(value[\"value_\"][\"RESOURCEREFLIST\"]))\n    if type_str == \"Urho3D::VAR_VARIANTVECTOR\":\n        d.putValue(\"VARIANTVECTOR\".format(value[\"value_\"][\"VARIANTVECTOR\"]))\n    if type_str == \"Urho3D::VAR_VARIANTMAP\":\n        d.putValue(\"VARIANTMAP\".format(value[\"value_\"][\"VARIANTMAP\"]))\n    if type_str == \"Urho3D::VAR_INTRECT\":\n        d.putValue(\"INTRECT\".format(value[\"value_\"][\"INTRECT\"]))\n    if type_str == \"Urho3D::VAR_INTVECTOR2\":\n        d.putValue(\"INTVECTOR2\".format(value[\"value_\"][\"INTVECTOR2\"]))\n    if type_str == \"Urho3D::VAR_PTR\":\n        d.putValue(\"PTR\".format(value[\"value_\"][\"PTR\"]))\n    if type_str == \"Urho3D::VAR_MATRIX3\":\n        d.putValue(\"MATRIX3\".format(value[\"value_\"][\"MATRIX3\"]))\n    if type_str == \"Urho3D::VAR_MATRIX3X4\":\n        d.putValue(\"MATRIX3X4\".format(value[\"value_\"][\"MATRIX3X4\"]))\n    if type_str == \"Urho3D::VAR_MATRIX4\":\n        d.putValue(\"MATRIX4\".format(value[\"value_\"][\"MATRIX4\"]))\n    if type_str == \"Urho3D::VAR_DOUBLE\":\n        d.putValue(\"DOUBLE\".format(value[\"value_\"][\"DOUBLE\"]))\n    if type_str == \"Urho3D::VAR_STRINGVECTOR\":\n        d.putValue(\"STRINGVECTOR\".format(value[\"value_\"][\"STRINGVECTOR\"]))\n\n#    for s in dir(value[\"value_\"]):\n#        d.put('nanavar=\"%s\"'%s)\n\n\ndef qdump__Urho3D__SharedPtr(d, value):\n#based on qdump__std__shared_ptr(d, value):\n    i = value[\"ptr_\"]\n    if not i:\n        d.putValue(\"(null)\")\n        d.putNumChild(0)\n        return\n\n#    if d.isSimpleType(d.templateArgument(value.type, 0)):\n#        d.putValue(\"{} @0x{:h}\".format(d.simpleValue(i.dereference()), d.pointerValue(i)))\n#    else:\n#        d.putValue(\"@0x{:h}\" % d.pointerValue(i))\n    #d.putValue(\"@0x{0:h}\".format(int(i)))\n    #d.putAddress(i.dereference().address)\n    d.putValue(\"@x{0:x}\".format(int(i)))\n    d.putItem(i)\n    d.putNumChild(3)\n    if d.isExpanded():\n        with Children(d, 3):\n#            d.putSubItem(\"data\", i)\n            refcount = i[\"refCount_\"]\n            d.putSubItem(\"refs_\", refcount[\"refs_\"])\n            d.putSubItem(\"weakRefs_\", refcount[\"weakRefs_\"])\n\ndef qdump__Urho3D__HashMap(d,value):\n    keyType = d.templateArgument(value.type, 0)\n    valueType = d.templateArgument(value.type, 1)\n    ptrs = value[\"ptrs_\"]\n    szTypeP = d.lookupType(\"unsigned*\")\n    size = 0\n    numBuckets = 0\n    d.putAddress(value.address)\n    if ptrs:\n        size = ptrs.cast(szTypeP).dereference()\n        numBuckets = (ptrs.cast(szTypeP) + 1).dereference()\n    if ptrs:\n        d.putValue('[{0}] in {1} @{2}'.format(size,numBuckets,str(ptrs)))\n    else:\n        d.putValue('empty @{2}'.format(size,numBuckets,str(ptrs)))\n        \n    p = value[\"head_\"]\n    end = value[\"tail_\"]\n    d.putItemCount(size)\n    \n    \n    innerType = d.templateArgument(value.type, 0)\n    n = int(size)\n    p = value[\"head_\"]\n    innerType = d.lookupType(value.type.name + \"::Node\")\n    if d.isExpanded():\n        with Children(d, n):\n            p = value[\"head_\"]\n            for i in range(n):\n                d.putSubItem(\"%s\" % i, d.createValue(d.pointerValue(p), innerType)[\"pair_\"])\n                p = p[\"next_\"]\n\u003c/code\u003e\u003c/pre\u003e","post_number":3,"post_type":1,"updated_at":"2017-03-07T03:42:23.102Z","reply_count":0,"reply_to_post_number":2,"quote_count":0,"incoming_link_count":16,"reads":42,"readers_count":41,"score":118.4,"yours":false,"topic_id":2849,"topic_slug":"qtcreator-debugging-helper","display_username":"SirNate0","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":2,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"reply_to_user":{"username":"Eugene","name":"Eugene Kozlov","avatar_template":"/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png"},"bookmarked":false,"actions_summary":[{"id":2,"count":2}],"moderator":false,"admin":false,"staff":false,"user_id":628,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":32908,"name":"SirNate0","username":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png","created_at":"2019-08-20T15:04:16.331Z","cooked":"\u003cp\u003eAdded support for a few additional types, like (Int)Vector2/3/4\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003e#!/usr/bin/python\n\n#this line is VERY IMPORTANT! And not mentioned in the examples/docs, I'm pretty sure. It is what was causing most of my problems...\nfrom dumper import *\n#Thank you Stack Overflow: http://stackoverflow.com/questions/34354573/how-to-write-a-debugging-helper-for-qtcreator\n\ndef qdump__Urho3D__Vector(d, value):\n    array = value[\"buffer_\"]\n    size = value[\"size_\"]\n    maxDisplayItems = 100\n    innerType = d.templateArgument(value.type, 0)\n    p = array.cast(innerType.pointer())\n    d.putValue('[{0}] @{1}'.format(size,str(array)))\n    d.putItemCount(size)\n    if d.isExpanded():\n        d.putPlotData(p, size, innerType)\n        \nqdump__Urho3D__PODVector = qdump__Urho3D__Vector\n        \ndef qdump__Urho3D__Variant(d, value):\n    t = value[\"type_\"]\n    d.putNumChild(0)\n    d.putValue(\"{} int({})\".format(str(t),int(t)))\n    i = int(t)\n    type_str = str(t)\n    if type_str == \"Urho3D::VAR_NONE\":\n        d.putValue(\"NONE\")\n    elif type_str == \"Urho3D::VAR_INT\":\n        d.putValue(\"int {}\".format(value[\"value_\"][\"int_\"]))\n    elif type_str == \"Urho3D::VAR_BOOL\":\n        if value[\"value_\"][\"bool_\"]:\n            d.putValue(\"(bool) true\")\n        else:\n            d.putValue(\"(bool) false\")\n    elif type_str == \"Urho3D::VAR_FLOAT\":\n        d.putValue(\"float {}\".format(value[\"value_\"][\"float_\"]))\n    return\n    #TODO: finish\n    if type_str == \"Urho3D::VAR_VECTOR2\":\n        d.putValue(\"\u0026lt;{},{}\u0026gt;\".format(value[\"value_\"][\"VECTOR2\"]))\n    if type_str == \"Urho3D::VAR_VECTOR3\":\n        d.putValue(\"VECTOR3\".format(value[\"value_\"][\"VECTOR3\"]))\n    if type_str == \"Urho3D::VAR_VECTOR4\":\n        d.putValue(\"VECTOR4\".format(value[\"value_\"][\"VECTOR4\"]))\n    if type_str == \"Urho3D::VAR_QUATERNION\":\n        d.putValue(\"QUATERNION\".format(value[\"value_\"][\"QUATERNION\"]))\n    if type_str == \"Urho3D::VAR_COLOR\":\n        d.putValue(\"COLOR\".format(value[\"value_\"][\"COLOR\"]))\n    if type_str == \"Urho3D::VAR_STRING\":\n        d.putValue(\"STRING\".format(value[\"value_\"][\"STRING\"]))\n    if type_str == \"Urho3D::VAR_BUFFER\":\n        d.putValue(\"BUFFER\".format(value[\"value_\"][\"BUFFER\"]))\n    if type_str == \"Urho3D::VAR_VOIDPTR\":\n        d.putValue(\"VOIDPTR\".format(value[\"value_\"][\"VOIDPTR\"]))\n    if type_str == \"Urho3D::VAR_RESOURCEREF\":\n        d.putValue(\"RESOURCEREF\".format(value[\"value_\"][\"RESOURCEREF\"]))\n    if type_str == \"Urho3D::VAR_RESOURCEREFLIST\":\n        d.putValue(\"RESOURCEREFLIST\".format(value[\"value_\"][\"RESOURCEREFLIST\"]))\n    if type_str == \"Urho3D::VAR_VARIANTVECTOR\":\n        d.putValue(\"VARIANTVECTOR\".format(value[\"value_\"][\"VARIANTVECTOR\"]))\n    if type_str == \"Urho3D::VAR_VARIANTMAP\":\n        d.putValue(\"VARIANTMAP\".format(value[\"value_\"][\"VARIANTMAP\"]))\n    if type_str == \"Urho3D::VAR_INTRECT\":\n        d.putValue(\"INTRECT\".format(value[\"value_\"][\"INTRECT\"]))\n    if type_str == \"Urho3D::VAR_INTVECTOR2\":\n        d.putValue(\"INTVECTOR2\".format(value[\"value_\"][\"INTVECTOR2\"]))\n    if type_str == \"Urho3D::VAR_PTR\":\n        d.putValue(\"PTR\".format(value[\"value_\"][\"PTR\"]))\n    if type_str == \"Urho3D::VAR_MATRIX3\":\n        d.putValue(\"MATRIX3\".format(value[\"value_\"][\"MATRIX3\"]))\n    if type_str == \"Urho3D::VAR_MATRIX3X4\":\n        d.putValue(\"MATRIX3X4\".format(value[\"value_\"][\"MATRIX3X4\"]))\n    if type_str == \"Urho3D::VAR_MATRIX4\":\n        d.putValue(\"MATRIX4\".format(value[\"value_\"][\"MATRIX4\"]))\n    if type_str == \"Urho3D::VAR_DOUBLE\":\n        d.putValue(\"DOUBLE\".format(value[\"value_\"][\"DOUBLE\"]))\n    if type_str == \"Urho3D::VAR_STRINGVECTOR\":\n        d.putValue(\"STRINGVECTOR\".format(value[\"value_\"][\"STRINGVECTOR\"]))\n\n#    for s in dir(value[\"value_\"]):\n#        d.put('nanavar=\"%s\"'%s)\n\n\ndef qdump__Urho3D__SharedPtr(d, value):\n#based on qdump__std__shared_ptr(d, value):\n    i = value[\"ptr_\"]\n    if not i:\n        d.putValue(\"(null)\")\n        d.putNumChild(0)\n        return\n\n#    if d.isSimpleType(d.templateArgument(value.type, 0)):\n#        d.putValue(\"{} @0x{:h}\".format(d.simpleValue(i.dereference()), d.pointerValue(i)))\n#    else:\n#        d.putValue(\"@0x{:h}\" % d.pointerValue(i))\n    #d.putValue(\"@0x{0:h}\".format(int(i)))\n    #d.putAddress(i.dereference().address)\n    d.putValue(\"@x{0:x}\".format(int(i)))\n    d.putItem(i)\n    d.putNumChild(3)\n    if d.isExpanded():\n        with Children(d, 3):\n#            d.putSubItem(\"data\", i)\n            refcount = i[\"refCount_\"]\n            d.putSubItem(\"refs_\", refcount[\"refs_\"])\n            d.putSubItem(\"weakRefs_\", refcount[\"weakRefs_\"])\n\ndef qdump__Urho3D__HashMap(d,value):\n    keyType = d.templateArgument(value.type, 0)\n    valueType = d.templateArgument(value.type, 1)\n    ptrs = value[\"ptrs_\"]\n    szTypeP = d.lookupType(\"unsigned*\")\n    size = 0\n    numBuckets = 0\n    d.putAddress(value.address)\n    if ptrs:\n        size = ptrs.cast(szTypeP).dereference()\n        numBuckets = (ptrs.cast(szTypeP) + 1).dereference()\n    if ptrs:\n        d.putValue('[{0}] in {1} @{2}'.format(size,numBuckets,str(ptrs)))\n    else:\n        d.putValue('empty @{2}'.format(size,numBuckets,str(ptrs)))\n        \n    p = value[\"head_\"]\n    end = value[\"tail_\"]\n    d.putItemCount(size)\n    \n    \n    innerType = d.templateArgument(value.type, 0)\n    n = int(size)\n    p = value[\"head_\"]\n    innerType = d.lookupType(value.type.name + \"::Node\")\n    if d.isExpanded():\n        with Children(d, n):\n            p = value[\"head_\"]\n            for i in range(n):\n                d.putSubItem(\"%s\" % i, d.createValue(d.pointerValue(p), innerType)[\"pair_\"])\n                p = p[\"next_\"]\n                \n\n# https://doc.qt.io/qtcreator/creator-debugging-helpers.html\n# def qdump__MapNode(d, value):\n#    d.putValue(\"This is the value column contents\")\n#    d.putNumChild(2)\n#    if d.isExpanded():\n#        with Children(d):\n#            # Compact simple case.\n#            d.putSubItem(\"key\", value[\"key\"])\n#            # Same effect, with more customization possibilities.\n#            with SubItem(d, \"data\")\n#                d.putItem(\"data\", value[\"data\"])\n\ndef generic_numeric_vector(d, value, dirs, bounds_fmt='\u0026lt;{}\u0026gt;', number_fmt='{}'):\n    names = [\"%s_\"%x for x in dirs]\n    vals = [number_fmt.format(value[n]) for n in names]\n    d.putValue(bounds_fmt.format(', '.join(vals)))\n    d.putNumChild(len(names))\n    if d.isExpanded():\n        with Children(d):\n            for n in names:\n                d.putSubItem(n,value[n])\n    #TODO: maybe add a length faked child member or such\n    \ndef qdump__Urho3D__IntVector2(d, value):\n    generic_numeric_vector(d,value,'xy')\n    \ndef qdump__Urho3D__Vector2(d, value):\n    generic_numeric_vector(d,value,'xy')\n    \ndef qdump__Urho3D__IntVector3(d, value):\n    generic_numeric_vector(d,value,'xyz')\n    \ndef qdump__Urho3D__Vector3(d, value):\n    generic_numeric_vector(d,value,'xyz')\n\ndef qdump__Urho3D__Vector4(d, value):\n    generic_numeric_vector(d,value,'xyzw')\n    \ndef qdump__Urho3D__Quaternion(d, value):\n    generic_numeric_vector(d,value,'wxyz','({})')\n    \n\ndef qdump__Urho3D__Color(d, value):\n    generic_numeric_vector(d,value,'rgba','rgba({})')\n\n\u003c/code\u003e\u003c/pre\u003e","post_number":4,"post_type":1,"updated_at":"2019-08-20T15:04:16.331Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":1,"reads":28,"readers_count":27,"score":25.6,"yours":false,"topic_id":2849,"topic_slug":"qtcreator-debugging-helper","display_username":"SirNate0","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[{"id":2,"count":1}],"moderator":false,"admin":false,"staff":false,"user_id":628,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":32910,"name":"魔大农 𝞍𝞎𝝳 現招蜍","username":"Modanung","avatar_template":"/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png","created_at":"2019-08-20T15:30:12.160Z","cooked":"\u003cp\u003e\u003cimg src=\"https://emoji.discourse-cdn.com/twitter/confused.png?v=9\" title=\":confused:\" class=\"emoji\" alt=\":confused:\"\u003e\u003c/p\u003e\n\u003cp\u003e\u003cdiv class=\"lightbox-wrapper\"\u003e\u003ca class=\"lightbox\" href=\"https://global.discourse-cdn.com/standard17/uploads/urho3d/original/2X/5/5961a5e84a6a7b272ddb4e23a4e5778d4fc64544.png\" data-download-href=\"/uploads/short-url/cKHHHF9H4bWDOovrUr0VCaBeOR6.png?dl=1\" title=\"NotHelping.png\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://global.discourse-cdn.com/standard17/uploads/urho3d/optimized/2X/5/5961a5e84a6a7b272ddb4e23a4e5778d4fc64544_2_690x32.png\" alt=\"NotHelping\" data-base62-sha1=\"cKHHHF9H4bWDOovrUr0VCaBeOR6\" width=\"690\" height=\"32\" srcset=\"https://global.discourse-cdn.com/standard17/uploads/urho3d/optimized/2X/5/5961a5e84a6a7b272ddb4e23a4e5778d4fc64544_2_690x32.png, https://global.discourse-cdn.com/standard17/uploads/urho3d/optimized/2X/5/5961a5e84a6a7b272ddb4e23a4e5778d4fc64544_2_1035x48.png 1.5x, https://global.discourse-cdn.com/standard17/uploads/urho3d/original/2X/5/5961a5e84a6a7b272ddb4e23a4e5778d4fc64544.png 2x\" data-small-upload=\"https://global.discourse-cdn.com/standard17/uploads/urho3d/optimized/2X/5/5961a5e84a6a7b272ddb4e23a4e5778d4fc64544_2_10x10.png\"\u003e\u003cdiv class=\"meta\"\u003e\n\u003csvg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"\u003e\u003cuse xlink:href=\"#far-image\"\u003e\u003c/use\u003e\u003c/svg\u003e\u003cspan class=\"filename\"\u003eNotHelping.png\u003c/span\u003e\u003cspan class=\"informations\"\u003e1156×55 10.7 KB\u003c/span\u003e\u003csvg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"\u003e\u003cuse xlink:href=\"#discourse-expand\"\u003e\u003c/use\u003e\u003c/svg\u003e\n\u003c/div\u003e\u003c/a\u003e\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003eI copied your code into a \u003ccode\u003e.py\u003c/code\u003e file and set it as Extra Debugging Helpers in QtCreator, btw.\u003c/p\u003e\n\u003cp\u003eIf I paste the same code into the \u003cem\u003eCustomization\u003c/em\u003e field of the debugger options, the debugger fails to start.\u003c/p\u003e","post_number":5,"post_type":1,"updated_at":"2019-08-20T17:23:15.144Z","reply_count":1,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":0,"reads":26,"readers_count":25,"score":10.2,"yours":false,"topic_id":2849,"topic_slug":"qtcreator-debugging-helper","display_username":"魔大农 𝞍𝞎𝝳 現招蜍","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":2,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"link_counts":[{"url":"https://global.discourse-cdn.com/standard17/uploads/urho3d/original/2X/5/5961a5e84a6a7b272ddb4e23a4e5778d4fc64544.png","internal":false,"reflection":false,"title":"5961a5e84a6a7b272ddb4e23a4e5778d4fc64544.png","clicks":0}],"read":true,"user_title":"","bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":192,"hidden":false,"trust_level":0,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"user_suspended":true,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":32911,"name":"SirNate0","username":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png","created_at":"2019-08-20T18:32:18.670Z","cooked":"\u003cp\u003eThat’s how I have it working, saved as a \u003ccode\u003e.py\u003c/code\u003e and pointed to by the Options \u0026gt; Debugger \u0026gt; GDB \u0026gt; Extra Debugging Helpers field. It works for you when saved as a python script, right? I don’t see why it wouldn’t work pasted in the Debugging Helper Customization field, but I haven’t tried it. Based on the tooltip the block (I’m not certain what defines a block) the code would have to be surrounded by a \u003ccode\u003epython\u003c/code\u003e and an \u003ccode\u003eend\u003c/code\u003e (and as a guess maybe the import statement would need to be removed?)…\u003c/p\u003e\n\u003cp\u003eIt’s a very different display than mine, however. My guess is this is from a different version of QtCreator and/or GDB. With my setup I get values displayed like this \u003cimg src=\"https://global.discourse-cdn.com/standard17/uploads/urho3d/original/2X/3/3fc71d1631d099a259726f887016f1178e256901.png\" alt=\"gdbVisualizerResults\" data-base62-sha1=\"96cG8o46wQFlf5uGieJhTd8OIYV\" width=\"443\" height=\"186\"\u003e\u003cbr\u003e\nThis is using\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003eQt Creator 3.5.1 (opensource)\nBased on Qt 5.5.1 (GCC 4.9.1 20140922 (Red Hat 4.9.1-10), 64 bit)\nBuilt on Oct 15 2015 01:56:01\nFrom revision b4c52505ca\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003ewith\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003eGNU gdb (Ubuntu 7.11.1-0ubuntu1~16.5) 7.11.1\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eI’ll make a repository for this, and then if anyone figures out how to make improvements pull requests can be made there.\u003c/p\u003e\n\u003cp\u003eEdit: didn’t notice the formatting hid the version of Qt Creator, fixed it now.\u003c/p\u003e","post_number":6,"post_type":1,"updated_at":"2019-08-20T18:58:48.795Z","reply_count":1,"reply_to_post_number":5,"quote_count":0,"incoming_link_count":3,"reads":25,"readers_count":24,"score":40.0,"yours":false,"topic_id":2849,"topic_slug":"qtcreator-debugging-helper","display_username":"SirNate0","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":2,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"reply_to_user":{"username":"Modanung","name":"魔大农 𝞍𝞎𝝳 現招蜍","avatar_template":"/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png"},"bookmarked":false,"actions_summary":[{"id":2,"count":1}],"moderator":false,"admin":false,"staff":false,"user_id":628,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":32912,"name":"魔大农 𝞍𝞎𝝳 現招蜍","username":"Modanung","avatar_template":"/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png","created_at":"2019-08-20T18:55:45.736Z","cooked":"\u003caside class=\"quote no-group\" data-username=\"SirNate0\" data-post=\"6\" data-topic=\"2849\"\u003e\n\u003cdiv class=\"title\"\u003e\n\u003cdiv class=\"quote-controls\"\u003e\u003c/div\u003e\n\u003cimg alt=\"\" width=\"20\" height=\"20\" src=\"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/40.png\" class=\"avatar\"\u003e SirNate0:\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003eIt works for you when saved as a python script, right?\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/aside\u003e\n\u003cp\u003eNeither works (properly) for me, and \u003cem\u003ehere\u003c/em\u003e the Extra Debugging Helpers field is under the Locals \u0026amp; Expressions tab. Version information is as follows:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eQt Creator 4.5.2\u003cbr\u003e\nBased on Qt 5.9.5 (GCC 7.3.0, 64 bit)\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003eGNU gdb (Ubuntu 8.1-0ubuntu3) 8.1.0.20180409-git\u003c/p\u003e\n\u003c/blockquote\u003e","post_number":7,"post_type":1,"updated_at":"2019-08-20T19:14:00.855Z","reply_count":1,"reply_to_post_number":6,"quote_count":1,"incoming_link_count":1,"reads":24,"readers_count":23,"score":14.8,"yours":false,"topic_id":2849,"topic_slug":"qtcreator-debugging-helper","display_username":"魔大农 𝞍𝞎𝝳 現招蜍","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":2,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":"","bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":192,"hidden":false,"trust_level":0,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"user_suspended":true,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":38131,"name":"SirNate0","username":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png","created_at":"2020-07-07T18:27:03.743Z","cooked":"\u003cp\u003eI switched to a newer version of Qt Creator for my desktop and got the debugging helpers working with that. I did initial see (and corrected) the same sort of improper output (\u003ccode\u003eValue(name='x_'...)\u003c/code\u003e) sort of output, so hopefully these will work better.\u003c/p\u003e\n\u003cp\u003eI have not finished all of them (e.g. Variant is still broken), but I believe Vector and HashMap are working correctly, which are probably the most useful ones. If you want to disable one of them you can just comment it out or change the name of the function so it doesn’t match the class any more (like I did with the “old” ones).\u003c/p\u003e\n\u003cp\u003eAt some point I’ll probably finish at least Variant and come back and edit this and/or throw it on Github, but for now hopefully it’s useful to someone.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003e#!/usr/bin/python\n\n#this line is VERY IMPORTANT! And not mentioned in the examples/docs, I'm pretty sure. It is what was causing most of my problems...\nfrom dumper import *\n#Thank you Stack Overflow: http://stackoverflow.com/questions/34354573/how-to-write-a-debugging-helper-for-qtcreator\n\n# also helpful https://github.com/qt-creator/qt-creator/blob/master/share/qtcreator/debugger/dumper.py\n\n# very very helpful: https://doc.qt.io/qtcreator/creator-debugging-helpers.html\n\ndef old_qdump__Urho3D__Vector(d, value):\n    array = value[\"buffer_\"]\n    size = value[\"size_\"]\n    maxDisplayItems = 100\n    innerType = d.templateArgument(value.type, 0)\n    p = array.cast(innerType.pointer())\n    #d.putValue('[{0}] @{1}'.format(size,str(array)))\n    #d.putItemCount(size)\n    #d.putNumChild(size)\n    #d.putNumChild(size)\n    d.putNumChild(10)\n    if d.isExpanded():\n        #d.putPlotData(p, size, innerType)\n        with Children(d):\n            try:\n                d.putSubItem(\"{!s}\".format((p.pointer(),size.integer())).replace(\"'\",\"$\").replace('\"','|'),size)\n                with SubItem(d, \"data\"):\n                    d.putValue('\u0026lt;{}\u0026gt; items @0x{:x}'.format(size.integer(),p.pointer()))\n                    d.putArrayData(p.pointer(), size.integer(), innerType)\n            except Exception as e:\n                #d.put('value=\"\u0026lt;invalid\u0026gt;\",type=\"\u0026lt;unknown\u0026gt;\",numchild=\"0\",')\n                d.putSubItem(\"EXCEPTION! {!s}\".format(e).replace(\"'\",\"$\").replace('\"','|'),size)\n\n            d.putSubItem(\"size\", size)\n            #with SubItem(d):\n                #d.putName(\"test-with-sub\")\n                #d.putItem(\"buffer\",size)\n            d.putSubItem(\"{!s}\".format(size).replace(\"'\",\"$\").replace('\"','|'),size)\n            d.putSubItem(\"{!s}\".format(array),size)\n            d.putSubItem(\"{!s}\".format(value.type).replace(\"'\",\"$\").replace('\"','|'),size)\n            d.putSubItem(\"{!s}\".format(innerType).replace(\"'\",\"$\").replace('\"','|'),size)\n            d.putSubItem(\"{!s}\".format(p).replace(\"'\",\"$\").replace('\"','|'),size)\n            #with SubItem(d, \"buffer\") as sub:\n                #sub.putNumChild(size)\n                #if sub.isExpanded():\n                    #with Children(sub):\n                        #sub.putArrayData(array, size, value.type[0])\n        \ndef qdump__Urho3D__Vector(d, value):\n    array = value[\"buffer_\"]\n    size = value[\"size_\"]\n    maxDisplayItems = 100\n    innerType = d.templateArgument(value.type, 0)\n    p = array.cast(innerType.pointer())\n    d.putNumChild(size.integer())\n    if d.isExpanded():\n        with Children(d):\n            try:\n                with SubItem(d, \"data\"):\n                    d.putValue('\u0026lt;{}\u0026gt; items @0x{:x}'.format(size.integer(),p.pointer()))\n                    d.putArrayData(p.pointer(), size.integer(), innerType)\n            except Exception as e:\n                #d.put('value=\"\u0026lt;invalid\u0026gt;\",type=\"\u0026lt;unknown\u0026gt;\",numchild=\"0\",')\n                d.putSubItem(\"EXCEPTION! {!s}\".format(e).replace(\"'\",\"$\").replace('\"','|'),size)\n\nqdump__Urho3D__PODVector = qdump__Urho3D__Vector\n        \ndef qdump__Urho3D__Variant(d, value):\n    t = value[\"type_\"]\n    d.putNumChild(0)\n    d.putValue(\"{} int({})\".format(str(t),int(t)))\n    i = int(t)\n    type_str = str(t)\n    if type_str == \"Urho3D::VAR_NONE\":\n        d.putValue(\"NONE\")\n    elif type_str == \"Urho3D::VAR_INT\":\n        d.putValue(\"int {}\".format(value[\"value_\"][\"int_\"]))\n    elif type_str == \"Urho3D::VAR_BOOL\":\n        if value[\"value_\"][\"bool_\"]:\n            d.putValue(\"(bool) true\")\n        else:\n            d.putValue(\"(bool) false\")\n    elif type_str == \"Urho3D::VAR_FLOAT\":\n        d.putValue(\"float {}\".format(value[\"value_\"][\"float_\"]))\n    return\n    #TODO: finish\n    if type_str == \"Urho3D::VAR_VECTOR2\":\n        d.putValue(\"\u0026lt;{},{}\u0026gt;\".format(value[\"value_\"][\"VECTOR2\"]))\n    if type_str == \"Urho3D::VAR_VECTOR3\":\n        d.putValue(\"VECTOR3\".format(value[\"value_\"][\"VECTOR3\"]))\n    if type_str == \"Urho3D::VAR_VECTOR4\":\n        d.putValue(\"VECTOR4\".format(value[\"value_\"][\"VECTOR4\"]))\n    if type_str == \"Urho3D::VAR_QUATERNION\":\n        d.putValue(\"QUATERNION\".format(value[\"value_\"][\"QUATERNION\"]))\n    if type_str == \"Urho3D::VAR_COLOR\":\n        d.putValue(\"COLOR\".format(value[\"value_\"][\"COLOR\"]))\n    if type_str == \"Urho3D::VAR_STRING\":\n        d.putValue(\"STRING\".format(value[\"value_\"][\"STRING\"]))\n    if type_str == \"Urho3D::VAR_BUFFER\":\n        d.putValue(\"BUFFER\".format(value[\"value_\"][\"BUFFER\"]))\n    if type_str == \"Urho3D::VAR_VOIDPTR\":\n        d.putValue(\"VOIDPTR\".format(value[\"value_\"][\"VOIDPTR\"]))\n    if type_str == \"Urho3D::VAR_RESOURCEREF\":\n        d.putValue(\"RESOURCEREF\".format(value[\"value_\"][\"RESOURCEREF\"]))\n    if type_str == \"Urho3D::VAR_RESOURCEREFLIST\":\n        d.putValue(\"RESOURCEREFLIST\".format(value[\"value_\"][\"RESOURCEREFLIST\"]))\n    if type_str == \"Urho3D::VAR_VARIANTVECTOR\":\n        d.putValue(\"VARIANTVECTOR\".format(value[\"value_\"][\"VARIANTVECTOR\"]))\n    if type_str == \"Urho3D::VAR_VARIANTMAP\":\n        d.putValue(\"VARIANTMAP\".format(value[\"value_\"][\"VARIANTMAP\"]))\n    if type_str == \"Urho3D::VAR_INTRECT\":\n        d.putValue(\"INTRECT\".format(value[\"value_\"][\"INTRECT\"]))\n    if type_str == \"Urho3D::VAR_INTVECTOR2\":\n        d.putValue(\"INTVECTOR2\".format(value[\"value_\"][\"INTVECTOR2\"]))\n    if type_str == \"Urho3D::VAR_PTR\":\n        d.putValue(\"PTR\".format(value[\"value_\"][\"PTR\"]))\n    if type_str == \"Urho3D::VAR_MATRIX3\":\n        d.putValue(\"MATRIX3\".format(value[\"value_\"][\"MATRIX3\"]))\n    if type_str == \"Urho3D::VAR_MATRIX3X4\":\n        d.putValue(\"MATRIX3X4\".format(value[\"value_\"][\"MATRIX3X4\"]))\n    if type_str == \"Urho3D::VAR_MATRIX4\":\n        d.putValue(\"MATRIX4\".format(value[\"value_\"][\"MATRIX4\"]))\n    if type_str == \"Urho3D::VAR_DOUBLE\":\n        d.putValue(\"DOUBLE\".format(value[\"value_\"][\"DOUBLE\"]))\n    if type_str == \"Urho3D::VAR_STRINGVECTOR\":\n        d.putValue(\"STRINGVECTOR\".format(value[\"value_\"][\"STRINGVECTOR\"]))\n\n#    for s in dir(value[\"value_\"]):\n#        d.put('nanavar=\"%s\"'%s)\n\n\ndef qdump__Urho3D__SharedPtr(d, value):\n#based on qdump__std__shared_ptr(d, value):\n    i = value[\"ptr_\"]\n    if not i:\n        d.putValue(\"(null)\")\n        d.putNumChild(0)\n        return\n\n#    if d.isSimpleType(d.templateArgument(value.type, 0)):\n#        d.putValue(\"{} @0x{:h}\".format(d.simpleValue(i.dereference()), d.pointerValue(i)))\n#    else:\n#        d.putValue(\"@0x{:h}\" % d.pointerValue(i))\n    #d.putValue(\"@0x{0:h}\".format(int(i)))\n    #d.putAddress(i.dereference().address)\n    d.putValue(\"@x{0:x}\".format(int(i)))\n    d.putItem(i)\n    d.putNumChild(3)\n    if d.isExpanded():\n        with Children(d, 3):\n#            d.putSubItem(\"data\", i)\n            refcount = i[\"refCount_\"]\n            d.putSubItem(\"refs_\", refcount[\"refs_\"])\n            d.putSubItem(\"weakRefs_\", refcount[\"weakRefs_\"])\n\n\ndef qdump__Urho3D__HashMap(d, value):\n    keyType = d.templateArgument(value.type, 0)\n    valueType = d.templateArgument(value.type, 1)\n    ptrs = value[\"ptrs_\"]\n    ptrsVal = ptrs.pointer()\n    szTypeP = d.lookupType(\"unsigned*\")\n    size = 0\n    numBuckets = 0\n    #d.putAddress(value.address())\n    #innerType = d.templateArgument(value.type, 0)\n    #p = array.cast(innerType.pointer())\n    #d.putNumChild(size.integer())\n    \n    if ptrsVal:\n        sizeValue = ptrs.cast(szTypeP).dereference()\n        size = sizeValue.integer()\n        numBuckets = (ptrs.cast(szTypeP) + 1).dereference().integer()\n        d.putValue('\u0026lt;{0}\u0026gt; in {1} buckets @{2:x}'.format(size,numBuckets,ptrsVal))\n    else:\n        d.putValue('empty @{:x}'.format(ptrsVal))\n    \n    d.putNumChild(size)\n    if d.isExpanded():\n        with Children(d):\n            try:\n                #with SubItem(d, \"data\"):\n                    #d.putValue('\u0026lt;{!s}\u0026gt; items @0x{!s}'.format(ptrs, szTypeP).replace(\"'\",\"$\").replace('\"','|'))\n                #with SubItem(d, \"address?\"):\n                    #d.putValue('@0x{:x}'.format(ptrsVal))\n                #d.putSubItem(\"{!s}\".format(ptrsVal).replace(\"'\",\"$\").replace('\"','|'),ptrs)\n                innerType = d.templateArgument(value.type, 0)\n                n = int(size)\n                p = value[\"head_\"]\n                innerType = d.lookupType(value.type.name + \"::Node\")\n                for i in range(n):\n                    pair = d.createValue(p.pointer(), innerType)[\"pair_\"]\n                    #d.putSubItem(\"{!s}\".format(pair).replace(\"'\",\"$\").replace('\"','|'),sizeValue)\n                    d.putSubItem(\"[{}]\".format(i),pair)\n                    #with SubItem(d, str(i)):\n                        #d.putType(innerType.name)\n                        #d.putType('double')\n                        #d.putValue(\"{!s}\".format(pair).replace(\"'\",\"$\").replace('\"','|'))\n                        #d.putValue(d.hexencode(str(innerType.name)).format(pair).replace(\"'\",\"$\").replace('\"','|'))\n                        #d.putNumChild(0)\n                    #with SubItem(d, str(i-10)):\n                        #d.putType('double')\n                        #d.putValue(\"{!s}\".format(innerType).replace(\"'\",\"$\").replace('\"','|'))\n                        #d.putNumChild(1)\n                    #with SubItem(d, str(i-100)):\n                        #d.putType('double')\n                        #d.putValue(\"{!s}\".format(innerType.name).replace(\"'\",\"$\").replace('\"','|'))\n                        #d.putNumChild(1)\n                    #d.putSubItem(\"{!s}\".format(ptrsVal).replace(\"'\",\"$\").replace('\"','|'),ptrs)\n                    #d.putSubItem(\"[%s]\" % i, )\n                    p = p[\"next_\"]\n            except Exception as e:\n                #d.put('value=\"\u0026lt;invalid\u0026gt;\",type=\"\u0026lt;unknown\u0026gt;\",numchild=\"0\",')\n                d.putSubItem(\"EXCEPTION! {!s}\".format(e).replace(\"'\",\"$\").replace('\"','|'),ptrs)\n\ndef qdump_old__Urho3D__HashMap(d,value):\n    try:\n        keyType = d.templateArgument(value.type, 0)\n        valueType = d.templateArgument(value.type, 1)\n        ptrs = value[\"ptrs_\"]\n        szTypeP = d.lookupType(\"unsigned*\")\n        size = 0\n        numBuckets = 0\n        d.putAddress(value.address)\n        if ptrs:\n            size = ptrs.cast(szTypeP).dereference()\n            numBuckets = (ptrs.cast(szTypeP) + 1).dereference()\n        if ptrs:\n            d.putValue('[{0}] in {1} @{2}'.format(size,numBuckets,str(ptrs)))\n        else:\n            d.putValue('empty @{2}'.format(size,numBuckets,str(ptrs)))\n            \n        p = value[\"head_\"]\n        end = value[\"tail_\"]\n        d.putItemCount(size.integer())\n        \n        \n        innerType = d.templateArgument(value.type, 0)\n        n = int(size)\n        p = value[\"head_\"]\n        innerType = d.lookupType(value.type.name + \"::Node\")\n        if d.isExpanded():\n            with Children(d, n):\n                p = value[\"head_\"]\n                for i in range(n):\n                    d.putSubItem(\"%s\" % i, d.createValue(d.pointerValue(p), innerType)[\"pair_\"])\n                    p = p[\"next_\"]\n    \n    except Exception as e:\n        d.putNumChild(10)\n        if d.isExpanded():\n            #d.putPlotData(p, size, innerType)\n            with Children(d):\n                #d.put('value=\"\u0026lt;invalid\u0026gt;\",type=\"\u0026lt;unknown\u0026gt;\",numchild=\"0\",')\n                with SubItem(d,'exception'):\n                    d.putField(\"EXCEPTION! {!s}\".format(e).replace(\"'\",\"$\").replace('\"','|'))\n                    d.putType('unsigned')\n                    d.putValue('error')\n\n                \n\n# https://doc.qt.io/qtcreator/creator-debugging-helpers.html\n# def qdump__MapNode(d, value):\n#    d.putValue(\"This is the value column contents\")\n#    d.putNumChild(2)\n#    if d.isExpanded():\n#        with Children(d):\n#            # Compact simple case.\n#            d.putSubItem(\"key\", value[\"key\"])\n#            # Same effect, with more customization possibilities.\n#            with SubItem(d, \"data\")\n#                d.putItem(\"data\", value[\"data\"])\n\ndef generic_numeric_vector(d, value, dirs, bounds_fmt='\u0026lt;{}\u0026gt;', number_fmt='{}'):\n    names = [\"%s_\"%x for x in dirs]\n    vals = [number_fmt.format(value[n].value()) for n in names]\n    d.putValue(bounds_fmt.format(', '.join(vals)))\n    d.putNumChild(len(names))\n    if d.isExpanded():\n        with Children(d):\n            for n in names:\n                d.putSubItem(n,value[n])\n#    x,y,z = [value[\"%s_\"%x] for x in 'xyz']\n#    d.putValue('\u0026lt;{},{},{}\u0026gt;'.format(x,y,z))\n#    d.putNumChild(3)\n#    if d.isExpanded():\n#        with Children(d):\n#            for x in 'xyz':\n#                d.putSubItem(\"%s_\"%x,value['%s_'%x])\n    #TODO: maybe add a length faked child member or such\n    \ndef qdump__Urho3D__IntVector2(d, value):\n    generic_numeric_vector(d,value,'xy')\n    \ndef qdump__Urho3D__Vector2(d, value):\n    generic_numeric_vector(d,value,'xy')\n    \ndef qdump__Urho3D__IntVector3(d, value):\n    generic_numeric_vector(d,value,'xyz')\n    \ndef qdump__Urho3D__Vector3(d, value):\n    generic_numeric_vector(d,value,'xyz')\n\ndef qdump__Urho3D__Vector4(d, value):\n    generic_numeric_vector(d,value,'xyzw')\n    \ndef qdump__Urho3D__Quaternion(d, value):\n    generic_numeric_vector(d,value,'wxyz','({})')\n    \n\ndef qdump__Urho3D__Color(d, value):\n    generic_numeric_vector(d,value,'rgba','rgba({})')\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eFor reference, I am using\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003eQt Creator 4.11.0\nBased on Qt 5.12.8 (GCC 9.3.0, 64 bit)\n\nGNU gdb (Ubuntu 9.1-0ubuntu1) 9.1\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e\u003cstrong\u003eEdit\u003c/strong\u003e: Got a half-way finished dumper for Urho3D::Variant finished:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003edef qdump__Urho3D__Variant(d, value):\n    \n    types = [\n        'VAR_NONE',\n        'VAR_INT',\n        'VAR_BOOL',\n        'VAR_FLOAT',\n        'VAR_VECTOR2',\n        'VAR_VECTOR3',\n        'VAR_VECTOR4',\n        'VAR_QUATERNION',\n        'VAR_COLOR',\n        'VAR_STRING',\n        'VAR_BUFFER',\n        'VAR_VOIDPTR',\n        'VAR_RESOURCEREF',\n        'VAR_RESOURCEREFLIST',\n        'VAR_VARIANTVECTOR',\n        'VAR_VARIANTMAP',\n        'VAR_INTRECT',\n        'VAR_INTVECTOR2',\n        'VAR_PTR',\n        'VAR_MATRIX3',\n        'VAR_MATRIX3X4',\n        'VAR_MATRIX4',\n        'VAR_DOUBLE',\n        'VAR_STRINGVECTOR',\n        'VAR_RECT',\n        'VAR_INTVECTOR3',\n        'VAR_INT64',\n        'VAR_CUSTOM_HEAP',\n        'VAR_CUSTOM_STACK',\n        'MAX_VAR_TYPES'\n    ]\n    \n    try:\n        import struct\n        \n        t = value[\"type_\"]\n        i = int(t)\n        #type_str = str(t)\n        type_str = 'Urho3D::' + types[t.integer()]\n        if type_str == \"Urho3D::VAR_NONE\":\n            d.putNumChild(0)\n            d.putValue(\"NONE\")\n        elif type_str == \"Urho3D::VAR_INT\":\n            d.putNumChild(0)\n            d.putValue(\"int {}\".format(value[\"value_\"][\"int_\"].integer()))\n        elif type_str == \"Urho3D::VAR_BOOL\":\n            d.putNumChild(0)\n            if value[\"value_\"][\"bool_\"].integer():\n                d.putValue(\"(bool) true\")\n            else:\n                d.putValue(\"(bool) false\")\n        elif type_str == \"Urho3D::VAR_FLOAT\":\n            d.putNumChild(0)\n            data = value[\"value_\"][\"float_\"].data()\n            #sz = data.tobytes() # data.format\n            #d.putValue(\"float {} tp {} sz {}\".format(type(data),sz,data))\n            (val,) = struct.unpack('f',data)\n            d.putValue(\"float {:g}\".format(val))\n        elif type_str == \"Urho3D::VAR_DOUBLE\":\n            #d.putNumChild(0)\n            #data = value[\"value_\"][\"double_\"].data()\n            #(val,) = struct.unpack('d',data)\n            #d.putValue(\"double {:g}\".format(val))\n            d.putItem(value[\"value_\"][\"double_\"])\n            d.putBetterType('Variant:double')\n        elif type_str == \"Urho3D::VAR_VECTOR2\":\n            d.putItem(value[\"value_\"][\"vector2_\"])\n            d.putType(\"Variant:Vector2\")\n        elif type_str == \"Urho3D::VAR_VECTOR3\":\n            d.putItem(value[\"value_\"][\"vector3_\"])\n            d.putType(\"Variant:Vector3\")\n        elif type_str == \"Urho3D::VAR_VECTOR4\":\n            d.putItem(value[\"value_\"][\"vector4_\"])\n            d.putType(\"Variant:Vector4\")\n        elif type_str == \"Urho3D::VAR_QUATERNION\":\n            d.putItem(value[\"value_\"][\"quaternion_\"])\n            d.putType(\"Variant:Quaternion\")\n        elif type_str == \"Urho3D::VAR_INTVECTOR2\":\n            d.putItem(value[\"value_\"][\"intVector2_\"])\n            d.putType(\"Variant:IntVector2\")\n        elif type_str == \"Urho3D::VAR_INTVECTOR3\":\n            d.putItem(value[\"value_\"][\"intVector3_\"])\n            d.putType(\"Variant:IntVector3\")\n        elif type_str == \"Urho3D::VAR_COLOR\":\n            d.putItem(value[\"value_\"][\"color_\"])\n            d.putType(\"Variant:Color\")\n        elif type_str == \"Urho3D::VAR_STRING\":\n            d.putItem(value[\"value_\"][\"string_\"])\n            d.putType(\"Variant:String\")\n        elif type_str == \"Urho3D::VAR_MATRIX3\":\n            d.putItem(value[\"value_\"][\"matrix3_\"])\n            d.putType(\"Variant:Matrix3\")\n        elif type_str == \"Urho3D::VAR_MATRIX3X4\":\n            val = value[\"value_\"][\"matrix3x4_\"]\n            d.putItem(val)\n            d.putBetterType(val.type.name.replace('Urho3D:','Variant'))\n        elif type_str == \"Urho3D::VAR_MATRIX4\":\n            val = value[\"value_\"][\"matrix4_\"]\n            d.putItem(val)\n            d.putBetterType(val.type.name.replace('Urho3D:','Variant'))\n        else:\n            d.putValue(\"{} int({})\".format(type_str,t.integer()))\n    except Exception as e:\n        d.putValue(\"EXCEPTION! {!s}\".format(e).replace(\"'\",\"$\").replace('\"','|'))\n        \n    return\n\u003c/code\u003e\u003c/pre\u003e","post_number":8,"post_type":1,"updated_at":"2020-07-08T20:38:10.364Z","reply_count":0,"reply_to_post_number":7,"quote_count":0,"incoming_link_count":2,"reads":15,"readers_count":14,"score":28.0,"yours":false,"topic_id":2849,"topic_slug":"qtcreator-debugging-helper","display_username":"SirNate0","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":2,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"reply_to_user":{"username":"Modanung","name":"魔大农 𝞍𝞎𝝳 現招蜍","avatar_template":"/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png"},"bookmarked":false,"actions_summary":[{"id":2,"count":1}],"moderator":false,"admin":false,"staff":false,"user_id":628,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false}],"stream":[16365,16366,16425,32908,32910,32911,32912,38131]},"timeline_lookup":[[1,2090],[3,2087],[4,1191],[6,1190],[8,868]],"suggested_topics":[{"id":7138,"title":"Build fails (linking phase) on Linux","fancy_title":"Build fails (linking phase) on Linux","slug":"build-fails-linking-phase-on-linux","posts_count":4,"reply_count":0,"highest_post_number":4,"image_url":null,"created_at":"2022-01-20T03:08:29.663Z","last_posted_at":"2022-01-21T15:27:41.192Z","bumped":true,"bumped_at":"2022-01-21T15:27:41.192Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":3,"views":178,"category_id":10,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":null,"description":"Original Poster","user":{"id":1502,"username":"jasperry","name":"Jason Perry","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/j/5fc32e/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":1038,"username":"dertom","name":"Thomas Trocha","avatar_template":"/user_avatar/discourse.urho3d.io/dertom/{size}/1815_2.png"}},{"extras":"latest","description":"Most Recent Poster","user":{"id":1304,"username":"lebrewer","name":"lebrewer","avatar_template":"/user_avatar/discourse.urho3d.io/lebrewer/{size}/2811_2.png"}}]},{"id":7193,"title":"Can Z-Axis Feasibly be \"Up\"?","fancy_title":"Can Z-Axis Feasibly be \u0026ldquo;Up\u0026rdquo;?","slug":"can-z-axis-feasibly-be-up","posts_count":4,"reply_count":2,"highest_post_number":4,"image_url":null,"created_at":"2022-02-14T05:17:28.054Z","last_posted_at":"2022-02-14T07:26:53.817Z","bumped":true,"bumped_at":"2022-02-14T07:26:53.817Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":1,"views":161,"category_id":10,"featured_link":null,"has_accepted_answer":true,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":1334,"username":"najak3d","name":"Brian Knox","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/n/6a8cbe/{size}.png"}},{"extras":null,"description":"Frequent Poster, Accepted Answer","user":{"id":484,"username":"Eugene","name":"Eugene Kozlov","avatar_template":"/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png"}}]},{"id":7200,"title":"Urho3D just building if I check \"use SHARED libraries\"","fancy_title":"Urho3D just building if I check \u0026ldquo;use SHARED libraries\u0026rdquo;","slug":"urho3d-just-building-if-i-check-use-shared-libraries","posts_count":8,"reply_count":3,"highest_post_number":8,"image_url":null,"created_at":"2022-02-22T20:02:48.835Z","last_posted_at":"2022-02-23T15:38:33.698Z","bumped":true,"bumped_at":"2022-02-23T15:54:07.879Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":4,"views":165,"category_id":10,"featured_link":null,"has_accepted_answer":true,"posters":[{"extras":null,"description":"Original Poster","user":{"id":1508,"username":"killinbassou","name":"killin","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/k/848f3c/{size}.png"}},{"extras":null,"description":"Frequent Poster, Accepted Answer","user":{"id":628,"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}},{"extras":"latest","description":"Most Recent Poster","user":{"id":4,"username":"weitjong","name":"Yao Wei Tjong","avatar_template":"/user_avatar/discourse.urho3d.io/weitjong/{size}/4_2.png"}}]},{"id":7243,"title":"Android compile fails","fancy_title":"Android compile fails","slug":"android-compile-fails","posts_count":5,"reply_count":2,"highest_post_number":5,"image_url":null,"created_at":"2022-04-25T08:46:07.947Z","last_posted_at":"2022-05-06T08:22:51.592Z","bumped":true,"bumped_at":"2022-05-06T08:22:51.592Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":0,"views":181,"category_id":10,"featured_link":null,"has_accepted_answer":true,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":856,"username":"feresmu","name":null,"avatar_template":"https://avatars.discourse-cdn.com/v4/letter/f/f08c70/{size}.png"}},{"extras":null,"description":"Frequent Poster, Accepted Answer","user":{"id":4,"username":"weitjong","name":"Yao Wei Tjong","avatar_template":"/user_avatar/discourse.urho3d.io/weitjong/{size}/4_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":628,"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}}]},{"id":7254,"title":"Android :android:urho3d-lib:generateJsonModelDebug failed task","fancy_title":"Android :android:urho3d-lib:generateJsonModelDebug failed task","slug":"android-urho3d-lib-generatejsonmodeldebug-failed-task","posts_count":14,"reply_count":8,"highest_post_number":14,"image_url":null,"created_at":"2022-05-07T08:16:09.637Z","last_posted_at":"2022-08-31T13:37:02.824Z","bumped":true,"bumped_at":"2022-08-31T13:37:02.824Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"unicode_title":"Android :android:urho3d-lib:generateJsonModelDebug failed task","tags_descriptions":{},"like_count":2,"views":344,"category_id":10,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":null,"description":"Original Poster","user":{"id":1518,"username":"Joshua-PotatoMan","name":"Joshua","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/j/e9c0ed/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":1522,"username":"tungts1101","name":"tungts1101","avatar_template":"/user_avatar/discourse.urho3d.io/tungts1101/{size}/3803_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":809,"username":"elix22","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/elix22/{size}/1437_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":263,"username":"1vanK","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/1vank/{size}/768_2.png"}},{"extras":"latest","description":"Most Recent Poster","user":{"id":628,"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}}]}],"tags_descriptions":{},"id":2849,"title":"QtCreator Debugging Helper","fancy_title":"QtCreator Debugging Helper","posts_count":8,"created_at":"2017-03-04T14:52:17.095Z","views":1316,"reply_count":4,"like_count":5,"last_posted_at":"2020-07-07T18:27:03.743Z","visible":true,"closed":false,"archived":false,"has_summary":false,"archetype":"regular","slug":"qtcreator-debugging-helper","category_id":10,"word_count":3821,"deleted_at":null,"user_id":628,"featured_link":null,"pinned_globally":false,"pinned_at":null,"pinned_until":null,"image_url":null,"slow_mode_seconds":0,"draft":null,"draft_key":"topic_2849","draft_sequence":null,"unpinned":null,"pinned":false,"current_post_number":1,"highest_post_number":8,"deleted_by":null,"actions_summary":[{"id":4,"count":0,"hidden":false,"can_act":false},{"id":8,"count":0,"hidden":false,"can_act":false},{"id":7,"count":0,"hidden":false,"can_act":false}],"chunk_size":20,"bookmarked":false,"bookmarks":[],"topic_timer":null,"message_bus_last_id":0,"participant_count":3,"show_read_indicator":false,"thumbnails":null,"slow_mode_enabled_until":null,"tags_disable_ads":false,"details":{"can_edit":false,"notification_level":1,"participants":[{"id":628,"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png","post_count":5,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"trust_level":2},{"id":192,"username":"Modanung","name":"魔大农 𝞍𝞎𝝳 現招蜍","avatar_template":"/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png","post_count":2,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"trust_level":0},{"id":484,"username":"Eugene","name":"Eugene Kozlov","avatar_template":"/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png","post_count":1,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"trust_level":2}],"created_by":{"id":628,"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"},"last_poster":{"id":628,"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}}}