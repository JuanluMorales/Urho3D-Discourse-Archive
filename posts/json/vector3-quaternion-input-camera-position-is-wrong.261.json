{"post_stream":{"posts":[{"id":1409,"name":"","username":"umen","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/u/ec9cab/{size}.png","created_at":"2014-05-18T10:41:22.000Z","cooked":"\u003cp\u003eHey all\u003cbr\u003e\ni have some strange Behavior or its that way the engine Behave and i need to understand it . i dont know …\u003cbr\u003e\nthis is what i have ,\u003cbr\u003e\nin the Editor i have 3d object that is placed in:\u003cbr\u003e\nposition : 0,0,0\u003cbr\u003e\nrotation :0,0,0\u003c/p\u003e\n\u003cp\u003eCamera placed in :\u003cbr\u003e\nposition :-10.9983f, 4.51806f, -0.278656f\u003cbr\u003e\nrotation :26.7558, 85.3758,-2.08535\u003c/p\u003e\n\u003cp\u003ebasically camera is looking at the 3d object a little bit above the object .\u003cbr\u003e\nhere is the image attached:\u003cbr\u003e\n\u003ca href=\"http://i.imgur.com/sRDbuJZ.png\" data-bbcode=\"true\" rel=\"nofollow noopener\"\u003ehttp://i.imgur.com/sRDbuJZ.png\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003enow in code i translate it to this:\u003c/p\u003e\n\u003cp\u003e[code]//3d object\u003cbr\u003e\nNode* objectNode = scene_-\u0026gt;CreateChild(“AirCraft”);\u003cbr\u003e\nobjectNode-\u0026gt;SetPosition(Vector3(0.0f, 0.0f, 0.0f));\u003cbr\u003e\nAnimatedModel* object = objectNode-\u0026gt;CreateComponent();\u003cbr\u003e\nobject-\u0026gt;SetModel(cache-\u0026gt;GetResource(“Models/AirCraft.mdl”));\u003cbr\u003e\nobject-\u0026gt;SetMaterial(cache-\u0026gt;GetResource(“Materials/AirCraftMaterial.xml”));\u003cbr\u003e\nobject-\u0026gt;SetCastShadows(true);\u003cbr\u003e\nobjectNode-\u0026gt;CreateComponent();\u003cbr\u003e\n//camera\u003cbr\u003e\ncameraNode_ = scene_-\u0026gt;CreateChild(“Camera”);\u003cbr\u003e\ncameraNode_-\u0026gt;CreateComponent();\u003cbr\u003e\ncameraNode_-\u0026gt;SetPosition(Vector3(-10.9983f, 4.51806f, -0.278656f));\u003cbr\u003e\ncameraNode_-\u0026gt;SetRotation(Quaternion(26.7558, 85.3758,-2.08535));\u003c/p\u003e\n\u003cp\u003e[/code]\u003c/p\u003e\n\u003cp\u003ewhen i compile and run the code , the camera is looking in the opposite direction\u003cbr\u003e\ni know this by the logging the values of the camera  .\u003cbr\u003e\nwhen i print the camera position i get :\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e Quaternion cameraQuaternion =   cameraNode_-\u0026gt;GetRotation();\n    Vector3 cameraVec3 = cameraNode_-\u0026gt;GetPosition();\n    LOGERRORF(\"  v3-x: %d v3-y: %d v3-z: %d, Q-x: %d Q-y: %d Q-z: %d\",cameraVec3.x_,cameraVec3.y_,cameraVec3.z_,cameraQuaternion.x_,cameraQuaternion.y_,cameraQuaternion.z_ );\n\u003c/code\u003e\u003cbr\u003e\nthis is the result :\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003e\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003ei have 2 questions :\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003ewhy the Quaternion  values seams to be right  ? but the camera is looking at the opposite direction\u003c/li\u003e\n\u003cli\u003ewhy  the values i print are large values and not the one i set in the start ?\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003ehere is all the code mybe something is wrong there .\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003e// Expands to this example's entry-point\nDEFINE_APPLICATION_MAIN(HelloWorld)\n\nHelloWorld::HelloWorld(Context* context) :\n    Sample(context)\n{\n}\n\nvoid HelloWorld::Start()\n{\n    // Execute base class startup\n    Sample::Start();\n\n    cache = GetSubsystem\u0026lt;ResourceCache\u0026gt;();\n    CreateScene();\n    createAirCraft();\n    // Create the UI content\n    SetupViewport();\n\n    // Finally subscribe to the update event. Note that by subscribing events at this point we have already missed some events\n    // like the ScreenMode event sent by the Graphics subsystem when opening the application window. To catch those as well we\n    // could subscribe in the constructor instead.\n    SubscribeToEvents();\n\n    Quaternion cameraQuaternion =   cameraNode_-\u0026gt;GetRotation();\n    Vector3 cameraVec3 = cameraNode_-\u0026gt;GetPosition();\n    LOGERRORF(\"Start() v3-x: %d v3-y: %d v3-z: %d, Q-x: %d Q-y: %d Q-z: %d\",cameraVec3.x_,cameraVec3.y_,cameraVec3.z_,cameraQuaternion.x_,cameraQuaternion.y_,cameraQuaternion.z_ );\n}\n\n \n\nvoid HelloWorld::CreateScene()\n{\n   \n\n    scene_ = new Scene(context_);\n\n    // Create the Octree component to the scene. This is required before adding any drawable components, or else nothing will\n    // show up. The default octree volume will be from (-1000, -1000, -1000) to (1000, 1000, 1000) in world coordinates; it\n    // is also legal to place objects outside the volume but their visibility can then not be checked in a hierarchically\n    // optimizing manner\n    scene_-\u0026gt;CreateComponent\u0026lt;Octree\u0026gt;();\n\n\n\n\n    // Create static scene content. First create a zone for ambient lighting and fog control\n    Node* zoneNode = scene_-\u0026gt;CreateChild(\"Zone\");\n    Zone* zone = zoneNode-\u0026gt;CreateComponent\u0026lt;Zone\u0026gt;();\n    zone-\u0026gt;SetAmbientColor(Color(0.15f, 0.15f, 0.15f));\n    zone-\u0026gt;SetFogColor(Color(0.5f, 0.5f, 0.7f));\n    zone-\u0026gt;SetFogStart(100.0f);\n    zone-\u0026gt;SetFogEnd(300.0f);\n    zone-\u0026gt;SetBoundingBox(BoundingBox(-1000.0f, 1000.0f));\n\n\n   \n    // Create a directional light to the world so that we can see something. The light scene node's orientation controls the\n    // light direction; we will use the SetDirection() function which calculates the orientation from a forward direction vector.\n    // The light will use default settings (white light, no shadows)\n    Node* lightNode = scene_-\u0026gt;CreateChild(\"DirectionalLight\");\n    lightNode-\u0026gt;SetDirection(Vector3(0.6f, -1.0f, 0.8f)); // The direction vector does not need to be normalized\n    Light* light = lightNode-\u0026gt;CreateComponent\u0026lt;Light\u0026gt;();\n    light-\u0026gt;SetLightType(LIGHT_DIRECTIONAL);\n    light-\u0026gt;SetCastShadows(true);\n    light-\u0026gt;SetShadowBias(BiasParameters(0.00025f, 0.5f));\n    light-\u0026gt;SetShadowCascade(CascadeParameters(10.0f, 50.0f, 200.0f, 0.0f, 0.8f));\n    light-\u0026gt;SetSpecularIntensity(0.5f);\n\n     \n    // Create a scene node for the camera, which we will move around\n    // The camera will use default settings (1000 far clip distance, 45 degrees FOV, set aspect ratio automatically)\n    cameraNode_ = scene_-\u0026gt;CreateChild(\"Camera\");\n    cameraNode_-\u0026gt;CreateComponent\u0026lt;Camera\u0026gt;();\n    // Set an initial position for the camera scene node above the plane\n    cameraNode_-\u0026gt;SetPosition(Vector3(-10.9983f, 4.51806f, -0.278656f));\n    cameraNode_-\u0026gt;SetRotation(Quaternion(26.7558, 85.3758,-2.08535));\n\n\n    \n    Quaternion cameraQuaternion =   cameraNode_-\u0026gt;GetRotation();\n    Vector3 cameraVec3 = cameraNode_-\u0026gt;GetPosition();\n    LOGERRORF(\"CreateScene() v3-x: %d v3-y: %d v3-z: %d, Q-x: %d Q-y: %d Q-z: %d\",cameraVec3.x_,\n                                                                                    cameraVec3.y_,\n                                                                                    cameraVec3.z_,\n                                                                                    cameraQuaternion.x_,\n                                                                                    cameraQuaternion.y_,\n                                                                                    cameraQuaternion.z_ );\n\n    \n}\n\n\nvoid HelloWorld::createPlan()\n{\n     // Create a child scene node (at world origin) and a StaticModel component into it. Set the StaticModel to show a simple\n    // plane mesh with a \"stone\" material. Note that naming the scene nodes is optional. Scale the scene node larger\n    // (100 x 100 world units)\n    Node* planeNode = scene_-\u0026gt;CreateChild(\"Plane\");\n    //planeNode-\u0026gt;SetScale(Vector3(100.0f, 1.0f, 100.0f));\n    planeNode-\u0026gt;SetScale(Vector3(100.0f, 1.0f, 100.0f));\n    StaticModel* planeObject = planeNode-\u0026gt;CreateComponent\u0026lt;StaticModel\u0026gt;();\n    planeObject-\u0026gt;SetModel(cache-\u0026gt;GetResource\u0026lt;Model\u0026gt;(\"Models/GroundPlane.mdl\"));\n    planeObject-\u0026gt;SetMaterial(0,cache-\u0026gt;GetResource\u0026lt;Material\u0026gt;(\"Materials/Ground_Material.xml\"));\n    planeObject-\u0026gt;SetMaterial(1,cache-\u0026gt;GetResource\u0026lt;Material\u0026gt;(\"Materials/Mountain_Material.xml\"));\n    planeObject-\u0026gt;SetCastShadows(true);\n}\n\nvoid HelloWorld::createAirCraft()\n{\n     \n\n    Node* objectNode = scene_-\u0026gt;CreateChild(\"AirCraft\");\n    objectNode-\u0026gt;SetPosition(Vector3(0.0f, 0.0f, 0.0f));\n\n    // Create the rendering component + animation controller\n    AnimatedModel* object = objectNode-\u0026gt;CreateComponent\u0026lt;AnimatedModel\u0026gt;();\n    object-\u0026gt;SetModel(cache-\u0026gt;GetResource\u0026lt;Model\u0026gt;(\"Models/AirCraft.mdl\"));\n    object-\u0026gt;SetMaterial(cache-\u0026gt;GetResource\u0026lt;Material\u0026gt;(\"Materials/AirCraftMaterial.xml\"));\n    object-\u0026gt;SetCastShadows(true);\n    objectNode-\u0026gt;CreateComponent\u0026lt;AnimationController\u0026gt;();\n\n     \n}\n\n\nvoid HelloWorld::SetupViewport()\n{\n    Renderer* renderer = GetSubsystem\u0026lt;Renderer\u0026gt;();\n\n    // Set up a viewport to the Renderer subsystem so that the 3D scene can be seen. We need to define the scene and the camera\n    // at minimum. Additionally we could configure the viewport screen size and the rendering path (eg. forward / deferred) to\n    // use, but now we just use full screen and default render path configured in the engine command line options\n    SharedPtr\u0026lt;Viewport\u0026gt; viewport(new Viewport(context_, scene_, cameraNode_-\u0026gt;GetComponent\u0026lt;Camera\u0026gt;()));\n    renderer-\u0026gt;SetViewport(0, viewport);\n}\n\nvoid HelloWorld::MoveCamera(float timeStep)\n{\n    // Do not move if the UI has a focused element (the console)\n    if (GetSubsystem\u0026lt;UI\u0026gt;()-\u0026gt;GetFocusElement())\n        return;\n\n    Input* input = GetSubsystem\u0026lt;Input\u0026gt;();\n\n    // Movement speed as world units per second\n    const float MOVE_SPEED = 20.0f;\n    // Mouse sensitivity as degrees per pixel\n    const float MOUSE_SENSITIVITY = 0.1f;\n\n    // Use this frame's mouse motion to adjust camera node yaw and pitch. Clamp the pitch between -90 and 90 degrees\n    IntVector2 mouseMove = input-\u0026gt;GetMouseMove();\n    yaw_ += MOUSE_SENSITIVITY * mouseMove.x_;\n    pitch_ += MOUSE_SENSITIVITY * mouseMove.y_;\n    pitch_ = Clamp(pitch_, -90.0f, 90.0f);\n\n    // Construct new orientation for the camera scene node from yaw and pitch. Roll is fixed to zero\n    cameraNode_-\u0026gt;SetRotation(Quaternion(pitch_, yaw_, 0.0f));\n\n    // Read WASD keys and move the camera scene node to the corresponding direction if they are pressed\n    // Use the Translate() function (default local space) to move relative to the node's orientation.\n    if (input-\u0026gt;GetKeyDown('W'))\n        cameraNode_-\u0026gt;Translate(Vector3::FORWARD * MOVE_SPEED * timeStep);\n    if (input-\u0026gt;GetKeyDown('S'))\n        cameraNode_-\u0026gt;Translate(Vector3::BACK * MOVE_SPEED * timeStep);\n    if (input-\u0026gt;GetKeyDown('A'))\n        cameraNode_-\u0026gt;Translate(Vector3::LEFT * MOVE_SPEED * timeStep);\n    if (input-\u0026gt;GetKeyDown('D'))\n        cameraNode_-\u0026gt;Translate(Vector3::RIGHT * MOVE_SPEED * timeStep);\n    if (input-\u0026gt;GetKeyDown('P'))\n    {\n        Quaternion cameraQuaternion =   cameraNode_-\u0026gt;GetRotation();\n        Vector3 cameraVec3 = cameraNode_-\u0026gt;GetPosition();\n        LOGERRORF(\"MoveCamera() v3-x: %d v3-y: %d v3-z: %d, Q-x: %d Q-y: %d Q-z: %d\",cameraVec3.x_,\n                                                                                    cameraVec3.y_,\n                                                                                    cameraVec3.z_,\n                                                                                    cameraQuaternion.x_,\n                                                                                    cameraQuaternion.y_,\n                                                                                   cameraQuaternion.z_ );\n    }\n        \n}\nvoid HelloWorld::SubscribeToEvents()\n{\n    // Subscribe HandleUpdate() function for processing update events\n    SubscribeToEvent(E_UPDATE, HANDLER(HelloWorld, HandleUpdate));\n}\n\nvoid HelloWorld::HandleUpdate(StringHash eventType, VariantMap\u0026amp; eventData)\n{\n    using namespace Update;\n\n    // Take the frame time step, which is stored as a float\n    float timeStep = eventData[P_TIMESTEP].GetFloat();\n\n    // Move the camera, scale movement with time step\n    MoveCamera(timeStep);\n}\u003c/code\u003e\u003c/pre\u003e","post_number":1,"post_type":1,"updated_at":"2017-01-02T00:59:12.964Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":21,"reads":7,"readers_count":6,"score":106.4,"yours":false,"topic_id":261,"topic_slug":"vector3-quaternion-input-camera-position-is-wrong","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"link_counts":[{"url":"http://i.imgur.com/sRDbuJZ.png","internal":false,"reflection":false,"title":"sRDbuJZ.png","clicks":5}],"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":79,"hidden":false,"trust_level":1,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false}],"stream":[1409]},"timeline_lookup":[[1,3111]],"suggested_topics":[{"id":7193,"title":"Can Z-Axis Feasibly be \"Up\"?","fancy_title":"Can Z-Axis Feasibly be \u0026ldquo;Up\u0026rdquo;?","slug":"can-z-axis-feasibly-be-up","posts_count":4,"reply_count":2,"highest_post_number":4,"image_url":null,"created_at":"2022-02-14T05:17:28.054Z","last_posted_at":"2022-02-14T07:26:53.817Z","bumped":true,"bumped_at":"2022-02-14T07:26:53.817Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":1,"views":161,"category_id":10,"featured_link":null,"has_accepted_answer":true,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":1334,"username":"najak3d","name":"Brian Knox","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/n/6a8cbe/{size}.png"}},{"extras":null,"description":"Frequent Poster, Accepted Answer","user":{"id":484,"username":"Eugene","name":"Eugene Kozlov","avatar_template":"/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png"}}]},{"id":7176,"title":"Orthographic scene slowing down when zooming out","fancy_title":"Orthographic scene slowing down when zooming out","slug":"orthographic-scene-slowing-down-when-zooming-out","posts_count":1,"reply_count":0,"highest_post_number":1,"image_url":null,"created_at":"2022-01-30T10:05:50.218Z","last_posted_at":"2022-01-30T10:05:50.294Z","bumped":true,"bumped_at":"2022-01-30T10:05:50.294Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":0,"views":127,"category_id":10,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest single","description":"Original Poster, Most Recent Poster","user":{"id":1351,"username":"Haukinger","name":"Haukinger","avatar_template":"/user_avatar/discourse.urho3d.io/haukinger/{size}/3670_2.png"}}]},{"id":7177,"title":"Attaching a shader to a BorderImage","fancy_title":"Attaching a shader to a BorderImage","slug":"attaching-a-shader-to-a-borderimage","posts_count":4,"reply_count":1,"highest_post_number":4,"image_url":null,"created_at":"2022-01-31T17:49:50.734Z","last_posted_at":"2022-02-01T02:22:10.927Z","bumped":true,"bumped_at":"2022-02-01T02:22:10.927Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":0,"views":151,"category_id":10,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":null,"description":"Original Poster","user":{"id":1165,"username":"throwawayerino","name":"Actually Permanent","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/t/da6949/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":484,"username":"Eugene","name":"Eugene Kozlov","avatar_template":"/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png"}},{"extras":"latest","description":"Most Recent Poster","user":{"id":631,"username":"JTippetts1","name":"J Tippetts","avatar_template":"/user_avatar/discourse.urho3d.io/jtippetts1/{size}/96_2.png"}}]},{"id":7182,"title":"How install landscape in the format (.tor or .obj)?","fancy_title":"How install landscape in the format (.tor or .obj)?","slug":"how-install-landscape-in-the-format-tor-or-obj","posts_count":4,"reply_count":1,"highest_post_number":4,"image_url":null,"created_at":"2022-02-03T16:58:20.976Z","last_posted_at":"2022-02-04T16:34:09.663Z","bumped":true,"bumped_at":"2022-02-04T16:34:09.663Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":2,"views":151,"category_id":10,"featured_link":null,"has_accepted_answer":true,"posters":[{"extras":null,"description":"Original Poster","user":{"id":1497,"username":"timob256","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/t/b782af/{size}.png"}},{"extras":"latest","description":"Most Recent Poster, Accepted Answer","user":{"id":1317,"username":"Lys0gen","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/l/57b2e6/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":628,"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}}]},{"id":7204,"title":"How handle with multiple scenes?","fancy_title":"How handle with multiple scenes?","slug":"how-handle-with-multiple-scenes","posts_count":1,"reply_count":0,"highest_post_number":1,"image_url":null,"created_at":"2022-02-23T16:15:02.697Z","last_posted_at":"2022-02-23T16:15:02.762Z","bumped":true,"bumped_at":"2022-02-23T16:15:02.762Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":0,"views":131,"category_id":10,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest single","description":"Original Poster, Most Recent Poster","user":{"id":1508,"username":"killinbassou","name":"killin","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/k/848f3c/{size}.png"}}]}],"tags_descriptions":{},"id":261,"title":"Vector3,Quaternion input \u0026 camera position is wrong","fancy_title":"Vector3,Quaternion input \u0026amp; camera position is wrong","posts_count":1,"created_at":"2014-05-18T10:41:22.000Z","views":509,"reply_count":0,"like_count":0,"last_posted_at":"2014-05-18T10:41:22.000Z","visible":true,"closed":false,"archived":false,"has_summary":false,"archetype":"regular","slug":"vector3-quaternion-input-camera-position-is-wrong","category_id":10,"word_count":1300,"deleted_at":null,"user_id":79,"featured_link":null,"pinned_globally":false,"pinned_at":null,"pinned_until":null,"image_url":null,"slow_mode_seconds":0,"draft":null,"draft_key":"topic_261","draft_sequence":null,"unpinned":null,"pinned":false,"current_post_number":1,"highest_post_number":1,"deleted_by":null,"actions_summary":[{"id":4,"count":0,"hidden":false,"can_act":false},{"id":8,"count":0,"hidden":false,"can_act":false},{"id":7,"count":0,"hidden":false,"can_act":false}],"chunk_size":20,"bookmarked":false,"bookmarks":[],"topic_timer":null,"message_bus_last_id":0,"participant_count":1,"show_read_indicator":false,"thumbnails":null,"slow_mode_enabled_until":null,"tags_disable_ads":false,"details":{"can_edit":false,"notification_level":1,"participants":[{"id":79,"username":"umen","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/u/ec9cab/{size}.png","post_count":1,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"trust_level":1}],"created_by":{"id":79,"username":"umen","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/u/ec9cab/{size}.png"},"last_poster":{"id":79,"username":"umen","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/u/ec9cab/{size}.png"}}}