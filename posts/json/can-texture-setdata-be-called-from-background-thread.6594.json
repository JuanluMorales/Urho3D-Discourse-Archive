{"post_stream":{"posts":[{"id":41052,"name":"Brian Knox","username":"najak3d","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/n/6a8cbe/{size}.png","created_at":"2020-12-03T23:25:17.769Z","cooked":"\u003cp\u003eWe have a map application which loads Map Tiles 512x512 pixel on demand.   We load from disk on a background thread, but then Urho seems to demand that we do the “Texture.SetData(…)” on the Urho Update thread, which means that times spent on this method interrupts the Frame rate.\u003c/p\u003e\n\u003cp\u003eWe load up to 20 tiles at once.   When the user zooms out, we actually load NEW LOWER REZ tiles to fill in the space.   However, while those new tiles are loading, the user is stuck viewing the previous higher rez tiles.   If we don’t have LOD’s for these tiles, then the user sees “dither” (where pixels flicker madly because the image it’s trying to render is too high resolution, and LODS are needed).\u003c/p\u003e\n\u003cp\u003eSo to resolve this, we load the tiles with 3 LODs and that gets rid of the dither.\u003c/p\u003e\n\u003cp\u003eHowever, loading 3 LOD’s takes 1.2 msec per tile (on a PC, will be slower on mobile devices).  But if we only set 1 LOD (using SetData(x, y, fmt, (void*)dataPointer), it only takes 0.33 msec per tile (almost 4x faster).\u003c/p\u003e\n\u003cp\u003e20 tiles x 1.2 msec = 24 msec (on a PC).   For mobile devices, we expect this might be much slower (e.g. 3 msec/tile == 60 msec for 20 tiles).   And so this may cause a rendering hiccup, as we call “Texture.SetData()” for 3 LODs.\u003c/p\u003e\n\u003cp\u003e===\u003cbr\u003e\nIs there a way to call “Texture.SetData()” on a background thread without crashing Urho?  (when we’ve tried this, it often results in sporadic application crashes, sudden)   If we can call SetData on the background thread, safely, then we don’t have to be concerned about the rendering hiccup.\u003c/p\u003e\n\u003cp\u003eOur code looks like this:\u003c/p\u003e\n\u003cp\u003e_textture.SetNumLevels(3);\u003cbr\u003e\n…\u003cbr\u003e\nIntPtr pixelPtr = {points to the pixel buffer}\u003cbr\u003e\nUrho.Resources.Image img2 = Tile._cache.UtilityImage;  // we re-use this Image for each tile\u003cbr\u003e\nimg2.SetData((byte*)pixelPtr);  // First we send the Pixel Buffer to the Image.  Takes about 0.3 msec\u003cbr\u003e\n_texture.SetData(img2, false);  /// then we send the Image to the Texture.  This step takes the longest.  Takes about 1 msec\u003c/p\u003e","post_number":1,"post_type":1,"updated_at":"2020-12-03T23:26:15.584Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":2,"reads":29,"readers_count":28,"score":15.8,"yours":false,"topic_id":6594,"topic_slug":"can-texture-setdata-be-called-from-background-thread","display_username":"Brian Knox","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":1334,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":41056,"name":"Eugene Kozlov","username":"Eugene","avatar_template":"/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png","created_at":"2020-12-04T07:37:52.288Z","cooked":"\u003cp\u003eTL;DR: No, you cannot and it’s quite hard to change.\u003c/p\u003e\n\u003cp\u003eLonger answer: Unless you create multiple GAPI contexts, you cannot work with GAPI from different threads. You \u003cem\u003eprobably tecnhincally\u003c/em\u003e can manage multiple contexts and write GPU resource from background thread while using main thread, assuming you don’t read and write resource simultaneously from different threads, your platform and GAPI support this stuff and you don’t encounter any driver bugs on the way.\u003c/p\u003e\n\u003cp\u003eThe most common solution is to write data chunk by chunk: instead of uploading whole resource do it for small enough region. Bigger engines like Unity do it under the hood and have settings like “main thread resource upload quota”. Urho does not implement it on its own, but it’s not impossible.\u003c/p\u003e\n\u003cp\u003eI assume that you have this function exposed in C#:\u003cbr\u003e\n\u003c/p\u003e\u003caside class=\"onebox githubblob\"\u003e\n  \u003cheader class=\"source\"\u003e\n      \u003ca href=\"https://github.com/urho3d/Urho3D/blob/master/Source/Urho3D/Graphics/Texture2D.h#L65\" target=\"_blank\" rel=\"noopener nofollow ugc\"\u003egithub.com\u003c/a\u003e\n  \u003c/header\u003e\n  \u003carticle class=\"onebox-body\"\u003e\n    \u003ch4\u003e\u003ca href=\"https://github.com/urho3d/Urho3D/blob/master/Source/Urho3D/Graphics/Texture2D.h#L65\" target=\"_blank\" rel=\"noopener nofollow ugc\"\u003eurho3d/Urho3D/blob/master/Source/Urho3D/Graphics/Texture2D.h#L65\u003c/a\u003e\u003c/h4\u003e\n\u003cpre class=\"onebox\"\u003e\u003ccode class=\"lang-h\"\u003e\u003col class=\"start lines\" start=\"55\" style=\"counter-reset: li-counter 54 ;\"\u003e\n\u003cli\u003evoid OnDeviceReset() override;\n\u003c/li\u003e\u003cli\u003e/// Release the texture.\n\u003c/li\u003e\u003cli\u003evoid Release() override;\n\u003c/li\u003e\u003cli\u003e\n\u003c/li\u003e\u003cli\u003e/// Set size, format, usage and multisampling parameters for rendertargets. Zero size will follow application window size. Return true if successful.\n\u003c/li\u003e\u003cli\u003e/** Autoresolve true means the multisampled texture will be automatically resolved to 1-sample after being rendered to and before being sampled as a texture.\n\u003c/li\u003e\u003cli\u003e    Autoresolve false means the multisampled texture will be read as individual samples in the shader and is not supported on Direct3D9.\n\u003c/li\u003e\u003cli\u003e    */\n\u003c/li\u003e\u003cli\u003ebool SetSize(int width, int height, unsigned format, TextureUsage usage = TEXTURE_STATIC, int multiSample = 1, bool autoResolve = true);\n\u003c/li\u003e\u003cli\u003e/// Set data either partially or fully on a mip level. Return true if successful.\n\u003c/li\u003e\u003cli class=\"selected\"\u003ebool SetData(unsigned level, int x, int y, int width, int height, const void* data);\n\u003c/li\u003e\u003cli\u003e/// Set data from an image. Return true if successful. Optionally make a single channel image alpha-only.\n\u003c/li\u003e\u003cli\u003ebool SetData(Image* image, bool useAlpha = false);\n\u003c/li\u003e\u003cli\u003e\n\u003c/li\u003e\u003cli\u003e/// Get data from a mip level. The destination buffer must be big enough. Return true if successful.\n\u003c/li\u003e\u003cli\u003ebool GetData(unsigned level, void* dest) const;\n\u003c/li\u003e\u003cli\u003e/// Get image data from zero mip level. Only RGB and RGBA textures are supported.\n\u003c/li\u003e\u003cli\u003ebool GetImage(Image\u0026amp; image) const;\n\u003c/li\u003e\u003cli\u003e/// Get image data from zero mip level. Only RGB and RGBA textures are supported.\n\u003c/li\u003e\u003cli\u003eSharedPtr\u0026lt;Image\u0026gt; GetImage() const;\n\u003c/li\u003e\u003cli\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/article\u003e\n  \u003cdiv class=\"onebox-metadata\"\u003e\n    \n    \n  \u003c/div\u003e\n  \u003cdiv style=\"clear: both\"\u003e\u003c/div\u003e\n\u003c/aside\u003e\n\u003cbr\u003e\nIf you don’t… Well, my condolences.","post_number":2,"post_type":1,"updated_at":"2020-12-04T08:35:36.378Z","reply_count":1,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":1,"reads":25,"readers_count":24,"score":45.0,"yours":false,"topic_id":6594,"topic_slug":"can-texture-setdata-be-called-from-background-thread","display_username":"Eugene Kozlov","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"link_counts":[{"url":"https://github.com/urho3d/Urho3D/blob/master/Source/Urho3D/Graphics/Texture2D.h#L65","internal":false,"reflection":false,"title":"Urho3D/Texture2D.h at master · urho3d/Urho3D · GitHub","clicks":0}],"read":true,"user_title":"Core developer","title_is_group":false,"bookmarked":false,"actions_summary":[{"id":2,"count":2}],"moderator":false,"admin":false,"staff":false,"user_id":484,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":true},{"id":41057,"name":"Brian Knox","username":"najak3d","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/n/6a8cbe/{size}.png","created_at":"2020-12-04T08:36:37.969Z","cooked":"\u003cp\u003eThanks Eugene.   We’re probably just going to limit the amount of Data Transfer per frame, and handle it that way.\u003c/p\u003e","post_number":3,"post_type":1,"updated_at":"2020-12-04T08:36:37.969Z","reply_count":0,"reply_to_post_number":2,"quote_count":0,"incoming_link_count":0,"reads":23,"readers_count":22,"score":4.6,"yours":false,"topic_id":6594,"topic_slug":"can-texture-setdata-be-called-from-background-thread","display_username":"Brian Knox","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"reply_to_user":{"username":"Eugene","name":"Eugene Kozlov","avatar_template":"/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png"},"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":1334,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false}],"stream":[41052,41056,41057]},"timeline_lookup":[[1,719]],"suggested_topics":[{"id":7138,"title":"Build fails (linking phase) on Linux","fancy_title":"Build fails (linking phase) on Linux","slug":"build-fails-linking-phase-on-linux","posts_count":4,"reply_count":0,"highest_post_number":4,"image_url":null,"created_at":"2022-01-20T03:08:29.663Z","last_posted_at":"2022-01-21T15:27:41.192Z","bumped":true,"bumped_at":"2022-01-21T15:27:41.192Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":3,"views":178,"category_id":10,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":null,"description":"Original Poster","user":{"id":1502,"username":"jasperry","name":"Jason Perry","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/j/5fc32e/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":1038,"username":"dertom","name":"Thomas Trocha","avatar_template":"/user_avatar/discourse.urho3d.io/dertom/{size}/1815_2.png"}},{"extras":"latest","description":"Most Recent Poster","user":{"id":1304,"username":"lebrewer","name":"lebrewer","avatar_template":"/user_avatar/discourse.urho3d.io/lebrewer/{size}/2811_2.png"}}]},{"id":7177,"title":"Attaching a shader to a BorderImage","fancy_title":"Attaching a shader to a BorderImage","slug":"attaching-a-shader-to-a-borderimage","posts_count":4,"reply_count":1,"highest_post_number":4,"image_url":null,"created_at":"2022-01-31T17:49:50.734Z","last_posted_at":"2022-02-01T02:22:10.927Z","bumped":true,"bumped_at":"2022-02-01T02:22:10.927Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":0,"views":151,"category_id":10,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":null,"description":"Original Poster","user":{"id":1165,"username":"throwawayerino","name":"Actually Permanent","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/t/da6949/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":484,"username":"Eugene","name":"Eugene Kozlov","avatar_template":"/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png"}},{"extras":"latest","description":"Most Recent Poster","user":{"id":631,"username":"JTippetts1","name":"J Tippetts","avatar_template":"/user_avatar/discourse.urho3d.io/jtippetts1/{size}/96_2.png"}}]},{"id":7179,"title":"Need help with cusomized PBR renderpath","fancy_title":"Need help with cusomized PBR renderpath","slug":"need-help-with-cusomized-pbr-renderpath","posts_count":4,"reply_count":0,"highest_post_number":4,"image_url":null,"created_at":"2022-02-01T09:04:58.692Z","last_posted_at":"2022-02-03T17:35:34.174Z","bumped":true,"bumped_at":"2022-02-03T17:35:34.174Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":13,"views":205,"category_id":10,"featured_link":null,"has_accepted_answer":true,"posters":[{"extras":null,"description":"Original Poster, Accepted Answer","user":{"id":247,"username":"Dave82","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/dave82/{size}/2369_2.png"}},{"extras":"latest","description":"Most Recent Poster","user":{"id":861,"username":"GodMan","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/g/e79b87/{size}.png"}}]},{"id":7181,"title":"StaticModelGroup - Are ShaderParameters Shared?","fancy_title":"StaticModelGroup - Are ShaderParameters Shared?","slug":"staticmodelgroup-are-shaderparameters-shared","posts_count":3,"reply_count":1,"highest_post_number":3,"image_url":null,"created_at":"2022-02-02T09:31:19.658Z","last_posted_at":"2022-02-02T17:06:24.059Z","bumped":true,"bumped_at":"2022-02-02T17:06:24.059Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":2,"views":120,"category_id":10,"featured_link":null,"has_accepted_answer":true,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":1334,"username":"najak3d","name":"Brian Knox","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/n/6a8cbe/{size}.png"}},{"extras":null,"description":"Frequent Poster, Accepted Answer","user":{"id":631,"username":"JTippetts1","name":"J Tippetts","avatar_template":"/user_avatar/discourse.urho3d.io/jtippetts1/{size}/96_2.png"}}]},{"id":7098,"title":"Cartoon Fire Effect","fancy_title":"Cartoon Fire Effect","slug":"cartoon-fire-effect","posts_count":6,"reply_count":0,"highest_post_number":6,"image_url":null,"created_at":"2021-12-10T04:08:49.887Z","last_posted_at":"2021-12-12T02:49:51.076Z","bumped":true,"bumped_at":"2021-12-12T02:49:51.076Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":6,"views":274,"category_id":10,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":628,"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":192,"username":"Modanung","name":"魔大农 𝞍𝞎𝝳 現招蜍","avatar_template":"/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":861,"username":"GodMan","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/g/e79b87/{size}.png"}}]}],"tags_descriptions":{},"id":6594,"title":"Can Texture.SetData() be called from Background Thread?","fancy_title":"Can Texture.SetData() be called from Background Thread?","posts_count":3,"created_at":"2020-12-03T23:25:17.691Z","views":217,"reply_count":1,"like_count":2,"last_posted_at":"2020-12-04T08:36:37.969Z","visible":true,"closed":false,"archived":false,"has_summary":false,"archetype":"regular","slug":"can-texture-setdata-be-called-from-background-thread","category_id":10,"word_count":536,"deleted_at":null,"user_id":1334,"featured_link":null,"pinned_globally":false,"pinned_at":null,"pinned_until":null,"image_url":null,"slow_mode_seconds":0,"draft":null,"draft_key":"topic_6594","draft_sequence":null,"unpinned":null,"pinned":false,"current_post_number":1,"highest_post_number":3,"deleted_by":null,"actions_summary":[{"id":4,"count":0,"hidden":false,"can_act":false},{"id":8,"count":0,"hidden":false,"can_act":false},{"id":7,"count":0,"hidden":false,"can_act":false}],"chunk_size":20,"bookmarked":false,"bookmarks":[],"topic_timer":null,"message_bus_last_id":0,"participant_count":2,"show_read_indicator":false,"thumbnails":null,"slow_mode_enabled_until":null,"tags_disable_ads":false,"accepted_answer":{"post_number":2,"username":"Eugene","excerpt":"TL;DR: No, you cannot and it’s quite hard to change. \nLonger answer: Unless you create multiple GAPI contexts, you cannot work with GAPI from different threads. You probably tecnhincally can manage multiple contexts and write GPU resource from background thread while using main thread, assuming you \u0026hellip;"},"details":{"can_edit":false,"notification_level":1,"participants":[{"id":1334,"username":"najak3d","name":"Brian Knox","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/n/6a8cbe/{size}.png","post_count":2,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"trust_level":2},{"id":484,"username":"Eugene","name":"Eugene Kozlov","avatar_template":"/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png","post_count":1,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"trust_level":2}],"created_by":{"id":1334,"username":"najak3d","name":"Brian Knox","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/n/6a8cbe/{size}.png"},"last_poster":{"id":1334,"username":"najak3d","name":"Brian Knox","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/n/6a8cbe/{size}.png"}}}