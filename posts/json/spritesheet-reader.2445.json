{"post_stream":{"posts":[{"id":14616,"name":"","username":"sabotage3d","avatar_template":"/user_avatar/discourse.urho3d.io/sabotage3d/{size}/87_2.png","created_at":"2016-12-02T00:36:15.000Z","cooked":"\u003cp\u003eHi,\u003c/p\u003e\n\u003cp\u003eBased on SpriteSheet2D class in Urho3D. I have made this simple SpriteSheet Reader where you can query the offsets in different formats. Credits for animating the spritesheets to 1vanK and ghidra.\u003cbr\u003e\nThe format is compatable with Leshy SpriteSheet Tool: \u003ca href=\"https://www.leshylabs.com/apps/sstool/\" data-bbcode=\"true\" rel=\"nofollow noopener\"\u003ehttps://www.leshylabs.com/apps/sstool/\u003c/a\u003e. This is an example spritesheet for testing where you can generate the offsets using Leshy’s tool:\u003ca href=\"http://i.imgur.com/HRuK0iD.png\" data-bbcode=\"true\" rel=\"nofollow noopener\"\u003ehttp://i.imgur.com/HRuK0iD.png\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cspan class=\"bbcode-b\"\u003eSpriteSheet.h\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e[code]//\u003cbr\u003e\n// Copyright © 2008-2016 the Urho3D project.\u003cbr\u003e\n//\u003cbr\u003e\n// Permission is hereby granted, free of charge, to any person obtaining a copy\u003cbr\u003e\n// of this software and associated documentation files (the “Software”), to deal\u003cbr\u003e\n// in the Software without restriction, including without limitation the rights\u003cbr\u003e\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\u003cbr\u003e\n// copies of the Software, and to permit persons to whom the Software is\u003cbr\u003e\n// furnished to do so, subject to the following conditions:\u003cbr\u003e\n//\u003cbr\u003e\n// The above copyright notice and this permission notice shall be included in\u003cbr\u003e\n// all copies or substantial portions of the Software.\u003cbr\u003e\n//\u003cbr\u003e\n// THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\u003cbr\u003e\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\u003cbr\u003e\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\u003cbr\u003e\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\u003cbr\u003e\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\u003cbr\u003e\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\u003cbr\u003e\n// THE SOFTWARE.\u003cbr\u003e\n//\u003c/p\u003e\n\u003cp\u003e\u003cspan class=\"hashtag\"\u003e#pragma\u003c/span\u003e once\u003c/p\u003e\n\u003cp\u003e\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Resource/Resource.h\u0026gt;\u003c/p\u003e\n\u003cp\u003enamespace Urho3D\u003cbr\u003e\n{\u003c/p\u003e\n\u003cp\u003eclass Texture2D;\u003cbr\u003e\nclass XMLFile;\u003c/p\u003e\n\u003cp\u003e/// Sprite sheet.\u003cbr\u003e\nclass URHO3D_API SpriteSheet : public Resource\u003cbr\u003e\n{\u003cbr\u003e\nURHO3D_OBJECT(SpriteSheet, Resource);\u003c/p\u003e\n\u003cp\u003epublic:\u003cbr\u003e\n/// Construct.\u003cbr\u003e\nSpriteSheet(Context* context);\u003cbr\u003e\n/// Destruct.\u003cbr\u003e\nvirtual ~SpriteSheet();\u003cbr\u003e\n/// Register object factory.\u003cbr\u003e\nstatic void RegisterObject(Context* context);\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e/// Load resource from stream. May be called from a worker thread. Return true if successful.\nvirtual bool BeginLoad(Deserializer\u0026amp; source);\n/// Finish resource loading. Always called from the main thread. Return true if successful.\nvirtual bool EndLoad();\n\n/// Set texture.\nvoid SetTexture(Texture2D* texture);\n\n/// Return texture.\nTexture2D* GetTexture() const { return texture_; }\n\n/// Return offsets at index\nconst IntVector2\u0026amp; GetOffset(int index) const { return offsets_.At(index); }\nconst IntRect\u0026amp; GetRectangle(int index) const { return rectangles_.At(index); }\nconst Rect\u0026amp; GetTextureRectangle(int index) const { return textureRectangles_.At(index); }\nunsigned GetOffsetsCount() const { return offsetsCount_; }\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eprivate:\u003cbr\u003e\n/// Begin load from XML file.\u003cbr\u003e\nbool BeginLoadFromXMLFile(Deserializer\u0026amp; source);\u003cbr\u003e\n/// End load from XML file.\u003cbr\u003e\nbool EndLoadFromXMLFile();\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e/// Texture.\nSharedPtr\u0026lt;Texture2D\u0026gt; texture_;\n/// Sprite mapping.\nHashMap\u0026lt;String, SharedPtr\u0026lt;Sprite2D\u0026gt; \u0026gt; spriteMapping_;\n/// XML file used while loading.\nSharedPtr\u0026lt;XMLFile\u0026gt; loadXMLFile_;\n/// Texture name used while loading.\nString loadTextureName_;\n\n/// Cache\nvoid CacheOffsets(int x, int y, int width, int height);\n\nPODVector\u0026lt;IntVector2\u0026gt; offsets_;\nPODVector\u0026lt;IntRect\u0026gt; rectangles_;\nPODVector\u0026lt;Rect\u0026gt; textureRectangles_;\n\nunsigned offsetsCount_;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e};\u003c/p\u003e\n\u003cp\u003e}[/code]\u003c/p\u003e\n\u003cp\u003e\u003cspan class=\"bbcode-b\"\u003eSpriteSheet.cpp\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e[code]//\u003cbr\u003e\n// Copyright © 2008-2016 the Urho3D project.\u003cbr\u003e\n//\u003cbr\u003e\n// Permission is hereby granted, free of charge, to any person obtaining a copy\u003cbr\u003e\n// of this software and associated documentation files (the “Software”), to deal\u003cbr\u003e\n// in the Software without restriction, including without limitation the rights\u003cbr\u003e\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\u003cbr\u003e\n// copies of the Software, and to permit persons to whom the Software is\u003cbr\u003e\n// furnished to do so, subject to the following conditions:\u003cbr\u003e\n//\u003cbr\u003e\n// The above copyright notice and this permission notice shall be included in\u003cbr\u003e\n// all copies or substantial portions of the Software.\u003cbr\u003e\n//\u003cbr\u003e\n// THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\u003cbr\u003e\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\u003cbr\u003e\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\u003cbr\u003e\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\u003cbr\u003e\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\u003cbr\u003e\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\u003cbr\u003e\n// THE SOFTWARE.\u003cbr\u003e\n//\u003c/p\u003e\n\u003cp\u003e\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Core/Context.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Graphics/Texture2D.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/IO/Deserializer.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/IO/FileSystem.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/IO/Log.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Resource/PListFile.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Resource/ResourceCache.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Resource/XMLFile.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Resource/JSONFile.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Urho2D/Sprite2D.h\u0026gt;\u003c/p\u003e\n\u003cp\u003e\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “SpriteSheet.h”\u003c/p\u003e\n\u003cp\u003eusing namespace std;\u003c/p\u003e\n\u003cp\u003enamespace Urho3D\u003cbr\u003e\n{\u003c/p\u003e\n\u003cp\u003eSpriteSheet::SpriteSheet(Context* context) :\u003cbr\u003e\nResource(context),\u003cbr\u003e\noffsetsCount_(0)\u003cbr\u003e\n{\u003cbr\u003e\n}\u003c/p\u003e\n\u003cp\u003eSpriteSheet::~SpriteSheet()\u003cbr\u003e\n{\u003cbr\u003e\n}\u003c/p\u003e\n\u003cp\u003evoid SpriteSheet::RegisterObject(Context* context)\u003cbr\u003e\n{\u003cbr\u003e\ncontext-\u0026gt;RegisterFactory();\u003cbr\u003e\n}\u003c/p\u003e\n\u003cp\u003ebool SpriteSheet::BeginLoad(Deserializer\u0026amp; source)\u003cbr\u003e\n{\u003cbr\u003e\nif (GetName().Empty())\u003cbr\u003e\nSetName(source.GetName());\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eloadTextureName_.Clear();\nspriteMapping_.Clear();\n\n/// clear cache\noffsets_.Clear();\nrectangles_.Clear();\ntextureRectangles_.Clear();\n\n\nString extension = GetExtension(source.GetName());\n\nif (extension == \".xml\")\n    return BeginLoadFromXMLFile(source);\n\nURHO3D_LOGERROR(\"Unsupported file type\");\nreturn false;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e}\u003c/p\u003e\n\u003cp\u003ebool SpriteSheet::EndLoad()\u003cbr\u003e\n{\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eif (loadXMLFile_)\n    return EndLoadFromXMLFile();\n\n\nreturn false;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e}\u003c/p\u003e\n\u003cp\u003evoid SpriteSheet::SetTexture(Texture2D* texture)\u003cbr\u003e\n{\u003cbr\u003e\nloadTextureName_.Clear();\u003cbr\u003e\ntexture_ = texture;\u003c/p\u003e\n\u003cp\u003e}\u003c/p\u003e\n\u003cp\u003e/// Cache\u003cbr\u003e\nvoid SpriteSheet::CacheOffsets(int x, int y, int width, int height)\u003cbr\u003e\n{\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e/// Cache offsets\noffsets_.Push(IntVector2(x,y));\n\nIntRect rectangle(x, y, (x + width), (y + height));\n\n/// Cache rectangles\nrectangles_.Push(rectangle);\n\nint textureWidth = texture_-\u0026gt;GetWidth();\nint textureHeight = texture_-\u0026gt;GetHeight();\nfloat invWidth = 1.0f / textureWidth;\nfloat invHeight = 1.0f / textureHeight;\n\nRect rect;\nrect.min_.x_ = ((float)rectangle.left_) * invWidth;\nrect.max_.x_ = ((float)rectangle.right_) * invWidth;\n\nrect.min_.y_ = ((float)rectangle.bottom_) * invHeight;\nrect.max_.y_ = ((float)rectangle.top_) * invHeight;\n\n/// Cache texture rectangles\ntextureRectangles_.Push(rect);\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e}\u003c/p\u003e\n\u003cp\u003ebool SpriteSheet::BeginLoadFromXMLFile(Deserializer\u0026amp; source)\u003cbr\u003e\n{\u003cbr\u003e\nloadXMLFile_ = new XMLFile(context_);\u003cbr\u003e\nif (!loadXMLFile_-\u0026gt;Load(source))\u003cbr\u003e\n{\u003cbr\u003e\nURHO3D_LOGERROR(“Could not load sprite sheet”);\u003cbr\u003e\nloadXMLFile_.Reset();\u003cbr\u003e\nreturn false;\u003cbr\u003e\n}\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eSetMemoryUse(source.GetSize());\n\nXMLElement rootElem = loadXMLFile_-\u0026gt;GetRoot(\"textureatlas\");\nif (!rootElem)\n{\n    URHO3D_LOGERROR(\"Invalid sprite sheet\");\n    loadXMLFile_.Reset();\n    return false;\n}\n\n// If we're async loading, request the texture now. Finish during EndLoad().\nloadTextureName_ = GetParentPath(GetName()) + rootElem.GetAttribute(\"imagepath\");\nif (GetAsyncLoadState() == ASYNC_LOADING)\n    GetSubsystem\u0026lt;ResourceCache\u0026gt;()-\u0026gt;BackgroundLoadResource\u0026lt;Texture2D\u0026gt;(loadTextureName_, true, this);\n\nreturn true;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e}\u003c/p\u003e\n\u003cp\u003ebool SpriteSheet::EndLoadFromXMLFile()\u003cbr\u003e\n{\u003cbr\u003e\nResourceCache* cache = GetSubsystem();\u003cbr\u003e\ntexture_ = cache-\u0026gt;GetResource(loadTextureName_);\u003cbr\u003e\nif (!texture_)\u003cbr\u003e\n{\u003cbr\u003e\nURHO3D_LOGERROR(\"Could not load texture \" + loadTextureName_);\u003cbr\u003e\nloadXMLFile_.Reset();\u003cbr\u003e\nloadTextureName_.Clear();\u003cbr\u003e\nreturn false;\u003cbr\u003e\n}\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eXMLElement rootElem = loadXMLFile_-\u0026gt;GetRoot(\"textureatlas\");\nXMLElement subTextureElem = rootElem.GetChild(\"subtexture\");\n\nwhile (subTextureElem)\n{\n    String name = subTextureElem.GetAttribute(\"name\");\n\n    int x = subTextureElem.GetInt(\"x\");\n    int y = subTextureElem.GetInt(\"y\");\n\n    int width = subTextureElem.GetInt(\"width\");\n    int height = subTextureElem.GetInt(\"height\");\n\n    /// Cache offsets\n    CacheOffsets(x, y, width, height);\n\n    subTextureElem = subTextureElem.GetNext(\"subtexture\");\n}\n\noffsetsCount_ = offsets_.Size();\n\nloadXMLFile_.Reset();\nloadTextureName_.Clear();\nreturn true;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e}\u003c/p\u003e\n\u003cp\u003e}\u003cbr\u003e\n[/code]\u003c/p\u003e\n\u003cp\u003eRegister the class.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003e\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eBasic usage.\u003c/p\u003e\n\u003cp\u003e[code]void App::Init()\u003cbr\u003e\n{\u003cbr\u003e\nResourceCache* cache = GetSubsystem();\u003cbr\u003e\nspritesheet_ = cache-\u0026gt;GetResource(“Particles/text.xml”);\u003cbr\u003e\n}\u003c/p\u003e\n\u003cp\u003evoid App::Update(float timeStep)\u003cbr\u003e\n{\u003cbr\u003e\nTime* time_ = GetSubsystem();\u003cbr\u003e\nfloat elapsedTime = time_-\u0026gt;GetElapsedTime();\u003cbr\u003e\nfloat fps = 30.0;\u003cbr\u003e\nfloat frames = spritesheet-\u0026gt;GetOffsetsCount();\u003cbr\u003e\nfloat frame = std::fmod(std::floor((elapsedTime*fps)),frames);\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e const IntRect\u0026amp; rect = spritesheet-\u0026gt;GetRectangle(frame);\n sprite_-\u0026gt;SetRectangle(rect);\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e}\u003cbr\u003e\n[/code]\u003c/p\u003e","post_number":1,"post_type":1,"updated_at":"2017-01-02T01:15:25.950Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":38,"reads":34,"readers_count":33,"score":230.8,"yours":false,"topic_id":2445,"topic_slug":"spritesheet-reader","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"link_counts":[{"url":"http://i.imgur.com/HRuK0iD.png","internal":false,"reflection":false,"title":"HRuK0iD.png","clicks":25},{"url":"https://www.leshylabs.com/apps/sstool/","internal":false,"reflection":false,"title":"Leshy SpriteSheet Tool - Online Sprite Sheet \u0026 Texture Atlas Packer","clicks":19},{"url":"http://discourse.urho3d.io/t/solved-playing-spritesheet-animation/2428/9","internal":true,"reflection":true,"title":"[SOLVED] Playing Spritesheet Animation","clicks":0}],"read":true,"user_title":null,"bookmarked":false,"actions_summary":[{"id":2,"count":1}],"moderator":false,"admin":false,"staff":false,"user_id":151,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":14619,"name":"","username":"Lumak","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/l/8491ac/{size}.png","created_at":"2016-12-02T16:18:09.000Z","cooked":"\u003cp\u003eThanks for this!\u003c/p\u003e","post_number":2,"post_type":1,"updated_at":"2017-01-02T01:15:26.185Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":0,"reads":30,"readers_count":29,"score":6.0,"yours":false,"topic_id":2445,"topic_slug":"spritesheet-reader","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":256,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":14624,"name":"","username":"dakilla","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/d/a87d85/{size}.png","created_at":"2016-12-02T20:03:48.000Z","cooked":"\u003cp\u003ethanks, it may be usefull later for my particles works.\u003c/p\u003e","post_number":3,"post_type":1,"updated_at":"2017-01-02T01:15:26.546Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":0,"reads":29,"readers_count":28,"score":5.8,"yours":false,"topic_id":2445,"topic_slug":"spritesheet-reader","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":394,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false}],"stream":[14616,14619,14624]},"timeline_lookup":[[1,2182],[3,2181]],"suggested_topics":[{"id":7099,"title":":fallen_leaf: Polynomials \u0026 Harmonics","fancy_title":":fallen_leaf: Polynomials \u0026amp; Harmonics","slug":"polynomials-harmonics","posts_count":6,"reply_count":0,"highest_post_number":7,"image_url":null,"created_at":"2021-12-13T05:06:04.641Z","last_posted_at":"2021-12-27T23:27:39.489Z","bumped":true,"bumped_at":"2021-12-27T23:27:39.489Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"unicode_title":"🍂 Polynomials \u0026 Harmonics","tags_descriptions":{},"like_count":6,"views":392,"category_id":13,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest single","description":"Original Poster, Most Recent Poster","user":{"id":192,"username":"Modanung","name":"魔大农 𝞍𝞎𝝳 現招蜍","avatar_template":"/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png"}}]},{"id":7103,"title":":test_tube: DebugRenderer as GUI","fancy_title":":test_tube: DebugRenderer as GUI","slug":"debugrenderer-as-gui","posts_count":4,"reply_count":1,"highest_post_number":4,"image_url":null,"created_at":"2021-12-17T02:25:06.606Z","last_posted_at":"2021-12-18T01:09:27.738Z","bumped":true,"bumped_at":"2021-12-18T01:09:27.738Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"unicode_title":"🧪 DebugRenderer as GUI","tags_descriptions":{},"like_count":4,"views":267,"category_id":13,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":192,"username":"Modanung","name":"魔大农 𝞍𝞎𝝳 現招蜍","avatar_template":"/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":861,"username":"GodMan","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/g/e79b87/{size}.png"}}]},{"id":7110,"title":"Resource fetch define","fancy_title":"Resource fetch define","slug":"resource-fetch-define","posts_count":2,"reply_count":0,"highest_post_number":2,"image_url":null,"created_at":"2021-12-27T12:28:55.126Z","last_posted_at":"2021-12-27T17:00:37.699Z","bumped":true,"bumped_at":"2021-12-27T17:00:37.699Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":7,"views":184,"category_id":13,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":null,"description":"Original Poster","user":{"id":192,"username":"Modanung","name":"魔大农 𝞍𝞎𝝳 現招蜍","avatar_template":"/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png"}},{"extras":"latest","description":"Most Recent Poster","user":{"id":1304,"username":"lebrewer","name":"lebrewer","avatar_template":"/user_avatar/discourse.urho3d.io/lebrewer/{size}/2811_2.png"}}]},{"id":7120,"title":"Log Error Once Macro","fancy_title":"Log Error Once Macro","slug":"log-error-once-macro","posts_count":1,"reply_count":0,"highest_post_number":1,"image_url":null,"created_at":"2022-01-04T02:24:37.857Z","last_posted_at":"2022-01-04T02:24:37.925Z","bumped":true,"bumped_at":"2022-01-04T02:24:37.925Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":3,"views":143,"category_id":13,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest single","description":"Original Poster, Most Recent Poster","user":{"id":628,"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}}]},{"id":7182,"title":"How install landscape in the format (.tor or .obj)?","fancy_title":"How install landscape in the format (.tor or .obj)?","slug":"how-install-landscape-in-the-format-tor-or-obj","posts_count":4,"reply_count":1,"highest_post_number":4,"image_url":null,"created_at":"2022-02-03T16:58:20.976Z","last_posted_at":"2022-02-04T16:34:09.663Z","bumped":true,"bumped_at":"2022-02-04T16:34:09.663Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":2,"views":151,"category_id":10,"featured_link":null,"has_accepted_answer":true,"posters":[{"extras":null,"description":"Original Poster","user":{"id":1497,"username":"timob256","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/t/b782af/{size}.png"}},{"extras":"latest","description":"Most Recent Poster, Accepted Answer","user":{"id":1317,"username":"Lys0gen","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/l/57b2e6/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":628,"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}}]}],"tags_descriptions":{},"id":2445,"title":"SpriteSheet Reader","fancy_title":"SpriteSheet Reader","posts_count":3,"created_at":"2016-12-02T00:36:15.000Z","views":1115,"reply_count":0,"like_count":1,"last_posted_at":"2016-12-02T20:03:48.000Z","visible":true,"closed":false,"archived":false,"has_summary":false,"archetype":"regular","slug":"spritesheet-reader","category_id":13,"word_count":1069,"deleted_at":null,"user_id":151,"featured_link":null,"pinned_globally":false,"pinned_at":null,"pinned_until":null,"image_url":null,"slow_mode_seconds":0,"draft":null,"draft_key":"topic_2445","draft_sequence":null,"unpinned":null,"pinned":false,"current_post_number":1,"highest_post_number":3,"deleted_by":null,"actions_summary":[{"id":4,"count":0,"hidden":false,"can_act":false},{"id":8,"count":0,"hidden":false,"can_act":false},{"id":7,"count":0,"hidden":false,"can_act":false}],"chunk_size":20,"bookmarked":false,"bookmarks":[],"topic_timer":null,"message_bus_last_id":0,"participant_count":3,"show_read_indicator":false,"thumbnails":null,"slow_mode_enabled_until":null,"tags_disable_ads":false,"details":{"can_edit":false,"notification_level":1,"participants":[{"id":151,"username":"sabotage3d","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/sabotage3d/{size}/87_2.png","post_count":1,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"trust_level":2},{"id":256,"username":"Lumak","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/l/8491ac/{size}.png","post_count":1,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"trust_level":2},{"id":394,"username":"dakilla","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/d/a87d85/{size}.png","post_count":1,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"trust_level":2}],"created_by":{"id":151,"username":"sabotage3d","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/sabotage3d/{size}/87_2.png"},"last_poster":{"id":394,"username":"dakilla","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/d/a87d85/{size}.png"},"links":[{"url":"https://www.leshylabs.com/apps/sstool/","title":"Leshy SpriteSheet Tool - Online Sprite Sheet \u0026 Texture Atlas Packer","internal":false,"attachment":false,"reflection":false,"clicks":19,"user_id":151,"domain":"www.leshylabs.com","root_domain":"leshylabs.com"}]}}