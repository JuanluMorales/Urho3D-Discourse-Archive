{"post_stream": {"posts": [{"id": 1803, "name": "", "username": "vivienneanthony", "avatar_template": "/user_avatar/discourse.urho3d.io/vivienneanthony/{size}/942_2.png", "created_at": "2014-07-05T12:20:37.000Z", "cooked": "<p>Hmmm.</p>\n<p>Is it possible to do this with Urho3d? Like something like \u201cWorldEnvironment\u201d where space is defined. The higher you go up the horizon changes to black or whatever is defined. If it goes high enougth a  \u201cWorldSpace\u201d is loaded which shows the world for a far expect. I\u2019ll refine the idea more.</p>\n<p>Just random thought.</p>\n<div class=\"lazyYT\" data-youtube-id=\"0bQz5ugtfLY\" data-youtube-title=\"Procedural Planet Rendering\" data-width=\"480\" data-height=\"270\" data-parameters=\"feature=oembed&amp;wmode=opaque\"></div>\n<p>Vivienne</p>", "post_number": 1, "post_type": 1, "updated_at": "2018-03-05T19:37:06.991Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 195, "reads": 49, "readers_count": 48, "score": 1014.8, "yours": false, "topic_id": 335, "topic_slug": "procedural-generated-worlds", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 2, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "https://www.youtube.com/watch?v=0bQz5ugtfLY", "internal": false, "reflection": false, "title": "YouTube", "clicks": 2}, {"url": "http://discourse.urho3d.io/t/frostbite-terrain-texturing/383/2", "internal": true, "reflection": true, "title": "Frostbite terrain texturing", "clicks": 0}], "read": true, "user_title": null, "bookmarked": false, "actions_summary": [{"id": 2, "count": 2}], "moderator": false, "admin": false, "staff": false, "user_id": 88, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 1804, "name": "Lasse \u00d6\u00f6rni", "username": "cadaver", "avatar_template": "/user_avatar/discourse.urho3d.io/cadaver/{size}/3_2.png", "created_at": "2014-07-05T16:31:51.000Z", "cooked": "<p>This is just as doable in Urho as any other generic scenegraph/renderer, but it doesn\u2019t do anything specifically to help you. The application must manage all the content creation and also the LOD transitions in the larger scale (*); Urho just supplies a \u201cdumb\u201d octree and camera frustum and renders everything that\u2019s in the camera view.</p>\n<p>(*) The StaticModel / AnimatedModel classes do manage LOD for something like displaying a far-away tree at a lower amount of polygons if the model asset defines different LOD levels and the transition distances, but I don\u2019t think that\u2019s directly usable for this kind of planetary LOD.</p>", "post_number": 2, "post_type": 1, "updated_at": "2017-01-02T00:59:42.798Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 1, "reads": 49, "readers_count": 48, "score": 14.8, "yours": false, "topic_id": 335, "topic_slug": "procedural-generated-worlds", "display_username": "Lasse \u00d6\u00f6rni", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Urho3D Author", "title_is_group": false, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": true, "staff": true, "user_id": 3, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 1808, "name": "", "username": "vivienneanthony", "avatar_template": "/user_avatar/discourse.urho3d.io/vivienneanthony/{size}/942_2.png", "created_at": "2014-07-06T13:22:37.000Z", "cooked": "<aside class=\"quote\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/cadaver/40/3_1.png\" class=\"avatar\"> cadaver:</div>\n<blockquote>\n<p>(*) The StaticModel / AnimatedModel classes do manage LOD for something like displaying a far-away tree at a lower amount of polygons if the model asset defines different LOD levels and the transition distances, but I don\u2019t think that\u2019s directly usable for this kind of planetary LOD.</p>\n</blockquote>\n</aside>\n<p>Yea. I\u2019m assuming it will be trickie. The way I imagine it is I try to illustrate it.</p>\n<p>camera  -&gt; field of view -&gt; statics models -&gt; plane(after certain distances)</p>\n<p>If something is in the far distance bypassing a certain point, anything after the plane have to be projected onto the plane. I\u2019m assuming in real life, probably considering it a canvas like a matte painting.</p>\n<p>The sheet of paper for example 5 kilometers in front of the camera but the paper roject 5km to infinity.</p>", "post_number": 3, "post_type": 1, "updated_at": "2018-03-04T18:18:04.058Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 1, "incoming_link_count": 0, "reads": 49, "readers_count": 48, "score": 9.8, "yours": false, "topic_id": 335, "topic_slug": "procedural-generated-worlds", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 2, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 88, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 2045, "name": "", "username": "vivienneanthony", "avatar_template": "/user_avatar/discourse.urho3d.io/vivienneanthony/{size}/942_2.png", "created_at": "2014-08-11T18:29:38.000Z", "cooked": "<p>I\u2019m looking at the engine.</p>\n<p>I created a function in terrain.cpp that basically named generateheightmap().</p>\n<p>I was planning to pass a created Image. Still if the Image object class would be the best route but.</p>\n<p>Would it be just better to replicate \u201cbool Image::Load(Deserializer&amp; source)\u201d to \u201cbool Image:LoadPerlin\u201d which either uses stb or libnoise and change the Image settings to use that information. Simply using the \u201cbool Image::Load(Deserializer&amp; source)\u201d function as a template. I\u2019m looking at \u201cGetImageData\u201d which I assume I\u2019ll use the replacement code their.</p>\n<p>Calculating a memory area the size of width, height, depth, and components. <span class=\"bbcode-b\">Which I can set to 2048<em>2048</em>(not sure what depth means)*(not sure what components means)?</span><br>\nUsing STB I can calulate each x,y,z!</p>\n<pre><code class=\"lang-auto\">bool Image::LoadPerlinSTB(void)\n{\n    PROFILE(LoadImage);\n\n\n    // Not DDS, KTX or PVR, use STBImage to load other image formats as uncompressed\n\n    int width, height;\n    unsigned components;\n    \n    unsigned char* pixelData = GetImageData(source, width, height, components);\n    /// modify source which would be the memory location the stb generated area\n        if (!pixelData)\n    {\n        LOGERROR(\"Could not load image \" + source.GetName() + \": \" + String(stbi_failure_reason()));\n        return false;\n    }\n    SetSize(width, height, components);\n    SetData(pixelData);\n    FreeImageData(pixelData);\n\n    return true;\n}</code></pre>", "post_number": 4, "post_type": 1, "updated_at": "2018-03-04T18:18:58.752Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 2, "reads": 50, "readers_count": 49, "score": 20.0, "yours": false, "topic_id": 335, "topic_slug": "procedural-generated-worlds", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 2, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 88, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 2048, "name": "", "username": "vivienneanthony", "avatar_template": "/user_avatar/discourse.urho3d.io/vivienneanthony/{size}/942_2.png", "created_at": "2014-08-11T20:39:44.000Z", "cooked": "<p>Hello</p>\n<p>This is what I have so far.</p>\n<p>Vivienne</p>", "post_number": 5, "post_type": 1, "updated_at": "2017-01-02T01:00:01.247Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 38, "readers_count": 37, "score": 7.6, "yours": false, "topic_id": 335, "topic_slug": "procedural-generated-worlds", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 88, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 2049, "name": "", "username": "vivienneanthony", "avatar_template": "/user_avatar/discourse.urho3d.io/vivienneanthony/{size}/942_2.png", "created_at": "2014-08-11T20:40:03.000Z", "cooked": "<p>Hello</p>\n<p>This is what I have so far. Way to generate Perlin using STB? WIth this image possible the texture can be saved on a need to basis?</p>\n<p>Vivienne</p>\n<pre><code class=\"lang-auto\">bool Terrain::GenerateHeightMap()\n{\n    // Generate Image\n    Image * perlinimage = new Image(context_);\n\n    if(!perlinimage-&gt;GeneratePerlin(2048,2048,0))\n    {\n        return false;\n    }\n\n    bool success = SetHeightMapInternal(perlinimage, true);\n\n    return success;\n}\n\nbool Image::GeneratePerlin(int width, int height, unsigned components)\n{\n    // create a location for pixelData\n    unsigned char* pixelData;\n    int depth;\n\n    // not sure of what the following is\n    components=4;       // rgba 4 components\n    depth=1;            // meaning 8-bit\n\n    unsigned dataSize = height*width*depth*components;\n\n    // code\n    SharedArrayPtr&lt;unsigned char&gt; buffer(new unsigned char[dataSize]);\n\n    // null the memory area\n    for(int x=0; x&lt;width; x++)\n    {\n        for(int y=0; y&lt;height; y++)\n        {\n            for(int componentsidx=0; componentsidx&lt;components; componentsidx++)\n            {\n                buffer[x*y*componentsidx]=0;\n            }\n        }\n    }\n\n    // Manipulation here\n\n    // point pixelData to buffer\n    pixelData=buffer;\n\n    // set image information\n    SetSize(width, height, depth, components);\n    SetData(pixelData);\n    FreeImageData(pixelData);\n\n    return false;\n}\n</code></pre>", "post_number": 6, "post_type": 1, "updated_at": "2017-01-02T01:00:01.324Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 2, "reads": 41, "readers_count": 40, "score": 18.2, "yours": false, "topic_id": 335, "topic_slug": "procedural-generated-worlds", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "http://discourse.urho3d.io/t/adding-libnoise-to-the-terrain-component-or-perlin-noise/361/6", "internal": true, "reflection": true, "title": "Adding Libnoise to the Terrain component or Perlin noise", "clicks": 1}], "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 88, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 2051, "name": "", "username": "friesencr", "avatar_template": "/user_avatar/discourse.urho3d.io/friesencr/{size}/827_2.png", "created_at": "2014-08-11T21:55:11.000Z", "cooked": "<p>If you mean saved to disk the image class has a SavePNG, SaveBMP, and SaveJPG functions</p>", "post_number": 7, "post_type": 1, "updated_at": "2017-01-02T01:00:01.480Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 36, "readers_count": 35, "score": 7.2, "yours": false, "topic_id": 335, "topic_slug": "procedural-generated-worlds", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Core developer", "title_is_group": false, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 15, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 2052, "name": "", "username": "vivienneanthony", "avatar_template": "/user_avatar/discourse.urho3d.io/vivienneanthony/{size}/942_2.png", "created_at": "2014-08-11T23:10:47.000Z", "cooked": "<p>That\u2019s is what I\u2019m trying. Will with the code here. I get a fuchsia color. If I attempt to change the starting value when initialized it garbage some of the texture when shaped. So maybe I\u2019m not setting the memory right. I\u2019m assuming components would be RGBA and depth(not sure).</p>\n<p>VIvienne</p>\n<pre><code class=\"lang-auto\">bool Image::GeneratePerlin(int width, int height, unsigned components)\n{\n    // create a location for pixelData\n    unsigned char* pixelData;\n    int depth;\n\n    // not sure of what the following is\n    components=4;       // rgba 4 components\n    depth=1;            // meaning 8-bit\n\n    unsigned dataSize = height*width*depth*components;\n\n    // code\n    SharedArrayPtr&lt;unsigned char&gt; buffer(new unsigned char[dataSize]);\n\n    // null the memory area\n    for(int z=0; z&lt;width; ++z)\n    {\n       for(int x=0; x&lt;height; ++x)\n        {\n            for(int componentsidx=0; componentsidx&lt;components; ++componentsidx)\n          {\n                buffer[z*x*componentsidx]=0;\n            }\n        }\n    }\n\n    //point pixelData to buffer\n    pixelData=buffer;\n\n      // set image information\n    SetSize(width, height, depth, components);\n    SetData(pixelData);\n   //FreeImageData(pixelData);\n\n    return false;\n}</code></pre>", "post_number": 8, "post_type": 1, "updated_at": "2018-03-04T18:20:25.135Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 38, "readers_count": 37, "score": 7.6, "yours": false, "topic_id": 335, "topic_slug": "procedural-generated-worlds", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 2, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 88, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 2053, "name": "", "username": "friesencr", "avatar_template": "/user_avatar/discourse.urho3d.io/friesencr/{size}/827_2.png", "created_at": "2014-08-11T23:28:16.000Z", "cooked": "<p>I have actually been working on a height map generator since you brought it up.  Its not there yeat but here is my code to get you started.  I am still learning the basics of contiguous noise.  The general idea is that you need to layer the perlin noise to give it more character.  this perlin function gets interpolated between coordinates.  At the even integers there isn\u2019t much to show but in between the integers there is lots of wild things happening.  I have found some good combinations but no great combinations.  This code is commented out but the idea is there.</p>\n<pre><code class=\"lang-auto\">      heightMap_ = new Image(context_);\n      heightMap_-&gt;SetSize(terrainSize, terrainSize, 3);\n      terrain_-&gt;SetHeightMap(heightMap_);\n\n      float offset = sin(sceneTimer_.GetMSec(false) * 0.0001) * terrainDivisionSizeN3;\n\n      for (unsigned x = 0; x &lt; terrainSize; x++)\n      {\n         for (unsigned y = 0; y &lt; terrainSize; y++)\n         {\n            float n1X = x / terrainDivisionSizeN1;\n            float n1Y = y / terrainDivisionSizeN1;\n            float n1 = stb_perlin_noise3(n1X+offset, n1Y+offset, 1.0); //, terrainDivisionsN1, terrainDivisionsN1, terrainDivisionsN1);\n            /* n1 = (n1 + 1.0) / 2.0; */\n\n            /* float n2X = x / terrainDivisionSizeN2; */\n            /* float n2Y = y / terrainDivisionSizeN2; */\n            /* float n2 = stb_perlin_noise3(n2X+offset, n2Y+offset, 1.0); //, terrainDivisionsN2, terrainDivisionsN2, terrainDivisionsN2); */\n            /* n2 *= 0.8; */\n\n            /* float n3X = x / terrainDivisionSizeN3; */\n            /* float n3Y = y / terrainDivisionSizeN3; */\n            /* float n3 = stb_perlin_noise3(n3X+offset, n3Y+offset, 1.0); //, terrainDivisionsN3, terrainDivisionsN3, terrainDivisionsN3); */\n            /* n3 *= 0.6; */\n\n            /* float n4X = x / terrainDivisionSizeN4; */\n            /* float n4Y = y / terrainDivisionSizeN4; */\n            /* float n4 = stb_perlin_noise3(n4X+offset, n4Y+offset, 1.0); //, terrainDivisionsN4, terrainDivisionsN4, terrainDivisionsN4); */\n            /* n4 *= 0.4; */\n\n            /* float n5X = x / terrainDivisionSizeN5; */\n            /* float n5Y = y / terrainDivisionSizeN5; */\n            /* float n5 = stb_perlin_noise3(n5X+offset, n5Y+offset, 1.0); //, terrainDivisionsN5, terrainDivisionsN5, terrainDivisionsN5); */\n            /* n4 *= 0.3; */\n\n            /* float n = (n1 + n2 + n3 + n4 + n5) / 5.0; */\n\n            float h = (n1 + 1.0) / 2.0; // set noise from -1,1 to 0,1 for color\n            h = n1;\n\n            /* if (h &lt; 0.45) */\n            /*    h = 0.0; */\n\n            /* h = pow(h,colorMag); */\n            Color c =  Color(h,h,h);\n            heightMap_-&gt;SetPixel(x,y,c);\n         }\n      }\n      /* heightMap_-&gt;SavePNG(\"heightmap.png\"); */\n      terrain_-&gt;SetHeightMap(heightMap_);\n</code></pre>\n<p>Here is a function that performs over a pointer to a buffer of data.  This data is aligned to work with stb_image_write and is agnostic to Urho.</p>\n<pre><code class=\"lang-auto\">\nunsigned rgba32ToUInt(unsigned r, unsigned g, unsigned b, unsigned a)\n{\n    return (r&amp;255) + ((g&amp;255) &lt;&lt; 8) + ((b&amp;255) &lt;&lt; 16) + ((a&amp;255) &lt;&lt; 24);\n}\n\nvoid generatePerlinNoise1(\n        unsigned* data,\n        unsigned width,\n        unsigned height,\n        unsigned octaves, \n        float xOffset, \n        float yOffset, \n        float zOffset, \n        int xWrap, \n        int yWrap, \n        int zWrap, \n        float o1,\n        float o2,\n        float o3,\n        float o4,\n        float o5,\n        float o6,\n        float o7,\n        float o8\n    )\n{\n    float mag[] = {o1, o2, o3, o4, o5, o6, o7, o8};\n    for (unsigned o = 0; o&lt;octaves; o++)\n    {\n        float oSize = (o+1) &lt;&lt; o;\n        float oxDiv = oSize / width;\n        float oyDiv = oSize / height;\n        for(unsigned x = 0; x&lt;width; x++)\n        {\n            for(unsigned y = 0; y&lt;height; y++)\n            {\n                float hx = (float)x / (float)width;\n                float hy = (float)y / (float)height;\n                float noise = stb_perlin_noise3(\n                        (x + xOffset) * oxDiv,\n                        (y + yOffset) * oyDiv, \n                        zOffset,\n                        xWrap,\n                        yWrap,\n                        zWrap\n                );\n                noise = (noise + 1.0) / 2.0; // set range to 0 - 1\n                noise *= mag[o];\n                unsigned col = noise * 255;\n                int index = x+y*width;\n                col = rgba32ToUInt(col, col * hx, col * hy, 255);\n                data[index] += col;\n            }\n        }\n    }\n}\n</code></pre>", "post_number": 9, "post_type": 1, "updated_at": "2017-01-02T01:00:01.618Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 37, "readers_count": 36, "score": 7.4, "yours": false, "topic_id": 335, "topic_slug": "procedural-generated-worlds", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Core developer", "title_is_group": false, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 15, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 2055, "name": "", "username": "vivienneanthony", "avatar_template": "/user_avatar/discourse.urho3d.io/vivienneanthony/{size}/942_2.png", "created_at": "2014-08-12T04:53:03.000Z", "cooked": "<p>Part A - Implementation<br>\nI played around with your code and will look at it more tomorrow. I was able to get the code to at least work in Urho3D structure and was able to use a Image::SavePNG to save the produced image. I\u2019m assuming with a little conversion it can generate height maps on the fly. Additionally, the octaves parameters can be passed through terrain so it can implemented through hard coding, xml, and the Editor. I thinking making a grayscale conversion is needed to make it work even more before using the \"    //bool success = SetHeightMapInternal(perlinimage, true);\" command.</p>\n<p>Part B - Code - Edited 9/11/14<br>\nAlso, very edited stb_perlin.h that can be added to ThirdParty/STB.</p>\n<p><a href=\"https://sourceforge.net/projects/proteusgameengine/files/Existence/Source/Engine/ThirdParty/STB/\" rel=\"nofollow noopener\">sourceforge.net/projects/proteu \u2026 Party/STB/</a></p>\n<p>Part C - Code - Edited 9/12/14<br>\nI passed width and height to Perlin function. I\u2019m thinking of passing the octaves from GeneratePerlin in the Terrain class to the Perlin function.</p>\n<p>Note: Since Perlin is in the Image class I am thinking generated Perlins can be used to create weightmaps for textures and other details.</p>\n<pre><code class=\"lang-auto\">bool Image::GeneratePerlin(int width, int height, unsigned components)\n{\n    /// Create a pointer location for pixelData\n    unsigned char* pixelData;\n\n    unsigned int * buffer;\n\n    /// Sure components to 4 for RGBA\n    components=4;\n    int depth=1;\n\n    /// calculate memory needed to match pixelData and buffer\n    unsigned dataSize = height*width*depth*components;\n\n    /// Allocate buffer\n    buffer = (unsigned int *) malloc(dataSize);\n\n    /// Generate noise - Currently 8 octaves\n    generatePerlinNoise1(buffer,width,height,8,0.0f,0.0f,0.0f,0,0,0,1.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f);\n\n    /// Point pixelData to buffer memory\n    pixelData = (unsigned char *) buffer;\n\n    /// Set image size\n    SetSize(width, height, 1, components);\n    CopyData(pixelData);\n\n    /// Free Memory\n    FreeImageData(pixelData);\n\n    return true;\n}\n\nunsigned Image::rgba32ToUInt(unsigned r, unsigned g, unsigned b, unsigned a)\n{\n    return (r&amp;255) + ((g&amp;255) &lt;&lt; 8) + ((b&amp;255) &lt;&lt; 16) + ((a&amp;255) &lt;&lt; 24);\n}\n\n///\nvoid Image::generatePerlinNoise1(\n    unsigned* data,\n    unsigned width,\n    unsigned height,\n    unsigned octaves,\n    float xOffset,\n    float yOffset,\n    float zOffset,\n    int xWrap,\n    int yWrap,\n    int zWrap,\n    float o1,\n    float o2,\n    float o3,\n    float o4,\n    float o5,\n    float o6,\n    float o7,\n    float o8\n)\n{\n    float mag[] = {o1, o2, o3, o4, o5, o6, o7, o8};\n    for (unsigned o = 0; o&lt;octaves; o++)\n    {\n        float oSize = (o+1) &lt;&lt; o;\n        float oxDiv = oSize / width;\n        float oyDiv = oSize / height;\n        for(unsigned x = 0; x&lt;width; x++)\n        {\n            for(unsigned y = 0; y&lt;height; y++)\n            {\n                float hx = (float)x / (float)width;\n                float hy = (float)y / (float)height;\n                float noise = stb_perlin_noise3(\n                                  (x + xOffset) * oxDiv,\n                                  (y + yOffset) * oyDiv,\n                                  zOffset,\n                                  xWrap,\n                                  yWrap,\n                                  zWrap\n                              );\n                noise = (noise + 1.0) / 2.0; // set range to 0 - 1\n                noise *= mag[o];\n                unsigned col = noise * 255;\n                int index = x+y*width;\n                col = rgba32ToUInt(col, col * hx, col * hy, 255);\n                data[index] += col;\n            }\n        }\n    }\n}\n\nPart  - C\nI think the Perlin can probably be used to create texture weight maps a\nvoid Image::CopyData(const unsigned char* pixelData)\n{\n    if (!data_)\n        return;\n\n    memcpy(data_, pixelData, width_ * height_ * depth_ * components_);\n}\n\nbool Terrain::GenerateHeightMap()\n{\n    /// Generate Image\n    Image * perlinimage = new Image(context_);\n    bool success = false;\n\n\n    /// Create Image\n    if(!perlinimage-&gt;GeneratePerlin(256,256,0))\n    {\n\n        return false;\n    }\n\n    perlinimage-&gt;SavePNG(String(\"/media/home2/vivienne/Existence/Bin/test.png\"));\n\n\n    //bool success = SetHeightMapInternal(perlinimage, true);\n\n    return success;\n}\n\n</code></pre>", "post_number": 10, "post_type": 1, "updated_at": "2018-03-05T19:40:39.756Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 34, "readers_count": 33, "score": 6.8, "yours": false, "topic_id": 335, "topic_slug": "procedural-generated-worlds", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 2, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "https://sourceforge.net/projects/proteusgameengine/files/Existence/Source/Engine/ThirdParty/STB/", "internal": false, "reflection": false, "title": "Proteus (Game Engine) - Existence - Browse /Existence/Source/Engine/ThirdParty/STB at SourceForge.net", "clicks": 1}], "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 88, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 2066, "name": "", "username": "vivienneanthony", "avatar_template": "/user_avatar/discourse.urho3d.io/vivienneanthony/{size}/942_2.png", "created_at": "2014-08-12T19:08:28.000Z", "cooked": "<p>Do you know how the color image is stored in memory? I just tried to do the following code. It rewrite the image to some transparent gradiant and noise. So I off a byte or something.</p>\n<p>I\u2019m using the first average method.<br>\n<a href=\"http://www.tannerhelland.com/3643/grayscale-image-algorithm-vb6/\" rel=\"nofollow noopener\">tannerhelland.com/3643/grays \u2026 rithm-vb6/</a></p>\n<pre><code class=\"lang-auto\">{\n    // create temporary area\n    unsigned char * tempdata_ = new unsigned char[width_ * height_ * depth_*components_];\n    unsigned char grey;\n\n    // loop\n    for(unsigned width=0; width&lt;width_;width++)\n    {\n        for(unsigned height=0; height&lt;height_;height++)\n        {\n                grey=(data_[(width*height)+0]+data_[(width*height)+1]+data_[(width*height)+2])/3;\n\n                tempdata_[(width*height)+0]=grey;\n                tempdata_[(width*height)+1]=grey;\n                tempdata_[(width*height)+2]=grey;\n        }\n    }\n\n    // copy data\n    memcpy(data_, tempdata_, width_*height_*depth_*components_);\n\n    return;\n\n}</code></pre>", "post_number": 11, "post_type": 1, "updated_at": "2018-03-05T19:40:58.653Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 32, "readers_count": 31, "score": 6.4, "yours": false, "topic_id": 335, "topic_slug": "procedural-generated-worlds", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 2, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "http://www.tannerhelland.com/3643/grayscale-image-algorithm-vb6/", "internal": false, "reflection": false, "title": "Seven grayscale conversion algorithms (with pseudocode and VB6 source code) \u2013 Tanner Helland (dot) com", "clicks": 0}], "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 88, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 2076, "name": "", "username": "vivienneanthony", "avatar_template": "/user_avatar/discourse.urho3d.io/vivienneanthony/{size}/942_2.png", "created_at": "2014-08-13T14:21:14.000Z", "cooked": "<p>I am using the code utilizing <a href=\"http://www.tannerhelland.com/3643/grayscale-image-algorithm-vb6/\" rel=\"nofollow noopener\">tannerhelland.com/3643/grays \u2026 rithm-vb6/</a></p>\n<p>I just have to add some clear nerirt code to clear the temporary memory to the functions I created the uncomment the actual code that creates the terrain.</p>\n<p>This look interesting to add as a Image function since I have GenerateGrayscale() made. The link is <a href=\"http://notes.ericwillis.com/2009/11/pixelate-an-image-with-csharp/\" rel=\"nofollow noopener\">notes.ericwillis.com/2009/11/pix \u2026 th-csharp/</a></p>\n<p>Mindcraft type terrain possibility.</p>\n<p>So technically some type of procedural terrain can be implemented and since the Perlin noise plays with a image.  It can be manipulated for other things like terrain details from textures and probably weight maps for placing objects.</p>\n<p>It\u2019s made for hard coding so the next trick is adding the ability to use the function in the Editor.  If someone wants to make it here!</p>\n<p>The code:</p>\n<pre><code class=\"lang-auto\">void Image::generateGrayScale(void)\n///\n{\n      // create temporary area\n        unsigned char * tempdata_ ;\n\n        tempdata_=(unsigned char*) malloc(width_ * height_ * depth_*components_);\n\n        unsigned char grey;\n        unsigned width = components_;\n\n        // loop\n        for(unsigned int y=0; y&lt;height_;y++)\n        {\n            for(unsigned int x=0; x&lt;width_;x++)\n            {\n                grey=(data_[(y*components_*width_)+(x*components_)+0]+data_[(y*components_*width_)+(x*components_)+1]+data_[(y*components_*width_)+(x*components_)+2])/3;\n\n                tempdata_[(y*components_*width_)+(x*components_)+0]=grey;\n                tempdata_[(y*components_*width_)+(x*components_)+1]=grey;\n                tempdata_[(y*components_*width_)+(x*components_)+2]=grey;\n                tempdata_[(y*components_*width_)+(x*components_)+3]=255;\n            }\n        }\n\n        /// Point pixelData to buffer memory\n        memcpy(data_, (unsigned char *)tempdata_, width_ * height_ * depth_ * components_);\n\n        return;\n\n    }\n\n}\n\n</code></pre>", "post_number": 12, "post_type": 1, "updated_at": "2018-03-05T19:41:17.316Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 1, "reads": 31, "readers_count": 30, "score": 11.2, "yours": false, "topic_id": 335, "topic_slug": "procedural-generated-worlds", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 2, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "http://notes.ericwillis.com/2009/11/pixelate-an-image-with-csharp/", "internal": false, "reflection": false, "clicks": 1}, {"url": "http://www.tannerhelland.com/3643/grayscale-image-algorithm-vb6/", "internal": false, "reflection": false, "title": "Seven grayscale conversion algorithms (with pseudocode and VB6 source code) \u2013 Tanner Helland (dot) com", "clicks": 1}], "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 88, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 2078, "name": "", "username": "vivienneanthony", "avatar_template": "/user_avatar/discourse.urho3d.io/vivienneanthony/{size}/942_2.png", "created_at": "2014-08-13T18:13:18.000Z", "cooked": "<p>This is a newer copy with free memory to prevent crashes.  I also allowed setting of the Perlin when calling it from the Image class. I have to look at the Editor and terrain class about fully implementing this as a new Terrain component.</p>\n<p>If somone knows how or would take a bite at it. That would be super! and we\u2019ll start to have procedural abilities built into Urho3D starting with Terrain.</p>\n<pre><code class=\"lang-auto\">bool Terrain::GenerateHeightMap()\n{\n    /// Generate Image\n    Image * perlinimage = new Image(context_);\n    bool success = false;\n\n\n    /// Create Image\n    if(!perlinimage-&gt;GeneratePerlin(1024,1024,8,1.0f,.5f,0.1f,0.0f,0.0f,0.0f,0.0f,0.0f))\n    {\n\n        return false;\n    }\n\n    perlinimage-&gt;generateGrayScale();\n\n    perlinimage-&gt;SavePNG(String(\"/media/home2/vivienne/Existence/Bin/test.png\"));\n\n\n    //bool success = SetHeightMapInternal(perlinimage, true);\n\n    return success;\n}\n\n\nbool Image::GeneratePerlin(const int &amp;width, const int &amp;height,const unsigned &amp;octaves,\n                        const float &amp;o1,\n                        const float &amp;o2,\n                        const float &amp;o3,\n                        const  float&amp;o4,\n                        const float &amp;o5,\n                        const float &amp;o6,\n                        const float &amp;o7,\n                        const float &amp;o8)\n{\n    /// Create a pointer location for pixelData\n    unsigned char* pixelData;\n    unsigned int * buffer;\n    unsigned int components=4;\n\n    /// Sure components to 4 for RGBA\n    int depth=1;\n\n    /// calculate memory needed to match pixelData and buffer\n    unsigned dataSize = height*width*depth*components;\n\n    /// Allocate buffer\n    buffer = (unsigned int *) malloc(dataSize);\n\n    /// Generate noise - Currently 8 octaves\n    generatePerlinNoise1(buffer,width,height,octaves,0.0f,0.0f,0.0f,0,0,0,o1,o2,o3,o4,o5,o6,o7,o8);\n\n    /// Point pixelData to buffer memory\n    pixelData = (unsigned char *) buffer;\n\n    /// Set image size\n    SetSize(width, height, 1, components);\n    CopyData(pixelData);\n\n    /// Free Memory\n    FreeImageData(pixelData);\n\n    return true;\n}\n\nunsigned Image::rgba32ToUInt(unsigned r, unsigned g, unsigned b, unsigned a)\n{\n    return (r&amp;255) + ((g&amp;255) &lt;&lt; 8) + ((b&amp;255) &lt;&lt; 16) + ((a&amp;255) &lt;&lt; 24);\n}\n\n///\nvoid Image::generatePerlinNoise1(\n    unsigned* data,\n    unsigned width,\n    unsigned height,\n    unsigned octaves,\n    float xOffset,\n    float yOffset,\n    float zOffset,\n    int xWrap,\n    int yWrap,\n    int zWrap,\n    float o1,\n    float o2,\n    float o3,\n    float o4,\n    float o5,\n    float o6,\n    float o7,\n    float o8\n)\n{\n    float mag[] = {o1, o2, o3, o4, o5, o6, o7, o8};\n    for (unsigned o = 0; o&lt;octaves; o++)\n    {\n        float oSize = (o+1) &lt;&lt; o;\n        float oxDiv = oSize / width;\n        float oyDiv = oSize / height;\n        for(unsigned x = 0; x&lt;width; x++)\n        {\n            for(unsigned y = 0; y&lt;height; y++)\n            {\n                float hx = (float)x / (float)width;\n                float hy = (float)y / (float)height;\n                float noise = stb_perlin_noise3(\n                                  (x + xOffset) * oxDiv,\n                                  (y + yOffset) * oyDiv,\n                                  zOffset,\n                                  xWrap,\n                                  yWrap,\n                                  zWrap\n                              );\n                noise = (noise + 1.0) / 2.0; // set range to 0 - 1\n                noise *= mag[o];\n                unsigned col = noise * 255;\n                int index = x+y*width;\n                col = rgba32ToUInt(col, col * hx, col * hy, 255);\n                data[index] += col;\n            }\n        }\n    }\n}\n\nvoid Image::generateGrayScale(void)\n///\n{\n    // create temporary area\n    unsigned char * tempdata_ ;\n\n    tempdata_=(unsigned char*) malloc(width_ * height_ * depth_*components_);\n\n    unsigned char grey;\n    unsigned width = components_;\n\n    // loop\n    for(unsigned int y=0; y&lt;height_; y++)\n    {\n        for(unsigned int x=0; x&lt;width_; x++)\n        {\n            grey=(data_[(y*components_*width_)+(x*components_)+0]+data_[(y*components_*width_)+(x*components_)+1]+data_[(y*components_*width_)+(x*components_)+2])/3;\n\n            tempdata_[(y*components_*width_)+(x*components_)+0]=grey;\n            tempdata_[(y*components_*width_)+(x*components_)+1]=grey;\n            tempdata_[(y*components_*width_)+(x*components_)+2]=grey;\n            tempdata_[(y*components_*width_)+(x*components_)+3]=255;\n        }\n    }\n\n    /// Point pixelData to buffer memory\n    memcpy(data_, (unsigned char *)tempdata_, width_ * height_ * depth_ * components_);\n\n    free(tempdata_);\n\n    return;\n\n}</code></pre>", "post_number": 13, "post_type": 1, "updated_at": "2018-03-05T19:41:46.879Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 32, "readers_count": 31, "score": 6.4, "yours": false, "topic_id": 335, "topic_slug": "procedural-generated-worlds", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 2, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 88, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 2081, "name": "", "username": "vivienneanthony", "avatar_template": "/user_avatar/discourse.urho3d.io/vivienneanthony/{size}/942_2.png", "created_at": "2014-08-14T00:19:03.000Z", "cooked": "<p>Hard coded implementation call to Terrain generate perlin function.</p>\n<p>            <iframe width=\"480\" height=\"360\" src=\"https://www.youtube.com/embed/bKRzQbz6FUM?feature=oembed&amp;wmode=opaque&amp;list=UUTObP1VzcIglm7uTgUBQjaw\" frameborder=\"0\" allowfullscreen=\"\" seamless=\"seamless\" sandbox=\"allow-same-origin allow-scripts allow-forms allow-popups allow-popups-to-escape-sandbox allow-presentation\"></iframe>\n</p>\n<p>Function called in scene creation. The line  <span class=\"bbcode-b\">terrain-&gt;GenerateHeightMap();</span></p>\n<pre><code class=\"lang-auto\">     //Terrain\n        Node* terrainNode = scene_-&gt;CreateChild(\"Terrain\");\n\n        Terrain* terrain = terrainNode-&gt;CreateComponent&lt;Terrain&gt;();\n        terrain-&gt;SetPatchSize(64);\n        terrain-&gt;SetSpacing(Vector3(2.0f, 0.8f, 2.0f)); // Spacing between vertices and vertical resolution of the height map\n        terrain-&gt;SetSmoothing(true);\n\n        terrain-&gt;GenerateHeightMap();\n\n        terrain-&gt;SetMaterial(cache-&gt;GetResource&lt;Material&gt;(\"Materials/Terrain.xml\"));\n\n        RigidBody* terrainbody = terrainNode-&gt;CreateComponent&lt;RigidBody&gt;();\n       CollisionShape* terrainshape = terrainNode-&gt;CreateComponent&lt;CollisionShape&gt;();\n        // Set a box shape of size 1 x 1 x 1 for collision. The shape will be scaled with the scene node scale, so the\n        // rendering and physics representation sizes should match (the box model is also 1 x 1 x 1.)\n        terrainbody-&gt;SetCollisionLayer(1);\n        terrainshape-&gt;SetTerrain();\n\n\n        // Create a scene node for the camera, which we will move around\n        // The camera will use default settings (1000 far clip distance, 45 degrees FOV, set aspect ratio automatically)\n        cameraNode_ = new Node(context_);\n\n        cameraNode_ = scene_-&gt;CreateChild(\"Camera\");\n        cameraNode_-&gt;CreateComponent&lt;Camera&gt;();\n\n        Camera* camera = cameraNode_-&gt;CreateComponent&lt;Camera&gt;();\n        camera-&gt;SetFarClip(1500.0f);\n        // Set an initial position for the camera scene node above the ground\n        cameraNode_-&gt;SetPosition(Vector3(0.0f, 0.0f, 0.0f));\n\n        SharedPtr&lt;Viewport&gt; viewport(new Viewport(context_, scene_, cameraNode_-&gt;GetComponent&lt;Camera&gt;()));\n        renderer-&gt;SetViewport(0, viewport);\n\n        // /create character\n        Node * characternode_ = scene_-&gt;CreateChild(\"Character\");\n        characternode_-&gt;SetPosition(Vector3(0.0f, 0.0f, 0.0f));\n\n        CreateCharacter();\n\n        loadSceneUI();</code></pre>\n<p>Office Youtube Page<br>\n<aside class=\"onebox whitelistedgeneric\">\n  <header class=\"source\">\n      <img src=\"https://s.ytimg.com/yts/img/favicon-vfl8qSV2F.ico\" class=\"site-icon\" width=\"16\" height=\"16\">\n      <a href=\"https://www.youtube.com/user/cgprojectsfx\" target=\"_blank\" rel=\"nofollow noopener\">YouTube</a>\n  </header>\n  <article class=\"onebox-body\">\n    <img src=\"https://yt3.ggpht.com/a/AATXAJyd8TAlJNOjSv9Y5Q7CKKubP4CU6aRTdFOSsQ=s900-c-k-c0xffffffff-no-rj-mo\" class=\"thumbnail onebox-avatar\" width=\"500\" height=\"500\">\n\n<h3><a href=\"https://www.youtube.com/user/cgprojectsfx\" target=\"_blank\" rel=\"nofollow noopener\">CG PROJECTSFX</a></h3>\n\n<p>Mission To create the highest quality interactive multimedia that will produce exceptional results using the latest technology while continually exploring an...</p>\n\n\n  </article>\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n  <div style=\"clear: both\"></div>\n</aside>\n</p>", "post_number": 14, "post_type": 1, "updated_at": "2018-03-05T19:42:45.731Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 31, "readers_count": 30, "score": 6.2, "yours": false, "topic_id": 335, "topic_slug": "procedural-generated-worlds", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 2, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "https://www.youtube.com/user/cgprojectsfx", "internal": false, "reflection": false, "title": "YouTube", "clicks": 1}], "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 88, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 2099, "name": "", "username": "vivienneanthony", "avatar_template": "/user_avatar/discourse.urho3d.io/vivienneanthony/{size}/942_2.png", "created_at": "2014-08-15T06:06:30.000Z", "cooked": "<p>I\u2019ll place my code in the message that seems to work so far.</p>\n<p><span class=\"bbcode-b\">Changes</span></p>\n<ol>\n<li>\n<p>Changed the final color output to RGBa grayscale since only the heightmap is being produced.</p>\n</li>\n<li>\n<p>Changed final color to be <a>b</a>*255[/b]. Forcing the final color output to be anywhere from 0 to 255. Since it\u2019s floats can be negative value which I think the STB is producing.</p>\n</li>\n<li>\n<p>Separated the perlin part from color conversion and also scaling. So, steps are 1) Create Perlin using octaves as number of layers and scale  2) Scale floats to by number of octaves 3) Convert floats to RGB correcting values to be 0 to 255 final color.</p>\n</li>\n<li>\n<p>Added each octaves layer to each other then did a final divide by number of octaves</p>\n</li>\n</ol>\n<p><span class=\"bbcode-b\">Possible Additions</span></p>\n<ol>\n<li>add level to add each octave level separate from x,y</li>\n</ol>\n<p>Basically, it seems to work so far after running the code. I will play with the values but it generates a basic heightmap with some a lot of flexibility by changing octaves.</p>\n<p>Feel free to test it and  modify to clean the code. It works tho and can be integrated further.</p>\n<p>Procedurally generated perlin terrain height map at least.</p>\n<p>Vivienne</p>\n<pre><code class=\"lang-auto\">///\nvoid Image::generatePerlinNoise1(\n    unsigned  * data,\n    unsigned width,\n    unsigned height,\n    unsigned octaves,\n    float xOffset,\n    float yOffset,\n    float zOffset,\n    int xWrap,\n    int yWrap,\n    int zWrap,\n    float o1,\n    float o2,\n    float o3,\n    float o4,\n    float o5,\n    float o6,\n    float o7,\n    float o8\n)\n{\n    // not used\n    float mag[] = {o1, o2, o3, o4, o5, o6, o7, o8};\n\n    // allocate memory\n    float * tempdata_;\n    tempdata_ = (float *) malloc (width*height*width);\n\n    for (unsigned o = 0; o&lt;octaves; o++)\n    {\n        float oSize = (o+1) &lt;&lt; o;\n\n        float oxDiv = oSize / width;\n        float oyDiv = oSize / height;\n\n        for(unsigned x = 0; x&lt;width; x++)\n        {\n            for(unsigned y = 0; y&lt;height; y++)\n            {\n                // scale perlin based on octave size\n                float hx = (float)x / (float)width;\n                float hy = (float)y / (float)height;\n                float noise = stb_perlin_noise3(x*oxDiv,y*oyDiv,zOffset,xWrap,yWrap,zWrap);\n\n                int index = x+y*width;\n\n                // add additional per octavenoise\n                if(o)\n                {\n                    tempdata_[index]= tempdata_[index]+noise;\n                }\n                else\n                {\n                    // set first octave layer noise\n                    tempdata_[index]= noise;\n                }\n\n            }\n        }\n\n    }\n\n    /// loop through all the values then scale down by number of octaves\n    for(unsigned x = 0; x&lt;width; x++)\n    {\n        for(unsigned y = 0; y&lt;height; y++)\n        {\n            int index = x+y*width;\n\n            tempdata_[index]= tempdata_[index]/octaves;\n        }\n    }\n\n    /// loop through all the floats then convert to grayscale setting the color basis to .5 (forcing values 0 to 1)\n    for(unsigned x = 0; x&lt;width; x++)\n    {\n        for(unsigned y = 0; y&lt;height; y++)\n        {\n\n            int index = x+y*width;\n\n            unsigned col = (tempdata_[index]+.5)* 255;  /// create color value\n\n            col = rgba32ToUInt(col, col, col, 255);\n            data[index] = col;      /// set grayscale - rgba is not needed. it seems to be screwy with this type of code.\n        }\n\n    }\n\n    /// free memory\n    free(tempdata_);\n\n    return;\n}\n</code></pre>", "post_number": 15, "post_type": 1, "updated_at": "2018-03-05T19:43:42.525Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 33, "readers_count": 32, "score": 6.6, "yours": false, "topic_id": 335, "topic_slug": "procedural-generated-worlds", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 2, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 88, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 2101, "name": "", "username": "vivienneanthony", "avatar_template": "/user_avatar/discourse.urho3d.io/vivienneanthony/{size}/942_2.png", "created_at": "2014-08-15T13:17:31.000Z", "cooked": "<p>Anyone have any ideas on this code wise? Brainstorming this through out the day myself.</p>\n<p>Hmmm. I think the same exact methods libnoise use to merge perlins can be used.</p>\n<ol>\n<li>I\u2019m thinking of doing a second Perlin noise and subtracting .5 from it allowing a negative or positive float.</li>\n<li>Add the second Perlin noise (Using a octave Perlin with only 1 octave) I\u2019m trying to look at how libnoise does it at <a href=\"http://libnoise.sourceforge.net/tutorials/tutorial5.html\" rel=\"nofollow noopener\">libnoise.sourceforge.net/tutoria \u2026 rial5.html</a>.</li>\n<li>Go back and scale by dividing by 2.</li>\n</ol>\n<p>The next part is this <a href=\"http://libnoise.sourceforge.net/tutorials/tutorial5.html\" rel=\"nofollow noopener\">libnoise.sourceforge.net/tutoria \u2026 rial5.html</a></p>", "post_number": 16, "post_type": 1, "updated_at": "2017-01-02T01:00:05.289Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 1, "reads": 30, "readers_count": 29, "score": 11.0, "yours": false, "topic_id": 335, "topic_slug": "procedural-generated-worlds", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "http://libnoise.sourceforge.net/tutorials/tutorial5.html", "internal": false, "reflection": false, "title": "libnoise: Tutorial 5: Creating more complex terrain", "clicks": 2}], "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 88, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 2105, "name": "", "username": "vivienneanthony", "avatar_template": "/user_avatar/discourse.urho3d.io/vivienneanthony/{size}/942_2.png", "created_at": "2014-08-16T05:15:49.000Z", "cooked": "<p>Hey,</p>\n<p>This is a little slower but more accurate. Instead of dividing by octaves. Ihe noise is  added  either negative or positve noise then scaled. The old float becomes range 0 to 1 keeping values. What could be added is a scaler size affecting z depth for each octave layer.</p>\n<p>Tested several times and it seems to work.</p>\n<p>Vivienne</p>\n<pre><code class=\"lang-auto\">///\nvoid Image::generatePerlinNoise1(\n    unsigned  * data,\n    unsigned width,\n    unsigned height,\n    unsigned octaves,\n    float xOffset,\n    float yOffset,\n    float zOffset,\n    int xWrap,\n    int yWrap,\n    int zWrap,\n    float o1,\n    float o2,\n    float o3,\n    float o4,\n    float o5,\n    float o6,\n    float o7,\n    float o8\n)\n{\n    // not used\n    float mag[] = {o1, o2, o3, o4, o5, o6, o7, o8};\n\n    // allocate memory\n    float * tempdata_;\n    tempdata_ = (float *) malloc (width*height*width);\n\n    /// set range keeping scale\n    float NewMax = 1.0f;\n    float NewMin = 0.0f;\n    float NewRange = (NewMax - NewMin);\n\n    float lowfloat=0;\n    float highfloat=0;\n\n    for (unsigned o = 0; o&lt;octaves; o++)\n    {\n        float oSize = (o+1) &lt;&lt; o;\n\n        float oxDiv = oSize / width;\n        float oyDiv = oSize / height;\n\n        for(unsigned x = 0; x&lt;width; x++)\n        {\n            for(unsigned y = 0; y&lt;height; y++)\n            {\n                // scale perlin based on octave size\n                float hx = (float)x / (float)width;\n                float hy = (float)y / (float)height;\n                float noise = stb_perlin_noise3(x*oxDiv,y*oyDiv,zOffset,xWrap,yWrap,zWrap);\n\n                int index = x+y*width;\n\n                /noise *= mag[o];\n\n                if(o)\n                {\n                    // Add additinal noise\n                    // Determine high point and low point\n                    tempdata_[index]= tempdata_[index]+noise;\n                    if(tempdata_[index]&gt;highfloat)\n                    {\n                        highfloat=tempdata_[index];\n                    }\n                    if(tempdata_[index]&lt;lowfloat)\n                    {\n                        lowfloat=tempdata_[index];\n                    }\n\n                }\n                else\n                {\n                    //Set initial noise\n                    //Set high and low point\n                    tempdata_[index]= noise;\n                    if(tempdata_[index]&gt;highfloat)\n                    {\n                        highfloat=tempdata_[index];\n                    }\n                    if(tempdata_[index]&lt;lowfloat)\n                    {\n                        lowfloat=tempdata_[index];\n                    }\n                }\n            }\n        }\n\n    }\n\n    // Set range\n    float OldRange = (highfloat-lowfloat);\n\n    cout &lt;&lt; lowfloat &lt;&lt; \" \"&lt;&lt; highfloat;\n\n    /// loop through all the values then scale down by number of octaves\n    for(unsigned x = 0; x&lt;width; x++)\n    {\n        for(unsigned y = 0; y&lt;height; y++)\n        {\n            int index = x+y*width;\n\n            // slower but scales the value range from 0.0f to 1.0f\n            tempdata_[index]= (((tempdata_[index] - lowfloat) * NewRange) / OldRange) + NewMin;\n        }\n    }\n\n    /// loop through all the floats then convert to grayscale setting the color basis to .5 (forcing values 0 to 1)\n    for(unsigned x = 0; x&lt;width; x++)\n    {\n        for(unsigned y = 0; y&lt;height; y++)\n        {\n\n            int index = x+y*width;\n\n            unsigned col = tempdata_[index]* 255;  /// create color value\n\n            col = rgba32ToUInt(col, col, col, 255);\n            data[index] = col;      /// set grayscale - rgba is not needed. it seems to be screwy with this type of code.\n        }\n\n    }\n\n    /// free memory\n    free(tempdata_);\n\n    return;\n}\n</code></pre>", "post_number": 17, "post_type": 1, "updated_at": "2018-03-05T19:43:13.039Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 28, "readers_count": 27, "score": 5.6, "yours": false, "topic_id": 335, "topic_slug": "procedural-generated-worlds", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 2, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 88, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 2107, "name": "", "username": "vivienneanthony", "avatar_template": "/user_avatar/discourse.urho3d.io/vivienneanthony/{size}/942_2.png", "created_at": "2014-08-16T13:31:40.000Z", "cooked": "<p>Video update testing Perlin function.</p>\n<div class=\"lazyYT\" data-youtube-id=\"eUr9T6YVuIU\" data-youtube-title=\"Urho3d Procedural Terrain Perlin Noise - Hard Code Test B\" data-width=\"480\" data-height=\"270\" data-parameters=\"feature=oembed&amp;wmode=opaque\"></div>", "post_number": 18, "post_type": 1, "updated_at": "2018-03-05T19:37:36.998Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 24, "readers_count": 23, "score": 4.8, "yours": false, "topic_id": 335, "topic_slug": "procedural-generated-worlds", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 2, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "https://www.youtube.com/watch?v=eUr9T6YVuIU", "internal": false, "reflection": false, "title": "YouTube", "clicks": 0}], "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 88, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 2109, "name": "", "username": "vivienneanthony", "avatar_template": "/user_avatar/discourse.urho3d.io/vivienneanthony/{size}/942_2.png", "created_at": "2014-08-17T03:58:43.000Z", "cooked": "<p>Hello</p>\n<p>The perlin part is working. I find this link about wormley noise with source code.</p>\n<p><a href=\"https://aftbit.com/cell-noise-2/\" rel=\"nofollow noopener\">aftbit.com/cell-noise-2/</a></p>\n<p>I\u2019m deciding about implementings the cell noise method. Might take me some time to make a C file based that matches to output like the generatePerlinNoise1.</p>\n<p>Work In Progress<br>\n<span class=\"bbcode-b\">1. generatePerlinNoise1 (I already coded BUT I\u2019m In process of taking out the 3rd for xy loop with the color conversion and I\u2019m making that generateOutput() to do that conversion)(Note: This allows adding  generateSelect() type functions combining and/or blending multiple layers out like GeneratePerlinNoise1, GenerateCellNoise1, GenerateVoroni1, generatePerlinControlNoise1(etc).)</span><br>\n2. generateCellNoise1 (It\u2019s a possiblity from the mentioned link))<br>\n3. generatePerlinControlNoise1 (Stripped generatePerlinNoise1 with 1 octave layer with scaling)<br>\n<span class=\"bbcode-b\">4. Change GeneratePerlin to GenerateProcedural (I already coded)</span></p>\n<p>Vivienne</p>", "post_number": 19, "post_type": 1, "updated_at": "2017-01-02T01:00:05.894Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 24, "readers_count": 23, "score": 4.8, "yours": false, "topic_id": 335, "topic_slug": "procedural-generated-worlds", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "https://aftbit.com/cell-noise-2/", "internal": false, "reflection": false, "title": "An In Depth Cell Noise Tutorial | AFTbit", "clicks": 3}], "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 88, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 2115, "name": "", "username": "vivienneanthony", "avatar_template": "/user_avatar/discourse.urho3d.io/vivienneanthony/{size}/942_2.png", "created_at": "2014-08-18T18:28:36.000Z", "cooked": "<p>Hello, All.</p>\n<p>So, I been working on the code. The design of it replicates libnoise. I have to addition select transition like libnoise, cell noise, and less intensive computation. I am posting the code so maybe something has a faster solution for the loops.</p>\n<p>The GenerateSelectBuild(\u2026) selects the perlin. It should act more like <a href=\"http://libnoise.sourceforge.net/tutorials/tutorial5.html\" rel=\"nofollow noopener\">libnoise.sourceforge.net/tutoria \u2026 rial5.html</a>.</p>\n<p>Anyway, I would love feedback.</p>\n<p>Vivienne</p>\n<p>Image.h</p>\n<pre><code class=\"lang-auto\">    /// GeneratePerlin\n    unsigned rgba32ToUInt(unsigned r, unsigned g, unsigned b, unsigned a);\n\n    bool GenerateProcedural(const int &amp;width, const int &amp;height,const unsigned &amp;octaves,\n                            const float &amp;o1,\n                            const float &amp;o2,\n                            const float &amp;o3,\n                            const  float &amp;o4,\n                            const float &amp;o5,\n                            const float &amp;o6,\n                            const float &amp;o7,\n                            const float &amp;o8);\n    float * GenerateSelectBuild(float * inputdata1, float * inputdata2, float *controldata1);\n    unsigned int * GenerateBuild(float * buffer);\n    void generatePerlinNoise1(  float * buffer,\n                                unsigned width,\n                                unsigned height,\n                                unsigned octaves,\n                                float xOffset,\n                                float yOffset,\n                                float zOffset,\n                                int xWrap,\n                                int yWrap,\n                                int zWrap,\n                                float o1,\n                                float o2,\n                                float o3,\n                                float o4,\n                                float o5,\n                                float o6,\n                                float o7,\n                                float o8);\n    void CopyData(const unsigned char* pixelData);[/code]\n\nImage.Cpp\n[code]\nbool Image::GenerateProcedural(const int &amp;width, const int &amp;height,const unsigned &amp;octaves,\n                           const float &amp;o1,\n                           const float &amp;o2,\n                           const float &amp;o3,\n                           const float&amp;o4,\n                           const float &amp;o5,\n                           const float &amp;o6,\n                           const float &amp;o7,\n                           const float &amp;o8)\n{\n    /// Create a pointer location for pixelData\n    unsigned char* pixelData;               /// data location of final output\n\n    unsigned int* perlinOutput;             /// final perlin output\n    float * perlininput1;                         ///  perlininput11\n    float * perlininput2;                         ///  perlininput11\n    float * controlinput1;                         ///  perlininput11\n    float * controloutput1;                         ///  perlininput11\n\n    unsigned int components=4;\n    unsigned int depth=1;\n\n    /// calculate memory needed to match pixelData and perlininput1\n    unsigned int dataSize = width*height*width;\n\n    /// Allocate perlininput1\n    perlininput1 = ( float *) malloc(dataSize);\n    perlininput2 = ( float *) malloc(dataSize);\n    controlinput1 = ( float *) malloc(dataSize);\n    controloutput1= ( float *) malloc(dataSize);\n\n    perlinOutput = (unsigned int *) malloc(dataSize);\n\n    /// Set Size components of the image\n    SetSize(width, height, 1, components);\n\n    /// Generate noise - Currently 8 octaves\n    generatePerlinNoise1(perlininput1,width,height,2,0.0f,0.0f,0.0f,0,0,0,o1,o2,o3,o4,o5,o6,o7,o8);\n\n    /// Generate noise - Currently 8 octaves\n    generatePerlinNoise1(perlininput2,width,height,7,0.0f,0.0f,0.0f,0,0,0,0.3f,0.6f,o3,o4,o5,o6,o7,o8);\n\n    /// Generate noise - Currently 8 octaves\n    generatePerlinNoise1(controlinput1,width,height,2,0.0f,0.0f,0.0f,0,0,0,0.4f,0.4f,o3,o4,o5,o6,o7,o8);\n\n    /// Produce Output\n    controloutput1=GenerateSelectBuild(perlininput1,perlininput2,controlinput1);\n\n    perlinOutput=GenerateBuild(controloutput1);\n\n    /// Point pixelData to perlininput1 memory\n    pixelData = (unsigned char *) perlinOutput;\n\n    /// Set image size\n    CopyData(pixelData);\n\n    /// Free Memory\n    FreeImageData(pixelData);\n\n    // free up memory\n    free(perlininput1);\n    free(perlininput2);\n    free(controlinput1);\n    free(controloutput1);\n\n    return true;\n}\n\n\nunsigned Image::rgba32ToUInt(unsigned r, unsigned g, unsigned b, unsigned a)\n{\n    return (r&amp;255) + ((g&amp;255) &lt;&lt; 8) + ((b&amp;255) &lt;&lt; 16) + ((a&amp;255) &lt;&lt; 24);\n}\n\n///\nvoid Image::generatePerlinNoise1(\n    float * buffer,\n    unsigned width,\n    unsigned height,\n    unsigned octaves,\n    float xOffset,\n    float yOffset,\n    float zOffset,\n    int xWrap,\n    int yWrap,\n    int zWrap,\n    float o1,\n    float o2,\n    float o3,\n    float o4,\n    float o5,\n    float o6,\n    float o7,\n    float o8\n)\n{\n    float mag[] = {o1, o2, o3, o4, o5, o6, o7, o8};\n\n    // allocate memory\n    float * tempdata_;\n    tempdata_ = (float *) malloc (width*height*width);\n\n    /// set range keeping scale\n    float NewMax = 1.0f;\n    float NewMin = 0.0f;\n    float NewRange = (NewMax - NewMin);\n\n    float lowfloat=0;\n    float highfloat=0;\n\n    for (unsigned o = 0; o&lt;octaves; o++)\n    {\n        float oSize = (o+1) &lt;&lt; o;\n\n        float oxDiv = oSize / width;\n        float oyDiv = oSize / height;\n\n        for(unsigned x = 0; x&lt;width; x++)\n        {\n            for(unsigned y = 0; y&lt;height; y++)\n            {\n                // scale perlin based on octave size\n                float hx = (float)x / (float)width;\n                float hy = (float)y / (float)height;\n                float noise = stb_perlin_noise3(x*oxDiv,y*oyDiv,zOffset,xWrap,yWrap,zWrap);\n\n                int index = x+y*width;\n\n                noise *= mag[o];\n\n                if(o)\n                {\n                    // Add additinal noise\n                    // Determine high point and low point\n                    tempdata_[index]= tempdata_[index]+noise;\n                    if(tempdata_[index]&gt;highfloat)\n                    {\n                        highfloat=tempdata_[index];\n                    }\n                    if(tempdata_[index]&lt;lowfloat)\n                    {\n                        lowfloat=tempdata_[index];\n                    }\n\n                }\n                else\n                {\n                    //Set initial noise\n                    //Set high and low point\n                    tempdata_[index]= noise;\n                    if(tempdata_[index]&gt;highfloat)\n                    {\n                        highfloat=tempdata_[index];\n                    }\n                    if(tempdata_[index]&lt;lowfloat)\n                    {\n                        lowfloat=tempdata_[index];\n                    }\n                }\n            }\n        }\n\n    }\n\n    // Set range\n    float OldRange = (highfloat-lowfloat);\n\n\n    /// loop through all the values then scale down by number of octaves\n    for(unsigned x = 0; x&lt;width; x++)\n    {\n        for(unsigned y = 0; y&lt;height; y++)\n        {\n            int index = x+y*width;\n\n            // slower but scales the value range from 0.0f to 1.0f\n            tempdata_[index]= (((tempdata_[index] - lowfloat) * NewRange) / OldRange) + NewMin;\n        }\n    }\n\n    // copy memory\n    memcpy (buffer, tempdata_,  width*height*width);\n\n\n    /// free memory\n    free(tempdata_);\n\n    return;\n}\n\n\n/// generate perlin output\nunsigned int * Image::GenerateBuild(float * buffer)\n{\n    int width=width_;\n    int height=height_;\n    int components=components_;\n    int depth=1;\n\n    // create new memory\n    unsigned * output_;\n    output_ = (unsigned int *) malloc (width*height*width);\n\n    // loop through all the floats then convert to grayscale setting the color basis to .5 (forcing values 0 to 1)\n    for(unsigned x = 0; x&lt;width; x++)\n    {\n        for(unsigned y = 0; y&lt;height; y++)\n        {\n\n        /// incremennt memory which seems to work\n        int index = x+y*width;\n\n        unsigned col = buffer[index]* 255;  /// create color value\n\n        col = rgba32ToUInt(col, col, col, 255);\n        output_[index] = col;      /// set grayscale - rgba is not needed. it seems to be screwy with this type of code.\n       }\n    }\n\n    return output_;\n}\n\n/// generate perlin select\nfloat * Image::GenerateSelectBuild(float * inputdata1, float * inputdata2, float *controldata1)\n{\n    int width=width_;\n    int height=height_;\n    int components=components_;\n    int depth=1;\n\n    // create new memory\n    float * output_;\n    output_ = (float *) malloc (width*height*width);\n\n    // loop through all the floats then convert to grayscale setting the color basis to .5 (forcing values 0 to 1)\n    for(unsigned x = 0; x&lt;width; x++)\n    {\n        for(unsigned y = 0; y&lt;height; y++)\n        {\n            /// incremennt memory which seems to work\n            int index = x+y*width;\n\n            if((controldata1[index]-.5)&lt;0)\n            {\n                    output_[index]=inputdata1[index];\n            }else\n            {\n                    output_[index]=inputdata2[index]*.7;\n            }\n\n       }\n    }\n\n    return output_;\n}[/code]\n\nTerrain.cpp\n[code]bool Terrain::GenerateProceduralHeightMap()\n{\n    /// Generate Image\n    Image * perlinimage = new Image(context_);\n\n    bool success = false;\n\n    ///// Create Image\n    if(!perlinimage-&gt;GenerateProcedural(1024,1024,3,0.1f,0.1f,0.1f,0.4f,0.1f,0.2f,0.2f,0.2f))\n    {\n\n        return false;\n    }\n\n\n    perlinimage-&gt;SavePNG(String(\"/media/home2/vivienne/Existence/Bin/test.png\"));\n\n    success = SetHeightMapInternal(perlinimage, true);\n\n\n    return success;\n}\n[/code]\n\nterrain.h\n[code]    /// Load Terrain Using libnoise\n    bool GenerateProceduralHeightMap();</code></pre>", "post_number": 20, "post_type": 1, "updated_at": "2017-01-02T01:00:06.326Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 3, "reads": 30, "readers_count": 29, "score": 21.0, "yours": false, "topic_id": 335, "topic_slug": "procedural-generated-worlds", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "http://libnoise.sourceforge.net/tutorials/tutorial5.html", "internal": false, "reflection": false, "title": "libnoise: Tutorial 5: Creating more complex terrain", "clicks": 0}], "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 88, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 2119, "name": "", "username": "vivienneanthony", "avatar_template": "/user_avatar/discourse.urho3d.io/vivienneanthony/{size}/942_2.png", "created_at": "2014-08-18T23:47:21.000Z", "cooked": "<p>Code revised. So, it takes less then a second compared to 5 seconds!!! I think it can be made faster.</p>", "post_number": 21, "post_type": 1, "updated_at": "2017-01-02T01:00:06.677Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 25, "readers_count": 24, "score": 5.0, "yours": false, "topic_id": 335, "topic_slug": "procedural-generated-worlds", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 88, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 2124, "name": "", "username": "vivienneanthony", "avatar_template": "/user_avatar/discourse.urho3d.io/vivienneanthony/{size}/942_2.png", "created_at": "2014-08-20T18:16:03.000Z", "cooked": "<p>Added diamond terrain generation with <a href=\"http://en.wikipedia.org/wiki/Diamond-square_algorithm\" rel=\"nofollow noopener\">en.wikipedia.org/wiki/Diamond-square_algorithm</a></p>\n<ol>\n<li>\n<p>Code need to be modified to use offset and offset, disable warping temporarily,  divsion to scale density(maybe), and hash table for the random generation. <span class=\"bbcode-b\">(Have to be worked on since framework is made.)</span></p>\n</li>\n<li>\n<p>The new code you can use any amount of GeneratePerlinNoise and generateDiamondMethod using generateSelect as long as there is memory. <span class=\"bbcode-b\">(Have to be worked on since the framework is made.)</span></p>\n</li>\n</ol>\n<pre><code class=\"lang-auto\">/// Cold to create noise through the Diamond method. Requires offset and better hash table to create random heightmaps but repeatable\nbool Image::generateDiamondMethod1 (float * buffer,const int &amp;width, const int &amp;height, const float &amp;maxYcoords,const float &amp;minYcoords)\n{\n    //an initial seed value for the corners of the data\n    float SEED = 0.4f;\n    static const unsigned int DATA_SIZE=width+1;\n    std::vector&lt; std::vector&lt;float&gt; &gt; diamond( DATA_SIZE, std::vector&lt;float&gt;(DATA_SIZE) );\n\n    //initialise the values of the corners++\n    diamond[0][0] = SEED;\n    diamond[0][DATA_SIZE-1] = SEED;\n    diamond[DATA_SIZE-1][0] = SEED;\n    diamond[DATA_SIZE-1][DATA_SIZE-1] = SEED;\n\n    float h =300; \t//the range (-h -&gt; h) for the average offset\n    srand(256);\t\t//seed the random generator\n\n    //side length is the distance of a single square side\n    //or distance of diagonal in diamond\n    //each iteration we are looking at smaller squares and diamonds, we decrease the variation of the offset\n    for (int sideLength = DATA_SIZE-1; sideLength &gt;= 2; sideLength /= 2, h /= 2.0)\n    {\n\n        int halfSide = sideLength/2;\n\n        //generate new square values\n        for(int x=0; x&lt;DATA_SIZE-1; x+=sideLength)\n        {\n            for(int y=0; y&lt;DATA_SIZE-1; y+=sideLength)\n            {\n\n                //x,y is upper left corner of the square\n                //calculate average of existing corners\n                float avg = diamond[x][y] + \t\t\t\t//top left\n                            diamond[(x+sideLength)%DATA_SIZE][y]   +\t\t\t\t//top right\n                            diamond[x][ (y+sideLength)%DATA_SIZE]   + \t\t\t\t//lower left\n                            diamond[(x+sideLength)%DATA_SIZE][(y+sideLength)%DATA_SIZE]; \t//lower right\n\n                avg /= 4.0;\n\n                //center is average plus random offset in the range (-h, h)\n                float offset = (-h) + (float)rand() * (h - (-h))  / RAND_MAX;\n\n                diamond[x+halfSide][y+halfSide] = avg + offset;\n\n            } //for y\n        } // for x\n\n        //Generate the diamond values\n        //Since diamonds are staggered, we only move x by half side\n        //NOTE: if the data shouldn't wrap the x &lt; DATA_SIZE and y &lt; DATA_SIZE\n        for (int x=0; x&lt;DATA_SIZE-1; x+=halfSide)\n        {\n            for (int y=(x+halfSide)%sideLength; y&lt;DATA_SIZE-1; y+=sideLength)\n            {\n\n                //x,y is center of diamond\n                //we must use mod and add DATA_SIZE for subtraction\n                //so that we can wrap around the array to find the corners\n\n                float avg =\n                    diamond[(x-halfSide+DATA_SIZE)%DATA_SIZE][y] +\t//left of center\n                    diamond[(x+halfSide)%DATA_SIZE][y]\t\t\t\t+\t//right of center\n                    diamond[x][(y+halfSide)%DATA_SIZE]\t\t\t\t+\t//below center\n                    diamond[x][(y-halfSide+DATA_SIZE)%DATA_SIZE];\t//above center\n\n                avg /= 4.0;\n\n                //new value = average plus random offset\n                //calc random value in the range (-h,+h)\n                float offset = (-h) + (float)rand() * (h - (-h))  / RAND_MAX;\n\n                avg = avg + offset;\n\n                //update value for center of diamond\n                diamond[x][y] = avg;\n\n                //wrap values on the edges\n                //remove this and adjust loop condition above\n                //for non-wrapping values\n                if (x == 0) diamond[DATA_SIZE-1][y] = avg;\n                if (y == 0) diamond[x][DATA_SIZE-1] = avg;\n            } //for y\n        } //for x\n    } //for sideLength\n\n\n    /// Set maxY and minY to 0.0f\n    float maxY = diamond[1][1];\n    float minY = diamond[1][1];\n\n    for (int x = 0; x&lt;DATA_SIZE; x++)\n    {\n        for(int y = 0; y&lt;DATA_SIZE; y++)\n        {\n            if ((float)diamond[x][y] &gt; maxY)\n            {\n                maxY = diamond[x][y];\n            }\n            if ((float)diamond[x][y] &lt; minY)\n            {\n                minY = diamond[x][y];\n            }\n        }\n    }\n\n    /// Calculate height from 0 to 1\n    for(int x=0; x &lt; DATA_SIZE; x++)\n    {\n        for(int y=0; y &lt; DATA_SIZE; y++)\n        {\n            //change range to 0..1\n            diamond[x][y] = (diamond[x][y] - minY) / (maxY - minY);\n        }\n    }\n\n    /// Copy color float from create texture\n    for(unsigned y = 0; y&lt;width; y++)\n    {\n        for(unsigned x = 0; x&lt;height; x++)\n        {\n            /// incremennt memory which seems to work\n            int index = (y*width)+x;\n\n            buffer[index]=diamond[x][y];\n        }\n    }\n\n    return true;</code></pre>\n<p>As to textures, maybe someone has a idea of how to deal with textures for randomly generated terrain.</p>", "post_number": 22, "post_type": 1, "updated_at": "2017-01-02T01:00:07.051Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 1, "reads": 37, "readers_count": 36, "score": 12.4, "yours": false, "topic_id": 335, "topic_slug": "procedural-generated-worlds", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "http://en.wikipedia.org/wiki/Diamond-square_algorithm", "internal": false, "reflection": false, "title": "Diamond-square algorithm - Wikipedia", "clicks": 0}], "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 88, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 2125, "name": "", "username": "vivienneanthony", "avatar_template": "/user_avatar/discourse.urho3d.io/vivienneanthony/{size}/942_2.png", "created_at": "2014-08-20T22:28:45.000Z", "cooked": "<p>This is the latest code results. Once I get a smooth transistion function like (<a href=\"http://libnoise.sourceforge.net/tutorials/tutorial5.html\" rel=\"nofollow noopener\">libnoise.sourceforge.net/tutoria \u2026 rial5.html</a>) it will be added to the mix of things. The function is made but needs to be coded for floats and the algorithm currently used.</p>\n<div class=\"lazyYT\" data-youtube-id=\"JW9qzqHlc-M\" data-youtube-title=\"Urho3d Procedural Terrain Perlin Noise - Hard Code Test C\" data-width=\"480\" data-height=\"270\" data-parameters=\"feature=oembed&amp;wmode=opaque\"></div>", "post_number": 23, "post_type": 1, "updated_at": "2018-03-05T19:44:56.152Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 1, "reads": 36, "readers_count": 35, "score": 12.2, "yours": false, "topic_id": 335, "topic_slug": "procedural-generated-worlds", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 2, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "http://libnoise.sourceforge.net/tutorials/tutorial5.html", "internal": false, "reflection": false, "title": "libnoise: Tutorial 5: Creating more complex terrain", "clicks": 3}, {"url": "https://www.youtube.com/watch?v=JW9qzqHlc-M", "internal": false, "reflection": false, "title": "YouTube", "clicks": 0}], "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 88, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}], "stream": [1803, 1804, 1808, 2045, 2048, 2049, 2051, 2052, 2053, 2055, 2066, 2076, 2078, 2081, 2099, 2101, 2105, 2107, 2109, 2115, 2119, 2124, 2125]}, "timeline_lookup": [[1, 3063], [3, 3062], [4, 3025], [11, 3024], [13, 3023], [15, 3022], [17, 3021], [19, 3020], [20, 3018], [22, 3016]], "tags_descriptions": {}, "id": 335, "title": "Procedural Generated Worlds", "fancy_title": "Procedural Generated Worlds", "posts_count": 23, "created_at": "2014-07-05T12:20:37.000Z", "views": 1995, "reply_count": 0, "like_count": 2, "last_posted_at": "2014-08-20T22:28:45.000Z", "visible": true, "closed": false, "archived": false, "has_summary": false, "archetype": "regular", "slug": "procedural-generated-worlds", "category_id": 11, "word_count": 6022, "deleted_at": null, "user_id": 88, "featured_link": null, "pinned_globally": false, "pinned_at": null, "pinned_until": null, "image_url": null, "slow_mode_seconds": 0, "draft": null, "draft_key": "topic_335", "draft_sequence": null, "unpinned": null, "pinned": false, "current_post_number": 1, "highest_post_number": 23, "deleted_by": null, "actions_summary": [{"id": 4, "count": 0, "hidden": false, "can_act": false}, {"id": 8, "count": 0, "hidden": false, "can_act": false}, {"id": 7, "count": 0, "hidden": false, "can_act": false}], "chunk_size": 20, "bookmarked": false, "bookmarks": [], "topic_timer": null, "message_bus_last_id": 0, "participant_count": 3, "show_read_indicator": false, "thumbnails": null, "slow_mode_enabled_until": null, "tags_disable_ads": false, "details": {"can_edit": false, "notification_level": 1, "participants": [{"id": 88, "username": "vivienneanthony", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/vivienneanthony/{size}/942_2.png", "post_count": 20, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "trust_level": 2}, {"id": 15, "username": "friesencr", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/friesencr/{size}/827_2.png", "post_count": 2, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "trust_level": 1}, {"id": 3, "username": "cadaver", "name": "Lasse \u00d6\u00f6rni", "avatar_template": "/user_avatar/discourse.urho3d.io/cadaver/{size}/3_2.png", "post_count": 1, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "admin": true, "trust_level": 2}], "created_by": {"id": 88, "username": "vivienneanthony", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/vivienneanthony/{size}/942_2.png"}, "last_poster": {"id": 88, "username": "vivienneanthony", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/vivienneanthony/{size}/942_2.png"}, "links": [{"url": "http://libnoise.sourceforge.net/tutorials/tutorial5.html", "title": "libnoise: Tutorial 5: Creating more complex terrain", "internal": false, "attachment": false, "reflection": false, "clicks": 5, "user_id": 88, "domain": "libnoise.sourceforge.net", "root_domain": "sourceforge.net"}, {"url": "https://aftbit.com/cell-noise-2/", "title": "An In Depth Cell Noise Tutorial | AFTbit", "internal": false, "attachment": false, "reflection": false, "clicks": 3, "user_id": 88, "domain": "aftbit.com", "root_domain": "aftbit.com"}, {"url": "https://www.youtube.com/watch?v=0bQz5ugtfLY", "title": "YouTube", "internal": false, "attachment": false, "reflection": false, "clicks": 2, "user_id": 88, "domain": "www.youtube.com", "root_domain": "youtube.com"}, {"url": "https://www.youtube.com/user/cgprojectsfx", "title": "YouTube", "internal": false, "attachment": false, "reflection": false, "clicks": 1, "user_id": 88, "domain": "www.youtube.com", "root_domain": "youtube.com"}, {"url": "http://discourse.urho3d.io/t/adding-libnoise-to-the-terrain-component-or-perlin-noise/361/6", "title": "Adding Libnoise to the Terrain component or Perlin noise", "internal": true, "attachment": false, "reflection": true, "clicks": 1, "user_id": 88, "domain": "discourse.urho3d.io", "root_domain": "urho3d.io"}, {"url": "http://www.tannerhelland.com/3643/grayscale-image-algorithm-vb6/", "title": "Seven grayscale conversion algorithms (with pseudocode and VB6 source code) \u2013 Tanner Helland (dot) com", "internal": false, "attachment": false, "reflection": false, "clicks": 1, "user_id": 88, "domain": "www.tannerhelland.com", "root_domain": "tannerhelland.com"}, {"url": "http://notes.ericwillis.com/2009/11/pixelate-an-image-with-csharp/", "title": null, "internal": false, "attachment": false, "reflection": false, "clicks": 1, "user_id": 88, "domain": "notes.ericwillis.com", "root_domain": "ericwillis.com"}, {"url": "https://sourceforge.net/projects/proteusgameengine/files/Existence/Source/Engine/ThirdParty/STB/", "title": "Proteus (Game Engine) - Existence - Browse /Existence/Source/Engine/ThirdParty/STB at SourceForge.net", "internal": false, "attachment": false, "reflection": false, "clicks": 1, "user_id": 88, "domain": "sourceforge.net", "root_domain": "sourceforge.net"}]}, "suggested_topics": [{"id": 7099, "title": ":fallen_leaf: Polynomials & Harmonics", "fancy_title": ":fallen_leaf: Polynomials &amp; Harmonics", "slug": "polynomials-harmonics", "posts_count": 6, "reply_count": 0, "highest_post_number": 7, "image_url": null, "created_at": "2021-12-13T05:06:04.641Z", "last_posted_at": "2021-12-27T23:27:39.489Z", "bumped": true, "bumped_at": "2021-12-27T23:27:39.489Z", "archetype": "regular", "unseen": false, "pinned": false, "unpinned": null, "visible": true, "closed": false, "archived": false, "bookmarked": null, "liked": null, "unicode_title": "\ud83c\udf42 Polynomials & Harmonics", "tags_descriptions": {}, "like_count": 6, "views": 392, "category_id": 13, "featured_link": null, "has_accepted_answer": false, "posters": [{"extras": "latest single", "description": "Original Poster, Most Recent Poster", "user": {"id": 192, "username": "Modanung", "name": "\u9b54\u5927\u519c \ud835\udf8d\ud835\udf8e\ud835\udf73 \u73fe\u62db\u870d", "avatar_template": "/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png"}}]}, {"id": 7175, "title": "Urholonia! Avalonia UI inside Urho.NET", "fancy_title": "Urholonia! Avalonia UI inside Urho.NET", "slug": "urholonia-avalonia-ui-inside-urho-net", "posts_count": 1, "reply_count": 0, "highest_post_number": 1, "image_url": "https://global.discourse-cdn.com/standard17/uploads/urho3d/optimized/2X/1/16ba305655d479c49a51c096c5176dcb6d895db2_2_1024x512.jpeg", "created_at": "2022-01-30T09:21:06.368Z", "last_posted_at": "2022-01-30T09:21:06.435Z", "bumped": true, "bumped_at": "2022-01-30T09:21:06.435Z", "archetype": "regular", "unseen": false, "pinned": false, "unpinned": null, "visible": true, "closed": false, "archived": false, "bookmarked": null, "liked": null, "tags_descriptions": {}, "like_count": 0, "views": 197, "category_id": 17, "featured_link": null, "has_accepted_answer": false, "posters": [{"extras": "latest single", "description": "Original Poster, Most Recent Poster", "user": {"id": 1334, "username": "najak3d", "name": "Brian Knox", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/n/6a8cbe/{size}.png"}}]}, {"id": 7177, "title": "Attaching a shader to a BorderImage", "fancy_title": "Attaching a shader to a BorderImage", "slug": "attaching-a-shader-to-a-borderimage", "posts_count": 4, "reply_count": 1, "highest_post_number": 4, "image_url": null, "created_at": "2022-01-31T17:49:50.734Z", "last_posted_at": "2022-02-01T02:22:10.927Z", "bumped": true, "bumped_at": "2022-02-01T02:22:10.927Z", "archetype": "regular", "unseen": false, "pinned": false, "unpinned": null, "visible": true, "closed": false, "archived": false, "bookmarked": null, "liked": null, "tags_descriptions": {}, "like_count": 0, "views": 151, "category_id": 10, "featured_link": null, "has_accepted_answer": false, "posters": [{"extras": null, "description": "Original Poster", "user": {"id": 1165, "username": "throwawayerino", "name": "Actually Permanent", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/t/da6949/{size}.png"}}, {"extras": null, "description": "Frequent Poster", "user": {"id": 484, "username": "Eugene", "name": "Eugene Kozlov", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png"}}, {"extras": "latest", "description": "Most Recent Poster", "user": {"id": 631, "username": "JTippetts1", "name": "J Tippetts", "avatar_template": "/user_avatar/discourse.urho3d.io/jtippetts1/{size}/96_2.png"}}]}, {"id": 7182, "title": "How install landscape in the format (.tor or .obj)?", "fancy_title": "How install landscape in the format (.tor or .obj)?", "slug": "how-install-landscape-in-the-format-tor-or-obj", "posts_count": 4, "reply_count": 1, "highest_post_number": 4, "image_url": null, "created_at": "2022-02-03T16:58:20.976Z", "last_posted_at": "2022-02-04T16:34:09.663Z", "bumped": true, "bumped_at": "2022-02-04T16:34:09.663Z", "archetype": "regular", "unseen": false, "pinned": false, "unpinned": null, "visible": true, "closed": false, "archived": false, "bookmarked": null, "liked": null, "tags_descriptions": {}, "like_count": 2, "views": 151, "category_id": 10, "featured_link": null, "has_accepted_answer": true, "posters": [{"extras": null, "description": "Original Poster", "user": {"id": 1497, "username": "timob256", "name": "", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/t/b782af/{size}.png"}}, {"extras": "latest", "description": "Most Recent Poster, Accepted Answer", "user": {"id": 1317, "username": "Lys0gen", "name": "", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/l/57b2e6/{size}.png"}}, {"extras": null, "description": "Frequent Poster", "user": {"id": 628, "username": "SirNate0", "name": "SirNate0", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}}]}, {"id": 7277, "title": "MessageBox issue when building for Windows", "fancy_title": "MessageBox issue when building for Windows", "slug": "messagebox-issue-when-building-for-windows", "posts_count": 6, "reply_count": 1, "highest_post_number": 6, "image_url": null, "created_at": "2022-06-05T07:25:41.629Z", "last_posted_at": "2022-06-11T08:37:06.685Z", "bumped": true, "bumped_at": "2022-06-11T08:45:09.060Z", "archetype": "regular", "unseen": false, "pinned": false, "unpinned": null, "visible": true, "closed": false, "archived": false, "bookmarked": null, "liked": null, "tags_descriptions": {}, "like_count": 0, "views": 152, "category_id": 7, "featured_link": null, "has_accepted_answer": false, "posters": [{"extras": "latest", "description": "Original Poster, Most Recent Poster", "user": {"id": 527, "username": "zedraken", "name": "Charles", "avatar_template": "/user_avatar/discourse.urho3d.io/zedraken/{size}/328_2.png"}}, {"extras": null, "description": "Frequent Poster", "user": {"id": 1358, "username": "JSandusky", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/jsandusky/{size}/3220_2.png"}}]}]}