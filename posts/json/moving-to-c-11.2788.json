{"post_stream": {"posts": [{"id": 16005, "name": "Eugene Kozlov", "username": "Eugene", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png", "created_at": "2017-02-13T11:46:42.248Z", "cooked": "<p>Inspired by <a href=\"https://github.com/urho3d/Urho3D/pull/1818\" rel=\"nofollow noopener\">https://github.com/urho3d/Urho3D/pull/1818</a><br>\nAre there any plans to migrate to C++11 and break old compilers support?</p>\n<p>Urho doesn\u2019t seem to be rapidly developed right now. It may make sense to publish some stable C++98 version and then go to C++11.</p>", "post_number": 1, "post_type": 1, "updated_at": "2017-04-26T08:42:20.496Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 173, "reads": 98, "readers_count": 97, "score": 884.6, "yours": false, "topic_id": 2788, "topic_slug": "moving-to-c-11", "display_username": "Eugene Kozlov", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 3, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "https://github.com/urho3d/Urho3D/pull/1818", "internal": false, "reflection": false, "title": "Update Assimp by Florastamine \u00b7 Pull Request #1818 \u00b7 urho3d/Urho3D \u00b7 GitHub", "clicks": 43}, {"url": "http://discourse.urho3d.io/t/urho3d-1-7-release-pending-work/2790", "internal": true, "reflection": true, "title": "Urho3D 1.7 release pending work", "clicks": 3}], "read": true, "user_title": "Core developer", "title_is_group": false, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 484, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 16006, "name": "Lasse \u00d6\u00f6rni", "username": "cadaver", "avatar_template": "/user_avatar/discourse.urho3d.io/cadaver/{size}/3_2.png", "created_at": "2017-02-13T12:23:04.925Z", "cooked": "<p>Apart from JSandusky\u2019s upcoming PRs, it\u2019s true there\u2019s not a lot going on, so yes it sounds like a good idea to push a stable version out in near future.</p>\n<p>After that it\u2019s fine by me to break old compiler support, at least I test old VS versions very rarely by now.</p>", "post_number": 2, "post_type": 1, "updated_at": "2017-02-13T12:23:52.608Z", "reply_count": 1, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 92, "readers_count": 91, "score": 98.4, "yours": false, "topic_id": 2788, "topic_slug": "moving-to-c-11", "display_username": "Lasse \u00d6\u00f6rni", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Urho3D Author", "title_is_group": false, "bookmarked": false, "actions_summary": [{"id": 2, "count": 3}], "moderator": false, "admin": true, "staff": true, "user_id": 3, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 16007, "name": "Eugene Kozlov", "username": "Eugene", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png", "created_at": "2017-02-13T13:01:28.530Z", "cooked": "<p>Then I want to raise another question.</p>\n<p>C++ has nasty trend to bring style ambigity in new standards. I think that codestyle guidlines have to be updated <em>and most of new C++11 features shan\u2019t be used in Urho core code</em>.</p>\n<p>For example, there are some ambigity in the following cases:</p>\n<ul>\n<li>Variable declaration: explicit-type <strong>vs</strong> auto</li>\n<li>Type declaration: typedef <strong>vs</strong> using</li>\n<li>Variable initialization: <code>A a = 10</code> <strong>vs</strong> <code>A a(10)</code> <strong>vs</strong> <code>A a{10}</code>\n</li>\n<li>Member initialization: <code>: a_(10)</code> <strong>vs</strong> <code>a_ = 10</code> <strong>vs</strong> <code>a_{10}</code>\n</li>\n</ul>\n<p>I suggest to <em>avoid</em> in Urho core things like auto, inplace member initialization, curly braces initialization. All <code>typedef</code>s are probably may be converted to <code>using</code> since it is not hard \u2018regexpable\u2019 change. Also, <code>nullptr</code> IMO shall be used instead of pure 0. Some <code>override</code>s are also useful.</p>\n<p>I suggest it not because I hate C++11, but because I thing that style consistency of Urho costs more than minor benefit from syntax sugar like auto.</p>", "post_number": 3, "post_type": 1, "updated_at": "2017-02-13T13:01:28.530Z", "reply_count": 2, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 85, "readers_count": 84, "score": 27.0, "yours": false, "topic_id": 2788, "topic_slug": "moving-to-c-11", "display_username": "Eugene Kozlov", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Core developer", "title_is_group": false, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 484, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 16008, "name": "", "username": "1vanK", "avatar_template": "/user_avatar/discourse.urho3d.io/1vank/{size}/768_2.png", "created_at": "2017-02-13T13:08:03.239Z", "cooked": "<p>I like initialisation members in class</p>\n<pre><code class=\"lang-auto\">class A\n{\n    int b_ = DEFAULT_VALUE;\n}\n</code></pre>\n<p>This allows not forget initialisation for members (such errors have repeatedly been)</p>", "post_number": 4, "post_type": 1, "updated_at": "2017-02-13T13:08:03.239Z", "reply_count": 1, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 3, "reads": 83, "readers_count": 82, "score": 36.6, "yours": false, "topic_id": 2788, "topic_slug": "moving-to-c-11", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": true, "admin": false, "staff": true, "user_id": 263, "hidden": false, "trust_level": 4, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 16009, "name": "", "username": "1vanK", "avatar_template": "/user_avatar/discourse.urho3d.io/1vank/{size}/768_2.png", "created_at": "2017-02-13T13:11:06.590Z", "cooked": "<p>auto can be used in iterators i think</p>", "post_number": 5, "post_type": 1, "updated_at": "2017-02-13T13:11:06.590Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 1, "reads": 80, "readers_count": 79, "score": 21.0, "yours": false, "topic_id": 2788, "topic_slug": "moving-to-c-11", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": true, "admin": false, "staff": true, "user_id": 263, "hidden": false, "trust_level": 4, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 16010, "name": "Eugene Kozlov", "username": "Eugene", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png", "created_at": "2017-02-13T13:16:54.085Z", "cooked": "<p>I like inplace member init too! However, Urho shall IMO use either such notation everywhere or nowhere. So another option is to rewrite class declarations step by step into new style.</p>\n<blockquote>\n<p>auto can be used in iterators i think</p>\n</blockquote>\n<p>Such exceptions will also lead to inconsistent codestyle.</p>", "post_number": 6, "post_type": 1, "updated_at": "2017-02-13T13:17:16.627Z", "reply_count": 0, "reply_to_post_number": 4, "quote_count": 0, "incoming_link_count": 0, "reads": 79, "readers_count": 78, "score": 15.8, "yours": false, "topic_id": 2788, "topic_slug": "moving-to-c-11", "display_username": "Eugene Kozlov", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Core developer", "title_is_group": false, "reply_to_user": {"username": "1vanK", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/1vank/{size}/768_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 484, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 16024, "name": "", "username": "Enhex", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png", "created_at": "2017-02-13T20:36:26.836Z", "cooked": "<p>First of all I disagree with the \u201call or nothing\u201d approach because it usually means not doing anything because it will take huge effort and in the meanwhile you just pile up more legacy code, which makes it a huger effort which means it becomes less likelier, which means more legacy code, recursively, which converges to the \u201cnothing\u201d part of the \u201call or nothing\u201d.</p>\n<p>I\u2019m in favor of writing new code in the most optimal way, and going back to refactor old code when revisiting it or when there\u2019s nothing better to do.</p>\n<p>regarding new C++11 features you mentioned, they aren\u2019t a style choice.</p>\n<p><strong>auto</strong></p>\n<ul>\n<li>removes the need to maintain and refactor code when changing types</li>\n<li>eliminates the possibility of implicit conversion bugs</li>\n<li>less writing. Container iterators are a good example</li>\n<li>more readable. Container iterators are a good example</li>\n<li>easy to use. No need to look up what type is being returned and such</li>\n</ul>\n<p>I only know 2 cases when you shouldn\u2019t use auto - if you write something like an number type (f.e. auto = 0), in which case the intention behind the value itself is ambiguous (0/0.f/0.0? char/short/int/long?).<br>\nSecond case is expression templates, in which they return some abstract reference instead of evaluating the expression.</p>\n<p><strong>Alias declarations (using)</strong><br>\nPersonally I prefer their syntax because it\u2019s similar to variable assignment.<br>\nAlias declaration is compatible with templates, so AFAIK it\u2019s always better than using typedef so there\u2019s no reason to use typedef anymore.<br>\n<a href=\"http://stackoverflow.com/questions/10747810/what-is-the-difference-between-typedef-and-using-in-c11\" class=\"onebox\" target=\"_blank\" rel=\"nofollow noopener\">http://stackoverflow.com/questions/10747810/what-is-the-difference-between-typedef-and-using-in-c11</a></p>\n<p><strong>List initialization</strong><br>\nThis one is nuanced, and shouldn\u2019t be used everywhere possible.<br>\n<a href=\"http://stackoverflow.com/questions/18222926/why-is-list-initialization-using-curly-braces-better-than-the-alternatives\" class=\"onebox\" target=\"_blank\" rel=\"nofollow noopener\">http://stackoverflow.com/questions/18222926/why-is-list-initialization-using-curly-braces-better-than-the-alternatives</a></p>\n<p>They\u2019re usually preferable because they provide better type safety &amp; correctness.<br>\nOn the other hand you can write a constructor that takes an initializer_list and that means calling class{x,y,z} <strong><em>may</em></strong> not be the same as class(x,y,z)</p>\n<p>Other features that can be useful constexpr, lambdas, unique_ptr, ranged for loops, Expression SFINAE\u2026</p>\n<p>BTW, we could use <a href=\"http://clang.llvm.org/extra/clang-tidy/\" rel=\"nofollow noopener\">Clang Tidy</a> to automatically refactor things to C++11.<br>\nPerhaps it can be used with CI too (?)</p>", "post_number": 7, "post_type": 1, "updated_at": "2017-02-13T20:49:45.426Z", "reply_count": 1, "reply_to_post_number": 3, "quote_count": 0, "incoming_link_count": 5, "reads": 70, "readers_count": 69, "score": 44.0, "yours": false, "topic_id": 2788, "topic_slug": "moving-to-c-11", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 2, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "http://stackoverflow.com/questions/10747810/what-is-the-difference-between-typedef-and-using-in-c11", "internal": false, "reflection": false, "title": "c++ - What is the difference between 'typedef' and 'using' in C++11? - Stack Overflow", "clicks": 13}, {"url": "http://stackoverflow.com/questions/18222926/why-is-list-initialization-using-curly-braces-better-than-the-alternatives", "internal": false, "reflection": false, "title": "c++ - Why is list initialization (using curly braces) better than the alternatives? - Stack Overflow", "clicks": 11}, {"url": "http://clang.llvm.org/extra/clang-tidy/", "internal": false, "reflection": false, "title": "Clang-Tidy \u2014 Extra Clang Tools 5 documentation", "clicks": 4}], "read": true, "user_title": null, "reply_to_user": {"username": "Eugene", "name": "Eugene Kozlov", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 184, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 16025, "name": "", "username": "1vanK", "avatar_template": "/user_avatar/discourse.urho3d.io/1vank/{size}/768_2.png", "created_at": "2017-02-13T20:50:27.025Z", "cooked": "<p>When auto are everywhere it is very difficult to know what type of returns some functions. Currently I open any file on github and know it without looking function definition</p>", "post_number": 8, "post_type": 1, "updated_at": "2017-02-13T20:50:27.025Z", "reply_count": 1, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 62, "readers_count": 61, "score": 17.4, "yours": false, "topic_id": 2788, "topic_slug": "moving-to-c-11", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": true, "admin": false, "staff": true, "user_id": 263, "hidden": false, "trust_level": 4, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 16026, "name": "", "username": "Enhex", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png", "created_at": "2017-02-13T20:54:56.117Z", "cooked": "<p>In Visual Studio you just have to hover over a variable/function too see a tooltip with the type.<br>\nI assume this is a basic IDE feature.</p>", "post_number": 9, "post_type": 1, "updated_at": "2017-02-13T20:55:14.824Z", "reply_count": 1, "reply_to_post_number": 8, "quote_count": 0, "incoming_link_count": 0, "reads": 61, "readers_count": 60, "score": 17.2, "yours": false, "topic_id": 2788, "topic_slug": "moving-to-c-11", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "reply_to_user": {"username": "1vanK", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/1vank/{size}/768_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 184, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 16027, "name": "", "username": "1vanK", "avatar_template": "/user_avatar/discourse.urho3d.io/1vank/{size}/768_2.png", "created_at": "2017-02-13T21:03:34.677Z", "cooked": "<p>Even when I am writing my project in Visual Studio  I am using Alt+F7 in Total Commander for search in engine sources and F3 for looking, so no any tooltip xD</p>", "post_number": 10, "post_type": 1, "updated_at": "2017-02-13T21:03:34.677Z", "reply_count": 0, "reply_to_post_number": 9, "quote_count": 0, "incoming_link_count": 0, "reads": 57, "readers_count": 56, "score": 11.4, "yours": false, "topic_id": 2788, "topic_slug": "moving-to-c-11", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "reply_to_user": {"username": "Enhex", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": true, "admin": false, "staff": true, "user_id": 263, "hidden": false, "trust_level": 4, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 16028, "name": "Eugene Kozlov", "username": "Eugene", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png", "created_at": "2017-02-13T22:28:35.756Z", "cooked": "<aside class=\"quote\" data-post=\"7\" data-topic=\"2788\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/enhex/40/81_1.png\" class=\"avatar\"> Enhex:</div>\n<blockquote>\n<p>First of all I disagree with the \u201call or nothing\u201d approach because it usually means not doing anything</p>\n</blockquote>\n</aside>\n<p>I mean that there shall be somebody who has enough passion to refactor old codebase step by step to new style. E.g. I prefer inplace initialization and I am ready to periodically migrate old stuff.</p>\n<blockquote>\n<p>auto</p>\n</blockquote>\n<p>Absence of <code>auto</code> was the best thing in Urho codestyle. Yes, I dislike auto.</p>\n<blockquote>\n<p>removes the need to maintain and refactor code when changing types<br>\neliminates the possibility of implicit conversion bugs</p>\n</blockquote>\n<p>I have never faced such bugs, so I think they are quite rare. However, I can also imagine bugs that are caused by implicit changing of type of <code>auto</code> variable. So it eliminates one kind of bugs and introduce another.</p>\n<pre><code class=\"lang-auto\">String A::foo(); // -&gt; const char* foo()\n...\nauto a = foo();\nif (a == \"1\") { ... }\n</code></pre>\n<blockquote>\n<p>less writing. Container iterators are a good example</p>\n</blockquote>\n<p>Of course, impossible to argue. I use auto when WIP or for some simple local projects.</p>\n<blockquote>\n<p>more readable. Container iterators are a good example- easy to use.</p>\n</blockquote>\n<p>No, no, no, NO. <code>auto</code> is more readable for some complex temporary types and <em>it completely ruins readability in most other cases</em>. It literally brings strong-typed language into don\u2019t-give-a-fuck-about-type script language like python.</p>\n<ul>\n<li>It\u2019s harder to explore code via file manager</li>\n<li>It\u2019s harder to code via browser</li>\n<li>It\u2019s harder to review diff in classical merge tools</li>\n<li>It\u2019s harder to review diff in browser</li>\n<li>It\u2019s harder to visually check dependencies of some piece of code</li>\n<li>It\u2019s harder to determine type usage among codebase</li>\n<li>Search became useless</li>\n</ul>\n<p>Programmer saves a minute by writing <code>auto</code>. Readers waste an hour/day/??? by reading this mess.<br>\nSo\u2026 Almost-Never-Auto is my choise.<br>\nAlmost-Always-Auto guys say that reader don\u2019t need to know about the type.<br>\nI say that if writer is writing code for people, he has no right to decide whether the reader needs type or not.<br>\nAlmost-Always-Auto guys say that variable name is enough.<br>\nI say that type name is a \u2018part\u2019 of variable name and dropping of type is almost like dropping the name.</p>\n<p>The worst thing is that experienced developeds have an immunity to such <code>auto</code> disadvantages because they are familiar with codebase and they really don\u2019t need explicit type. Problems started to appear as time passes, old developers forget codebase and new developers come.</p>\n<p>In such big project as Urho, usage of auto IMO shall be strictly limited. Otherwise, its currently perfect readability will be partially destroyed.</p>\n<blockquote>\n<p>This one is nuanced, and shouldn\u2019t be used everywhere possible.</p>\n</blockquote>\n<p>It is just almost unneeded. So I see no reason to bring inconsistency to codebase.</p>\n<p>Huh, I finihed.</p>", "post_number": 11, "post_type": 1, "updated_at": "2017-02-13T22:30:35.200Z", "reply_count": 1, "reply_to_post_number": 7, "quote_count": 1, "incoming_link_count": 0, "reads": 64, "readers_count": 63, "score": 17.8, "yours": false, "topic_id": 2788, "topic_slug": "moving-to-c-11", "display_username": "Eugene Kozlov", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Core developer", "title_is_group": false, "reply_to_user": {"username": "Enhex", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 484, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 16029, "name": "", "username": "Enhex", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png", "created_at": "2017-02-14T00:04:21.975Z", "cooked": "<p>I encountered bugs that auto would avoid, implicit conversions.<br>\nYour auto \u201cbug\u201d example is wrong, it just shows you don\u2019t understand what auto is. if you don\u2019t want to use the type foo returns you shouldn\u2019t use auto.</p>\n<p>auto doesn\u2019t disable strong typing, I\u2019m not sure if you know what that means.<br>\nIt isn\u2019t dynamic typing, you can\u2019t change the type of a variable defined with auto, and it\u2019s statically checked.</p>\n<p>all auto does it tell the compiler \u201cthis variable is of the same type that is being assigned to it\u201d. If that\u2019s your intent, auto is <strong>the correct</strong> way to write your code.</p>\n<p>Did you use auto? I never encountered any of the \u201charder\u201d problems you describe.<br>\nI suspect the reason is because they\u2019re problems caused by not using auto in the first place, like changing the return value of a function and now you have to use search to replaces all the types of the variables that use it.</p>\n<p>Herb Sutter had a talk in CppCon 2014 - \u201cBack to the Basics! Essentials of Modern C++ Style\u201d, at ~28:20 he talks about auto:</p><div class=\"onebox lazyYT lazyYT-container\" data-youtube-id=\"xnqTKD8uD64\" data-youtube-title='CppCon 2014: Herb Sutter \"Back to the Basics! Essentials of Modern C++ Style\"' data-parameters=\"feature=oembed&amp;wmode=opaque&amp;start=1703\">\n  <a href=\"https://www.youtube.com/watch?v=xnqTKD8uD64\" target=\"_blank\" rel=\"noopener nofollow ugc\">\n    <img class=\"ytp-thumbnail-image\" src=\"https://img.youtube.com/vi/xnqTKD8uD64/hqdefault.jpg\" title='CppCon 2014: Herb Sutter \"Back to the Basics! Essentials of Modern C++ Style\"' width=\"480\" height=\"360\">\n  </a>\n</div>\n\n<aside class=\"quote no-group\" data-username=\"Eugene\" data-post=\"11\" data-topic=\"2788\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/eugene/40/902_2.png\" class=\"avatar\"> Eugene:</div>\n<blockquote>\n<p>It is just almost unneeded. So I see no reason to bring inconsistency to codebase.</p>\n</blockquote>\n</aside>\n<p>Show me a better way to initialize a vector with the following values than this:</p>\n<pre><code class=\"lang-auto\">std::vector&lt;int&gt; v{5, 10, 3, 9, -3, 2500};\n</code></pre>", "post_number": 12, "post_type": 1, "updated_at": "2017-02-14T00:04:21.975Z", "reply_count": 3, "reply_to_post_number": 11, "quote_count": 1, "incoming_link_count": 0, "reads": 59, "readers_count": 58, "score": 26.8, "yours": false, "topic_id": 2788, "topic_slug": "moving-to-c-11", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "https://www.youtube.com/watch?v=xnqTKD8uD64", "internal": false, "reflection": false, "title": "CppCon 2014: Herb Sutter \"Back to the Basics! Essentials of Modern C++ Style\" - YouTube", "clicks": 0}], "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 184, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 16031, "name": "", "username": "1vanK", "avatar_template": "/user_avatar/discourse.urho3d.io/1vank/{size}/768_2.png", "created_at": "2017-02-14T05:43:08.273Z", "cooked": "<aside class=\"quote\" data-post=\"12\" data-topic=\"2788\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/enhex/40/81_1.png\" class=\"avatar\"> Enhex:</div>\n<blockquote>\n<p>Herb Sutter had a talk in CppCon 2014 - \u201cBack to the Basics! Essentials of Modern C++ Style\u201d, at ~28:20 he talks about auto:</p>\n</blockquote>\n</aside>\n<p>He can say any thing, but if I had to guess the type or move mouse to read the tooltip, it does not simplify my life <img src=\"https://emoji.discourse-cdn.com/twitter/slight_smile.png?v=5\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\"> it just slows down the perception of the code</p>", "post_number": 13, "post_type": 1, "updated_at": "2017-02-14T05:43:08.273Z", "reply_count": 0, "reply_to_post_number": 12, "quote_count": 1, "incoming_link_count": 0, "reads": 54, "readers_count": 53, "score": 10.8, "yours": false, "topic_id": 2788, "topic_slug": "moving-to-c-11", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "reply_to_user": {"username": "Enhex", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": true, "admin": false, "staff": true, "user_id": 263, "hidden": false, "trust_level": 4, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 16032, "name": "", "username": "1vanK", "avatar_template": "/user_avatar/discourse.urho3d.io/1vank/{size}/768_2.png", "created_at": "2017-02-14T05:47:10.514Z", "cooked": "<p>I open random files:</p>\n<pre><code class=\"lang-auto\">    XMLElement rootElem = file-&gt;GetRoot();\n    XMLElement paramElem = rootElem.GetChild();\n</code></pre>\n<pre><code class=\"lang-auto\">    UI* ui = GetSubsystem&lt;UI&gt;();\n    UIElement* uiRoot = ui-&gt;GetRoot();\n</code></pre>\n<p>Imagine this code with auto.</p>", "post_number": 14, "post_type": 1, "updated_at": "2017-02-14T05:47:10.514Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 56, "readers_count": 55, "score": 11.2, "yours": false, "topic_id": 2788, "topic_slug": "moving-to-c-11", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": true, "admin": false, "staff": true, "user_id": 263, "hidden": false, "trust_level": 4, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 16040, "name": "Eugene Kozlov", "username": "Eugene", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png", "created_at": "2017-02-14T08:44:11.270Z", "cooked": "<aside class=\"quote\" data-post=\"12\" data-topic=\"2788\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/enhex/40/81_1.png\" class=\"avatar\"> Enhex:</div>\n<blockquote>\n<p>Show me a better way to initialize a vector with the following values than this</p>\n</blockquote>\n</aside>\n<p><code>std::vector&lt;int&gt; v = {5, 10, 3, 9, -3, 2500};</code><br>\nis good enough</p>\n<blockquote>\n<p>auto doesn\u2019t disable strong typing, I\u2019m not sure if you know what that means.</p>\n</blockquote>\n<p>I didn\u2019t say \u2018disable\u2019. I meant that strong-typed language with <code>auto</code> loses its readability advantages and became scripty.</p>\n<blockquote>\n<p>Did you use auto?</p>\n</blockquote>\n<p>Yes.<br>\nI always use <code>auto</code> in small projects that I am not going to maintain. It\u2019s okay.<br>\nI also use <code>auto</code> at work because it is our style. I put up with it.</p>\n<blockquote>\n<p>I never encountered any of the \u201charder\u201d problems you describe.</p>\n</blockquote>\n<p>I did.<br>\nHave you ever tried to explore big infamiliar codebase written in AAA?</p>\n<p>Look at <a class=\"mention\" href=\"/u/1vank\">@1vanK</a> example and imange that you know nothing about types <code>XMLElement</code>, <code>UI</code> and <code>UIElement</code>.<br>\nHow do you recognize this piece of code then?</p>\n<pre><code>auto rootElem = file-&gt;GetRoot();\nauto paramElem = rootElem.GetChild();\n//&lt; These guys might be similar, yep?\n//&lt; Nodes of some hierarchy, probably. What hierarchy?\n//&lt; Values or pointers? Must be values because I see dot.\n//&lt; What about const?\n\nauto ui = GetSubsystem&lt;UI&gt;();\n//&lt; Ok, here I can guess the type. It is some singleton.\n//&lt; So it's non-unique pointer\n//&lt; Is it shared or raw? What about const?\n//&lt; Probably it is just UI*, because it is a singleton.\n//&lt; Or maybe weak ptr, who knows?\n\nauto uiRoot = ui-&gt;GetRoot();\n//&lt; No ideas WTF is it\n//&lt; Root element of some hierarchy.\n//&lt; Is the same type as rootElem from first part of code??</code></pre>", "post_number": 15, "post_type": 1, "updated_at": "2017-02-14T13:24:57.676Z", "reply_count": 1, "reply_to_post_number": 12, "quote_count": 1, "incoming_link_count": 1, "reads": 60, "readers_count": 59, "score": 22.0, "yours": false, "topic_id": 2788, "topic_slug": "moving-to-c-11", "display_username": "Eugene Kozlov", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 6, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Core developer", "title_is_group": false, "reply_to_user": {"username": "Enhex", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 484, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 16047, "name": "", "username": "Enhex", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png", "created_at": "2017-02-14T19:09:14.164Z", "cooked": "<p>I had to make this:<br>\n<div class=\"lazyYT\" data-youtube-id=\"V4DkJtT2jdE\" data-youtube-title=\"autophobia\" data-width=\"480\" data-height=\"270\" data-parameters=\"feature=oembed&amp;wmode=opaque\"></div></p>\n<p>:^)</p>", "post_number": 16, "post_type": 1, "updated_at": "2017-02-14T19:09:14.164Z", "reply_count": 1, "reply_to_post_number": 15, "quote_count": 0, "incoming_link_count": 1, "reads": 57, "readers_count": 56, "score": 81.4, "yours": false, "topic_id": 2788, "topic_slug": "moving-to-c-11", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "https://www.youtube.com/watch?v=V4DkJtT2jdE", "internal": false, "reflection": false, "title": "autophobia - YouTube", "clicks": 2}], "read": true, "user_title": null, "reply_to_user": {"username": "Eugene", "name": "Eugene Kozlov", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png"}, "bookmarked": false, "actions_summary": [{"id": 2, "count": 4}], "moderator": false, "admin": false, "staff": false, "user_id": 184, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 16049, "name": "Eugene Kozlov", "username": "Eugene", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png", "created_at": "2017-02-14T20:11:46.375Z", "cooked": "<p>I hope you understand that IDE tooltops is not a solution for explained problem.<br>\nCode shall be readable enough for reviewing via notepad/browser/difftool/etc.<br>\nCode is all that we always have. IDE is optional.</p>\n<p>So, briefly, my thoughts and proposal:</p>\n<ul>\n<li>\n<code>auto</code> saves time when writitng code\n<ul>\n<li>It is the main advantage of <code>auto</code> and the main reason for programmers to use it\n<ul>\n<li>Other advantages are less important and affect some rare corner cases</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>You can comfortable work with <code>auto</code> variable if one of the following conditions is true:\n<ul>\n<li>If you ask IDE for tooltips (i.e. use mouse when reading code)</li>\n<li>If you explore variable context (i.e. spend time on checking related functions and objects)</li>\n<li>If you are familiar enough with codebase/architecture to guess the type by name and context</li>\n</ul>\n</li>\n<li>Explicit variable decalration is easy to read and understand without any conditions or extra effort.\n<ul>\n<li>So explicit type is <em>objectively</em> more readable than <code>auto</code>\n</li>\n<li>Exception: ugly big types\n<ul>\n<li>Probably such types need or already have an alias\n<ul>\n<li>If they don\u2019t, <code>auto</code> is a perfect solution!</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Programmers always say that good readablility is more important than quick writing\n<ul>\n<li>Why <code>auto</code> shall be an exception?</li>\n</ul>\n</li>\n<li>It\u2019s not so hard to replace dozen of <code>auto</code>s in your commit when you finish your work\n<ul>\n<li>Especially with these nice tooltips\n<ul>\n<li>Why not to make life easier for others?</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>", "post_number": 17, "post_type": 1, "updated_at": "2017-02-14T20:11:46.375Z", "reply_count": 1, "reply_to_post_number": 16, "quote_count": 0, "incoming_link_count": 1, "reads": 59, "readers_count": 58, "score": 21.8, "yours": false, "topic_id": 2788, "topic_slug": "moving-to-c-11", "display_username": "Eugene Kozlov", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Core developer", "title_is_group": false, "reply_to_user": {"username": "Enhex", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 484, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 16050, "name": "", "username": "Enhex", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png", "created_at": "2017-02-14T20:23:50.582Z", "cooked": "<p>Consider the following piece of code:</p>\n<pre><code class=\"lang-auto\">int x = f();\n</code></pre>\n<p>Can you know the return type of f() from reading it?</p>\n<p>The answer is no.</p>\n<p>auto isn\u2019t about quick writing.<br>\nIf that\u2019s your understanding of auto, you didn\u2019t watch the video I linked or wasn\u2019t capable of understanding it.</p>\n<p>If you want to stick with C++98 why did you suggest moving to C++11?<br>\nEspecially considering you don\u2019t understand and like C++11.</p>", "post_number": 18, "post_type": 1, "updated_at": "2017-02-14T20:23:50.582Z", "reply_count": 2, "reply_to_post_number": 17, "quote_count": 0, "incoming_link_count": 0, "reads": 56, "readers_count": 55, "score": 21.2, "yours": false, "topic_id": 2788, "topic_slug": "moving-to-c-11", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "reply_to_user": {"username": "Eugene", "name": "Eugene Kozlov", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 184, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 16051, "name": "", "username": "1vanK", "avatar_template": "/user_avatar/discourse.urho3d.io/1vank/{size}/768_2.png", "created_at": "2017-02-14T21:00:41.689Z", "cooked": "<p>if f() return not int it should be fixed - \u201cI need int, but it not, wtf\u201d - auto hide this problem</p>\n<blockquote>\n<p>auto isn\u2019t about quick writing</p>\n</blockquote>\n<p>auto not about quick learning unknown code</p>\n<blockquote>\n<p>you didn\u2019t watch the video</p>\n</blockquote>\n<p>I can found 1000 links criticized auto</p>\n<blockquote>\n<p>Herb Sutter (Microsoft)</p>\n</blockquote>\n<p>I will not say anything about quality of code in Microsoft\u2019s products xD</p>", "post_number": 19, "post_type": 1, "updated_at": "2017-02-14T21:22:38.801Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 55, "readers_count": 54, "score": 11.0, "yours": false, "topic_id": 2788, "topic_slug": "moving-to-c-11", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 2, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": true, "admin": false, "staff": true, "user_id": 263, "hidden": false, "trust_level": 4, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 16052, "name": "Eugene Kozlov", "username": "Eugene", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png", "created_at": "2017-02-14T21:37:18.024Z", "cooked": "<aside class=\"quote\" data-post=\"18\" data-topic=\"2788\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/enhex/40/81_1.png\" class=\"avatar\"> Enhex:</div>\n<blockquote>\n<p>auto isn\u2019t about quick writing</p>\n</blockquote>\n</aside>\n<p>Phew. If auto was long and complex, would anybody use it? I am sure no.<br>\nThere are two groups of people who use auto: ones use auto because it is shorther, others don\u2019t want to admit it and try to find another reasons. A kind of lying to yourself.</p>\n<blockquote>\n<p>If that\u2019s your understanding of auto, you didn\u2019t watch the video I linked or wasn\u2019t capable of understanding it.</p>\n</blockquote>\n<p>If somebody change return type of function, he <strong>must</strong> revise all places where function is used just because they are affected by this change. Regardless of using or not using auto.</p>\n<p>I didn\u2019t watched the video because:</p>\n<ul>\n<li>I\u2019ve read Sutter and Co and know almost all this stuff about <code>auto</code>\n</li>\n<li>Nobody explains how to solve readability issues except selfish phrases like &gt;&gt;you don\u2019t need to know a type because I don\u2019t&lt;&lt;</li>\n<li>When project is big and maintained by many people, other pros and cons of auto are negilible comparing to readability problem</li>\n</ul>\n<blockquote>\n<p>If you want to stick with C++98 why did you suggest moving to C++11?<br>\nEspecially considering you don\u2019t understand and like C++11.</p>\n</blockquote>\n<p>\u0421++11 has many cool features (including auto) but it doesn\u2019t mean that they shall be thoughtlessly used everywhere.</p>", "post_number": 20, "post_type": 1, "updated_at": "2017-02-15T08:47:26.820Z", "reply_count": 0, "reply_to_post_number": 18, "quote_count": 1, "incoming_link_count": 5, "reads": 54, "readers_count": 53, "score": 35.8, "yours": false, "topic_id": 2788, "topic_slug": "moving-to-c-11", "display_username": "Eugene Kozlov", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 4, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Core developer", "title_is_group": false, "reply_to_user": {"username": "Enhex", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 484, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 16054, "name": "Eugene Kozlov", "username": "Eugene", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png", "created_at": "2017-02-15T06:22:53.188Z", "cooked": "<p>Okay, here is another, style question.</p>\n<p>Without <code>auto</code> there is only one style of declaring variables.<br>\nWith <code>auto</code> there are two styles, because <code>auto</code> can\u2019t replace all explicit declarations.</p>\n<p>I dislike this ambigity, but it\u2019s not very bad.</p>\n<p>In <em>your</em> opinion, where <code>auto</code> shall be used and where shan\u2019t?<br>\nDo you have some strict rules that can be enforced in guideline?</p>\n<p>This criteria is very subjective:</p>\n<aside class=\"quote\" data-post=\"12\" data-topic=\"2788\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/enhex/40/81_1.png\" class=\"avatar\"> Enhex:</div>\n<blockquote>\n<p>if you don\u2019t want to use the type foo returns you shouldn\u2019t use auto.</p>\n</blockquote>\n</aside>", "post_number": 21, "post_type": 1, "updated_at": "2017-02-15T15:37:05.181Z", "reply_count": 1, "reply_to_post_number": 18, "quote_count": 1, "incoming_link_count": 3, "reads": 51, "readers_count": 50, "score": 30.2, "yours": false, "topic_id": 2788, "topic_slug": "moving-to-c-11", "display_username": "Eugene Kozlov", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 2, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Core developer", "title_is_group": false, "reply_to_user": {"username": "Enhex", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 484, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 16063, "name": "\u9b54\u5927\u519c \ud835\udf8d\ud835\udf8e\ud835\udf73 \u73fe\u62db\u870d", "username": "Modanung", "avatar_template": "/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png", "created_at": "2017-02-15T16:06:00.875Z", "cooked": "<h3>See also: <a href=\"https://github.com/isocpp/CppCoreGuidelines/blob/master/CppCoreGuidelines.md\">C++ Core Guidelines</a>.</h3>", "post_number": 22, "post_type": 1, "updated_at": "2017-02-15T16:06:00.875Z", "reply_count": 1, "reply_to_post_number": 3, "quote_count": 0, "incoming_link_count": 2, "reads": 47, "readers_count": 46, "score": 39.4, "yours": false, "topic_id": 2788, "topic_slug": "moving-to-c-11", "display_username": "\u9b54\u5927\u519c \ud835\udf8d\ud835\udf8e\ud835\udf73 \u73fe\u62db\u870d", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "https://github.com/isocpp/CppCoreGuidelines/blob/master/CppCoreGuidelines.md", "internal": false, "reflection": false, "title": "CppCoreGuidelines/CppCoreGuidelines.md at master \u00b7 isocpp/CppCoreGuidelines \u00b7 GitHub", "clicks": 18}], "read": true, "user_title": "", "reply_to_user": {"username": "Eugene", "name": "Eugene Kozlov", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png"}, "bookmarked": false, "actions_summary": [{"id": 2, "count": 1}], "moderator": false, "admin": false, "staff": false, "user_id": 192, "hidden": false, "trust_level": 0, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "user_suspended": true, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 16065, "name": "Eugene Kozlov", "username": "Eugene", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png", "created_at": "2017-02-15T17:01:41.820Z", "cooked": "<p>I tried to read it some time ago. It\u2019s quite big, I am on 25% now.<br>\nDid you want to accent some part of this document?</p>", "post_number": 23, "post_type": 1, "updated_at": "2017-02-15T17:02:51.528Z", "reply_count": 0, "reply_to_post_number": 22, "quote_count": 0, "incoming_link_count": 1, "reads": 46, "readers_count": 45, "score": 14.2, "yours": false, "topic_id": 2788, "topic_slug": "moving-to-c-11", "display_username": "Eugene Kozlov", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Core developer", "title_is_group": false, "reply_to_user": {"username": "Modanung", "name": "\u9b54\u5927\u519c \ud835\udf8d\ud835\udf8e\ud835\udf73 \u73fe\u62db\u870d", "avatar_template": "/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 484, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 16066, "name": "", "username": "Enhex", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png", "created_at": "2017-02-15T18:57:47.295Z", "cooked": "<p>It isn\u2019t a stylistic issue.<br>\nIt\u2019s correctness, type safety, and maintainability.</p>\n<p>I think the same as Herb Sutter: if you want to track a type you should use auto, if you want to stick with a type you shouldn\u2019t. Tracking is the common case.<br>\nAlso auto can be used in other cases to keep things DRY, like new, static casts, example:</p>\n<pre><code class=\"lang-auto\">auto user = static_cast&lt;Node*&gt;(eventData[Use::P_USER].GetPtr()); // type already mentioned in the static cast\n</code></pre>\n<p>Watch the video I linked, it has excellent examples of cases that not using auto will cause problems.</p>\n<p>\"This criteria is very subjective:\"<br>\nThis isn\u2019t subjective at all, it\u2019s a fact.</p>\n<pre><code class=\"lang-auto\">int f();\nlong x = f(); // f() returns int, we want long. using auto here will result int\n</code></pre>", "post_number": 24, "post_type": 1, "updated_at": "2017-02-15T18:59:34.761Z", "reply_count": 2, "reply_to_post_number": 21, "quote_count": 0, "incoming_link_count": 0, "reads": 47, "readers_count": 46, "score": 19.4, "yours": false, "topic_id": 2788, "topic_slug": "moving-to-c-11", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "reply_to_user": {"username": "Eugene", "name": "Eugene Kozlov", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 184, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 16067, "name": "", "username": "1vanK", "avatar_template": "/user_avatar/discourse.urho3d.io/1vank/{size}/768_2.png", "created_at": "2017-02-15T19:01:43.788Z", "cooked": "<aside class=\"quote\" data-post=\"24\" data-topic=\"2788\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/enhex/40/81_1.png\" class=\"avatar\"> Enhex:</div>\n<blockquote>\n<p>int f();<br>\nlong x = f(); // f() returns int, we want long. using auto here will result int</p>\n</blockquote>\n</aside>\n<p>long and int is same type <img src=\"https://emoji.discourse-cdn.com/twitter/slight_smile.png?v=5\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\"></p>", "post_number": 25, "post_type": 1, "updated_at": "2017-02-15T19:01:43.788Z", "reply_count": 1, "reply_to_post_number": 24, "quote_count": 1, "incoming_link_count": 0, "reads": 46, "readers_count": 45, "score": 14.2, "yours": false, "topic_id": 2788, "topic_slug": "moving-to-c-11", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "reply_to_user": {"username": "Enhex", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": true, "admin": false, "staff": true, "user_id": 263, "hidden": false, "trust_level": 4, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 16068, "name": "", "username": "Enhex", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png", "created_at": "2017-02-15T19:07:01.207Z", "cooked": "<p>Wrong, it\u2019s compiler implementation defined and the requirements are different:<br>\n<a href=\"http://en.cppreference.com/w/cpp/language/types#Integer_types\" class=\"onebox\" target=\"_blank\" rel=\"nofollow noopener\">http://en.cppreference.com/w/cpp/language/types#Integer_types</a></p>\n<p>So you just created a very subtle bug that may or may not happen to some users on different compilers (including different versions of the same compiler).</p>", "post_number": 26, "post_type": 1, "updated_at": "2017-02-15T21:10:05.434Z", "reply_count": 1, "reply_to_post_number": 25, "quote_count": 0, "incoming_link_count": 0, "reads": 48, "readers_count": 47, "score": 14.6, "yours": false, "topic_id": 2788, "topic_slug": "moving-to-c-11", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 2, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "http://en.cppreference.com/w/cpp/language/types#Integer_types", "internal": false, "reflection": false, "title": "Fundamental types - cppreference.com", "clicks": 1}], "read": true, "user_title": null, "reply_to_user": {"username": "1vanK", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/1vank/{size}/768_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 184, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 16069, "name": "", "username": "1vanK", "avatar_template": "/user_avatar/discourse.urho3d.io/1vank/{size}/768_2.png", "created_at": "2017-02-15T19:11:01.082Z", "cooked": "<p>Ok, I posted answer above already. I expect one type, but function return other. Complier (VS at least) will warn. But if a will using auto, I would not notice this problem</p>", "post_number": 27, "post_type": 1, "updated_at": "2017-02-15T19:11:01.082Z", "reply_count": 1, "reply_to_post_number": 26, "quote_count": 0, "incoming_link_count": 0, "reads": 45, "readers_count": 44, "score": 14.0, "yours": false, "topic_id": 2788, "topic_slug": "moving-to-c-11", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "reply_to_user": {"username": "Enhex", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": true, "admin": false, "staff": true, "user_id": 263, "hidden": false, "trust_level": 4, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 16070, "name": "", "username": "Enhex", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png", "created_at": "2017-02-15T19:20:57.557Z", "cooked": "<p>they won\u2019t warn because there\u2019s no truncation unless they\u2019re implemented as different sizes. (and even then only VC++ by default)</p>\n<p>This was an example for not using auto anyway, when the intention is to stick with long.<br>\n(the bug is something else - assuming long is same type as int)</p>", "post_number": 28, "post_type": 1, "updated_at": "2017-02-15T19:32:28.059Z", "reply_count": 0, "reply_to_post_number": 27, "quote_count": 0, "incoming_link_count": 0, "reads": 47, "readers_count": 46, "score": 9.4, "yours": false, "topic_id": 2788, "topic_slug": "moving-to-c-11", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 2, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "reply_to_user": {"username": "1vanK", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/1vank/{size}/768_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 184, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 16071, "name": "", "username": "1vanK", "avatar_template": "/user_avatar/discourse.urho3d.io/1vank/{size}/768_2.png", "created_at": "2017-02-15T19:27:12.831Z", "cooked": "<p>Ah, ok I understood what you mean</p>", "post_number": 29, "post_type": 1, "updated_at": "2017-02-15T19:27:12.831Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 2, "reads": 47, "readers_count": 46, "score": 19.4, "yours": false, "topic_id": 2788, "topic_slug": "moving-to-c-11", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": true, "admin": false, "staff": true, "user_id": 263, "hidden": false, "trust_level": 4, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 16073, "name": "Eugene Kozlov", "username": "Eugene", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png", "created_at": "2017-02-15T21:31:34.459Z", "cooked": "<aside class=\"quote\" data-post=\"24\" data-topic=\"2788\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/enhex/40/81_1.png\" class=\"avatar\"> Enhex:</div>\n<blockquote>\n<p>if you want to track a type you should use auto, if you want to stick with a type you shouldn\u2019t.<br>\n\u2026<br>\n\"This criteria is very subjective:\"<br>\nThis isn\u2019t subjective at all, it\u2019s a fact.</p>\n</blockquote>\n</aside>\n<p>Okay, let\u2019s imagine. One guy insist that the type of some variable shall be explicit. Another guy insist that type of some variable shall be auto. If your criteria is a fact, please logically solve this argument.</p>\n<pre><code>const String::operator std::string() { /* cast to std string here with copying */}\nconst String&amp; Node::GetName();\n...\nconst auto&amp; name = node-&gt;GetName(); // vs const String&amp; name\nif (name == \"Player\") { ... }\n</code></pre>\n<p>One guy said that explicit type is better because if we change String to const char* the nasty bug will appear:</p>\n<blockquote>\n<p>if you don\u2019t want to use the type foo returns you shouldn\u2019t use auto.</p>\n</blockquote>\n<p>Another guy said that auto type is better because if we write explicit <code>String</code> and change <code>String</code> to <code>std::string</code> in function signature, the redundand copying will appear. Also, code is generic enough to work with different types of strings. According to all guidelines, <code>auto</code> shall be used here.</p>", "post_number": 30, "post_type": 1, "updated_at": "2017-02-15T21:32:55.820Z", "reply_count": 0, "reply_to_post_number": 24, "quote_count": 1, "incoming_link_count": 0, "reads": 49, "readers_count": 48, "score": 9.8, "yours": false, "topic_id": 2788, "topic_slug": "moving-to-c-11", "display_username": "Eugene Kozlov", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Core developer", "title_is_group": false, "reply_to_user": {"username": "Enhex", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 484, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 16074, "name": "hd_", "username": "hdunderscore", "avatar_template": "/user_avatar/discourse.urho3d.io/hdunderscore/{size}/1151_2.png", "created_at": "2017-02-15T21:37:24.163Z", "cooked": "<p>In practice code will be contributed to Urho using the contributors preference, and it is unlikely an issue will arise unless they are going full-auto and it has become hard to read. If there is a bug identified, the contributor will surely feel compelled to correct the bug.</p>", "post_number": 31, "post_type": 1, "updated_at": "2017-02-15T21:37:24.163Z", "reply_count": 1, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 44, "readers_count": 43, "score": 13.8, "yours": false, "topic_id": 2788, "topic_slug": "moving-to-c-11", "display_username": "hd_", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Contributor", "title_is_group": false, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 114, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 16075, "name": "Eugene Kozlov", "username": "Eugene", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png", "created_at": "2017-02-15T21:58:07.737Z", "cooked": "<aside class=\"quote\" data-post=\"31\" data-topic=\"2788\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/hdunderscore/40/1151_1.png\" class=\"avatar\"> hdunderscore:</div>\n<blockquote>\n<p>In practice code will be contributed to Urho using the contributors preference, and it is unlikely an issue will arise unless they are going full-auto and it has become hard to read.</p>\n</blockquote>\n</aside>\n<p>That\u2019s the problem.<br>\nSome guys like me will probably almost avoid <code>auto</code> in commits.<br>\nSome guys like <a class=\"mention\" href=\"/u/1vank\">@1vanK</a> will use <code>auto</code> somewhere for long types.<br>\nSome guys like <a class=\"mention\" href=\"/u/enhex\">@Enhex</a> will prefer using <code>auto</code> in declarations.<br>\nThen, code <em>may</em> stay readable enough.<br>\nHowever, code will be a mess of different styles. That\u2019s ugly.<br>\nUrho3D has so nice style now, because it was written by single person in a languare that has no <code>auto</code>.<br>\nIt\u2019s hard for me to admit that this will be lost.</p>", "post_number": 32, "post_type": 1, "updated_at": "2017-02-15T21:58:07.737Z", "reply_count": 0, "reply_to_post_number": 31, "quote_count": 1, "incoming_link_count": 0, "reads": 44, "readers_count": 43, "score": 8.8, "yours": false, "topic_id": 2788, "topic_slug": "moving-to-c-11", "display_username": "Eugene Kozlov", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Core developer", "title_is_group": false, "reply_to_user": {"username": "hdunderscore", "name": "hd_", "avatar_template": "/user_avatar/discourse.urho3d.io/hdunderscore/{size}/1151_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 484, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 16077, "name": "hd_", "username": "hdunderscore", "avatar_template": "/user_avatar/discourse.urho3d.io/hdunderscore/{size}/1151_2.png", "created_at": "2017-02-15T23:05:40.558Z", "cooked": "<p>Looking through the urho codebase, I don\u2019t see many instances of where code would be improved by auto. For entertainment value, an automated tool can be used to put that to the test (eg, <a href=\"https://github.com/steveire/clazy\" rel=\"nofollow noopener\">https://github.com/steveire/clazy</a>).</p>\n<p>Moving on to other C++11 features, I think brace initialization is clearer and more convenient when extended with initialization_lists. I think <code>typedef</code>s should be upgraded to use <code>using</code>. <code>enum</code>s upgraded to <code>enum class</code>es (as long as scripting doesn\u2019t choke on it).</p>\n<p>I think an upgrade to use <code>move</code> could be worthwhile. With the change to c++11 we could maybe re-evaluate using our custom containers vs the stl.</p>\n<p>I would probably avoid lambdas for the most part.</p>", "post_number": 33, "post_type": 1, "updated_at": "2017-02-15T23:05:40.558Z", "reply_count": 1, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 42, "readers_count": 41, "score": 13.4, "yours": false, "topic_id": 2788, "topic_slug": "moving-to-c-11", "display_username": "hd_", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "https://github.com/steveire/clazy", "internal": false, "reflection": false, "title": "GitHub - steveire/clazy: Qt oriented code checker based on clang framework. Krazy's little brother.", "clicks": 6}], "read": true, "user_title": "Contributor", "title_is_group": false, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 114, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 16078, "name": "Eugene Kozlov", "username": "Eugene", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png", "created_at": "2017-02-15T23:32:02.575Z", "cooked": "<p>I hate such disputes, trust me\u2026 <em>sigh</em> <img src=\"https://emoji.discourse-cdn.com/twitter/weary.png?v=5\" title=\":weary:\" class=\"emoji\" alt=\":weary:\"></p>\n<p>There is interface-oriented AAA (yep, I\u2019ve read Sutter and his articles).<br>\nThere is type-oriented\u2026 huh, let\u2019s call it 98</p>\n<p>AAA is nice-looking. 98 is bulky.<br>\nAAA is theorectically perfect. 98 has theoretical pitfalls.<br>\nYes, they are more theorethical than practical since function signature is rarerly changed.<br>\nYou have much more chances to inject bug e.g. in logic or catch a problem with implicit casting from SharedPtr to T*.</p>\n<p>98 is used for all legacy code. AAA is used nowhere.<br>\n98 is simpler to understand. AAA is more puzzled.</p>\n<p>I don\u2019t say that AAA has no benefits.<br>\nHowever, I think that benefits of 98 cost more than benefits of AAA when we are talking about Urho (old big project).<br>\nIf we were talking about new small project, AAA\u2019d be better.<br>\nIf we were talking about new big project\u2026 questionable. Maybe I have to try big AAA project at some point.</p>\n<aside class=\"quote\" data-post=\"33\" data-topic=\"2788\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/hdunderscore/40/1151_1.png\" class=\"avatar\"> hdunderscore:</div>\n<blockquote>\n<p>enums upgraded to enum classes</p>\n</blockquote>\n</aside>\n<p>Then we will have to write some migration script to Find&amp;Replace old enums with new ones in client (and Urho) code.</p>\n<blockquote>\n<p>With the change to c++11 we could maybe re-evaluate using our custom containers vs the stl.</p>\n</blockquote>\n<p>Unsure that it\u2019s good idea. This will break a lot of code unless wrappers over STL are written.</p>", "post_number": 34, "post_type": 1, "updated_at": "2017-02-15T23:32:02.575Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 1, "incoming_link_count": 0, "reads": 48, "readers_count": 47, "score": 9.6, "yours": false, "topic_id": 2788, "topic_slug": "moving-to-c-11", "display_username": "Eugene Kozlov", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Core developer", "title_is_group": false, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 484, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 16082, "name": "Lasse \u00d6\u00f6rni", "username": "cadaver", "avatar_template": "/user_avatar/discourse.urho3d.io/cadaver/{size}/3_2.png", "created_at": "2017-02-16T08:45:17.687Z", "cooked": "<p>Guaranteed binary size is to me still the biggest advantage of the custom containers, which allows storing them \u201cinside\u201d Variant. Moving to STL containers the only safe thing to do would be to always heap allocate them instead, which would add some overhead. I don\u2019t pretend that the custom containers are a performance advantage nowadays, and if I was starting a new engine today I would likely avoid them, just to reduce maintenance cost / codebase size / possibility of errors.</p>", "post_number": 35, "post_type": 1, "updated_at": "2017-02-16T08:45:17.687Z", "reply_count": 2, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 50, "readers_count": 49, "score": 20.0, "yours": false, "topic_id": 2788, "topic_slug": "moving-to-c-11", "display_username": "Lasse \u00d6\u00f6rni", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Urho3D Author", "title_is_group": false, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": true, "staff": true, "user_id": 3, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 16083, "name": "", "username": "1vanK", "avatar_template": "/user_avatar/discourse.urho3d.io/1vank/{size}/768_2.png", "created_at": "2017-02-16T08:59:25.500Z", "cooked": "<p>In <a href=\"https://github.com/1vanK/Urho3DSpriteBatch/blob/master/SpriteBatch.h\">https://github.com/1vanK/Urho3DSpriteBatch/blob/master/SpriteBatch.h</a> I compared Urho3D::PODVector vs std::vector, and Urho3D::PODVector won <img src=\"https://emoji.discourse-cdn.com/twitter/slight_smile.png?v=5\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\"></p>", "post_number": 36, "post_type": 1, "updated_at": "2017-02-16T08:59:25.500Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 51, "readers_count": 50, "score": 10.2, "yours": false, "topic_id": 2788, "topic_slug": "moving-to-c-11", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "https://github.com/1vanK/Urho3DSpriteBatch/blob/master/SpriteBatch.h", "internal": false, "reflection": false, "title": "Urho3DSpriteBatch/SpriteBatch.h at master \u00b7 1vanK/Urho3DSpriteBatch \u00b7 GitHub", "clicks": 9}], "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": true, "admin": false, "staff": true, "user_id": 263, "hidden": false, "trust_level": 4, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 16084, "name": "Eugene Kozlov", "username": "Eugene", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png", "created_at": "2017-02-16T09:14:50.128Z", "cooked": "<aside class=\"quote\" data-post=\"35\" data-topic=\"2788\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/cadaver/40/3_1.png\" class=\"avatar\"> cadaver:</div>\n<blockquote>\n<p>I don\u2019t pretend that the custom containers are a performance advantage nowadays, and if I was starting a new engine today I would likely avoid them, just to reduce maintenance cost / codebase size / possibility of errors.</p>\n</blockquote>\n</aside>\n<p>However, your containers are much faster than STL ones in debug mode.<br>\nIt\u2019s getting too hard to debug something when you have 5 FPS on complex scene with these safe iterators.</p>", "post_number": 37, "post_type": 1, "updated_at": "2017-02-16T09:14:50.128Z", "reply_count": 1, "reply_to_post_number": 35, "quote_count": 1, "incoming_link_count": 0, "reads": 51, "readers_count": 50, "score": 15.2, "yours": false, "topic_id": 2788, "topic_slug": "moving-to-c-11", "display_username": "Eugene Kozlov", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Core developer", "title_is_group": false, "reply_to_user": {"username": "cadaver", "name": "Lasse \u00d6\u00f6rni", "avatar_template": "/user_avatar/discourse.urho3d.io/cadaver/{size}/3_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 484, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 16089, "name": "Lasse \u00d6\u00f6rni", "username": "cadaver", "avatar_template": "/user_avatar/discourse.urho3d.io/cadaver/{size}/3_2.png", "created_at": "2017-02-16T12:22:28.609Z", "cooked": "<p>Does the iterator debug level help, though?</p>\n<p><a href=\"https://msdn.microsoft.com/en-us/library/hh697468.aspx\" class=\"onebox\" target=\"_blank\">https://msdn.microsoft.com/en-us/library/hh697468.aspx</a></p>", "post_number": 38, "post_type": 1, "updated_at": "2017-02-16T12:22:28.609Z", "reply_count": 1, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 7, "reads": 46, "readers_count": 45, "score": 49.2, "yours": false, "topic_id": 2788, "topic_slug": "moving-to-c-11", "display_username": "Lasse \u00d6\u00f6rni", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "https://msdn.microsoft.com/en-us/library/hh697468.aspx", "internal": false, "reflection": false, "title": "_ITERATOR_DEBUG_LEVEL", "clicks": 10}], "read": true, "user_title": "Urho3D Author", "title_is_group": false, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": true, "staff": true, "user_id": 3, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 16090, "name": "Eugene Kozlov", "username": "Eugene", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png", "created_at": "2017-02-16T13:10:49.194Z", "cooked": "<p>I haven\u2019t managed to make it work last time when I tried it. It was long time ago.</p>", "post_number": 39, "post_type": 1, "updated_at": "2017-02-16T13:10:49.194Z", "reply_count": 0, "reply_to_post_number": 38, "quote_count": 0, "incoming_link_count": 0, "reads": 50, "readers_count": 49, "score": 10.0, "yours": false, "topic_id": 2788, "topic_slug": "moving-to-c-11", "display_username": "Eugene Kozlov", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Core developer", "title_is_group": false, "reply_to_user": {"username": "cadaver", "name": "Lasse \u00d6\u00f6rni", "avatar_template": "/user_avatar/discourse.urho3d.io/cadaver/{size}/3_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 484, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 16094, "name": "", "username": "Enhex", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png", "created_at": "2017-02-16T18:12:57.891Z", "cooked": "<aside class=\"quote no-group\" data-username=\"cadaver\" data-post=\"35\" data-topic=\"2788\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/cadaver/40/3_2.png\" class=\"avatar\"> cadaver:</div>\n<blockquote>\n<p>Guaranteed binary size is to me still the biggest advantage of the custom containers</p>\n</blockquote>\n</aside>\n<p>What about STL implementations which aren\u2019t bundled with the compiler? Like <a href=\"https://github.com/electronicarts/EASTL\" rel=\"nofollow noopener\">EASTL</a> (haven\u2019t looked into it myself).</p>\n<p><a href=\"http://www.boost.org/doc/libs/1_63_0/doc/html/container.html\" rel=\"nofollow noopener\">Boost.Container</a> also provides some nice optimized containers.<br>\nI benchmarked its small_vector and it\u2019s very fast for its purpose:<br>\n<aside class=\"onebox whitelistedgeneric\">\n  <header class=\"source\">\n      <img src=\"https://chart-studio.plotly.com/favicon.ico?v=2\" class=\"site-icon\" width=\"32\" height=\"32\">\n      <a href=\"https://chart-studio.plotly.com/~Enhex/74.embed\" target=\"_blank\" rel=\"nofollow noopener\">chart-studio.plotly.com</a>\n  </header>\n  <article class=\"onebox-body\">\n    <div class=\"aspect-image\" style=\"--aspect-ratio:690/492;\"><img src=\"https://plotly.com/~Enhex/74.png\" class=\"thumbnail\" width=\"690\" height=\"492\"></div>\n\n<h3><a href=\"https://chart-studio.plotly.com/~Enhex/74.embed\" target=\"_blank\" rel=\"nofollow noopener\">boost&nbsp;small_vector | line chart made by Enhex | plotly</a></h3>\n\n<p>Enhex's interactive graph and data of \"boost&nbsp;small_vector\" is a line chart, showing vector, vector reserve 10, small_vector 10; with Elements in the x-axis and Baseline in the y-axis..</p>\n\n\n  </article>\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n  <div style=\"clear: both\"></div>\n</aside>\n<br>\n(source: <a href=\"https://github.com/Enhex/Benchmarks/tree/master/boost%20small_vector\" rel=\"nofollow noopener\">https://github.com/Enhex/Benchmarks/tree/master/boost%20small_vector</a>)<br>\nTho I\u2019m getting off topic.</p>\n<aside class=\"quote no-group\" data-username=\"Eugene\" data-post=\"37\" data-topic=\"2788\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/eugene/40/902_2.png\" class=\"avatar\"> Eugene:</div>\n<blockquote>\n<p>much faster than STL ones in debug mode.</p>\n</blockquote>\n</aside>\n<p>That\u2019s because they don\u2019t provide any debugging information, which defeats the purpose.<br>\nI know that in my code I had to replace things like HashMap with std::unordered_map to be able to debug their content.</p>\n<p>it\u2019s like saying:</p>\n<pre><code class=\"lang-auto\">int main() {\n  while(true) {}\n}\n</code></pre>\n<p>is the fastest game engine. It\u2019s fast because it doesn\u2019t do anything useful.</p>", "post_number": 40, "post_type": 1, "updated_at": "2017-02-16T18:20:51.353Z", "reply_count": 2, "reply_to_post_number": 35, "quote_count": 2, "incoming_link_count": 13, "reads": 49, "readers_count": 48, "score": 84.8, "yours": false, "topic_id": 2788, "topic_slug": "moving-to-c-11", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 2, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "https://github.com/electronicarts/EASTL", "internal": false, "reflection": false, "title": "GitHub - electronicarts/EASTL: EASTL stands for Electronic Arts Standard Template Library. It is an extensive and robust implementation that has an emphasis on high performance.", "clicks": 2}, {"url": "https://github.com/Enhex/Benchmarks/tree/master/boost%20small_vector", "internal": false, "reflection": false, "title": "Benchmarks/boost small_vector at master \u00b7 Enhex/Benchmarks \u00b7 GitHub", "clicks": 1}, {"url": "https://chart-studio.plotly.com/~Enhex/74.embed", "internal": false, "reflection": false, "clicks": 0}, {"url": "http://www.boost.org/doc/libs/1_63_0/doc/html/container.html", "internal": false, "reflection": false, "title": "Chapter\u00a011.\u00a0Boost.Container - 1.63.0", "clicks": 0}], "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 184, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 16095, "name": "Eugene Kozlov", "username": "Eugene", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png", "created_at": "2017-02-16T18:27:50.213Z", "cooked": "<aside class=\"quote no-group\" data-post=\"40\" data-topic=\"2788\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/enhex/40/81_2.png\" class=\"avatar\"> Enhex:</div>\n<blockquote>\n<p>What about STL implementations which aren\u2019t bundled with the compiler? Like EASTL (haven\u2019t looked into it myself).</p>\n</blockquote>\n</aside>\n<p>I think that the biggest issue is not about implementation, but about interfaces. There are a lot of downstream projects. It would be cruel to make their authors to fix their code.<br>\nIt is possible to rewrite e.g. EASTL to fit it into legacy interface of Urho containers, but it will require some effort.</p>\n<blockquote>\n<p>That\u2019s because they don\u2019t provide any debugging information, which defeats the purpose.<br>\nI know that in my code I had to replace things like HashMap with std::unordered_map to be able to debug their content.</p>\n</blockquote>\n<p>wat? <img src=\"/images/emoji/twitter/confused.png?v=9\" title=\":confused:\" class=\"emoji\" alt=\":confused:\"></p>\n<p>What kind of STL debug garbage do you need?<br>\nIf I want to debug Urho containers, I do it in debugger.</p>\n<p><img src=\"//cdck-file-uploads-global.s3.dualstack.us-west-2.amazonaws.com/standard17/uploads/urho3d/original/1X/c94cbcd77f2bc21120ed6809214bc8d18272a7dd.png\" width=\"690\" height=\"167\"></p>", "post_number": 41, "post_type": 1, "updated_at": "2017-02-16T18:41:48.642Z", "reply_count": 1, "reply_to_post_number": 40, "quote_count": 1, "incoming_link_count": 0, "reads": 52, "readers_count": 51, "score": 15.4, "yours": false, "topic_id": 2788, "topic_slug": "moving-to-c-11", "display_username": "Eugene Kozlov", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 2, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Core developer", "title_is_group": false, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 484, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 16096, "name": "", "username": "Enhex", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png", "created_at": "2017-02-16T18:51:42.834Z", "cooked": "<aside class=\"quote no-group\" data-post=\"41\" data-topic=\"2788\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/eugene/40/902_2.png\" class=\"avatar\"> Eugene:</div>\n<blockquote>\n<p>If I want to debug Urho containers, I do it in debugger.</p>\n</blockquote>\n</aside>\n<aside class=\"quote no-group\" data-post=\"40\" data-topic=\"2788\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/enhex/40/81_2.png\" class=\"avatar\"> Enhex:</div>\n<blockquote>\n<p>\u2026be able to debug their content.</p>\n</blockquote>\n</aside>\n<p>Try doing that.</p>\n<p>Here\u2019s what I see:<br>\n<img src=\"//cdck-file-uploads-global.s3.dualstack.us-west-2.amazonaws.com/standard17/uploads/urho3d/original/1X/9c2c5aeb5fcf1e4954fa6b85e444d4eb3251aaf4.png\"></p>\n<p>Which doesn\u2019t happen with std containers.</p>", "post_number": 42, "post_type": 1, "updated_at": "2017-02-16T18:56:51.191Z", "reply_count": 1, "reply_to_post_number": 41, "quote_count": 2, "incoming_link_count": 2, "reads": 49, "readers_count": 48, "score": 24.8, "yours": false, "topic_id": 2788, "topic_slug": "moving-to-c-11", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 2, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 184, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": "downloaded local copies of images", "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 16097, "name": "Eugene Kozlov", "username": "Eugene", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png", "created_at": "2017-02-16T19:42:15.111Z", "cooked": "<p>Huh.<br>\nAdditionally, you\u2019ll need some knowledge about debug visualizers. Complex stuff like HashMap also requires VS 2015.<br>\nIt\u2019s not very hard to make it work, check this.<br>\n<aside class=\"onebox whitelistedgeneric\">\n  <header class=\"source\">\n      <img src=\"https://github.githubassets.com/favicons/favicon.svg\" class=\"site-icon\" width=\"32\" height=\"32\">\n      <a href=\"https://github.com/eugeneko/Urho3D-Debug\" target=\"_blank\" rel=\"nofollow noopener\">GitHub</a>\n  </header>\n  <article class=\"onebox-body\">\n    <img src=\"https://avatars0.githubusercontent.com/u/8576192?s=400&amp;v=4\" class=\"thumbnail onebox-avatar\" width=\"420\" height=\"420\">\n\n<h3><a href=\"https://github.com/eugeneko/Urho3D-Debug\" target=\"_blank\" rel=\"nofollow noopener\">eugeneko/Urho3D-Debug</a></h3>\n\n<p>Urho3D Debug Visualizer for Visual Studio 2017. Contribute to eugeneko/Urho3D-Debug development by creating an account on GitHub.</p>\n\n\n  </article>\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n  <div style=\"clear: both\"></div>\n</aside>\n</p>", "post_number": 43, "post_type": 1, "updated_at": "2017-02-16T19:42:15.111Z", "reply_count": 2, "reply_to_post_number": 42, "quote_count": 0, "incoming_link_count": 0, "reads": 48, "readers_count": 47, "score": 94.6, "yours": false, "topic_id": 2788, "topic_slug": "moving-to-c-11", "display_username": "Eugene Kozlov", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "https://github.com/eugeneko/Urho3D-Debug", "internal": false, "reflection": false, "title": "GitHub - eugeneko/Urho3D-Debug", "clicks": 25}], "read": true, "user_title": "Core developer", "title_is_group": false, "reply_to_user": {"username": "Enhex", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png"}, "bookmarked": false, "actions_summary": [{"id": 2, "count": 3}], "moderator": false, "admin": false, "staff": false, "user_id": 484, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 16104, "name": "Yushli", "username": "yushli1", "avatar_template": "/user_avatar/discourse.urho3d.io/yushli1/{size}/1163_2.png", "created_at": "2017-02-17T02:16:52.264Z", "cooked": "<p>Thanks for the VS2015 Visualizer file! That really works. It helps a lot when debugging.</p>", "post_number": 44, "post_type": 1, "updated_at": "2017-02-17T02:16:52.264Z", "reply_count": 0, "reply_to_post_number": 43, "quote_count": 0, "incoming_link_count": 1, "reads": 47, "readers_count": 46, "score": 14.4, "yours": false, "topic_id": 2788, "topic_slug": "moving-to-c-11", "display_username": "Yushli", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "reply_to_user": {"username": "Eugene", "name": "Eugene Kozlov", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 622, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 16120, "name": "", "username": "Enhex", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png", "created_at": "2017-02-18T09:51:37.067Z", "cooked": "<p>Thanks!</p>\n<p>BTW when debugging std::unordered_map you can see the original strings (with the visualizer you only see hashes).<br>\nI assume std::unordered_map stores the strings in debug which makes it slower, but provides useful information.</p>", "post_number": 45, "post_type": 1, "updated_at": "2017-02-18T09:51:37.067Z", "reply_count": 1, "reply_to_post_number": 43, "quote_count": 0, "incoming_link_count": 0, "reads": 47, "readers_count": 46, "score": 14.4, "yours": false, "topic_id": 2788, "topic_slug": "moving-to-c-11", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "reply_to_user": {"username": "Eugene", "name": "Eugene Kozlov", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 184, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 16121, "name": "Eugene Kozlov", "username": "Eugene", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png", "created_at": "2017-02-18T10:13:40.926Z", "cooked": "<aside class=\"quote\" data-post=\"45\" data-topic=\"2788\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/enhex/40/81_1.png\" class=\"avatar\"> Enhex:</div>\n<blockquote>\n<p>with the visualizer you only see hashes</p>\n</blockquote>\n</aside>\n<p>That\u2019s because <code>Urho3D::VariantMap</code> is <code>HashMap&lt;StringHash, Variant&gt;</code> and don\u2019t contain names.<br>\nSo, that\u2019s not a question to visualizer or debug info. More likely, it\u2019s about performance and amount of allocations made by <code>VariantMap</code>.</p>\n<p><code>HashMap&lt;String, Variant&gt;</code> will give you real strings, of course.<br>\nI mean I hope so because I tested my visulaized long time ago.</p>", "post_number": 46, "post_type": 1, "updated_at": "2017-02-18T10:24:10.633Z", "reply_count": 0, "reply_to_post_number": 45, "quote_count": 1, "incoming_link_count": 0, "reads": 52, "readers_count": 51, "score": 10.4, "yours": false, "topic_id": 2788, "topic_slug": "moving-to-c-11", "display_username": "Eugene Kozlov", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 2, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Core developer", "title_is_group": false, "reply_to_user": {"username": "Enhex", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 484, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 16197, "name": "Jonathan", "username": "Sinoid", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/f19dbf/{size}.png", "created_at": "2017-02-22T06:14:47.321Z", "cooked": "<p>Don\u2019t wait on me. An upgrade to C++11 will be massively beneficial to most of the pending stuff. Variadic templates could really simplify shaders (aside from the hash-code \u2026 which will just get fatter, but the pipeline looks pretty fixed now so that\u2019s just 64bit int).</p>\n<p>The only thing I\u2019d like to push out before then would be cubemap filtering (that also means DDS writing, have to write those mipmaps for filtering them to really be worth anything).</p>\n<ul>\n<li>Offtopic, is there a footer sytem so I can indicate \u201ckeep it on technical point\u201d or such? I want to keep my involvement to task at hand, not idealogy and such.</li>\n</ul>", "post_number": 47, "post_type": 1, "updated_at": "2017-02-22T06:16:04.618Z", "reply_count": 0, "reply_to_post_number": 2, "quote_count": 0, "incoming_link_count": 0, "reads": 51, "readers_count": 50, "score": 25.2, "yours": false, "topic_id": 2788, "topic_slug": "moving-to-c-11", "display_username": "Jonathan", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "reply_to_user": {"username": "cadaver", "name": "Lasse \u00d6\u00f6rni", "avatar_template": "/user_avatar/discourse.urho3d.io/cadaver/{size}/3_2.png"}, "bookmarked": false, "actions_summary": [{"id": 2, "count": 1}], "moderator": false, "admin": false, "staff": false, "user_id": 669, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 16199, "name": "", "username": "TheSHEEEP", "avatar_template": "/user_avatar/discourse.urho3d.io/thesheeep/{size}/74_2.png", "created_at": "2017-02-22T06:37:02.775Z", "cooked": "<p>Rule no. 1 for system changes:<br>\nIf it ain\u2019t broken, don\u2019t fix it.</p>\n<p>If the custom containers work just fine and impose no performance/memory downside, there\u2019s no reason to switch to STL ones. Obviously, this can be tested and it seems some did that already (and seemingly there\u2019s no reason to switch).</p>\n<p>Auto\u2026 oh, auto\u2026 Let\u2019s not. Please. I like to read my code and understand it without having to move back through functions until a <strong>real</strong> type appears somewhere.<br>\nI see the point in using it for abbreviation purposes, though. Iterators are a good example, because their type declaration usually looks like it was made to make people suffer. If there is a \u201cauto iter = someContainer.begin();\u201d, everybody will understand it and some (like me) will be thankful. A typedef is IMO not a solution here because it just moves the problem out of sight (you got the ugly piece of code elsewhere, but it is still present).<br>\nBut in all other cases, auto just adds confusion instead of clarity.<br>\nEither way, there is no gain in replacing working existing code with it.</p>\n<p>I can\u2019t say much about other issues like with variadic templates. Personally, I avoid templates like the plague, because I like to retain my sanity when reading error outputs. Of course, I see the point in them, so if existing code can actually be made <strong>more</strong> readable or more performant with them, I\u2019m all for it.<br>\nAs long as I don\u2019t have to write them, I really don\u2019t care if a library I use makes use of them <img src=\"https://emoji.discourse-cdn.com/twitter/smiley.png?v=5\" title=\":smiley:\" class=\"emoji\" alt=\":smiley:\"></p>", "post_number": 48, "post_type": 1, "updated_at": "2017-02-22T06:45:22.445Z", "reply_count": 2, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 51, "readers_count": 50, "score": 20.2, "yours": false, "topic_id": 2788, "topic_slug": "moving-to-c-11", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 2, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 513, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 16211, "name": "Eugene Kozlov", "username": "Eugene", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png", "created_at": "2017-02-22T10:58:16.670Z", "cooked": "<aside class=\"quote\" data-post=\"48\" data-topic=\"2788\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/thesheeep/40/74_1.png\" class=\"avatar\"> TheSHEEEP:</div>\n<blockquote>\n<p>A typedef is IMO not a solution here because it just moves the problem out of sight (you got the ugly piece of code elsewhere, but it is still present).</p>\n</blockquote>\n</aside>\n<p>If you need iterator, you probably have container, e.g. <code>Vector&lt;SharedPtr&lt;Object&gt;&gt;</code>.<br>\nSuch container is probably used in several places and may be typedef-ed.<br>\n<code>ObjectArray::Iterator</code> is much less scary, isn\u2019t it?<br>\nBut it is an issue what is more readable: long name with all related types or typedef abbreviation.</p>\n<aside class=\"quote\" data-post=\"48\" data-topic=\"2788\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/thesheeep/40/74_1.png\" class=\"avatar\"> TheSHEEEP:</div>\n<blockquote>\n<p>But in all other cases, auto just adds confusion instead of clarity.</p>\n</blockquote>\n</aside>\n<p>This is not a problem of <code>auto</code> itself. It\u2019s mostly about \u2018interface-oriented\u2019 programming style when you work with public interfaces (e.g. public methods or properties) instead of concrete types. C++ templates are usually written in such style, and this style is common for script languages like Lua or Pyhton.<br>\nAnd I agree that \u2018interface-oriented\u2019 code is harder to understand than classic \u2018object-oriented\u2019.</p>\n<aside class=\"quote\" data-post=\"48\" data-topic=\"2788\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/thesheeep/40/74_1.png\" class=\"avatar\"> TheSHEEEP:</div>\n<blockquote>\n<p>I see the point in using it for abbreviation purposes, though. Iterators are a good example, because their type declaration usually looks like it was made to make people suffer. If there is a \u201cauto iter = someContainer.begin();\u201d,</p>\n</blockquote>\n</aside>\n<p>Urho has a bucket of rules like \u2018no tabs\u2019, \u2018use camel case\u2019 etc. They are strict and easy to follow.</p>\n<p>The probem with <code>auto</code> is that anybody have his own criteria where to use <code>auto</code> and where not to use.<br>\nIf <a class=\"mention\" href=\"/u/cadaver\">@cadaver</a> just say \u2018follow the common sence\u2019, Urho may end up in codestyle mess because everybody has its own (of course, evident) rules.</p>\n<p>Just look at these examples and try to answer where to use <code>auto</code> and where not to (and why):</p>\n<ol>\n<li>\n<p><code>Vector&lt;HashMap&lt;String, Pair&lt;Node, Component&gt;&gt;&gt;::Iterator</code><br>\nvery long and ugly iterator</p>\n</li>\n<li>\n<p><code>Vector&lt;SharedPtr&lt;Component&gt;&gt;::Iterator</code><br>\njust quite long iterator</p>\n</li>\n<li>\n<p><code>Vector&lt;SharedPtr&lt;Component&gt;&gt;</code><br>\nthis type is not an iterator, but still long</p>\n</li>\n<li>\n<p><code>Vector&lt;SharedPtr&lt;Component::Data&gt;&gt;</code><br>\nas long as 2) but <em>almost</em> the same as 3)</p>\n</li>\n<li>\n<p><code>const Vector&lt;SharedPtr&lt;Component&gt;&gt;&amp;</code><br>\nas long as 2) but <em>the same</em> as 3)</p>\n</li>\n<li>\n<p><code>Vector&lt;int&gt;::Iterator</code><br>\npretty short iterator</p>\n</li>\n<li>\n<p><code>HashMap&lt;String, int&gt;</code><br>\nas long as 6) but not an iterator</p>\n</li>\n<li>\n<p><code>const HashMap&lt;String, int&gt;&amp;</code><br>\nlonger than 6) but not an iterator</p>\n</li>\n</ol>", "post_number": 49, "post_type": 1, "updated_at": "2017-02-22T10:58:16.670Z", "reply_count": 0, "reply_to_post_number": 48, "quote_count": 1, "incoming_link_count": 0, "reads": 53, "readers_count": 52, "score": 10.6, "yours": false, "topic_id": 2788, "topic_slug": "moving-to-c-11", "display_username": "Eugene Kozlov", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Core developer", "title_is_group": false, "reply_to_user": {"username": "TheSHEEEP", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/thesheeep/{size}/74_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 484, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 16227, "name": "Lasse \u00d6\u00f6rni", "username": "cadaver", "avatar_template": "/user_avatar/discourse.urho3d.io/cadaver/{size}/3_2.png", "created_at": "2017-02-24T13:54:45.984Z", "cooked": "<p>I just looked at the Turso3D codebase and there I have used auto for iterators only (shortening &amp; convenience). That could be one possible rule that\u2019s at least easy to follow. But I don\u2019t want to say it should be <em>the</em> rule, or that I\u2019d want final authority on this matter. I agree that it\u2019s just important that we decide something that is clear to follow.</p>", "post_number": 50, "post_type": 1, "updated_at": "2017-02-24T13:54:45.984Z", "reply_count": 2, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 5, "reads": 51, "readers_count": 50, "score": 105.2, "yours": false, "topic_id": 2788, "topic_slug": "moving-to-c-11", "display_username": "Lasse \u00d6\u00f6rni", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Urho3D Author", "title_is_group": false, "bookmarked": false, "actions_summary": [{"id": 2, "count": 2}], "moderator": false, "admin": true, "staff": true, "user_id": 3, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 16228, "name": "", "username": "Victor", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/v/3e96dc/{size}.png", "created_at": "2017-02-24T14:55:36.482Z", "cooked": "<aside class=\"quote\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/cadaver/40/3_1.png\" class=\"avatar\"> cadaver:</div>\n<blockquote>\n<p>I just looked at the Turso3D codebase and there I have used auto for iterators only (shortening &amp; convenience). That could be one possible rule that\u2019s at least easy to follow. But I don\u2019t want to say it should be the rule, or that I\u2019d want final authority on this matter. I agree that it\u2019s just important that we decide something that is clear to follow.</p>\n</blockquote>\n</aside>\n<p>That\u2019s pretty much how I\u2019ve been using \u2018auto\u2019 as well.</p>", "post_number": 51, "post_type": 1, "updated_at": "2017-02-24T14:55:36.482Z", "reply_count": 0, "reply_to_post_number": 50, "quote_count": 0, "incoming_link_count": 0, "reads": 52, "readers_count": 51, "score": 10.4, "yours": false, "topic_id": 2788, "topic_slug": "moving-to-c-11", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "", "reply_to_user": {"username": "cadaver", "name": "Lasse \u00d6\u00f6rni", "avatar_template": "/user_avatar/discourse.urho3d.io/cadaver/{size}/3_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 461, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 16229, "name": "Eugene Kozlov", "username": "Eugene", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png", "created_at": "2017-02-24T15:03:12.551Z", "cooked": "<p>I have two more cases. <code>auto</code> shall (may?) be used</p>\n<ul>\n<li>with <em>any</em> iterators if there is no one-word alias</li>\n<li>with <em>any</em> pairs and pair-like structures (e.g. <code>HashMap&lt;T, U&gt;::KeyValue&gt;</code>) if there is no one-word alias\n<ul>\n<li>However, prefer to extract pair content into variables with meaningful names</li>\n</ul>\n</li>\n<li>with unknown template types if there is no one-word alias\n<ul>\n<li>So, use <code>auto</code> instead of those ugly <code>typename</code>s and <code>decltype</code>s</li>\n</ul>\n</li>\n</ul>\n<p>Such rules are also pretty clear to follow, IMO.</p>", "post_number": 52, "post_type": 1, "updated_at": "2017-02-24T15:04:35.286Z", "reply_count": 0, "reply_to_post_number": 50, "quote_count": 0, "incoming_link_count": 0, "reads": 52, "readers_count": 51, "score": 10.4, "yours": false, "topic_id": 2788, "topic_slug": "moving-to-c-11", "display_username": "Eugene Kozlov", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Core developer", "title_is_group": false, "reply_to_user": {"username": "cadaver", "name": "Lasse \u00d6\u00f6rni", "avatar_template": "/user_avatar/discourse.urho3d.io/cadaver/{size}/3_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 484, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 16238, "name": "", "username": "rku", "avatar_template": "/user_avatar/discourse.urho3d.io/rku/{size}/3200_2.png", "created_at": "2017-02-26T13:59:29.016Z", "cooked": "<aside class=\"quote\" data-post=\"48\" data-topic=\"2788\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/thesheeep/40/74_1.png\" class=\"avatar\"> TheSHEEEP:</div>\n<blockquote>\n<p>If the custom containers work just fine and impose no performance/memory downside, there\u2019s no reason to switch to STL ones. Obviously, this can be tested and it seems some did that already (and seemingly there\u2019s no reason to switch).</p>\n</blockquote>\n</aside>\n<p>I am in favor of using standard containers. Less confusion and better interoperability with other libraries not to mention not having to maintain said containers. Custom stuff is only useful if it provides something standard stuff does not. But is there really any benefit nowdays?</p>", "post_number": 53, "post_type": 1, "updated_at": "2017-02-26T13:59:29.016Z", "reply_count": 1, "reply_to_post_number": 48, "quote_count": 1, "incoming_link_count": 0, "reads": 51, "readers_count": 50, "score": 15.2, "yours": false, "topic_id": 2788, "topic_slug": "moving-to-c-11", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "reply_to_user": {"username": "TheSHEEEP", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/thesheeep/{size}/74_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 246, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 16240, "name": "", "username": "Enhex", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png", "created_at": "2017-02-26T22:02:28.357Z", "cooked": "<p>Urho\u2019s HashMap doesn\u2019t handle collisions, so it\u2019s faster but less reliable than std::unordered_map.</p>", "post_number": 54, "post_type": 1, "updated_at": "2017-02-26T22:02:55.767Z", "reply_count": 1, "reply_to_post_number": 53, "quote_count": 0, "incoming_link_count": 0, "reads": 52, "readers_count": 51, "score": 15.4, "yours": false, "topic_id": 2788, "topic_slug": "moving-to-c-11", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "reply_to_user": {"username": "rku", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/rku/{size}/3200_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 184, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 16243, "name": "Eugene Kozlov", "username": "Eugene", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png", "created_at": "2017-02-27T07:28:12.471Z", "cooked": "<aside class=\"quote\" data-post=\"54\" data-topic=\"2788\" data-full=\"true\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/enhex/40/81_1.png\" class=\"avatar\"> Enhex:</div>\n<blockquote>\n<p>Urho\u2019s HashMap doesn\u2019t handle collisions, so it\u2019s faster but less reliable than std::unordered_map.</p>\n</blockquote>\n</aside>\n<p>Why do you think so? This sounds <em>very</em> strange. Generic HashMap container must handle collisions.</p>", "post_number": 55, "post_type": 1, "updated_at": "2017-02-27T07:28:12.471Z", "reply_count": 1, "reply_to_post_number": 54, "quote_count": 1, "incoming_link_count": 2, "reads": 55, "readers_count": 54, "score": 26.0, "yours": false, "topic_id": 2788, "topic_slug": "moving-to-c-11", "display_username": "Eugene Kozlov", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Core developer", "title_is_group": false, "reply_to_user": {"username": "Enhex", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 484, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 16247, "name": "", "username": "Enhex", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png", "created_at": "2017-02-27T17:53:38.885Z", "cooked": "<p>It seems I\u2019m wrong, for some reason I remembered it doesn\u2019t handle collisions.</p>", "post_number": 56, "post_type": 1, "updated_at": "2017-02-27T17:53:38.885Z", "reply_count": 0, "reply_to_post_number": 55, "quote_count": 0, "incoming_link_count": 0, "reads": 55, "readers_count": 54, "score": 11.0, "yours": false, "topic_id": 2788, "topic_slug": "moving-to-c-11", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "reply_to_user": {"username": "Eugene", "name": "Eugene Kozlov", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 184, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 16276, "name": "", "username": "rku", "avatar_template": "/user_avatar/discourse.urho3d.io/rku/{size}/3200_2.png", "created_at": "2017-03-01T08:23:51.937Z", "cooked": "<p>At the same note we really should drop old cmake support. New versions have some useful goodies that would help simplifying build system, and boy oh boy we do need that. For example i came upon <a href=\"https://cmake.org/cmake/help/v3.0/command/target_compile_definitions.html\" rel=\"nofollow noopener\">target_compile_definitions</a> just now. The only reason to hold back on cmake would be having easy support for linux distributions, however new ubuntu LTS (16.04) already ships cmake v3.5. For windows it does not matter as user just installs latest and greatest from cmake website.</p>", "post_number": 57, "post_type": 1, "updated_at": "2017-03-01T08:23:51.937Z", "reply_count": 1, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 54, "readers_count": 53, "score": 15.8, "yours": false, "topic_id": 2788, "topic_slug": "moving-to-c-11", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "https://cmake.org/cmake/help/v3.0/command/target_compile_definitions.html", "internal": false, "reflection": false, "title": "target_compile_definitions \u2014 CMake 3.0.2 Documentation", "clicks": 8}], "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 246, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 17295, "name": "Jonathan", "username": "Sinoid", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/f19dbf/{size}.png", "created_at": "2017-04-21T06:21:12.337Z", "cooked": "<p>I rescind a desire to squeeze out cubemap filtering, I\u2019m butting heads intensely with just interacting with cmft and the like remotely without crashing as a post process, that\u2019s a red flag. It\u2019s also just not going to fit even in a case of relying on other tools. I would much rather see a hard release and then work on finishing surround and LFE sound.</p>", "post_number": 58, "post_type": 1, "updated_at": "2017-04-21T06:21:12.337Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 51, "readers_count": 50, "score": 10.2, "yours": false, "topic_id": 2788, "topic_slug": "moving-to-c-11", "display_username": "Jonathan", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 669, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 17347, "name": "", "username": "TheComet", "avatar_template": "/user_avatar/discourse.urho3d.io/thecomet/{size}/1493_2.png", "created_at": "2017-04-24T17:53:21.285Z", "cooked": "<p>Travis CI still uses an ancient version of cmake. You\u2019d break integration tests by using newer cmake stuff.</p>", "post_number": 59, "post_type": 1, "updated_at": "2017-04-24T17:53:21.285Z", "reply_count": 1, "reply_to_post_number": 57, "quote_count": 0, "incoming_link_count": 0, "reads": 50, "readers_count": 49, "score": 15.0, "yours": false, "topic_id": 2788, "topic_slug": "moving-to-c-11", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Community repository maintainer", "title_is_group": false, "reply_to_user": {"username": "rku", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/rku/{size}/3200_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 37, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 17356, "name": "Yao Wei Tjong", "username": "weitjong", "avatar_template": "/user_avatar/discourse.urho3d.io/weitjong/{size}/4_2.png", "created_at": "2017-04-25T09:59:24.128Z", "cooked": "<p>Just dropping by to say that there is no reason to set the minimum required CMake version higher than it needs to be. That is, we should only increase the version to the level our script really utilizes. Setting a high version number does not automatically make our build system better. I do agree on the point that we should modernize the scripts to take the advantage of some of the newer features and idioms provided by newer CMake though.</p>\n<p>Also keep in mind there is more Linux distros out there than Ubuntu. So what CMake version it shipped in what LTS version does not have too much bearing on our decision making, except for our CI need as highlighted by TheComet.</p>\n<p>And lastly. please stay on topic.</p>", "post_number": 60, "post_type": 1, "updated_at": "2017-04-25T09:59:24.128Z", "reply_count": 1, "reply_to_post_number": 59, "quote_count": 0, "incoming_link_count": 5, "reads": 51, "readers_count": 50, "score": 40.2, "yours": false, "topic_id": 2788, "topic_slug": "moving-to-c-11", "display_username": "Yao Wei Tjong", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Admin", "title_is_group": false, "reply_to_user": {"username": "TheComet", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/thecomet/{size}/1493_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": true, "staff": true, "user_id": 4, "hidden": false, "trust_level": 4, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 17357, "name": "\u9b54\u5927\u519c \ud835\udf8d\ud835\udf8e\ud835\udf73 \u73fe\u62db\u870d", "username": "Modanung", "avatar_template": "/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png", "created_at": "2017-04-25T10:03:33.575Z", "cooked": "<p><a href=\"https://repology.org/metapackage/cmake/versions\">Here</a>\u2019s an overview of CMake versions in different repositories.</p>", "post_number": 61, "post_type": 1, "updated_at": "2017-04-25T10:03:33.575Z", "reply_count": 0, "reply_to_post_number": 60, "quote_count": 0, "incoming_link_count": 2, "reads": 51, "readers_count": 50, "score": 20.2, "yours": false, "topic_id": 2788, "topic_slug": "moving-to-c-11", "display_username": "\u9b54\u5927\u519c \ud835\udf8d\ud835\udf8e\ud835\udf73 \u73fe\u62db\u870d", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "https://repology.org/metapackage/cmake/versions", "internal": false, "reflection": false, "title": "Repology: versions for cmake", "clicks": 15}], "read": true, "user_title": "", "reply_to_user": {"username": "weitjong", "name": "Yao Wei Tjong", "avatar_template": "/user_avatar/discourse.urho3d.io/weitjong/{size}/4_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 192, "hidden": false, "trust_level": 0, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "user_suspended": true, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}], "stream": [16005, 16006, 16007, 16008, 16009, 16010, 16024, 16025, 16026, 16027, 16028, 16029, 16031, 16032, 16040, 16047, 16049, 16050, 16051, 16052, 16054, 16063, 16065, 16066, 16067, 16068, 16069, 16070, 16071, 16073, 16074, 16075, 16077, 16078, 16082, 16083, 16084, 16089, 16090, 16094, 16095, 16096, 16097, 16104, 16120, 16121, 16197, 16199, 16211, 16227, 16228, 16229, 16238, 16240, 16243, 16247, 16276, 17295, 17347, 17356, 17357]}, "timeline_lookup": [[1, 2109], [7, 2108], [16, 2107], [23, 2106], [40, 2105], [45, 2104], [47, 2100], [50, 2098], [53, 2096], [54, 2095], [56, 2094], [57, 2093], [58, 2042], [59, 2038]], "tags_descriptions": {}, "id": 2788, "title": "Moving to C++11", "fancy_title": "Moving to C++11", "posts_count": 61, "created_at": "2017-02-13T11:46:42.200Z", "views": 3886, "reply_count": 42, "like_count": 14, "last_posted_at": "2017-04-25T10:03:33.575Z", "visible": true, "closed": false, "archived": false, "has_summary": true, "archetype": "regular", "slug": "moving-to-c-11", "category_id": 16, "word_count": 5929, "deleted_at": null, "user_id": 484, "featured_link": null, "pinned_globally": false, "pinned_at": null, "pinned_until": null, "image_url": null, "slow_mode_seconds": 0, "draft": null, "draft_key": "topic_2788", "draft_sequence": null, "unpinned": null, "pinned": false, "current_post_number": 1, "highest_post_number": 61, "deleted_by": null, "actions_summary": [{"id": 4, "count": 0, "hidden": false, "can_act": false}, {"id": 8, "count": 0, "hidden": false, "can_act": false}, {"id": 7, "count": 0, "hidden": false, "can_act": false}], "chunk_size": 20, "bookmarked": false, "bookmarks": [], "topic_timer": null, "message_bus_last_id": 0, "participant_count": 13, "show_read_indicator": false, "thumbnails": null, "slow_mode_enabled_until": null, "tags_disable_ads": false, "details": {"can_edit": false, "notification_level": 1, "participants": [{"id": 484, "username": "Eugene", "name": "Eugene Kozlov", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png", "post_count": 20, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "trust_level": 2}, {"id": 184, "username": "Enhex", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png", "post_count": 13, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "trust_level": 2}, {"id": 263, "username": "1vanK", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/1vank/{size}/768_2.png", "post_count": 11, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "moderator": true, "trust_level": 4}, {"id": 3, "username": "cadaver", "name": "Lasse \u00d6\u00f6rni", "avatar_template": "/user_avatar/discourse.urho3d.io/cadaver/{size}/3_2.png", "post_count": 4, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "admin": true, "trust_level": 2}, {"id": 246, "username": "rku", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/rku/{size}/3200_2.png", "post_count": 2, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "trust_level": 2}, {"id": 192, "username": "Modanung", "name": "\u9b54\u5927\u519c \ud835\udf8d\ud835\udf8e\ud835\udf73 \u73fe\u62db\u870d", "avatar_template": "/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png", "post_count": 2, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "trust_level": 0}, {"id": 669, "username": "Sinoid", "name": "Jonathan", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/f19dbf/{size}.png", "post_count": 2, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "trust_level": 2}, {"id": 114, "username": "hdunderscore", "name": "hd_", "avatar_template": "/user_avatar/discourse.urho3d.io/hdunderscore/{size}/1151_2.png", "post_count": 2, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "trust_level": 2}, {"id": 622, "username": "yushli1", "name": "Yushli", "avatar_template": "/user_avatar/discourse.urho3d.io/yushli1/{size}/1163_2.png", "post_count": 1, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "trust_level": 2}, {"id": 513, "username": "TheSHEEEP", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/thesheeep/{size}/74_2.png", "post_count": 1, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "trust_level": 2}, {"id": 37, "username": "TheComet", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/thecomet/{size}/1493_2.png", "post_count": 1, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "trust_level": 2}, {"id": 461, "username": "Victor", "name": "", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/v/3e96dc/{size}.png", "post_count": 1, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "trust_level": 2}, {"id": 4, "username": "weitjong", "name": "Yao Wei Tjong", "avatar_template": "/user_avatar/discourse.urho3d.io/weitjong/{size}/4_2.png", "post_count": 1, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "admin": true, "trust_level": 4}], "created_by": {"id": 484, "username": "Eugene", "name": "Eugene Kozlov", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png"}, "last_poster": {"id": 192, "username": "Modanung", "name": "\u9b54\u5927\u519c \ud835\udf8d\ud835\udf8e\ud835\udf73 \u73fe\u62db\u870d", "avatar_template": "/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png"}, "links": [{"url": "https://github.com/urho3d/Urho3D/pull/1818", "title": "Update Assimp by Florastamine \u00b7 Pull Request #1818 \u00b7 urho3d/Urho3D \u00b7 GitHub", "internal": false, "attachment": false, "reflection": false, "clicks": 43, "user_id": 484, "domain": "github.com", "root_domain": "github.com"}, {"url": "https://github.com/eugeneko/Urho3D-Debug", "title": "GitHub - eugeneko/Urho3D-Debug", "internal": false, "attachment": false, "reflection": false, "clicks": 25, "user_id": 484, "domain": "github.com", "root_domain": "github.com"}, {"url": "https://github.com/isocpp/CppCoreGuidelines/blob/master/CppCoreGuidelines.md", "title": "CppCoreGuidelines/CppCoreGuidelines.md at master \u00b7 isocpp/CppCoreGuidelines \u00b7 GitHub", "internal": false, "attachment": false, "reflection": false, "clicks": 18, "user_id": 192, "domain": "github.com", "root_domain": "github.com"}, {"url": "https://repology.org/metapackage/cmake/versions", "title": "Repology: versions for cmake", "internal": false, "attachment": false, "reflection": false, "clicks": 15, "user_id": 192, "domain": "repology.org", "root_domain": "repology.org"}, {"url": "http://stackoverflow.com/questions/10747810/what-is-the-difference-between-typedef-and-using-in-c11", "title": "c++ - What is the difference between 'typedef' and 'using' in C++11? - Stack Overflow", "internal": false, "attachment": false, "reflection": false, "clicks": 13, "user_id": 184, "domain": "stackoverflow.com", "root_domain": "stackoverflow.com"}, {"url": "http://stackoverflow.com/questions/18222926/why-is-list-initialization-using-curly-braces-better-than-the-alternatives", "title": "c++ - Why is list initialization (using curly braces) better than the alternatives? - Stack Overflow", "internal": false, "attachment": false, "reflection": false, "clicks": 11, "user_id": 184, "domain": "stackoverflow.com", "root_domain": "stackoverflow.com"}, {"url": "https://msdn.microsoft.com/en-us/library/hh697468.aspx", "title": "_ITERATOR_DEBUG_LEVEL", "internal": false, "attachment": false, "reflection": false, "clicks": 10, "user_id": 3, "domain": "msdn.microsoft.com", "root_domain": "microsoft.com"}, {"url": "https://github.com/1vanK/Urho3DSpriteBatch/blob/master/SpriteBatch.h", "title": "Urho3DSpriteBatch/SpriteBatch.h at master \u00b7 1vanK/Urho3DSpriteBatch \u00b7 GitHub", "internal": false, "attachment": false, "reflection": false, "clicks": 9, "user_id": 263, "domain": "github.com", "root_domain": "github.com"}, {"url": "https://cmake.org/cmake/help/v3.0/command/target_compile_definitions.html", "title": "target_compile_definitions \u2014 CMake 3.0.2 Documentation", "internal": false, "attachment": false, "reflection": false, "clicks": 8, "user_id": 246, "domain": "cmake.org", "root_domain": "cmake.org"}, {"url": "https://github.com/steveire/clazy", "title": "GitHub - steveire/clazy: Qt oriented code checker based on clang framework. Krazy's little brother.", "internal": false, "attachment": false, "reflection": false, "clicks": 6, "user_id": 114, "domain": "github.com", "root_domain": "github.com"}, {"url": "http://clang.llvm.org/extra/clang-tidy/", "title": "Clang-Tidy \u2014 Extra Clang Tools 5 documentation", "internal": false, "attachment": false, "reflection": false, "clicks": 4, "user_id": 184, "domain": "clang.llvm.org", "root_domain": "llvm.org"}, {"url": "http://discourse.urho3d.io/t/urho3d-1-7-release-pending-work/2790", "title": "Urho3D 1.7 release pending work", "internal": true, "attachment": false, "reflection": true, "clicks": 3, "user_id": 3, "domain": "discourse.urho3d.io", "root_domain": "urho3d.io"}, {"url": "https://github.com/electronicarts/EASTL", "title": "GitHub - electronicarts/EASTL: EASTL stands for Electronic Arts Standard Template Library. It is an extensive and robust implementation that has an emphasis on high performance.", "internal": false, "attachment": false, "reflection": false, "clicks": 2, "user_id": 184, "domain": "github.com", "root_domain": "github.com"}, {"url": "https://www.youtube.com/watch?v=V4DkJtT2jdE", "title": "autophobia - YouTube", "internal": false, "attachment": false, "reflection": false, "clicks": 2, "user_id": 184, "domain": "www.youtube.com", "root_domain": "youtube.com"}, {"url": "https://github.com/Enhex/Benchmarks/tree/master/boost%20small_vector", "title": "Benchmarks/boost small_vector at master \u00b7 Enhex/Benchmarks \u00b7 GitHub", "internal": false, "attachment": false, "reflection": false, "clicks": 1, "user_id": 184, "domain": "github.com", "root_domain": "github.com"}, {"url": "http://en.cppreference.com/w/cpp/language/types#Integer_types", "title": "Fundamental types - cppreference.com", "internal": false, "attachment": false, "reflection": false, "clicks": 1, "user_id": 184, "domain": "en.cppreference.com", "root_domain": "cppreference.com"}]}, "suggested_topics": [{"id": 7211, "title": "Particle is low", "fancy_title": "Particle is low", "slug": "particle-is-low", "posts_count": 2, "reply_count": 0, "highest_post_number": 2, "image_url": null, "created_at": "2022-03-03T13:52:14.991Z", "last_posted_at": "2022-04-20T05:18:36.122Z", "bumped": true, "bumped_at": "2022-04-20T05:18:36.122Z", "archetype": "regular", "unseen": false, "pinned": false, "unpinned": null, "visible": true, "closed": false, "archived": false, "bookmarked": null, "liked": null, "tags_descriptions": {}, "like_count": 0, "views": 232, "category_id": 16, "featured_link": null, "has_accepted_answer": false, "posters": [{"extras": null, "description": "Original Poster", "user": {"id": 1503, "username": "tianlv777", "name": "zerrrrr", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/t/a4c791/{size}.png"}}, {"extras": "latest", "description": "Most Recent Poster", "user": {"id": 1491, "username": "xlat", "name": "Alex Kuch", "avatar_template": "/user_avatar/discourse.urho3d.io/xlat/{size}/3620_2.png"}}]}, {"id": 7073, "title": "A plan to support static batching", "fancy_title": "A plan to support static batching", "slug": "a-plan-to-support-static-batching", "posts_count": 5, "reply_count": 2, "highest_post_number": 5, "image_url": null, "created_at": "2021-12-01T03:43:48.579Z", "last_posted_at": "2021-12-02T23:30:07.199Z", "bumped": true, "bumped_at": "2021-12-02T23:30:07.199Z", "archetype": "regular", "unseen": false, "pinned": false, "unpinned": null, "visible": true, "closed": false, "archived": false, "bookmarked": null, "liked": null, "tags_descriptions": {}, "like_count": 1, "views": 180, "category_id": 16, "featured_link": null, "has_accepted_answer": false, "posters": [{"extras": "latest", "description": "Original Poster, Most Recent Poster", "user": {"id": 1490, "username": "Sunc", "name": "DoubleSuper", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/df788c/{size}.png"}}, {"extras": null, "description": "Frequent Poster", "user": {"id": 628, "username": "SirNate0", "name": "SirNate0", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}}, {"extras": null, "description": "Frequent Poster", "user": {"id": 484, "username": "Eugene", "name": "Eugene Kozlov", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png"}}]}, {"id": 7095, "title": "Texture2D from imported GPU memory (interop)", "fancy_title": "Texture2D from imported GPU memory (interop)", "slug": "texture2d-from-imported-gpu-memory-interop", "posts_count": 6, "reply_count": 2, "highest_post_number": 6, "image_url": null, "created_at": "2021-12-09T10:52:31.426Z", "last_posted_at": "2021-12-13T15:40:35.300Z", "bumped": true, "bumped_at": "2021-12-13T15:40:35.300Z", "archetype": "regular", "unseen": false, "pinned": false, "unpinned": null, "visible": true, "closed": false, "archived": false, "bookmarked": null, "liked": null, "tags_descriptions": {}, "like_count": 1, "views": 316, "category_id": 16, "featured_link": null, "has_accepted_answer": false, "posters": [{"extras": "latest", "description": "Original Poster, Most Recent Poster", "user": {"id": 1496, "username": "ange", "name": null, "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/a/76d3ee/{size}.png"}}, {"extras": null, "description": "Frequent Poster", "user": {"id": 484, "username": "Eugene", "name": "Eugene Kozlov", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png"}}, {"extras": null, "description": "Frequent Poster", "user": {"id": 628, "username": "SirNate0", "name": "SirNate0", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}}]}, {"id": 7136, "title": "Open-source ocean shader system", "fancy_title": "Open-source ocean shader system", "slug": "open-source-ocean-shader-system", "posts_count": 1, "reply_count": 0, "highest_post_number": 1, "image_url": null, "created_at": "2022-01-19T23:11:15.784Z", "last_posted_at": "2022-01-19T23:11:15.858Z", "bumped": true, "bumped_at": "2022-01-19T23:11:15.858Z", "archetype": "regular", "unseen": false, "pinned": false, "unpinned": null, "visible": true, "closed": false, "archived": false, "bookmarked": null, "liked": null, "tags_descriptions": {}, "like_count": 1, "views": 177, "category_id": 16, "featured_link": null, "has_accepted_answer": false, "posters": [{"extras": "latest single", "description": "Original Poster, Most Recent Poster", "user": {"id": 1304, "username": "lebrewer", "name": "lebrewer", "avatar_template": "/user_avatar/discourse.urho3d.io/lebrewer/{size}/2811_2.png"}}]}, {"id": 7264, "title": "Mesh not rendering right and no idea why [SOLVED]", "fancy_title": "Mesh not rendering right and no idea why [SOLVED]", "slug": "mesh-not-rendering-right-and-no-idea-why-solved", "posts_count": 4, "reply_count": 1, "highest_post_number": 4, "image_url": "https://global.discourse-cdn.com/standard17/uploads/urho3d/optimized/2X/5/58b096d0ea560021fc4301ffe097f4b1350670af_2_1024x519.jpeg", "created_at": "2022-05-13T01:26:06.152Z", "last_posted_at": "2022-05-13T20:26:12.059Z", "bumped": true, "bumped_at": "2022-05-13T20:26:12.059Z", "archetype": "regular", "unseen": false, "pinned": false, "unpinned": null, "visible": true, "closed": false, "archived": false, "bookmarked": null, "liked": null, "tags_descriptions": {}, "like_count": 2, "views": 147, "category_id": 16, "featured_link": null, "has_accepted_answer": false, "posters": [{"extras": "latest", "description": "Original Poster, Most Recent Poster", "user": {"id": 1507, "username": "Kest", "name": "Kest", "avatar_template": "/user_avatar/discourse.urho3d.io/kest/{size}/3734_2.png"}}, {"extras": null, "description": "Frequent Poster", "user": {"id": 628, "username": "SirNate0", "name": "SirNate0", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}}, {"extras": null, "description": "Frequent Poster", "user": {"id": 1358, "username": "JSandusky", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/jsandusky/{size}/3220_2.png"}}]}]}