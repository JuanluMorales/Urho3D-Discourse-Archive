{"post_stream":{"posts":[{"id":13463,"name":"","username":"rdpeake","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/r/2bfe46/{size}.png","created_at":"2016-09-02T01:21:24.000Z","cooked":"\u003cp\u003eHey All,\u003c/p\u003e\n\u003cp\u003eThis will probably be a long one, but bare with me.\u003c/p\u003e\n\u003cp\u003eI have an existing Xamarin app, which uses a floating opengl surface to move our 3d scene in front of, and behind, other xamarin components. I have, via urhosharp (search xamarin/urho on github) created an android and iOS surface within the app which can be freely moved between layers. The issue is that the background of that layer does not clear transparent like the old engine could. Whilst could be possible that this is an UrhoSharp problem, and i will be asking there as well, i tried to achieve a test project using urho3d source.\u003c/p\u003e\n\u003cp\u003eIn order to test if SDL allows for transparent clear colours, on windows, i started with the hello world sample and attempted to render a transparent clear colour - by setting the fog colour. As the Zone component always makes the fog colour opaque i modified the ‘setfogcolor’ method to be full alpha. what i hoped to achieve when running this, was to see the windows form (white, by default i believe) show through and my clear colour to not be there at all. Instead, i see a full opaque version of my clear colour.\u003c/p\u003e\n\u003cp\u003eNow, the question is, Is this a limitation of Windows -\u0026gt; though i have seen many other GL apps which can render transparent clear, SDL, or Urho3D, or am i doing something wrong? I’d like to point out, part of the graphics initialisation is to clear transparent black, which also shows up as opaque black. Also, if this is a windows problem, what would i need to do to get this to work on Androidn/iOS targets?\u003c/p\u003e\n\u003cp\u003eThanks for any help.\u003c/p\u003e","post_number":1,"post_type":1,"updated_at":"2017-01-02T01:14:01.887Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":708,"reads":50,"readers_count":49,"score":3550.0,"yours":false,"topic_id":2223,"topic_slug":"transparent-surface","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":549,"hidden":false,"trust_level":1,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":13480,"name":"Sir Nate","username":"Sir_Nate","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/ba9def/{size}.png","created_at":"2016-09-04T01:55:04.000Z","cooked":"\u003cp\u003eIt’s a limitation of SDL (for now). It’s possible this is what you’re looking for, but it’s only available in the unstable versions of SDL 2.0.4.\u003c/p\u003e\n\u003cp\u003eYou can try to set up your window using one of these, but I’ve not tried it with Urho, there may be some configuration needed to get it to support a transparent window. Though I think a transparent fog color will not work (I think it just ignores alpha), but I don’t know what you’ve changed, so perhaps it will work.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"http://stackoverflow.com/questions/4052940/how-to-make-an-opengl-rendering-context-with-transparent-background\" data-bbcode=\"true\" rel=\"nofollow noopener\"\u003ehttp://stackoverflow.com/questions/4052940/how-to-make-an-opengl-rendering-context-with-transparent-background\u003c/a\u003e \u0026lt;- windows and linux\u003cbr\u003e\n\u003ca href=\"http://stackoverflow.com/questions/9363491/how-to-make-transparent-window-on-linux\" data-bbcode=\"true\" rel=\"nofollow noopener\"\u003ehttp://stackoverflow.com/questions/9363491/how-to-make-transparent-window-on-linux\u003c/a\u003e \u0026lt;- linux\u003c/p\u003e","post_number":2,"post_type":1,"updated_at":"2017-01-02T01:14:03.148Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":2,"reads":48,"readers_count":47,"score":19.6,"yours":false,"topic_id":2223,"topic_slug":"transparent-surface","display_username":"Sir Nate","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"link_counts":[{"url":"http://stackoverflow.com/questions/4052940/how-to-make-an-opengl-rendering-context-with-transparent-background","internal":false,"reflection":false,"title":"c - How to make an OpenGL rendering context with transparent background? - Stack Overflow","clicks":34},{"url":"http://stackoverflow.com/questions/9363491/how-to-make-transparent-window-on-linux","internal":false,"reflection":false,"title":"c++ - How to make transparent window on linux - Stack Overflow","clicks":17}],"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":242,"hidden":false,"trust_level":1,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":13487,"name":"","username":"rdpeake","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/r/2bfe46/{size}.png","created_at":"2016-09-05T01:17:01.000Z","cooked":"\u003cp\u003eThanks For your reply.\u003c/p\u003e\n\u003cp\u003eThe fog colour by default sets the alpha channel to 1, regardless of what you try to set it at.\u003c/p\u003e\n\u003cp\u003eDo you have any examples or such for allowing the openGL surface being transparent (alpha enabled) and transparent to views behind on android/iOS. Android seems to set the surface view format to 535 colour, not sure what the iOS surface is being set to, but neither allow manual clear colour with the alpha channel below max.\u003c/p\u003e","post_number":3,"post_type":1,"updated_at":"2017-01-02T01:14:03.668Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":5,"reads":45,"readers_count":44,"score":34.0,"yours":false,"topic_id":2223,"topic_slug":"transparent-surface","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":549,"hidden":false,"trust_level":1,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":13497,"name":"Sir Nate","username":"Sir_Nate","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/ba9def/{size}.png","created_at":"2016-09-05T21:01:29.000Z","cooked":"\u003cp\u003eYou can try adapting \u003ca href=\"http://stackoverflow.com/questions/2034822/android-opengl-es-transparent-background\" data-bbcode=\"true\" rel=\"nofollow noopener\"\u003ehttp://stackoverflow.com/questions/2034822/android-opengl-es-transparent-background\u003c/a\u003e or \u003ca href=\"http://stackoverflow.com/questions/16762633/android-glsurfaceview-transparent-background-without-setzorderontop\" data-bbcode=\"true\" rel=\"nofollow noopener\"\u003ehttp://stackoverflow.com/questions/16762633/android-glsurfaceview-transparent-background-without-setzorderontop\u003c/a\u003e for Android, but I haven’t really looked into the Urho Android window creation code so I can’t say if that might help. I have no idea for iOS, though – if you want to show the home-screen on iOS it might not even be possible (but for the moment I only develop for Android (and that only secondarily to the Desktop, mostly just to make sure I won’t have to change too much for my game to get it to work)).\u003c/p\u003e","post_number":4,"post_type":1,"updated_at":"2017-01-02T01:14:04.383Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":7,"reads":44,"readers_count":43,"score":43.8,"yours":false,"topic_id":2223,"topic_slug":"transparent-surface","display_username":"Sir Nate","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"link_counts":[{"url":"http://stackoverflow.com/questions/2034822/android-opengl-es-transparent-background","internal":false,"reflection":false,"title":"Android OpenGL ES Transparent Background - Stack Overflow","clicks":13},{"url":"http://stackoverflow.com/questions/16762633/android-glsurfaceview-transparent-background-without-setzorderontop","internal":false,"reflection":false,"title":"opengl es - Android GLSurfaceView transparent background without setZOrderonTop - Stack Overflow","clicks":4}],"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":242,"hidden":false,"trust_level":1,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":13498,"name":"","username":"rdpeake","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/r/2bfe46/{size}.png","created_at":"2016-09-06T00:17:42.000Z","cooked":"\u003cp\u003eI’m not trying to show the homescreen through the window. I’m trying to show other, non openGL views from my own app though the surface.\u003c/p\u003e","post_number":5,"post_type":1,"updated_at":"2017-01-02T01:14:04.452Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":1,"reads":41,"readers_count":40,"score":13.2,"yours":false,"topic_id":2223,"topic_slug":"transparent-surface","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":549,"hidden":false,"trust_level":1,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":13521,"name":"Sir Nate","username":"Sir_Nate","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/ba9def/{size}.png","created_at":"2016-09-08T14:58:06.000Z","cooked":"\u003cp\u003eThis may be a starting point for iOS then, but I even less of an idea about Urho’s iOS stuff, so…\u003cbr\u003e\n\u003ca href=\"http://stackoverflow.com/questions/15425149/making-uiview-transparent\" data-bbcode=\"true\" rel=\"nofollow noopener\"\u003ehttp://stackoverflow.com/questions/15425149/making-uiview-transparent\u003c/a\u003e\u003c/p\u003e","post_number":6,"post_type":1,"updated_at":"2017-01-02T01:14:06.168Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":0,"reads":40,"readers_count":39,"score":8.0,"yours":false,"topic_id":2223,"topic_slug":"transparent-surface","display_username":"Sir Nate","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"link_counts":[{"url":"http://stackoverflow.com/questions/15425149/making-uiview-transparent","internal":false,"reflection":false,"title":"ios - Making UIView transparent - Stack Overflow","clicks":8}],"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":242,"hidden":false,"trust_level":1,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":13527,"name":"","username":"rdpeake","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/r/2bfe46/{size}.png","created_at":"2016-09-09T05:24:24.000Z","cooked":"\u003cp\u003eHey, The problem with what you have posted so far is that my GLSurface does not allow for a transparent clear colour.\u003c/p\u003e\n\u003cp\u003eIf i manually call the following\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003e\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eI still end up with an opaque green display - i should expect the screen to be black, or white, depending on what the default background colour for an app should be.\u003c/p\u003e\n\u003cp\u003eDo i need to do something in order to achieve this?\u003c/p\u003e","post_number":7,"post_type":1,"updated_at":"2017-01-02T01:14:06.635Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":0,"reads":44,"readers_count":43,"score":8.8,"yours":false,"topic_id":2223,"topic_slug":"transparent-surface","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":549,"hidden":false,"trust_level":1,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":13590,"name":"Sir Nate","username":"Sir_Nate","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/ba9def/{size}.png","created_at":"2016-09-13T03:40:28.000Z","cooked":"\u003cp\u003eI don’t really know how to fix it. I did get a transparent window working on Desktop (Linux), passing it a native window from that Stack Overflow question’s code, but I don’t know how you could fix it for mobile. You can see if this helps, but I don’t even know how you would go about creating another surface in mobile, so I can’t really help with that.\u003c/p\u003e\n\u003cp\u003eUrhoApp.hpp\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003e#ifndef URHOAPP_HPP\n#define URHOAPP_HPP\n\n//#include \u0026lt;Urho3D.h\u0026gt;\n//#include \u0026lt;Engine/Application.h\u0026gt;\n#include \"/usr/local/include/Urho3D/Urho3D.h\"\n#include \"/usr/local/include/Urho3D/Engine/Application.h\"\n\n\n#include \u0026lt;Core/Object.h\u0026gt;\n#include \u0026lt;Container/Str.h\u0026gt;\n#include \u0026lt;Scene/Scene.h\u0026gt;\n#include \u0026lt;Container/Ptr.h\u0026gt;\n#include \u0026lt;Container/RefCounted.h\u0026gt;\n#include \u0026lt;Scene/Node.h\u0026gt;\n#include \u0026lt;UI/UIElement.h\u0026gt;\n#include \u0026lt;Core/CoreEvents.h\u0026gt;\n#include \u0026lt;Graphics/Viewport.h\u0026gt;\n\nusing namespace Urho3D;\n\nclass UrhoApp: public Urho3D::Application\n{\npublic:\n    OBJECT(UrhoApp,Application)\n    UrhoApp(Context* context, void* window);\n\n    void Start();\n    void Setup();\n\n    int MyInit();\n    void UrhoFrame();\n    void MyStop();\n\n    void Update(StringHash eventType, VariantMap\u0026amp; eventData);\n\nprivate:\n    void* window_;\n    SharedPtr\u0026lt;Scene\u0026gt; scene_;//a pointer to the scene -- it can be another state's scene, or a different one entirely\n    Node* localRootNode;//a node for all of the state-local objects to be children of\n    UIElement* localRootUIElement;//a UI Element for adding all of the state local UI stuff (since UI is a subsystem, unlike scene)\n    SharedPtr\u0026lt;Node\u0026gt; cameraNode_;\n    SharedPtr\u0026lt;Viewport\u0026gt; viewport_;\n    bool active;\n    bool isFocus;\n};\n\n//URHO3D_DEFINE_APPLICATION_MAIN(UrhoApp)\nUrhoApp* RunApplication(void* window);\n\n#endif // URHOAPP_HPP\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eUrhoApp.cpp\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003e#include \u0026lt;Urho3D.h\u0026gt;\n#include \"UrhoApp.hpp\"\n#include \u0026lt;Graphics/Graphics.h\u0026gt;\n#include \u0026lt;IO/File.h\u0026gt;\n#include \u0026lt;Resource/XMLFile.h\u0026gt;\n#include \u0026lt;Engine/Engine.h\u0026gt;\n#include \u0026lt;Input/Input.h\u0026gt;\n#include \u0026lt;IO/Log.h\u0026gt;\n#include \u0026lt;Core/Variant.h\u0026gt;\n#include \u0026lt;Core/Context.h\u0026gt;\n#include \u0026lt;Scene/Scene.h\u0026gt;\n#include \u0026lt;Graphics/Octree.h\u0026gt;\n#include \u0026lt;Graphics/Camera.h\u0026gt;\n#include \u0026lt;Graphics/Zone.h\u0026gt;\n#include \u0026lt;Resource/ResourceCache.h\u0026gt;\n#include \u0026lt;Graphics/Renderer.h\u0026gt;\n#include \u0026lt;UI/Text.h\u0026gt;\n#include \u0026lt;UI/UIElement.h\u0026gt;\n#include \u0026lt;UI/UI.h\u0026gt;\n#include \u0026lt;UI/Font.h\u0026gt;\n#include \u0026lt;Container/Str.h\u0026gt;\n#include \u0026lt;UI/Menu.h\u0026gt;\n#include \u0026lt;Audio/Audio.h\u0026gt;\n#include \u0026lt;Graphics/RenderPath.h\u0026gt;\n#include \u0026lt;Graphics/Model.h\u0026gt;\n#include \u0026lt;Graphics/StaticModel.h\u0026gt;\n#include \u0026lt;Graphics/DebugRenderer.h\u0026gt;\n#include \u0026lt;Graphics/GraphicsEvents.h\u0026gt;\n\nusing namespace Urho3D;\n\nUrhoApp::UrhoApp(Context *context, void *window): Urho3D::Application(context), window_(window)\n{\n\n}\n\nvoid UrhoApp::Start()\n{\n    Scene* scene_ = new Scene(context_);\n        scene_-\u0026gt;CreateComponent\u0026lt;Octree\u0026gt;();\n\n        //enable touch on android\n    //    if (GetPlatform() == \"Android\" || GetPlatform() == \"iOS\")\n    //        // On mobile platform, enable touch by adding a screen joystick\n    //        InitTouchInput();\n    //    else if (GetSubsystem\u0026lt;Input\u0026gt;()-\u0026gt;GetNumJoysticks() == 0)\n    //        // On desktop platform, do not detect touch when we already got a joystick\n    //        SubscribeToEvent(E_TOUCHBEGIN, HANDLER(BattleState, HandleTouchBegin));\n\n        const String str(\"ROOTUI\");\n        localRootUIElement = context_-\u0026gt;GetSubsystem\u0026lt;UI\u0026gt;()-\u0026gt;GetRoot()-\u0026gt;CreateChild\u0026lt;Urho3D::Menu\u0026gt;(str, -1); //(String(\"Root\") + this-\u0026gt;GetTypeName() + \"UINode\");\n        Text* text = localRootUIElement-\u0026gt;CreateChild\u0026lt;Text\u0026gt;();\n        text-\u0026gt;SetText(\"Press Enter to Continue \\n- OR -\\n0 for Root | 9 for Mon | 8 for Move\");\n        text-\u0026gt;SetColor(Color::WHITE);\n        text-\u0026gt;SetFont(GetSubsystem\u0026lt;ResourceCache\u0026gt;()-\u0026gt;GetResource\u0026lt;Font\u0026gt;(\"Fonts/BlueHighway.ttf\"), 14);\n        text-\u0026gt;SetTextAlignment(HA_CENTER);\n        localRootUIElement-\u0026gt;SetHorizontalAlignment(HA_CENTER);\n        localRootUIElement-\u0026gt;SetVerticalAlignment(VA_CENTER);\n        text-\u0026gt;SetHorizontalAlignment(HA_CENTER);\n        text-\u0026gt;SetVerticalAlignment(VA_CENTER);\n\n        cameraNode_ = scene_-\u0026gt;CreateChild(\"Camera\");\n        Urho3D::Camera* camera = cameraNode_-\u0026gt;CreateComponent\u0026lt;Urho3D::Camera\u0026gt;();\n        camera-\u0026gt;SetFarClip(300.0f);\n//        cameraNode_-\u0026gt;SetPosition({0,20,0});\n//        cameraNode_-\u0026gt;LookAt({0,0,0});\n\n        StaticModel* model = scene_-\u0026gt;CreateChild()-\u0026gt;CreateComponent\u0026lt;StaticModel\u0026gt;();\n        model-\u0026gt;SetModel(GetSubsystem\u0026lt;ResourceCache\u0026gt;()-\u0026gt;GetResource\u0026lt;Model\u0026gt;(\"Models/Box.mdl\"));\n        model-\u0026gt;SetMaterial(GetSubsystem\u0026lt;ResourceCache\u0026gt;()-\u0026gt;GetResource\u0026lt;Material\u0026gt;(\"Materials/Stone.xml\"));\n\n    //    terminatorNode = scene_-\u0026gt;CreateChild(\"Terminator\");\n    //    ScriptInstance* terminatorInstance = terminatorNode-\u0026gt;CreateComponent\u0026lt;ScriptInstance\u0026gt;();\n    //    terminatorInstance-\u0026gt;CreateObject(GetSubsystem\u0026lt;ResourceCache\u0026gt;()-\u0026gt;GetResource\u0026lt;ScriptFile\u0026gt;(\"Scripts/Terminator.as\"), \"Termination\");\n\n//    #ifdef DEBUG\n        DebugRenderer* rend = scene_-\u0026gt;CreateComponent\u0026lt;DebugRenderer\u0026gt;();\n        rend-\u0026gt;SetView(camera);\n//    #endif // DEBUG\n\n        // Set an initial position for the camera scene node above the plane\n        cameraNode_-\u0026gt;SetPosition(Vector3(0.0f, 5.0f, 0.0f));\n\n        cameraNode_-\u0026gt;LookAt(Vector3(0.0f, 0.0f, 0.0f));\n\n    //    ScriptInstance* camInstance = cameraNode_-\u0026gt;CreateComponent\u0026lt;ScriptInstance\u0026gt;();\n    //    camInstance-\u0026gt;CreateObject(GetSubsystem\u0026lt;ResourceCache\u0026gt;()-\u0026gt;GetResource\u0026lt;ScriptFile\u0026gt;(\"Camera.as\"), \"TargetCam\"); // \"Mover\");\n\n        Renderer* renderer = GetSubsystem\u0026lt;Renderer\u0026gt;();\n\n        viewport_ = new Viewport(context_, scene_, cameraNode_-\u0026gt;GetComponent\u0026lt;Urho3D::Camera\u0026gt;());\n        renderer-\u0026gt;SetViewport(0, viewport_);\n        auto rp = viewport_-\u0026gt;GetRenderPath();\n//        rp-\u0026gt;RemoveCommands(\"clear\");\n        rp-\u0026gt;GetCommand(0)-\u0026gt;clearFlags_ = CLEAR_COLOR;//CLEAR_STENCIL;//CLEAR_DEPTH | CLEAR_STENCIL;\n        rp-\u0026gt;GetCommand(0)-\u0026gt;clearColor_ = Color(1.0,0.0,0.0,0.5);\n//        rp-\u0026gt;AddCommand(*(rp-\u0026gt;GetCommand(0)));\n\n//        Urho and Tangram fight over GPU stuff\n        rend-\u0026gt;AddLine({-30,-30,-30},{30,30,30},0xaaaaaaaa,false);\n\n\n        Node* zoneNode = scene_-\u0026gt;CreateChild(\"Zone\");\n        Zone* zone = zoneNode-\u0026gt;CreateComponent\u0026lt;Zone\u0026gt;();\n        zone-\u0026gt;SetBoundingBox(BoundingBox(-1000.0f, 1000.0f));\n        zone-\u0026gt;SetAmbientColor(Color(0.15f, 0.15f, 0.15f, 0.5f));\n        zone-\u0026gt;SetFogColor(Color(0.5f, 0.5f, 0.7f, 0.5f));\n        zone-\u0026gt;SetFogStart(100.0f);\n        zone-\u0026gt;SetFogEnd(300.0f);\n\n    //    fieldNode = scene_-\u0026gt;CreateChild(\"Field\");\n    //    ScriptInstance* instance = fieldNode-\u0026gt;CreateComponent\u0026lt;ScriptInstance\u0026gt;();\n    //    instance-\u0026gt;CreateObject(GetSubsystem\u0026lt;ResourceCache\u0026gt;()-\u0026gt;GetResource\u0026lt;ScriptFile\u0026gt;(\"BattleLoad.as\"), \"Load\");\n\n//        good = true;\n//        e = new EditorManager(GetContext());\n\n        LOGINFO(\"Completed Game State Root Menu Start!\");\n    //\tGetSubsystem\u0026lt;Input\u0026gt;()-\u0026gt;AddScreenJoystick(GetSubsystem\u0026lt;ResourceCache\u0026gt;()-\u0026gt;GetResource\u0026lt;XMLFile\u0026gt;(\"TestAxes\"));\n\n    //\tif (GetSubsystem\u0026lt;Input\u0026gt;()-\u0026gt;GetNumJoysticks() == 0)\n    //\t\tnew Stick(context_-\u0026gt;GetSubsystem\u0026lt;UI\u0026gt;()-\u0026gt;GetRoot(), GetSubsystem\u0026lt;Input\u0026gt;()-\u0026gt;AddScreenJoystick(GetSubsystem\u0026lt;ResourceCache\u0026gt;()-\u0026gt;GetResource\u0026lt;XMLFile\u0026gt;(\"UI/TestAxes.xml\")), 0, {20,20,800,1800}, false);\n\n        GetSubsystem\u0026lt;Audio\u0026gt;()-\u0026gt;SetMasterGain(SOUND_MUSIC,0.15);\n\n        GetSubsystem\u0026lt;Input\u0026gt;()-\u0026gt;SetMouseMode(MM_FREE);\n        GetSubsystem\u0026lt;Input\u0026gt;()-\u0026gt;SetMouseVisible(true);\n\n\n        SubscribeToEvent(E_BEGINRENDERING,HANDLER(UrhoApp,Update));\n}\n\nvoid UrhoApp::Setup()\n{\n    engineParameters_[\"ExternalWindow\"] = window_;\n}\n\nint UrhoApp::MyInit()\n{\n//    int Application::Run()\n    {\n        // Emscripten-specific: C++ exceptions are turned off by default in -O1 (and above), unless '-s DISABLE_EXCEPTION_CATCHING=0' flag is set\n        // Urho3D build configuration uses -O3 (Release), -O2 (RelWithDebInfo), and -O0 (Debug)\n        // Thus, the try-catch block below should be optimised out except in Debug build configuration\n        try\n        {\n            Setup();\n            if (exitCode_)\n                return exitCode_;\n\n            if (!engine_-\u0026gt;Initialize(engineParameters_))\n            {\n                ErrorExit();\n                return exitCode_;\n            }\n\n            Start();\n            if (exitCode_)\n                return exitCode_;\n\n            // Platforms other than iOS and Emscripten run a blocking main loop\n//    #if !defined(IOS) \u0026amp;\u0026amp; !defined(__EMSCRIPTEN__)\n//            while (!engine_-\u0026gt;IsExiting())\n//                engine_-\u0026gt;RunFrame();\n\n//            Stop();\n//            // iOS will setup a timer for running animation frames so eg. Game Center can run. In this case we do not\n//            // support calling the Stop() function, as the application will never stop manually\n//    #else\n//    #if defined(IOS)\n//            SDL_iPhoneSetAnimationCallback(GetSubsystem\u0026lt;Graphics\u0026gt;()-\u0026gt;GetWindow(), 1, \u0026amp;RunFrame, engine_);\n//    #elif defined(__EMSCRIPTEN__)\n//            emscripten_set_main_loop_arg(RunFrame, engine_, 0, 1);\n//    #endif\n//    #endif\n\n            return exitCode_;\n        }\n        catch (std::bad_alloc\u0026amp;)\n        {\n            ErrorDialog(GetTypeName(), \"An out-of-memory error occurred. The application will now exit.\");\n            return EXIT_FAILURE;\n        }\n    }\n}\n\nvoid UrhoApp::UrhoFrame()\n{\n    engine_-\u0026gt;RunFrame();\n\n}\n\nvoid UrhoApp::MyStop()\n{\n    Stop();\n\n}\n\nvoid UrhoApp::Update(StringHash eventType, VariantMap \u0026amp;eventData)\n{\n//    GetSubsystem\u0026lt;Graphics\u0026gt;()-\u0026gt;Clear(CLEAR_COLOR,Color(1.0,0.0,1.0,0.5));\n}\n\n\nUrhoApp* RunApplication(void *window)\n{\n    /*Urho3D::SharedPtr\u0026lt;Urho3D::Context\u0026gt;*/Urho3D::Context* context(new Urho3D::Context());\n    /*Urho3D::SharedPtr\u0026lt;UrhoApp\u0026gt; application*/return (new UrhoApp(context,window));\n//    return application-\u0026gt;Run();\n}\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003emain.cpp\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003e//http://stackoverflow.com/questions/4052940/how-to-make-an-opengl-rendering-context-with-transparent-background\n//http://stackoverflow.com/questions/9363491/how-to-make-transparent-window-on-linux\n\n/*------------------------------------------------------------------------\n* A demonstration of OpenGL in a  ARGB window\n*    =\u0026gt; support for composited window transparency\n*\n* (c) 2011 by Wolfgang 'datenwolf' Draxinger\n*     See me at comp.graphics.api.opengl and StackOverflow.com\n\n* License agreement: This source code is provided \"as is\". You\n* can use this source code however you want for your own personal\n* use. If you give this source code to anybody else then you must\n* leave this message in it.\n*\n* This program is based on the simplest possible\n* Linux OpenGL program by FTB (see info below)\n\nThe simplest possible Linux OpenGL program? Maybe...\n\n(c) 2002 by FTB. See me in comp.graphics.api.opengl\n\n--\n\u0026lt;\\___/\u0026gt;\n/ O O \\\n\\_____/  FTB.\n\n------------------------------------------------------------------------*/\n\n#include \u0026lt;stdlib.h\u0026gt;\n#include \u0026lt;stdio.h\u0026gt;\n#include \u0026lt;string.h\u0026gt;\n#include \u0026lt;math.h\u0026gt;\n\n#include \u0026lt;GL/gl.h\u0026gt;\n#include \u0026lt;GL/glx.h\u0026gt;\n#include \u0026lt;GL/glxext.h\u0026gt;\n#include \u0026lt;X11/Xatom.h\u0026gt;\n#include \u0026lt;X11/extensions/Xrender.h\u0026gt;\n#include \u0026lt;X11/Xutil.h\u0026gt;\n\n#include \"/usr/local/include/Urho3D/Urho3D.h\"\n#include \"UrhoApp.hpp\"\n\nUrhoApp* myApp;\n\n#define USE_CHOOSE_FBCONFIG\n\nstatic void fatalError(const char *why)\n{\n fprintf(stderr, \"%s\", why);\n exit(0x666);\n}\n\nstatic int Xscreen;\nstatic Atom del_atom;\nstatic Colormap cmap;\nstatic Display *Xdisplay;\nstatic XVisualInfo *visual;\nstatic XRenderPictFormat *pict_format;\nstatic GLXFBConfig *fbconfigs, fbconfig;\nstatic int numfbconfigs;\nstatic GLXContext render_context;\nstatic Window Xroot, window_handle;\nstatic GLXWindow glX_window_handle;\nstatic int width, height;\n\nstatic int VisData[] = {\nGLX_RENDER_TYPE, GLX_RGBA_BIT,\nGLX_DRAWABLE_TYPE, GLX_WINDOW_BIT,\nGLX_DOUBLEBUFFER, True,\nGLX_RED_SIZE, 8,\nGLX_GREEN_SIZE, 8,\nGLX_BLUE_SIZE, 8,\nGLX_ALPHA_SIZE, 8,\nGLX_DEPTH_SIZE, 16,\nNone\n};\n\nstatic int isExtensionSupported(const char *extList, const char *extension)\n{\n\nconst char *start;\nconst char *where, *terminator;\n\n/* Extension names should not have spaces. */\nwhere = strchr(extension, ' ');\nif ( where || *extension == '\\0' )\n return 0;\n\n/* It takes a bit of care to be fool-proof about parsing the\n  OpenGL extensions string. Don't be fooled by sub-strings,\n  etc. */\nfor ( start = extList; ; ) {\n where = strstr( start, extension );\n\n if ( !where )\n   break;\n\n terminator = where + strlen( extension );\n\n if ( where == start || *(where - 1) == ' ' )\n   if ( *terminator == ' ' || *terminator == '\\0' )\n return 1;\n\n start = terminator;\n}\nreturn 0;\n}\n\nstatic Bool WaitForMapNotify(Display *d, XEvent *e, char *arg)\n{\n return d \u0026amp;\u0026amp; e \u0026amp;\u0026amp; arg \u0026amp;\u0026amp; (e-\u0026gt;type == MapNotify) \u0026amp;\u0026amp; (e-\u0026gt;xmap.window == *(Window*)arg);\n}\n\nstatic void describe_fbconfig(GLXFBConfig fbconfig)\n{\n int doublebuffer;\n int red_bits, green_bits, blue_bits, alpha_bits, depth_bits;\n\n glXGetFBConfigAttrib(Xdisplay, fbconfig, GLX_DOUBLEBUFFER, \u0026amp;doublebuffer);\n glXGetFBConfigAttrib(Xdisplay, fbconfig, GLX_RED_SIZE, \u0026amp;red_bits);\n glXGetFBConfigAttrib(Xdisplay, fbconfig, GLX_GREEN_SIZE, \u0026amp;green_bits);\n glXGetFBConfigAttrib(Xdisplay, fbconfig, GLX_BLUE_SIZE, \u0026amp;blue_bits);\n glXGetFBConfigAttrib(Xdisplay, fbconfig, GLX_ALPHA_SIZE, \u0026amp;alpha_bits);\n glXGetFBConfigAttrib(Xdisplay, fbconfig, GLX_DEPTH_SIZE, \u0026amp;depth_bits);\n\n fprintf(stderr, \"FBConfig selected:\\n\"\n \"Doublebuffer: %s\\n\"\n \"Red Bits: %d, Green Bits: %d, Blue Bits: %d, Alpha Bits: %d, Depth Bits: %d\\n\",\n doublebuffer == True ? \"Yes\" : \"No\",\n red_bits, green_bits, blue_bits, alpha_bits, depth_bits);\n}\n\nstatic void createTheWindow()\n{\n XEvent event;\n int x,y, attr_mask;\n XSizeHints hints;\n XWMHints *startup_state;\n XTextProperty textprop;\n XSetWindowAttributes attr = {0,};\n static char *title = \"FTB's little OpenGL example - ARGB extension by WXD\";\n\n Xdisplay = XOpenDisplay(NULL);\n if (!Xdisplay) {\n fatalError(\"Couldn't connect to X server\\n\");\n }\n Xscreen = DefaultScreen(Xdisplay);\n Xroot = RootWindow(Xdisplay, Xscreen);\n\n fbconfigs = glXChooseFBConfig(Xdisplay, Xscreen, VisData, \u0026amp;numfbconfigs);\n fbconfig = 0;\n for(int i = 0; i\u0026lt;numfbconfigs; i++) {\n visual = (XVisualInfo*) glXGetVisualFromFBConfig(Xdisplay, fbconfigs[i]);\n if(!visual)\n     continue;\n\n pict_format = XRenderFindVisualFormat(Xdisplay, visual-\u0026gt;visual);\n if(!pict_format)\n     continue;\n\n fbconfig = fbconfigs[i];\n if(pict_format-\u0026gt;direct.alphaMask \u0026gt; 0) {\n     break;\n }\n }\n\n if(!fbconfig) {\n fatalError(\"No matching FB config found\");\n }\n\n describe_fbconfig(fbconfig);\n\n /* Create a colormap - only needed on some X clients, eg. IRIX */\n cmap = XCreateColormap(Xdisplay, Xroot, visual-\u0026gt;visual, AllocNone);\n\n attr.colormap = cmap;\n attr.background_pixmap = None;\n attr.border_pixmap = None;\n attr.border_pixel = 0;\n attr.event_mask =\n StructureNotifyMask |\n EnterWindowMask |\n LeaveWindowMask |\n ExposureMask |\n ButtonPressMask |\n ButtonReleaseMask |\n OwnerGrabButtonMask |\n KeyPressMask |\n KeyReleaseMask;\n\n attr_mask =\n CWBackPixmap|\n CWColormap|\n CWBorderPixel|\n CWEventMask;\n\n width = DisplayWidth(Xdisplay, DefaultScreen(Xdisplay))/2;\n height = DisplayHeight(Xdisplay, DefaultScreen(Xdisplay))/2;\n x=width/2, y=height/2;\n\n window_handle = XCreateWindow(  Xdisplay,\n         Xroot,\n         x, y, width, height,\n         0,\n         visual-\u0026gt;depth,\n         InputOutput,\n         visual-\u0026gt;visual,\n         attr_mask, \u0026amp;attr);\n\n if( !window_handle ) {\n fatalError(\"Couldn't create the window\\n\");\n }\n\n#if USE_GLX_CREATE_WINDOW\n int glXattr[] = { None };\n glX_window_handle = glXCreateWindow(Xdisplay, fbconfig, window_handle, glXattr);\n if( !glX_window_handle ) {\n fatalError(\"Couldn't create the GLX window\\n\");\n }\n#else\n glX_window_handle = window_handle;\n#endif\n\n textprop.value = (unsigned char*)title;\n textprop.encoding = XA_STRING;\n textprop.format = 8;\n textprop.nitems = strlen(title);\n\n hints.x = x;\n hints.y = y;\n hints.width = width;\n hints.height = height;\n hints.flags = USPosition|USSize;\n\n startup_state = XAllocWMHints();\n startup_state-\u0026gt;initial_state = NormalState;\n startup_state-\u0026gt;flags = StateHint;\n\n XSetWMProperties(Xdisplay, window_handle,\u0026amp;textprop, \u0026amp;textprop,\n     NULL, 0,\n     \u0026amp;hints,\n     startup_state,\n     NULL);\n\n\n XFree(startup_state);\n\n XMapWindow(Xdisplay, window_handle);\n XIfEvent(Xdisplay, \u0026amp;event, WaitForMapNotify, (char*)\u0026amp;window_handle);\n\n if ((del_atom = XInternAtom(Xdisplay, \"WM_DELETE_WINDOW\", 0)) != None) {\n XSetWMProtocols(Xdisplay, window_handle, \u0026amp;del_atom, 1);\n }\n}\n\nstatic int ctxErrorHandler( Display *dpy, XErrorEvent *ev )\n{\n fputs(\"Error at context creation\", stderr);\n return 0;\n}\n\nstatic void createTheRenderContext()\n{\n int dummy;\n if (!glXQueryExtension(Xdisplay, \u0026amp;dummy, \u0026amp;dummy)) {\n fatalError(\"OpenGL not supported by X server\\n\");\n }\n\n#if USE_GLX_CREATE_CONTEXT_ATTRIB\n #define GLX_CONTEXT_MAJOR_VERSION_ARB       0x2091\n #define GLX_CONTEXT_MINOR_VERSION_ARB       0x2092\n render_context = NULL;\n if( isExtensionSupported( glXQueryExtensionsString(Xdisplay, DefaultScreen(Xdisplay)), \"GLX_ARB_create_context\" ) ) {\n typedef GLXContext (*glXCreateContextAttribsARBProc)(Display*, GLXFBConfig, GLXContext, Bool, const int*);\n glXCreateContextAttribsARBProc glXCreateContextAttribsARB = (glXCreateContextAttribsARBProc)glXGetProcAddressARB( (const GLubyte *) \"glXCreateContextAttribsARB\" );\n if( glXCreateContextAttribsARB ) {\n     int context_attribs[] =\n     {\n     GLX_CONTEXT_MAJOR_VERSION_ARB, 3,\n     GLX_CONTEXT_MINOR_VERSION_ARB, 0,\n     //GLX_CONTEXT_FLAGS_ARB        , GLX_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB,\n     None\n     };\n\n     int (*oldHandler)(Display*, XErrorEvent*) = XSetErrorHandler(\u0026amp;ctxErrorHandler);\n\n     render_context = glXCreateContextAttribsARB( Xdisplay, fbconfig, 0, True, context_attribs );\n\n     XSync( Xdisplay, False );\n     XSetErrorHandler( oldHandler );\n\n     fputs(\"glXCreateContextAttribsARB failed\", stderr);\n } else {\n     fputs(\"glXCreateContextAttribsARB could not be retrieved\", stderr);\n }\n } else {\n     fputs(\"glXCreateContextAttribsARB not supported\", stderr);\n }\n\n if(!render_context)\n {\n#else\n {\n#endif\n render_context = glXCreateNewContext(Xdisplay, fbconfig, GLX_RGBA_TYPE, 0, True);\n if (!render_context) {\n     fatalError(\"Failed to create a GL context\\n\");\n }\n }\n\n if (!glXMakeContextCurrent(Xdisplay, glX_window_handle, glX_window_handle, render_context)) {\n fatalError(\"glXMakeCurrent failed for window\\n\");\n }\n}\n\nstatic int updateTheMessageQueue()\n{\n XEvent event;\n XConfigureEvent *xc;\n\n while (XPending(Xdisplay))\n {\n XNextEvent(Xdisplay, \u0026amp;event);\n switch (event.type)\n {\n case ClientMessage:\n     if (event.xclient.data.l[0] == del_atom)\n     {\n     return 0;\n     }\n break;\n\n case ConfigureNotify:\n     xc = \u0026amp;(event.xconfigure);\n     width = xc-\u0026gt;width;\n     height = xc-\u0026gt;height;\n     break;\n }\n }\n return 1;\n}\n\n/*6----7\n /|   /|\n3----2 |\n| 5--|-4\n|/   |/\n0----1\n\n*/\n\nGLfloat cube_vertices[][8] =  {\n /*  X     Y     Z   Nx   Ny   Nz    S    T */\n {-1.0, -1.0,  1.0, 0.0, 0.0, 1.0, 0.0, 0.0}, // 0\n { 1.0, -1.0,  1.0, 0.0, 0.0, 1.0, 1.0, 0.0}, // 1\n { 1.0,  1.0,  1.0, 0.0, 0.0, 1.0, 1.0, 1.0}, // 2\n {-1.0,  1.0,  1.0, 0.0, 0.0, 1.0, 0.0, 1.0}, // 3\n\n { 1.0, -1.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0}, // 4\n {-1.0, -1.0, -1.0, 0.0, 0.0, -1.0, 1.0, 0.0}, // 5\n {-1.0,  1.0, -1.0, 0.0, 0.0, -1.0, 1.0, 1.0}, // 6\n { 1.0,  1.0, -1.0, 0.0, 0.0, -1.0, 0.0, 1.0}, // 7\n\n {-1.0, -1.0, -1.0, -1.0, 0.0, 0.0, 0.0, 0.0}, // 5\n {-1.0, -1.0,  1.0, -1.0, 0.0, 0.0, 1.0, 0.0}, // 0\n {-1.0,  1.0,  1.0, -1.0, 0.0, 0.0, 1.0, 1.0}, // 3\n {-1.0,  1.0, -1.0, -1.0, 0.0, 0.0, 0.0, 1.0}, // 6\n\n { 1.0, -1.0,  1.0,  1.0, 0.0, 0.0, 0.0, 0.0}, // 1\n { 1.0, -1.0, -1.0,  1.0, 0.0, 0.0, 1.0, 0.0}, // 4\n { 1.0,  1.0, -1.0,  1.0, 0.0, 0.0, 1.0, 1.0}, // 7\n { 1.0,  1.0,  1.0,  1.0, 0.0, 0.0, 0.0, 1.0}, // 2\n\n {-1.0, -1.0, -1.0,  0.0, -1.0, 0.0, 0.0, 0.0}, // 5\n { 1.0, -1.0, -1.0,  0.0, -1.0, 0.0, 1.0, 0.0}, // 4\n { 1.0, -1.0,  1.0,  0.0, -1.0, 0.0, 1.0, 1.0}, // 1\n {-1.0, -1.0,  1.0,  0.0, -1.0, 0.0, 0.0, 1.0}, // 0\n\n {-1.0, 1.0,  1.0,  0.0,  1.0, 0.0, 0.0, 0.0}, // 3\n { 1.0, 1.0,  1.0,  0.0,  1.0, 0.0, 1.0, 0.0}, // 2\n { 1.0, 1.0, -1.0,  0.0,  1.0, 0.0, 1.0, 1.0}, // 7\n {-1.0, 1.0, -1.0,  0.0,  1.0, 0.0, 0.0, 1.0}, // 6\n};\n\nstatic void draw_cube(void)\n{\n glEnableClientState(GL_VERTEX_ARRAY);\n glEnableClientState(GL_NORMAL_ARRAY);\n glEnableClientState(GL_TEXTURE_COORD_ARRAY);\n\n glVertexPointer(3, GL_FLOAT, sizeof(GLfloat) * 8, \u0026amp;cube_vertices[0][0]);\n glNormalPointer(GL_FLOAT, sizeof(GLfloat) * 8, \u0026amp;cube_vertices[0][3]);\n glTexCoordPointer(2, GL_FLOAT, sizeof(GLfloat) * 8, \u0026amp;cube_vertices[0][6]);\n\n glDrawArrays(GL_QUADS, 0, 24);\n}\n\nfloat const light0_dir[]={0,1,0,0};\nfloat const light0_color[]={78./255., 80./255., 184./255.,1};\n\nfloat const light1_dir[]={-1,1,1,0};\nfloat const light1_color[]={255./255., 220./255., 97./255.,1};\n\nfloat const light2_dir[]={0,-1,0,0};\nfloat const light2_color[]={31./255., 75./255., 16./255.,1};\n\nstatic void redrawTheWindow()\n{\n float const aspect = (float)width / (float)height;\n\n static float a=0;\n static float b=0;\n static float c=0;\n\n glDrawBuffer(GL_BACK);\n\n glViewport(0, 0, width, height);\n\n // Clear with alpha = 0.0, i.e. full transparency\n glClearColor(0.0, 0.0, 0.0, 0.0);\n glClear(GL_COLOR_BUFFER_BIT|GL_DEPTH_BUFFER_BIT);\n\n glMatrixMode(GL_PROJECTION);\n glLoadIdentity();\n glFrustum(-aspect, aspect, -1, 1, 2.5, 10);\n\n glMatrixMode(GL_MODELVIEW);\n glLoadIdentity();\n\n glEnable(GL_DEPTH_TEST);\n glEnable(GL_CULL_FACE);\n\n glEnable(GL_BLEND);\n glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);\n\n glLightfv(GL_LIGHT0, GL_POSITION, light0_dir);\n glLightfv(GL_LIGHT0, GL_DIFFUSE, light0_color);\n\n glLightfv(GL_LIGHT1, GL_POSITION, light1_dir);\n glLightfv(GL_LIGHT1, GL_DIFFUSE, light1_color);\n\n glLightfv(GL_LIGHT2, GL_POSITION, light2_dir);\n glLightfv(GL_LIGHT2, GL_DIFFUSE, light2_color);\n\n glTranslatef(0., 0., -5.);\n\n glRotatef(a, 1, 0, 0);\n glRotatef(b, 0, 1, 0);\n glRotatef(c, 0, 0, 1);\n\n glEnable(GL_LIGHT0);\n glEnable(GL_LIGHT1);\n glEnable(GL_LIGHTING);\n\n glEnable(GL_COLOR_MATERIAL);\n glColorMaterial(GL_FRONT_AND_BACK, GL_AMBIENT_AND_DIFFUSE);\n\n glColor4f(1., 1., 1., 0.9);\n\n glCullFace(GL_FRONT);\n draw_cube();\n glCullFace(GL_BACK);\n draw_cube();\n\n a = fmod(a+0.1, 360.);\n b = fmod(b+0.5, 360.);\n c = fmod(c+0.25, 360.);\n\n glXSwapBuffers(Xdisplay, glX_window_handle);\n}\n\nint main(int argc, char *argv[])\n{\n createTheWindow();\n createTheRenderContext();\n\n myApp = RunApplication((void*)window_handle);\n myApp-\u0026gt;MyInit();\n\n while (updateTheMessageQueue()) {\n redrawTheWindow();\n myApp-\u0026gt;UrhoFrame();\n }\n\n return 0;\n}\n\n\n//// code nicked mainly from here:\n//// http://lazyfoo.net/tutorials/SDL/50_SDL_and_opengl_2/index.php\n\n\n///* to compile\n\n//    ### installation on ubuntu\n//    # install compiler etc\n//    sudo apt-get install --yes software-properties-common g++ make\n//    # install sdl2\n//    sudo apt-get install --yes libsdl2-dev\n//    # install opengl\n//    sudo apt-get install --yes freeglut3-dev\n\n//    # compile with\n//    g++ main.cpp -I /usr/include/SDL2/ -lSDL2  -lGL\n\n//    ## installation on mac\n//    # install xcode with command line tools\n//    # install sdl2*.dmg, put everything in ~/Library/Frameworks\n\n//    # compile with with g++ (or with clang++)\n//    g++ main.cpp -I ~/Library/Frameworks/SDL2.framework/Headers -I OpenGL -framework SDL2  -F ~/Library/Frameworks -framework OpenGL\n\n//*/\n\n//#include \u0026lt;SDL2/SDL.h\u0026gt;\n//#include \u0026lt;SDL2/SDL_opengl.h\u0026gt;\n//#include \u0026lt;SDL2/SDL_video.h\u0026gt;\n//#include \u0026lt;stdio.h\u0026gt;\n\n\n////Screen dimension constants\n//const int SCREEN_WIDTH = 640;\n//const int SCREEN_HEIGHT = 480;\n\n\n////Main loop flag\n//bool quit = false;\n\n\n////Starts up SDL, creates window, and initializes OpenGL\n//bool init();\n\n////Initializes matrices and clear color\n//bool initGL();\n\n////Input handler\n//void handleKeys( unsigned char key, int x, int y );\n\n////Per frame update\n//void update();\n\n////Renders quad to the screen\n//void render();\n\n////Frees media and shuts down SDL\n//void close();\n\n////The window we'll be rendering to\n//SDL_Window* gWindow = NULL;\n\n////OpenGL context\n//SDL_GLContext gContext;\n\n////Render flag\n//bool gRenderQuad = true;\n\n//bool init()\n//{\n//    //Initialization flag\n//    bool success = true;\n\n//    //Initialize SDL\n//    if( SDL_Init( SDL_INIT_VIDEO ) \u0026lt; 0 )\n//    {\n//        printf( \"SDL could not initialize! SDL Error: %s\\n\", SDL_GetError() );\n//        success = false;\n//    }\n//    else\n//    {\n//        //Use OpenGL 2.1\n//        SDL_GL_SetAttribute( SDL_GL_CONTEXT_MAJOR_VERSION, 2 );\n//        SDL_GL_SetAttribute( SDL_GL_CONTEXT_MINOR_VERSION, 1 );\n\n//        //Create window\n//        gWindow = SDL_CreateWindow( \"SDL Tutorial\", SDL_WINDOWPOS_UNDEFINED, SDL_WINDOWPOS_UNDEFINED, SCREEN_WIDTH, SCREEN_HEIGHT, SDL_WINDOW_OPENGL | SDL_WINDOW_SHOWN );\n//        if( gWindow == NULL )\n//        {\n//            printf( \"Window could not be created! SDL Error: %s\\n\", SDL_GetError() );\n//            success = false;\n//        }\n//        else\n//        {\n//            //Create context\n//            gContext = SDL_GL_CreateContext( gWindow );\n////            gWindow-\u0026gt;driverdata-\u0026gt;dispman_window.element\n//            SDL_SetWindowOpacity(gWindow,0.5);\n//            if( gContext == NULL )\n//            {\n//                printf( \"OpenGL context could not be created! SDL Error: %s\\n\", SDL_GetError() );\n//                success = false;\n//            }\n//            else\n//            {\n//                //Use Vsync\n//                if( SDL_GL_SetSwapInterval( 1 ) \u0026lt; 0 )\n//                {\n//                    printf( \"Warning: Unable to set VSync! SDL Error: %s\\n\", SDL_GetError() );\n//                }\n\n//                //Initialize OpenGL\n//                if( !initGL() )\n//                {\n//                    printf( \"Unable to initialize OpenGL!\\n\" );\n//                    success = false;\n//                }\n//            }\n//        }\n//    }\n\n//    return success;\n//}\n\n//bool initGL()\n//{\n//    bool success = true;\n//    GLenum error = GL_NO_ERROR;\n\n//    //Initialize Projection Matrix\n//    glMatrixMode( GL_PROJECTION );\n//    glLoadIdentity();\n\n//    //Check for error\n//    error = glGetError();\n//    if( error != GL_NO_ERROR )\n//    {\n//        success = false;\n//    }\n\n//    //Initialize Modelview Matrix\n//    glMatrixMode( GL_MODELVIEW );\n//    glLoadIdentity();\n\n//    //Check for error\n//    error = glGetError();\n//    if( error != GL_NO_ERROR )\n//    {\n//        success = false;\n//    }\n\n//    //Initialize clear color\n//    glClearColor( 0.f, 0.f, 0.f, 1.f );\n\n//    //Check for error\n//    error = glGetError();\n//    if( error != GL_NO_ERROR )\n//    {\n//        success = false;\n//    }\n\n//    return success;\n//}\n\n//void handleKeys( unsigned char key, int x, int y )\n//{\n//    if( key == 'q' )\n//    {\n//        quit = true;\n//    }\n//}\n\n//void update()\n//{\n//    //No per frame update needed\n//}\n\n//void render()\n//{\n//    //Clear color buffer\n//    glClear( GL_COLOR_BUFFER_BIT );\n\n//    //Render quad\n//    if( gRenderQuad )\n//    {\n//        glRotatef(0.4f,0.0f,1.0f,0.0f);    // Rotate The cube around the Y axis\n//        glRotatef(0.2f,1.0f,1.0f,1.0f);\n//        glColor3f(0.0f,1.0f,0.0f);\n\n//        glBegin( GL_QUADS );\n//            glVertex2f( -0.5f, -0.5f );\n//            glVertex2f( 0.5f, -0.5f );\n//            glVertex2f( 0.5f, 0.5f );\n//            glVertex2f( -0.5f, 0.5f );\n//        glEnd();\n//    }\n//}\n\n//void close()\n//{\n//    //Destroy window\n//    SDL_DestroyWindow( gWindow );\n//    gWindow = NULL;\n\n//    //Quit SDL subsystems\n//    SDL_Quit();\n//}\n\n//int main( int argc, char* args[] )\n//{\n//    //Start up SDL and create window\n//    if( !init() )\n//    {\n//        printf( \"Failed to initialize!\\n\" );\n//    }\n//    else\n//    {\n\n//        //Event handler\n//        SDL_Event e;\n\n//        //Enable text input\n//        SDL_StartTextInput();\n\n//        //While application is running\n//        while( !quit )\n//        {\n//            //Handle events on queue\n//            while( SDL_PollEvent( \u0026amp;e ) != 0 )\n//            {\n//                //User requests quit\n//                if( e.type == SDL_QUIT )\n//                {\n//                    quit = true;\n//                }\n//                //Handle keypress with current mouse position\n//                else if( e.type == SDL_TEXTINPUT )\n//                {\n//                    int x = 0, y = 0;\n//                    SDL_GetMouseState( \u0026amp;x, \u0026amp;y );\n//                    handleKeys( e.text.text[ 0 ], x, y );\n//                }\n//            }\n\n//            //Render quad\n//            render();\n\n//            //Update screen\n//            SDL_GL_SwapWindow( gWindow );\n//        }\n\n//        //Disable text input\n//        SDL_StopTextInput();\n//    }\n\n//    //Free resources and close SDL\n//    close();\n\n//    return 0;\n//}\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eEdit: Playing with it a bit more (trying to add FXAA), I noticed that with the transparency, the UI text doesn’t show up (I didn’t realize I left it in the program so didn’t notice before). This only occurs with the transparency, which doesn’t work with FXAA (or Bloom) enabled, but with those effects enabled on the render path, the text is visible. Any guesses as to why?\u003c/p\u003e","post_number":8,"post_type":1,"updated_at":"2020-06-30T06:27:37.517Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":12,"reads":42,"readers_count":41,"score":68.4,"yours":false,"topic_id":2223,"topic_slug":"transparent-surface","display_username":"Sir Nate","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":2,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":242,"hidden":false,"trust_level":1,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false}],"stream":[13463,13480,13487,13497,13498,13521,13527,13590]},"timeline_lookup":[[1,2273],[2,2271],[3,2270],[4,2269],[6,2267],[7,2266],[8,2262]],"suggested_topics":[{"id":7243,"title":"Android compile fails","fancy_title":"Android compile fails","slug":"android-compile-fails","posts_count":5,"reply_count":2,"highest_post_number":5,"image_url":null,"created_at":"2022-04-25T08:46:07.947Z","last_posted_at":"2022-05-06T08:22:51.592Z","bumped":true,"bumped_at":"2022-05-06T08:22:51.592Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":0,"views":181,"category_id":10,"featured_link":null,"has_accepted_answer":true,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":856,"username":"feresmu","name":null,"avatar_template":"https://avatars.discourse-cdn.com/v4/letter/f/f08c70/{size}.png"}},{"extras":null,"description":"Frequent Poster, Accepted Answer","user":{"id":4,"username":"weitjong","name":"Yao Wei Tjong","avatar_template":"/user_avatar/discourse.urho3d.io/weitjong/{size}/4_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":628,"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}}]},{"id":7266,"title":"Compile Urho3D 1.8 failed with the default MinGW of Clion2022.1","fancy_title":"Compile Urho3D 1.8 failed with the default MinGW of Clion2022.1","slug":"compile-urho3d-1-8-failed-with-the-default-mingw-of-clion2022-1","posts_count":4,"reply_count":1,"highest_post_number":4,"image_url":"https://global.discourse-cdn.com/standard17/uploads/urho3d/optimized/2X/f/fcbe1a1f0cd74c5cc158c8c790c6c472f3b96011_2_1024x359.png","created_at":"2022-05-14T06:22:45.469Z","last_posted_at":"2022-05-16T06:45:54.546Z","bumped":true,"bumped_at":"2022-05-16T06:45:54.546Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":0,"views":124,"category_id":10,"featured_link":null,"has_accepted_answer":true,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":745,"username":"ChunFengTsin","name":"Chun Feng Tsin","avatar_template":"/user_avatar/discourse.urho3d.io/chunfengtsin/{size}/450_2.png"}},{"extras":null,"description":"Frequent Poster, Accepted Answer","user":{"id":263,"username":"1vanK","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/1vank/{size}/768_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":628,"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}}]},{"id":7074,"title":"First Person and 3rd person camera and water reflections","fancy_title":"First Person and 3rd person camera and water reflections","slug":"first-person-and-3rd-person-camera-and-water-reflections","posts_count":4,"reply_count":1,"highest_post_number":4,"image_url":null,"created_at":"2021-12-01T18:37:28.669Z","last_posted_at":"2021-12-01T21:19:51.519Z","bumped":true,"bumped_at":"2021-12-01T21:19:51.519Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":1,"views":158,"category_id":10,"featured_link":null,"has_accepted_answer":true,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster, Accepted Answer","user":{"id":861,"username":"GodMan","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/g/e79b87/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":484,"username":"Eugene","name":"Eugene Kozlov","avatar_template":"/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png"}}]},{"id":7185,"title":"Update Ray ray direction","fancy_title":"Update Ray ray direction","slug":"update-ray-ray-direction","posts_count":5,"reply_count":1,"highest_post_number":5,"image_url":null,"created_at":"2022-02-05T00:28:45.414Z","last_posted_at":"2022-02-05T20:19:51.238Z","bumped":true,"bumped_at":"2022-02-05T20:19:51.238Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":0,"views":144,"category_id":10,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":861,"username":"GodMan","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/g/e79b87/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":628,"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}}]},{"id":7186,"title":"Best way to do Blob Shadows in Urho","fancy_title":"Best way to do Blob Shadows in Urho","slug":"best-way-to-do-blob-shadows-in-urho","posts_count":3,"reply_count":1,"highest_post_number":3,"image_url":"https://global.discourse-cdn.com/standard17/uploads/urho3d/original/2X/2/22e3dc1892512375cae09bf84fd92071a1ae27d8.png","created_at":"2022-02-05T04:59:31.388Z","last_posted_at":"2022-02-05T13:29:22.054Z","bumped":true,"bumped_at":"2022-02-05T13:31:44.299Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":0,"views":179,"category_id":10,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":null,"description":"Original Poster","user":{"id":1334,"username":"najak3d","name":"Brian Knox","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/n/6a8cbe/{size}.png"}},{"extras":"latest","description":"Most Recent Poster","user":{"id":628,"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}}]}],"tags_descriptions":{},"id":2223,"title":"Transparent Surface","fancy_title":"Transparent Surface","posts_count":8,"created_at":"2016-09-02T01:21:24.000Z","views":1597,"reply_count":0,"like_count":0,"last_posted_at":"2016-09-13T03:40:28.000Z","visible":true,"closed":false,"archived":false,"has_summary":false,"archetype":"regular","slug":"transparent-surface","category_id":10,"word_count":4085,"deleted_at":null,"user_id":549,"featured_link":null,"pinned_globally":false,"pinned_at":null,"pinned_until":null,"image_url":null,"slow_mode_seconds":0,"draft":null,"draft_key":"topic_2223","draft_sequence":null,"unpinned":null,"pinned":false,"current_post_number":1,"highest_post_number":8,"deleted_by":null,"actions_summary":[{"id":4,"count":0,"hidden":false,"can_act":false},{"id":8,"count":0,"hidden":false,"can_act":false},{"id":7,"count":0,"hidden":false,"can_act":false}],"chunk_size":20,"bookmarked":false,"bookmarks":[],"topic_timer":null,"message_bus_last_id":0,"participant_count":2,"show_read_indicator":false,"thumbnails":null,"slow_mode_enabled_until":null,"tags_disable_ads":false,"details":{"can_edit":false,"notification_level":1,"participants":[{"id":242,"username":"Sir_Nate","name":"Sir Nate","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/ba9def/{size}.png","post_count":4,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"trust_level":1},{"id":549,"username":"rdpeake","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/r/2bfe46/{size}.png","post_count":4,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"trust_level":1}],"created_by":{"id":549,"username":"rdpeake","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/r/2bfe46/{size}.png"},"last_poster":{"id":242,"username":"Sir_Nate","name":"Sir Nate","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/ba9def/{size}.png"},"links":[{"url":"http://stackoverflow.com/questions/4052940/how-to-make-an-opengl-rendering-context-with-transparent-background","title":"c - How to make an OpenGL rendering context with transparent background? - Stack Overflow","internal":false,"attachment":false,"reflection":false,"clicks":34,"user_id":242,"domain":"stackoverflow.com","root_domain":"stackoverflow.com"},{"url":"http://stackoverflow.com/questions/9363491/how-to-make-transparent-window-on-linux","title":"c++ - How to make transparent window on linux - Stack Overflow","internal":false,"attachment":false,"reflection":false,"clicks":17,"user_id":242,"domain":"stackoverflow.com","root_domain":"stackoverflow.com"},{"url":"http://stackoverflow.com/questions/2034822/android-opengl-es-transparent-background","title":"Android OpenGL ES Transparent Background - Stack Overflow","internal":false,"attachment":false,"reflection":false,"clicks":13,"user_id":242,"domain":"stackoverflow.com","root_domain":"stackoverflow.com"},{"url":"http://stackoverflow.com/questions/15425149/making-uiview-transparent","title":"ios - Making UIView transparent - Stack Overflow","internal":false,"attachment":false,"reflection":false,"clicks":8,"user_id":242,"domain":"stackoverflow.com","root_domain":"stackoverflow.com"},{"url":"http://stackoverflow.com/questions/16762633/android-glsurfaceview-transparent-background-without-setzorderontop","title":"opengl es - Android GLSurfaceView transparent background without setZOrderonTop - Stack Overflow","internal":false,"attachment":false,"reflection":false,"clicks":4,"user_id":242,"domain":"stackoverflow.com","root_domain":"stackoverflow.com"}]}}