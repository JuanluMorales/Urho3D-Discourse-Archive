{"post_stream":{"posts":[{"id":13782,"name":"","username":"artgolf1000","avatar_template":"/user_avatar/discourse.urho3d.io/artgolf1000/{size}/73_2.png","created_at":"2016-09-27T00:52:39.000Z","cooked":"\u003cp\u003eHi,\u003c/p\u003e\n\u003cp\u003eI have written a lip sync logic component for my 3d character, though it is messy, it is useful for me.\u003c/p\u003e\n\u003cp\u003eFirst, make some blend shapes for your 3d character, here are the shapes: \u003ca href=\"https://github.com/meshonline/rhubarb-lip-sync\" data-bbcode=\"true\" rel=\"nofollow noopener\"\u003ehttps://github.com/meshonline/rhubarb-lip-sync\u003c/a\u003e, if you like Papagayo‚Äôs shapes, refer to ‚ÄòReadme.txt‚Äô in the ‚Äòsrc-patch‚Äô subdirectory.\u003c/p\u003e\n\u003cp\u003eMake a ‚Äòblink‚Äô blend shape to control eyes blink.\u003c/p\u003e\n\u003cp\u003eThen, use the above rhubarb-lip-sync utility to generated a text file for your voice.\u003cbr\u003e\nFor example:\u003cbr\u003e\n./rhubarb voice.wav \u0026gt; voice.txt\u003c/p\u003e\n\u003cp\u003eHere is the LipSync Class:\u003c/p\u003e\n\u003cp\u003eLipSync.h\u003c/p\u003e\n\u003cp\u003e[code]\u003cspan class=\"hashtag\"\u003e#pragma\u003c/span\u003e once\u003c/p\u003e\n\u003cp\u003e\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Urho3DAll.h\u0026gt;\u003c/p\u003e\n\u003cp\u003e/// Custom logic component for moving the animated model and rotating at area edges.\u003cbr\u003e\nclass LipSync : public LogicComponent\u003cbr\u003e\n{\u003cbr\u003e\nURHO3D_OBJECT(LipSync, LogicComponent);\u003c/p\u003e\n\u003cp\u003epublic:\u003cbr\u003e\n/// Construct.\u003cbr\u003e\nLipSync(Context* context) :\u003cbr\u003e\nLogicComponent(context)\u003cbr\u003e\n{\u003cbr\u003e\nEaseWeights[0] = 0.0f;\u003cbr\u003e\nEaseWeights[1] = 0.1925f;\u003cbr\u003e\nEaseWeights[2] = 0.605f;\u003cbr\u003e\nEaseWeights[3] = 0.8f;\u003cbr\u003e\nEaseWeights[4] = 0.605f;\u003cbr\u003e\nEaseWeights[5] = 0.1925f;\u003cbr\u003e\nEaseWeights[6] = 0.0f;\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e    blinking = false;\n    currentStep = 0;\n    accuTime = 0.0f;\n    blinkEyes = StringHash(\"blink\");\n    \n    lipSyncing = false;\n    currentStep2 = 0;\n    prior_lipIndex = -1;\n    current_lipIndex = -1;\n    \n    priorSyncTime_ = FLT_MAX;\n    \n    ResourceCache* cache = GetSubsystem\u0026lt;ResourceCache\u0026gt;();\n    SharedPtr\u0026lt;File\u0026gt; file = cache-\u0026gt;GetFile(\"Sounds/voice.txt\");\n    while (!file-\u0026gt;IsEof()) {\n        String line = file-\u0026gt;ReadLine();\n        if (line.Length()) {\n            Vector\u0026lt;String\u0026gt; items = line.Split('\\t');\n            if (items.Size() == 2) {\n                MY_MORPH_KEY one_key;\n                one_key.time = atof(items[0].CString());\n                one_key.key = StringHash(items[1]);\n                morphKeys_.Push(one_key);\n            }\n        }\n    }\n    \n    // Only the scene update event is needed: unsubscribe from the rest for optimization\n    SetUpdateEventMask(USE_UPDATE);\n}\n\n/// Handle scene update. Called by LogicComponent base class.\nvirtual void Update(float timeStep)\n{\n    // Get the model's first (only) animation state and advance its time. Note the convenience accessor to other components\n    // in the same scene node\n    AnimatedModel* model = GetComponent\u0026lt;AnimatedModel\u0026gt;();\n    if (model-\u0026gt;GetNumAnimationStates())\n    {\n        AnimationState* state = model-\u0026gt;GetAnimationStates()[0];\n        state-\u0026gt;AddTime(timeStep);\n        \n        // blink eyes every two seconds\n        accuTime += timeStep;\n        if (accuTime \u0026gt;= 2.0f) {\n            accuTime = 0.0f;\n            blinking = true;\n        }\n        // deal with blink\n        if (blinking) {\n            model-\u0026gt;SetMorphWeight(blinkEyes, EaseWeights[currentStep]);\n            currentStep++;\n            if (currentStep == 7) {\n                currentStep = 0;\n                blinking = false;\n            }\n        }\n        \n        // search next lip sync point\n        if (!lipSyncing) {\n            float syncTime = state-\u0026gt;GetTime();\n            // Animation loop back\n            if (syncTime \u0026lt; priorSyncTime_) {\n                // Rewind voice\n                SoundSource* voicecSource = node_-\u0026gt;GetChild(\"Voice\")-\u0026gt;GetComponent\u0026lt;SoundSource\u0026gt;();\n                voiceSource-\u0026gt;SetPositionAttr(0);\n            }\n            priorSyncTime_ = syncTime;\n            // search from back to front\n            for (int i=morphKeys_.Size()-1; i\u0026gt;=0; i--) {\n                // find a lip sync point\n                if (morphKeys_[i].time \u0026lt;= syncTime) {\n                    // trigger lip sync when new sync point appeared\n                    if (i != current_lipIndex) {\n                        prior_lipIndex = current_lipIndex;\n                        current_lipIndex = i;\n                        lipSyncing = true;\n                    }\n                    break;\n                }\n            }\n        }\n        // deal with lip sync\n        if (lipSyncing) {\n            // Ease out\n            if (prior_lipIndex != -1) {\n                model-\u0026gt;SetMorphWeight(morphKeys_[prior_lipIndex].key, EaseWeights[currentStep2 + 3]);\n            }\n            // Ease in\n            if (current_lipIndex != -1) {\n                model-\u0026gt;SetMorphWeight(morphKeys_[current_lipIndex].key, EaseWeights[currentStep2]);\n            }\n            currentStep2++;\n            if (currentStep2 == 4) {\n                currentStep2 = 0;\n                lipSyncing = false;\n            }\n        }\n    }\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eprivate:\u003cbr\u003e\nfloat EaseWeights[7];\u003cbr\u003e\nbool blinking;\u003cbr\u003e\nint currentStep;\u003cbr\u003e\nfloat accuTime;\u003cbr\u003e\nStringHash blinkEyes;\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003ebool lipSyncing;\nint currentStep2;\nint prior_lipIndex;\nint current_lipIndex;\nfloat priorSyncTime_;\n\nstruct MY_MORPH_KEY {\n    float time;\n    StringHash key;\n};\n\nVector\u0026lt;MY_MORPH_KEY\u0026gt; morphKeys_;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e};\u003cbr\u003e\n[/code]\u003c/p\u003e\n\u003cp\u003eHere is the demo: \u003ca href=\"https://youtu.be/zIpupeSpXl4\" data-bbcode=\"true\" rel=\"nofollow noopener\"\u003ehttps://youtu.be/zIpupeSpXl4\u003c/a\u003e\u003c/p\u003e","post_number":1,"post_type":1,"updated_at":"2017-01-02T01:14:25.200Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":93,"reads":15,"readers_count":14,"score":472.0,"yours":false,"topic_id":2270,"topic_slug":"lipsync-code","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"link_counts":[{"url":"https://github.com/meshonline/rhubarb-lip-sync","internal":false,"reflection":false,"title":"GitHub - meshonline/rhubarb-lip-sync: Generate Papagayo format result","clicks":30},{"url":"https://youtu.be/zIpupeSpXl4","internal":false,"reflection":false,"title":"Verlet Cloth in Urho3D - YouTube","clicks":25}],"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":546,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":13787,"name":"","username":"1vanK","avatar_template":"/user_avatar/discourse.urho3d.io/1vank/{size}/768_2.png","created_at":"2016-09-27T09:59:53.000Z","cooked":"\u003cp\u003eNice!\u003c/p\u003e","post_number":2,"post_type":1,"updated_at":"2017-01-02T01:14:25.570Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":5,"reads":14,"readers_count":13,"score":27.8,"yours":false,"topic_id":2270,"topic_slug":"lipsync-code","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":true,"admin":false,"staff":true,"user_id":263,"hidden":false,"trust_level":4,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false}],"stream":[13782,13787]},"timeline_lookup":[[1,2248]],"suggested_topics":[{"id":7103,"title":":test_tube: DebugRenderer as GUI","fancy_title":":test_tube: DebugRenderer as GUI","slug":"debugrenderer-as-gui","posts_count":4,"reply_count":1,"highest_post_number":4,"image_url":null,"created_at":"2021-12-17T02:25:06.606Z","last_posted_at":"2021-12-18T01:09:27.738Z","bumped":true,"bumped_at":"2021-12-18T01:09:27.738Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"unicode_title":"üß™ DebugRenderer as GUI","tags_descriptions":{},"like_count":4,"views":267,"category_id":13,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":192,"username":"Modanung","name":"È≠îÂ§ßÂÜú ùûçùûéùù≥ ÁèæÊãõËúç","avatar_template":"/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":861,"username":"GodMan","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/g/e79b87/{size}.png"}}]},{"id":7110,"title":"Resource fetch define","fancy_title":"Resource fetch define","slug":"resource-fetch-define","posts_count":2,"reply_count":0,"highest_post_number":2,"image_url":null,"created_at":"2021-12-27T12:28:55.126Z","last_posted_at":"2021-12-27T17:00:37.699Z","bumped":true,"bumped_at":"2021-12-27T17:00:37.699Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":7,"views":184,"category_id":13,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":null,"description":"Original Poster","user":{"id":192,"username":"Modanung","name":"È≠îÂ§ßÂÜú ùûçùûéùù≥ ÁèæÊãõËúç","avatar_template":"/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png"}},{"extras":"latest","description":"Most Recent Poster","user":{"id":1304,"username":"lebrewer","name":"lebrewer","avatar_template":"/user_avatar/discourse.urho3d.io/lebrewer/{size}/2811_2.png"}}]},{"id":7120,"title":"Log Error Once Macro","fancy_title":"Log Error Once Macro","slug":"log-error-once-macro","posts_count":1,"reply_count":0,"highest_post_number":1,"image_url":null,"created_at":"2022-01-04T02:24:37.857Z","last_posted_at":"2022-01-04T02:24:37.925Z","bumped":true,"bumped_at":"2022-01-04T02:24:37.925Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":3,"views":143,"category_id":13,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest single","description":"Original Poster, Most Recent Poster","user":{"id":628,"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}}]},{"id":7099,"title":":fallen_leaf: Polynomials \u0026 Harmonics","fancy_title":":fallen_leaf: Polynomials \u0026amp; Harmonics","slug":"polynomials-harmonics","posts_count":6,"reply_count":0,"highest_post_number":7,"image_url":null,"created_at":"2021-12-13T05:06:04.641Z","last_posted_at":"2021-12-27T23:27:39.489Z","bumped":true,"bumped_at":"2021-12-27T23:27:39.489Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"unicode_title":"üçÇ Polynomials \u0026 Harmonics","tags_descriptions":{},"like_count":6,"views":392,"category_id":13,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest single","description":"Original Poster, Most Recent Poster","user":{"id":192,"username":"Modanung","name":"È≠îÂ§ßÂÜú ùûçùûéùù≥ ÁèæÊãõËúç","avatar_template":"/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png"}}]},{"id":7296,"title":"What is the purpose of LitBase?","fancy_title":"What is the purpose of LitBase?","slug":"what-is-the-purpose-of-litbase","posts_count":3,"reply_count":1,"highest_post_number":3,"image_url":null,"created_at":"2022-07-15T17:46:35.168Z","last_posted_at":"2022-07-15T18:00:02.695Z","bumped":true,"bumped_at":"2022-07-15T18:00:02.695Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":2,"views":93,"category_id":10,"featured_link":null,"has_accepted_answer":true,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":745,"username":"ChunFengTsin","name":"Chun Feng Tsin","avatar_template":"/user_avatar/discourse.urho3d.io/chunfengtsin/{size}/450_2.png"}},{"extras":null,"description":"Frequent Poster, Accepted Answer","user":{"id":484,"username":"Eugene","name":"Eugene Kozlov","avatar_template":"/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png"}}]}],"tags_descriptions":{},"id":2270,"title":"LipSync Code","fancy_title":"LipSync Code","posts_count":2,"created_at":"2016-09-27T00:52:39.000Z","views":786,"reply_count":0,"like_count":0,"last_posted_at":"2016-09-27T09:59:53.000Z","visible":true,"closed":false,"archived":false,"has_summary":false,"archetype":"regular","slug":"lipsync-code","category_id":13,"word_count":484,"deleted_at":null,"user_id":546,"featured_link":null,"pinned_globally":false,"pinned_at":null,"pinned_until":null,"image_url":null,"slow_mode_seconds":0,"draft":null,"draft_key":"topic_2270","draft_sequence":null,"unpinned":null,"pinned":false,"current_post_number":1,"highest_post_number":2,"deleted_by":null,"actions_summary":[{"id":4,"count":0,"hidden":false,"can_act":false},{"id":8,"count":0,"hidden":false,"can_act":false},{"id":7,"count":0,"hidden":false,"can_act":false}],"chunk_size":20,"bookmarked":false,"bookmarks":[],"topic_timer":null,"message_bus_last_id":0,"participant_count":2,"show_read_indicator":false,"thumbnails":null,"slow_mode_enabled_until":null,"tags_disable_ads":false,"details":{"can_edit":false,"notification_level":1,"participants":[{"id":263,"username":"1vanK","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/1vank/{size}/768_2.png","post_count":1,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"moderator":true,"trust_level":4},{"id":546,"username":"artgolf1000","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/artgolf1000/{size}/73_2.png","post_count":1,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"trust_level":2}],"created_by":{"id":546,"username":"artgolf1000","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/artgolf1000/{size}/73_2.png"},"last_poster":{"id":263,"username":"1vanK","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/1vank/{size}/768_2.png"},"links":[{"url":"https://github.com/meshonline/rhubarb-lip-sync","title":"GitHub - meshonline/rhubarb-lip-sync: Generate Papagayo format result","internal":false,"attachment":false,"reflection":false,"clicks":30,"user_id":546,"domain":"github.com","root_domain":"github.com"},{"url":"https://youtu.be/zIpupeSpXl4","title":"Verlet Cloth in Urho3D - YouTube","internal":false,"attachment":false,"reflection":false,"clicks":25,"user_id":546,"domain":"youtu.be","root_domain":"youtu.be"}]}}