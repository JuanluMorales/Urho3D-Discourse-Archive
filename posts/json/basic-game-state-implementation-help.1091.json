{"post_stream":{"posts":[{"id":6332,"name":"","username":"vivienneanthony","avatar_template":"/user_avatar/discourse.urho3d.io/vivienneanthony/{size}/942_2.png","created_at":"2015-05-29T17:01:33.000Z","cooked":"\u003cp\u003eHello,\u003c/p\u003e\n\u003cp\u003eI have  been trying to get a state manner working for Existence.  I spent 24 hours+ working on it and I got it to the point of the black screen of death.\u003c/p\u003e\n\u003cp\u003eWhen running the executable it crashes when calling a function in the GameStateHandler which is making no sense to me because the code is almost a copy of another code which works…\u003c/p\u003e\n\u003cp\u003eThe obvious problems I see is that and trying to change the state because createState inputs a string and it converts it to a state using a dynamic cast creating a component. (Which I will not do)\u003c/p\u003e\n\u003cp\u003eThe code is based on \u003ca href=\"http://discourse.urho3d.io/t/managing-game-state/66/1\"\u003etopic43.html#p195\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eMy work around to move away from the node state is a API level logiccomponennt.\u003c/p\u003e\n\u003cp\u003eThe GitHUB is \u003ca href=\"https://github.com/vivienneanthony/Urho3D-Mastercurrent-Existence\" rel=\"nofollow noopener\"\u003egithub.com/vivienneanthony/Urho … -Existence\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eThe related files are the files starting with Game at \u003ca href=\"https://github.com/vivienneanthony/Urho3D-Mastercurrent-Existence/tree/development/Source/ExistenceApps/ExistenceClient\" rel=\"nofollow noopener\"\u003egithub.com/vivienneanthony/Urho … enceClient\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eAlso I have to expand the event signal to send more argument info and somehow force Enter() and Exit() on    each state change possibly a HandleUpdate() and FixedUpdate();\u003c/p\u003e\n\u003cp\u003ePhotos of problem areas\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"http://imgur.com/h3bOglh,Ag4sVr2\" rel=\"nofollow noopener\"\u003eimgur.com/h3bOglh,Ag4sVr2\u003c/a\u003e\u003c/p\u003e","post_number":1,"post_type":1,"updated_at":"2017-01-02T01:05:23.956Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":79,"reads":18,"readers_count":17,"score":398.6,"yours":false,"topic_id":1091,"topic_slug":"basic-game-state-implementation-help","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"link_counts":[{"url":"https://github.com/vivienneanthony/Urho3D-Mastercurrent-Existence","internal":false,"reflection":false,"title":"GitHub - vivienneanthony/Urho3D-Mastercurrent-Existence","clicks":4},{"url":"https://github.com/vivienneanthony/Urho3D-Mastercurrent-Existence/tree/development/Source/ExistenceApps/ExistenceClient","internal":false,"reflection":false,"title":"Urho3D-Mastercurrent-Existence/Source/ExistenceApps/ExistenceClient at development · vivienneanthony/Urho3D-Mastercurrent-Existence · GitHub","clicks":2},{"url":"http://imgur.com/h3bOglh,Ag4sVr2","internal":false,"reflection":false,"title":"Imgur: The most awesome images on the Internet","clicks":2},{"url":"http://discourse.urho3d.io/t/managing-game-state/66","internal":true,"reflection":false,"title":"Managing Game State","clicks":0}],"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":88,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":6333,"name":"","username":"vivienneanthony","avatar_template":"/user_avatar/discourse.urho3d.io/vivienneanthony/{size}/942_2.png","created_at":"2015-05-29T17:21:27.000Z","cooked":"\u003cp\u003eAll related files.  There are errors of course been cranking the conversion full speed. Coffee.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/vivienneanthony/Urho3D-Mastercurrent-Existence/blob/development/Source/ExistenceApps/ExistenceClient/GameStateComponent.cpp\" rel=\"nofollow noopener\"\u003egithub.com/vivienneanthony/Urho … ponent.cpp\u003c/a\u003e\u003cbr\u003e\n\u003ca href=\"https://github.com/vivienneanthony/Urho3D-Mastercurrent-Existence/blob/development/Source/ExistenceApps/ExistenceClient/GameStateComponent.h\" rel=\"nofollow noopener\"\u003egithub.com/vivienneanthony/Urho … omponent.h\u003c/a\u003e\u003cbr\u003e\n\u003ca href=\"https://github.com/vivienneanthony/Urho3D-Mastercurrent-Existence/blob/development/Source/ExistenceApps/ExistenceClient/GameStateHandler.cpp\" rel=\"nofollow noopener\"\u003egithub.com/vivienneanthony/Urho … andler.cpp\u003c/a\u003e\u003cbr\u003e\n\u003ca href=\"https://github.com/vivienneanthony/Urho3D-Mastercurrent-Existence/blob/development/Source/ExistenceApps/ExistenceClient/GameStateHandler.h\" rel=\"nofollow noopener\"\u003egithub.com/vivienneanthony/Urho … eHandler.h\u003c/a\u003e\u003cbr\u003e\n\u003ca href=\"https://github.com/vivienneanthony/Urho3D-Mastercurrent-Existence/blob/development/Source/ExistenceApps/ExistenceClient/GameStateEvents.h\" rel=\"nofollow noopener\"\u003egithub.com/vivienneanthony/Urho … teEvents.h\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/vivienneanthony/Urho3D-Mastercurrent-Existence/blob/development/Source/ExistenceApps/ExistenceClient/ExistenceClient.cpp\" rel=\"nofollow noopener\"\u003egithub.com/vivienneanthony/Urho … Client.cpp\u003c/a\u003e\u003cbr\u003e\n\u003ca href=\"https://github.com/vivienneanthony/Urho3D-Mastercurrent-Existence/blob/development/Source/ExistenceApps/ExistenceClient/ExistenceClient.h\" rel=\"nofollow noopener\"\u003egithub.com/vivienneanthony/Urho … ceClient.h\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eAdditoinally, I just tried adhocing it.\u003c/p\u003e\n\u003cp\u003eCreating a pointer in the Game State Handler code header to a point. Then setting the pointer from the main code to set the Game State Hanger coded pointer.\u003c/p\u003e\n\u003cp\u003eBasically, pointing the code to the memory address of itself. That idea did not work.\u003c/p\u003e\n\u003cp\u003eArgh!!!\u003c/p\u003e\n\u003cp\u003eUpdated on github.\u003c/p\u003e","post_number":2,"post_type":1,"updated_at":"2017-01-02T01:05:24.051Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":0,"reads":18,"readers_count":17,"score":3.6,"yours":false,"topic_id":1091,"topic_slug":"basic-game-state-implementation-help","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"link_counts":[{"url":"https://github.com/vivienneanthony/Urho3D-Mastercurrent-Existence/blob/development/Source/ExistenceApps/ExistenceClient/GameStateComponent.cpp","internal":false,"reflection":false,"clicks":3},{"url":"https://github.com/vivienneanthony/Urho3D-Mastercurrent-Existence/blob/development/Source/ExistenceApps/ExistenceClient/GameStateHandler.h","internal":false,"reflection":false,"clicks":1},{"url":"https://github.com/vivienneanthony/Urho3D-Mastercurrent-Existence/blob/development/Source/ExistenceApps/ExistenceClient/ExistenceClient.h","internal":false,"reflection":false,"title":"Urho3D-Mastercurrent-Existence/ExistenceClient.h at development · vivienneanthony/Urho3D-Mastercurrent-Existence · GitHub","clicks":1},{"url":"https://github.com/vivienneanthony/Urho3D-Mastercurrent-Existence/blob/development/Source/ExistenceApps/ExistenceClient/ExistenceClient.cpp","internal":false,"reflection":false,"title":"Urho3D-Mastercurrent-Existence/ExistenceClient.cpp at development · vivienneanthony/Urho3D-Mastercurrent-Existence · GitHub","clicks":0},{"url":"https://github.com/vivienneanthony/Urho3D-Mastercurrent-Existence/blob/development/Source/ExistenceApps/ExistenceClient/GameStateComponent.h","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/vivienneanthony/Urho3D-Mastercurrent-Existence/blob/development/Source/ExistenceApps/ExistenceClient/GameStateHandler.cpp","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/vivienneanthony/Urho3D-Mastercurrent-Existence/blob/development/Source/ExistenceApps/ExistenceClient/GameStateEvents.h","internal":false,"reflection":false,"clicks":0}],"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":88,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":6334,"name":"","username":"vivienneanthony","avatar_template":"/user_avatar/discourse.urho3d.io/vivienneanthony/{size}/942_2.png","created_at":"2015-05-30T07:12:59.000Z","cooked":"\u003cp\u003eJust a FYI.\u003c/p\u003e\n\u003cp\u003eThe SetConsoleState in the GameStateHandler class works before I switch a state after deffining it.\u003c/p\u003e\n\u003cp\u003eI am thinking once the new state is loaded. ExistenceGameState loses it context or the State does not have access to the data. I tried movign the shared  pointer all the way to the base class but it still not working.\u003c/p\u003e","post_number":3,"post_type":1,"updated_at":"2017-01-02T01:05:24.149Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":1,"reads":14,"readers_count":13,"score":7.8,"yours":false,"topic_id":1091,"topic_slug":"basic-game-state-implementation-help","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":88,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":6340,"name":"","username":"vivienneanthony","avatar_template":"/user_avatar/discourse.urho3d.io/vivienneanthony/{size}/942_2.png","created_at":"2015-05-31T05:29:07.000Z","cooked":"\u003cp\u003eHere are some changes with the code and results.\u003c/p\u003e\n\u003cp\u003e1.Befriended derived class. Okay. No major results.\u003cbr\u003e\n2.Use the scene node setup similiar to the original source from Carlomaker…\u003c/p\u003e\n\u003cp\u003eResult\u003cbr\u003e\nState changes seems to happen but crashes.\u003c/p\u003e\n\u003col start=\"3\"\u003e\n\u003cli\u003e\n\u003cp\u003eThe Login code is started and when finished. It goes back to the Game State Handler calling a Unknown state.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eThe ExistenceGameState  functions can be called, but if it tries to change information like Console. It crashes also.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eResult\u003cbr\u003e\nDerived classes do not get full access to the class functon ExistenceGameState creating a crash. The following code is a example.\u003c/p\u003e\n\u003cp\u003e[code]\u003cbr\u003e\nnt GameStateHandler::SetUIState(int flag)\u003cbr\u003e\n{\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003euistate = flag;\n\nreturn 1;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e}[/code]\u003c/p\u003e\n\u003cp\u003eConclusion\u003c/p\u003e\n\u003cp\u003eOther problem\u003cbr\u003e\nI don’t see the login window appear or Existence logo.  I’m not certain if I have to create a loop in that specific subclass.\u003c/p\u003e","post_number":4,"post_type":1,"updated_at":"2017-01-02T01:05:24.549Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":0,"reads":14,"readers_count":13,"score":2.8,"yours":false,"topic_id":1091,"topic_slug":"basic-game-state-implementation-help","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":88,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":6341,"name":"","username":"vivienneanthony","avatar_template":"/user_avatar/discourse.urho3d.io/vivienneanthony/{size}/942_2.png","created_at":"2015-05-31T05:43:09.000Z","cooked":"\u003cp\u003eResources\u003c/p\u003e\n\u003cp\u003eCoreData and Resources Folder\u003c/p\u003e\n\u003cp\u003eIt includes scenes, models, textures, UI needed, and everything else other then the build files on GitHub.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://www.dropbox.com/s/whwwioz5ahjpucx/ExistenceResources.zip?dl=0\" rel=\"nofollow noopener\"\u003edropbox.com/s/whwwioz5ahjpu … s.zip?dl=0\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eThe primary Idea is a derived class from ExistenceClient class part of the App that is for each class ExistenceClientStateXXXX.cpp then other function in relation to a specific takes like ExistenceClientConsole.cpp or ExistenceClientFile.cpp for general used functions among the derived class.\u003c/p\u003e\n\u003cp\u003eAs for as input, I am thinking one HandleUpdate and HandleInput for everything but it can detect states and do the appriopriate action.\u003c/p\u003e\n\u003cp\u003eAt least for the time being.\u003c/p\u003e","post_number":5,"post_type":1,"updated_at":"2017-01-02T01:05:24.616Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":0,"reads":13,"readers_count":12,"score":2.6,"yours":false,"topic_id":1091,"topic_slug":"basic-game-state-implementation-help","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"link_counts":[{"url":"https://www.dropbox.com/s/whwwioz5ahjpucx/ExistenceResources.zip?dl=0","internal":false,"reflection":false,"title":"Dropbox - Error","clicks":0}],"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":88,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":6346,"name":"","username":"vivienneanthony","avatar_template":"/user_avatar/discourse.urho3d.io/vivienneanthony/{size}/942_2.png","created_at":"2015-05-31T17:00:07.000Z","cooked":"\u003cp\u003eIf any code is not clear of purpose. FYI me. I need a getCurrentState function each make a continous loop in each state if a overall exit out on state change or possible timeout in game mode if no input maybe after a day\u003c/p\u003e","post_number":6,"post_type":1,"updated_at":"2017-01-02T01:05:25.012Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":0,"reads":20,"readers_count":19,"score":4.0,"yours":false,"topic_id":1091,"topic_slug":"basic-game-state-implementation-help","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":88,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":6361,"name":"","username":"vivienneanthony","avatar_template":"/user_avatar/discourse.urho3d.io/vivienneanthony/{size}/942_2.png","created_at":"2015-06-03T01:40:25.000Z","cooked":"\u003cp\u003eSo, I got the code to switch code based on a state using a signal event or command. The problem I have the graphics and UI go awry when I change to a derived class. I eventually have to take out the words friendly class in the client header but any insight would be help. I added some dummy functions when a Client/Server framework can be done it would be easier.\u003c/p\u003e\n\u003cp\u003eReally. I got this thing 80% running but stuck at that last 20%.\u003c/p\u003e\n\u003cp\u003eHeader\u003c/p\u003e\n\u003cp\u003e[code]\u003cspan class=\"hashtag\"\u003e#ifndef\u003c/span\u003e GAMESTATEHANDLER_H\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#define\u003c/span\u003e GAMESTATEHANDLER_H\u003c/p\u003e\n\u003cp\u003e\u003cspan class=\"hashtag\"\u003e#define\u003c/span\u003e         UI_NONE                             0\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#define\u003c/span\u003e         UI_LOGININTERFACE                   1\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#define\u003c/span\u003e         UI_ACCOUNTCREATIONINTERFACE         2\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#define\u003c/span\u003e         UI_CHARACTERCREATIONINTERFACE       3\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#define\u003c/span\u003e         UI_CHARACTERSELECTIONINTERFACE      4\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#define\u003c/span\u003e         UI_PROGRESSINTERFACE                5\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#define\u003c/span\u003e         UI_GAMECONSOLE                      6\u003c/p\u003e\n\u003cp\u003e\u003cspan class=\"hashtag\"\u003e#define\u003c/span\u003e         STATE_NONE                          10\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#define\u003c/span\u003e         STATE_MAIN                          11\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#define\u003c/span\u003e         STATE_GAME                          12\u003c/p\u003e\n\u003cp\u003e\u003cspan class=\"hashtag\"\u003e#define\u003c/span\u003e         UI_CONSOLEOFF                     0\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#define\u003c/span\u003e         UI_CONSOLEON                      1\u003c/p\u003e\n\u003cp\u003e\u003cspan class=\"hashtag\"\u003e#define\u003c/span\u003e         CAMERAMODE_DEFAULT                  0\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#define\u003c/span\u003e         CAMERAMODE_FIRSTPERSON              1\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#define\u003c/span\u003e         CAMERAMODE_FLY                      2\u003c/p\u003e\n\u003cp\u003e\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “GameStateComponent.h”\u003c/p\u003e\n\u003cp\u003eusing namespace Urho3D;\u003c/p\u003e\n\u003cp\u003e/// fw declaration\u003cbr\u003e\nclass ExistenceClient;\u003cbr\u003e\nclass ExistenceClientStateSingleton;\u003c/p\u003e\n\u003cp\u003eclass GameStateHandler : public Urho3D::Object\u003cbr\u003e\n{\u003cbr\u003e\nOBJECT(GameStateHandler);\u003cbr\u003e\npublic:\u003cbr\u003e\n///costructor\u003cbr\u003e\nGameStateHandler(Context * context);\u003cbr\u003e\n/// Destruct.\u003cbr\u003e\nvirtual  ~GameStateHandler();\u003cbr\u003e\n/// start point\u003cbr\u003e\nvoid Start(void);\u003cbr\u003e\n// handler events\u003cbr\u003e\nvoid onStateChange(Urho3D::StringHash eventType, Urho3D::VariantMap\u0026amp; eventData );\u003cbr\u003e\n/// Get last state\u003cbr\u003e\nString getCurrentState(void);\u003cbr\u003e\n// Register object factory and attributes.\u003cbr\u003e\nstatic void RegisterObject(Context* context);\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e/// Function to access other states\nint GetConsoleState(void);\nint SetConsoleState(int flag);\n\nint GetUIState(void);\nint SetUIState(int flag);\n\nint GetCameraMode(void);\nint SetCameraMode(int flag);\n\nint GetDebugHudMode(void);\nint SetDebugHudMode(int flag);\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eprivate:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e/// register all states\nvoid RegisterGameStates();\n/// create  state  classname\nvoid createState( Urho3D::String newState );\n/// change state\nvoid changeState(GameStateComponent * state);\nvoid changeState2(ExistenceClientStateSingleton * State);\n/// exit and remove last state.\nvoid RemoveLastState();\n\n/// Not used at the moment\n/// holder\nExistenceClientStateSingleton * GameState;\n\n/// Not used at the moment\n/// states container\nUrho3D::Vector\u0026lt;GameStateComponent*\u0026gt; mStates;\n\n/// Not used at the moment\n/// Kept node just in case\nUrho3D::SharedPtr\u0026lt;Urho3D::Node\u0026gt; mainNode;\n\n/// Vector Array - Derived States\nstd::vector\u0026lt;ExistenceClient *\u0026gt; myDerivedSates;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e/// Added flags\u003cbr\u003e\nint consolestate;\u003cbr\u003e\nint uistate;\u003cbr\u003e\nint cameramode;\u003cbr\u003e\nint debughud;\u003c/p\u003e\n\u003cp\u003e};\u003c/p\u003e\n\u003cp\u003e\u003cspan class=\"hashtag\"\u003e#endif\u003c/span\u003e // GAMESTATEHANDLER_H\u003cbr\u003e\n[/code]\u003c/p\u003e\n\u003cp\u003e[code]//\u003cbr\u003e\n// Copyright © 2008-2014 the Urho3D project.\u003cbr\u003e\n//\u003cbr\u003e\n// Permission is hereby granted, free of charge, to any person obtaining a copy\u003cbr\u003e\n// of this software and associated documentation files (the “Software”), to deal\u003cbr\u003e\n// in the Software without restriction, including without limitation the rights\u003cbr\u003e\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\u003cbr\u003e\n// copies of the Software, and to permit persons to whom the Software is\u003cbr\u003e\n// furnished to do so, subject to the following conditions:\u003cbr\u003e\n//\u003cbr\u003e\n// The above copyright notice and this permission notice shall be included in\u003cbr\u003e\n// all copies or substantial portions of the Software.\u003cbr\u003e\n//\u003cbr\u003e\n// THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\u003cbr\u003e\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\u003cbr\u003e\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\u003cbr\u003e\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\u003cbr\u003e\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\u003cbr\u003e\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\u003cbr\u003e\n// THE SOFTWARE.\u003cbr\u003e\n//\u003c/p\u003e\n\u003cp\u003e\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Urho3D.h\u0026gt;\u003c/p\u003e\n\u003cp\u003e\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “…/…/…/Urho3D/Core/CoreEvents.h”\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “…/…/…/Urho3D/Engine/Engine.h”\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “…/…/…/Urho3D/UI/Font.h”\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “…/…/…/Urho3D/Input/Input.h”\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “…/…/…/Urho3D/Core/ProcessUtils.h”\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “…/…/…/Urho3D/UI/Text.h”\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “…/…/…/Urho3D/UI/UI.h”\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “…/…/…/Urho3D/Scene/Scene.h”\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “…/…/…/Urho3D/Graphics/StaticModel.h”\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “…/…/…/Urho3D/Graphics/Octree.h”\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “…/…/…/Urho3D/Graphics/Model.h”\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “…/…/…/Urho3D/Graphics/Material.h”\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “…/…/…/Urho3D/Graphics/Camera.h”\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “…/…/…/Urho3D/Resource/ResourceCache.h”\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “…/…/…/Urho3D/Graphics/Renderer.h”\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “…/…/…/Urho3D/Graphics/Camera.h”\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “…/…/…/Urho3D/UI/Window.h”\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “…/…/…/Urho3D/UI/Button.h”\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “…/…/…/Urho3D/UI/LineEdit.h”\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “…/…/…/Urho3D/UI/UIElement.h”\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “…/…/…/Urho3D/Math/BoundingBox.h”\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “…/…/…/Urho3D/UI/UIEvents.h”\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “…/…/…/Urho3D/Graphics/DebugRenderer.h”\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “…/…/…/Urho3D/IO/File.h”\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “…/…/…/Urho3D/IO/FileSystem.h”\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “…/…/…/Urho3D/Resource/XMLFile.h”\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “…/…/…/Urho3D/Resource/XMLElement.h”\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “…/…/…/Urho3D/IO/Deserializer.h”\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “…/…/…/Urho3D/UI/Cursor.h”\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “…/…/…/Urho3D/IO/FileSystem.h”\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “…/…/…/Urho3D/UI/ListView.h”\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “…/…/…/Urho3D/Engine/Console.h”\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “…/…/…/Urho3D/Physics/RigidBody.h”\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “…/…/…/Urho3D/Physics/CollisionShape.h”\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “…/…/…/Urho3D/Physics/PhysicsWorld.h”\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “…/…/…/Urho3D/Graphics/Animation.h”\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “…/…/…/Urho3D/Graphics/AnimatedModel.h”\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “…/…/…/Urho3D/Graphics/AnimationController.h”\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “Character.h”\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “…/…/…/Urho3D/Graphics/Terrain.h”\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “…/…/…/Urho3D/Engine/EngineEvents.h”\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “…/…/…/Urho3D/Graphics/Zone.h”\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “…/…/…/Urho3D/IO/Log.h”\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “…/…/…/Urho3D/Graphics/Skybox.h”\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “…/…/…/Urho3D/UI/Sprite.h”\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “…/…/…/Urho3D/Graphics/StaticModelGroup.h”\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “…/…/…/Urho3D/Graphics/BillboardSet.h”\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “…/…/…/Urho3D/Math/Random.h”\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “…/…/…/Urho3D/Graphics/RenderPath.h”\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “…/…/…/Urho3D/Math/Color.h”\u003c/p\u003e\n\u003cp\u003e\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “GameStateHandler.h”\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “GameStateEvents.h”\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “GameStateComponent.h”\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “GameObject.h”\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “EnvironmentBuild.h”\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “Manager.h”\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “…/Account.h”\u003c/p\u003e\n\u003cp\u003e#include \u003cbr\u003e\n#include \u003cbr\u003e\n#include \u003cbr\u003e\n#include \u003cbr\u003e\n#include \u003cbr\u003e\n#include \u003cbr\u003e\n#include \u003cbr\u003e\n#include \u003cbr\u003e\n#include \u003cbr\u003e\n#include \u003cbr\u003e\n#include \u003cbr\u003e\n#include \u003cbr\u003e\n#include \u003cbr\u003e\n#include \u003cbr\u003e\n#include \u003c/p\u003e\n\u003cp\u003e#include “…/…/…/Urho3D/Procedural/Procedural.h”\u003cbr\u003e\n#include “…/…/…/Urho3D/Procedural/ProceduralTerrain.h”\u003cbr\u003e\n#include “…/…/…/Urho3D/Procedural/RandomNumberGenerator.h”\u003c/p\u003e\n\u003cp\u003e#include “ExistenceClient.h”\u003c/p\u003e\n\u003cp\u003e///using namespace std;\u003cbr\u003e\nusing namespace Urho3D;\u003c/p\u003e\n\u003cp\u003eGameStateHandler::GameStateHandler(Context * context):\u003cbr\u003e\nObject(context)\u003cbr\u003e\n,consolestate(0)\u003cbr\u003e\n,uistate(0)\u003cbr\u003e\n,debughud(0)\u003cbr\u003e\n,cameramode(0)\u003cbr\u003e\n{\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e/// Set defaults\nuistate=UI_NONE;\nconsolestate=UI_CONSOLEOFF;\ncameramode=CAMERAMODE_DEFAULT;\ndebughud=false;\n\n/// Subscribe to event state change\nSubscribeToEvent(G_STATES_CHANGE, HANDLER(GameStateHandler, onStateChange));\n\n/// Register states\nRegisterGameStates();\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e}\u003c/p\u003e\n\u003cp\u003eGameStateHandler::~GameStateHandler()\u003cbr\u003e\n{\u003cbr\u003e\n/// Remove last state\u003cbr\u003e\nRemoveLastState();\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e/// Destroy component\nLOGINFO(\"Destroyng GameComponent\" );\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e}\u003c/p\u003e\n\u003cp\u003evoid GameStateHandler::RegisterGameStates()\u003cbr\u003e\n{\u003cbr\u003e\n/// … all states here\u003cbr\u003e\ncontext_-\u0026gt;RegisterFactory();\u003cbr\u003e\ncontext_-\u0026gt;RegisterFactory();\u003cbr\u003e\ncontext_-\u0026gt;RegisterFactory();\u003cbr\u003e\ncontext_-\u0026gt;RegisterFactory();\u003cbr\u003e\ncontext_-\u0026gt;RegisterFactory();\u003cbr\u003e\ncontext_-\u0026gt;RegisterFactory();\u003cbr\u003e\ncontext_-\u0026gt;RegisterFactory();\u003c/p\u003e\n\u003cp\u003e}\u003c/p\u003e\n\u003cp\u003e/// Register Object\u003cbr\u003e\nvoid GameStateHandler::RegisterObject(Context* context)\u003cbr\u003e\n{\u003cbr\u003e\ncontext-\u0026gt;RegisterFactory();\u003cbr\u003e\n}\u003c/p\u003e\n\u003cp\u003evoid GameStateHandler::Start(void)\u003cbr\u003e\n{\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e///mainNode = scene-\u0026gt;CreateChild(\"Main\");\ncreateState(ExistenceClientStateLogin::GetTypeNameStatic());\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e}\u003c/p\u003e\n\u003cp\u003e/// Temporary\u003cbr\u003e\nString  GameStateHandler::getCurrentState(void)\u003cbr\u003e\n{\u003cbr\u003e\n/// Not Used\u003cbr\u003e\nString stateString = String(“test”) ;\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e//String stateString = mStates.Back().GetType();\nreturn stateString;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e}\u003c/p\u003e\n\u003cp\u003evoid GameStateHandler::onStateChange( Urho3D::StringHash eventType, Urho3D::VariantMap\u0026amp; eventData )\u003cbr\u003e\n{\u003cbr\u003e\n/// intercept state event\u003cbr\u003e\nGameStates newState=  static_cast(eventData[GameState::P_CMD].GetInt());\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eLOGINFO(\"New State \" +  (String)((int)newState)) ;\n\n\nswitch (newState)\n{\ncase GAME_STATE_SINGLETON:\n    createState(ExistenceClientStateSingleton::GetTypeNameStatic());\n    break;\ncase GAME_STATE_LOGIN:\n    createState(ExistenceClientStateLogin::GetTypeNameStatic());\n    break;\ncase  GAME_STATE_ACCOUNTCREATE: //called from button on GameMainMenuSample form\n    createState(ExistenceClientStateAccount::GetTypeNameStatic());\n    break;\ncase  GAME_STATE_PROGRESS:\n    createState(ExistenceClientStateProgress::GetTypeNameStatic());\n    break;\ncase GAME_STATE_PLAYERCREATE:\n    createState(ExistenceClientStatePlayer::GetTypeNameStatic());\n    break;\ncase GAME_STATE_MAINMENU:\n    createState(ExistenceClientStateMainScreen::GetTypeNameStatic());\n    break;\ncase GAME_STATE_GAMEMODE:\n    createState(ExistenceClientStateGameMode::GetTypeNameStatic());\n    break;\ndefault:\n    ErrorExit(\"Unkown State \" + (String)(int) newState );\n    break;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e}\u003c/p\u003e\n\u003cp\u003evoid GameStateHandler::createState( String newState )\u003cbr\u003e\n{\u003cbr\u003e\n/// switch states\u003cbr\u003e\nif(newState==“ExistenceClientStateSingleton”)\u003cbr\u003e\n{\u003cbr\u003e\nmyDerivedSates.push_back(new ExistenceClientStateSingleton(context_));\u003cbr\u003e\n}\u003cbr\u003e\nelse if(newState==“ExistenceClientStateLogin”)\u003cbr\u003e\n{\u003cbr\u003e\nmyDerivedSates.push_back(new ExistenceClientStateLogin(context_));\u003cbr\u003e\n}\u003cbr\u003e\nelse\u003cbr\u003e\n{\u003cbr\u003e\nErrorExit(\"Unkown GameState \");\u003cbr\u003e\n}\u003cbr\u003e\n}\u003c/p\u003e\n\u003cp\u003e/// Not used at the moment\u003cbr\u003e\nvoid GameStateHandler::changeState( GameStateComponent* state )\u003cbr\u003e\n{\u003cbr\u003e\n/\u003cem\u003eLOGINFO(“Adding state” + state-\u0026gt;GetTypeName());\u003cbr\u003e\n//exit from old state\u003cbr\u003e\nRemoveLastState();\u003cbr\u003e\n//enter  new state\u003cbr\u003e\nmStates.Push(state);\u003cbr\u003e\nmStates.Back()-\u0026gt;Enter();\u003c/em\u003e/\u003c/p\u003e\n\u003cp\u003e}\u003c/p\u003e\n\u003cp\u003e/// Not used at the moment\u003cbr\u003e\nvoid GameStateHandler::changeState2(ExistenceClientStateSingleton * State)\u003cbr\u003e\n{\u003cbr\u003e\nLOGINFO(“Adding state” + State-\u0026gt;GetTypeName());\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e//exit from old state\n//RemoveLastState();\n//enter  new state\n//mStates.Push(state);\n//mStates.Back()-\u0026gt;Enter();\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e}\u003c/p\u003e\n\u003cp\u003e/// Not used at the moment\u003cbr\u003e\nvoid GameStateHandler::RemoveLastState()\u003cbr\u003e\n{\u003cbr\u003e\n/*  if ( !mStates.Empty() )\u003cbr\u003e\n{\u003cbr\u003e\nmStates.Back()-\u0026gt;Exit();\u003cbr\u003e\n//remove component’s node  remove node and component\u003cbr\u003e\nmStates.Back()-\u0026gt;GetNode()-\u0026gt;Remove();\u003cbr\u003e\nmStates.Pop();\u003cbr\u003e\n}*/\u003cbr\u003e\n}\u003c/p\u003e\n\u003cp\u003eint GameStateHandler::GetConsoleState(void)\u003cbr\u003e\n{\u003cbr\u003e\nint flag;\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eflag = consolestate;\n\nreturn flag;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e}\u003c/p\u003e\n\u003cp\u003eint GameStateHandler::SetConsoleState(int flag)\u003cbr\u003e\n{\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e//consolestate=flag;\n\nreturn 1;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e}\u003c/p\u003e\n\u003cp\u003eint GameStateHandler::GetUIState(void)\u003cbr\u003e\n{\u003cbr\u003e\nint flag;\u003cbr\u003e\nflag=uistate;\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003ereturn flag;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e}\u003c/p\u003e\n\u003cp\u003eint GameStateHandler::SetUIState(int flag)\u003cbr\u003e\n{\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003euistate = flag;\n\nreturn 1;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e}\u003c/p\u003e\n\u003cp\u003eint GameStateHandler::GetCameraMode(void)\u003cbr\u003e\n{\u003cbr\u003e\nint flag;\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eflag = cameramode;\n\nreturn flag;;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e}\u003c/p\u003e\n\u003cp\u003eint GameStateHandler::SetCameraMode(int flag)\u003cbr\u003e\n{\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003ecameramode = flag;\n\nreturn 1;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e}\u003c/p\u003e\n\u003cp\u003eint GameStateHandler::GetDebugHudMode(void)\u003cbr\u003e\n{\u003cbr\u003e\nint flag;\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eflag = debughud;\n\nreturn flag;;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e}\u003c/p\u003e\n\u003cp\u003eint GameStateHandler::SetDebugHudMode(int flag)\u003cbr\u003e\n{\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003edebughud = flag;\n\nreturn 1;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e}\u003c/p\u003e\n\u003cp\u003e//}\u003c/p\u003e\n\u003cp\u003eMain\u003cbr\u003e\n[/code]\u003c/p\u003e\n\u003cp\u003eExistenceClient.H and code on GItHub\u003c/p\u003e\n\u003cp\u003e[code]#ifndef EXISTENCECLIENT_H\u003cbr\u003e\n#define EXISTENCECLIENT_H\u003c/p\u003e\n\u003cp\u003e//\u003cbr\u003e\n// Copyright © 2008-2014 the Urho3D project.\u003cbr\u003e\n//\u003cbr\u003e\n// Permission is hereby granted, free of charge, to any person obtaining a copy\u003cbr\u003e\n// of this software and associated documentation files (the “Software”), to deal\u003cbr\u003e\n// in the Software without restriction, including without limitation the rights\u003cbr\u003e\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\u003cbr\u003e\n// copies of the Software, and to permit persons to whom the Software is\u003cbr\u003e\n// furnished to do so, subject to the following conditions:\u003cbr\u003e\n//\u003cbr\u003e\n// The above copyright notice and this permission notice shall be included in\u003cbr\u003e\n// all copies or substantial portions of the Software.\u003cbr\u003e\n//\u003cbr\u003e\n// THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\u003cbr\u003e\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\u003cbr\u003e\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\u003cbr\u003e\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\u003cbr\u003e\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\u003cbr\u003e\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\u003cbr\u003e\n// THE SOFTWARE.\u003cbr\u003e\n//\u003c/p\u003e\n\u003cp\u003e#define DISPLAYMESH_MUILTIPLECHARACTER 1\u003cbr\u003e\n#define DISPLAYMESH_SINGLECHARACTER 2\u003c/p\u003e\n\u003cp\u003e#define UIBLANK 0\u003cbr\u003e\n#define UIMAIN  1\u003c/p\u003e\n\u003cp\u003e#define CHARACTERMAINSCENE          0\u003cbr\u003e\n#define CHARACTERUISCENE            1\u003c/p\u003e\n\u003cp\u003e#define CAMERAORIENTATIONROTATEYAW 1\u003cbr\u003e\n#define CAMERAORIENTATIONROTATEPITCH 1\u003c/p\u003e\n\u003cp\u003e#include “…/…/…/Urho3D/Procedural/Rules.h”\u003c/p\u003e\n\u003cp\u003e#include \u0026lt;time.h\u0026gt;\u003c/p\u003e\n\u003cp\u003e#include “…/ExistenceApps.h”\u003cbr\u003e\n#include “…/Account.h”\u003cbr\u003e\n#include “…/factions.h”\u003cbr\u003e\n#include “…/Player.h”\u003cbr\u003e\n#include “…/PlayerLevels.h”\u003c/p\u003e\n\u003cp\u003e#include “GameStateEvents.h”\u003cbr\u003e\n#include “GameStateHandler.h”\u003c/p\u003e\n\u003cp\u003estring ConvertUIntToString(unsigned int val);\u003c/p\u003e\n\u003cp\u003e/// This first example, maintaining tradition, prints a “Hello World” message.\u003cbr\u003e\n/// Furthermore it shows:\u003cbr\u003e\n///     - Using the Sample / Application classes, which initialize the Urho3D engine and run the main loop\u003cbr\u003e\n///     - Adding a Text element to the graphical user interface\u003cbr\u003e\n///     - Subscribing to and handling of update events\u003cbr\u003e\nclass ExistenceClient : public ExistenceApp\u003cbr\u003e\n{\u003cbr\u003e\n/// friend the other classes\u003cbr\u003e\nfriend class ExistenceClientStateSingleton;\u003cbr\u003e\nfriend class ExistenceClientStateAccount;\u003cbr\u003e\nfriend class ExistenceClientStateProgress;\u003cbr\u003e\nfriend class ExistenceClientStateGameMode;\u003cbr\u003e\nfriend class ExistenceClientStateLogin;\u003cbr\u003e\nfriend class ExistenceClientStatePlayer;\u003cbr\u003e\nfriend class ExistenceClientStateMainScreen;\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eOBJECT(ExistenceClient);\n\n/// Construct.\nExistenceClient(Context* context);\n\n/// Setup after engine initialization and before running the main loop.\nvirtual void Start();\n\n/// Return XML patch instructions for screen joystick layout for a specific sample app, if any.https://github.com/urho3d/Urho3D/tree/master/Source/Samples\nvirtual String GetScreenJoystickPatchString() const\n{\n    return\n        \"\u0026lt;patch\u0026gt;\"\n        \"    \u0026lt;add sel=\\\"/element/element[./attribute[@name='Name' and @value='Hat0']]\\\"\u0026gt;\"\n        \"        \u0026lt;attribute name=\\\"Is Visible\\\" value=\\\"false\\\" /\u0026gt;\"\n        \"    \u0026lt;/add\u0026gt;\"\n        \"\u0026lt;/patch\u0026gt;\";\n}\n\n/// Diaplay login screen\nvoid SetupScreenViewport(void);\nvoid SetupScreenUI(void);\n\n/// Subscribe to application-wide logic update events.\nvoid SubscribeToEvents();\n/// Handle the logic update event.\nvoid HandleUpdate(StringHash eventType, VariantMap\u0026amp; eventData);\n/// Events Keyboard\nvoid HandleKeyDown(StringHash eventType, VariantMap\u0026amp; eventData);\n\nvoid HandleInput(const String\u0026amp; input);\nvoid eraseScene(void);\n\nvoid AddLogoViewport(void);\n\nint CreateCursor(void);\n\nvoid MoveCamera(float timeStep);\nvoid Print(const String\u0026amp; output);\n\nvoid HandlePostUpdates(StringHash eventType, VariantMap\u0026amp; eventData);\n\n/// Render related functions\nint LoadCharacterMesh(int mode, String nodename, unsigned int alienrace, unsigned int gender);\nint loadplayerMesh(Node * playermeshNode, int alienrace, int gender,int mode);\n\n/// File related functions\nvoid LoadAccount(void);\nvoid SaveAccount(accountinformation account);\nvoid SavePlayer(bool activeplayer);\nint LoadAccountPlayers(void);\nint LoadPlayer(int player);\nint LoadTemporaryPlayer(int player);\nint GenerateSceneLoadDifferential(const char *filename=NULL);\nint LoadEnvironmentSettings(const char *environment);\n\n/// Console related functions\nvoid InitializeConsole(void);\nvoid HandleConsoleCommand(StringHash eventType, VariantMap\u0026amp; eventData);\n\nint ConsoleActionEnvironment(const char * lineinput);\nint ConsoleActionCamera(const char * lineinput);\nint ConsoleActionDebug(const char * lineinput);\nint ConsoleActionCharacter(const char * lineinput);\nint ConsoleActionRenderer(const char * lineinput);\nint ConsoleActionBuild(const char * lineinput);\n\n/// UI Related Functions\n\nvoid loadSceneUI(void);\nbool loadHUDFile(const char * filename, const int positionx, const int positiony);\nvoid loadUIXMLClosePressed(StringHash eventType, VariantMap\u0026amp; eventData);\nbool loadUIXML(int windowtype, const int positionx, const int positiony, int selected);\nvoid QuickMenuPressed(StringHash eventType, VariantMap\u0026amp; eventData);\nvoid UpdateUI(float timestep);\nvoid PlayerWindowUpdateUI(int selected);\nvoid PlayerWindowHandleDisplaySelection(StringHash eventType, VariantMap\u0026amp; eventData);\nint UpdateUISceneLoader(void);\nvoid UpdatePlayerInfoBar(void);\nvoid SceneLoaderHanderPress(StringHash eventType, VariantMap\u0026amp; eventData);\nint GenerateSceneUpdateEnvironment(terrain_rule terrainrule);\n\n/// Temporary online\nbool IsClientConnected(void);\nbool ClientConnect(void);\nbool SetServerSettings(void);\n\n/// Get subsubsystems\nRenderer * GetRenderSubsystems(void);\nUI * GetUISubsystems(void);\nGraphics * GetGraphicsSubsystems(void);\nResourceCache * GetResourceCacheSubsystems(void);\n\nWindow * GetSharedWindow(void);\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eprotected:\u003cbr\u003e\nprivate:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e/// Urho3D window shared pointers\nSharedPtr\u0026lt;Window\u0026gt; window_;\nSharedPtr\u0026lt;Window\u0026gt; window2_;\n\n/// Urho3D UIelement root, viewport, and render path\nSharedPtr\u0026lt;UIElement\u0026gt; uiRoot_;\nSharedPtr\u0026lt;Viewport\u0026gt; viewport;\n\nSharedPtr\u0026lt;RenderPath\u0026gt; effectRenderPath;\n\n/// Urho3D Shared pointer for input\nSharedPtr\u0026lt;Input\u0026gt; input_;\n\n/// Existence Weak pointer for a single character\nWeakPtr\u0026lt;Character\u0026gt; character_;\n\n/// Existence Game State Handler Pointer for Game State\nGameStateHandler * ExistenceGameState;\n\n/// Existence player structure class and variable declation for character/player related information\nPlayer  TemporaryPlayer;\nPlayer  * TemporaryAccountPlayerList;\nunsigned int TemporaryAccountPlayerSelected;\nunsigned int TemporaryAccountPlayerListLimit;\n\n/// Existence class and variable declaration for alien race alliance information\nvector\u0026lt;string\u0026gt; aliensarray;\nvector\u0026lt;string\u0026gt; tempaliensarray;\n\n/// This is temoporarily the necessary code\nbool accountexist;\n\nbool ServerConnection;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e};\u003c/p\u003e\n\u003cp\u003e/// Login State\u003cbr\u003e\nclass ExistenceClientStateSingleton: public ExistenceClient\u003cbr\u003e\n{\u003cbr\u003e\nOBJECT(ExistenceClientStateSingleton);\u003cbr\u003e\npublic:\u003cbr\u003e\nExistenceClientStateSingleton(Urho3D::Context * context);\u003cbr\u003e\nvirtual ~ExistenceClientStateSingleton();\u003cbr\u003e\nvirtual void Enter();\u003cbr\u003e\nvirtual void Exit();\u003cbr\u003e\nvirtual void OnUpdate(Urho3D::StringHash eventType, Urho3D::VariantMap\u0026amp; eventData );\u003cbr\u003e\nprivate:\u003cbr\u003e\nvoid Singleton(void);\u003cbr\u003e\nprotected:\u003c/p\u003e\n\u003cp\u003e};\u003c/p\u003e\n\u003cp\u003e/// Login State\u003cbr\u003e\nclass ExistenceClientStateLogin : public ExistenceClient\u003cbr\u003e\n{\u003cbr\u003e\nOBJECT(ExistenceClientStateLogin);\u003cbr\u003e\npublic:\u003cbr\u003e\nExistenceClientStateLogin(Urho3D::Context * context);\u003cbr\u003e\nvirtual ~ExistenceClientStateLogin();\u003cbr\u003e\nvirtual void Enter();\u003cbr\u003e\nvirtual void Exit();\u003cbr\u003e\nvirtual void OnUpdate(Urho3D::StringHash eventType, Urho3D::VariantMap\u0026amp; eventData );\u003cbr\u003e\nprivate:\u003cbr\u003e\nvoid LoginScreen(void);\u003cbr\u003e\nvoid LoginScreenUI(void);\u003cbr\u003e\nvoid LoginScreenUINewAccountHandleClosePressed(StringHash eventType, VariantMap\u0026amp; eventData);\u003cbr\u003e\nvoid LoginScreenUILoginHandleClosePressed(StringHash eventType, VariantMap\u0026amp; eventData);\u003c/p\u003e\n\u003cp\u003eprotected:\u003c/p\u003e\n\u003cp\u003e};\u003c/p\u003e\n\u003cp\u003e/// Account State\u003cbr\u003e\nclass ExistenceClientStateAccount: public ExistenceClient\u003cbr\u003e\n{\u003cbr\u003e\nOBJECT(ExistenceClientStateAccount);\u003cbr\u003e\npublic:\u003cbr\u003e\nExistenceClientStateAccount(Urho3D::Context * context);\u003cbr\u003e\nvirtual ~ ExistenceClientStateAccount();\u003cbr\u003e\nvirtual void Enter();\u003cbr\u003e\nvirtual void Exit();\u003cbr\u003e\nvirtual void OnUpdate(Urho3D::StringHash eventType, Urho3D::VariantMap\u0026amp; eventData );\u003cbr\u003e\nprivate:\u003cbr\u003e\nvoid Account(void);\u003cbr\u003e\nvoid CreateAccountScreenUI(void);\u003cbr\u003e\nvoid CreateAccountUIHandleClosePressed(StringHash eventType, VariantMap\u0026amp; eventData);\u003cbr\u003e\nprotected:\u003c/p\u003e\n\u003cp\u003e};\u003c/p\u003e\n\u003cp\u003e/// Main Screen State\u003cbr\u003e\nclass ExistenceClientStateMainScreen: public ExistenceClient\u003cbr\u003e\n{\u003cbr\u003e\nOBJECT(ExistenceClientStateMainScreen);\u003cbr\u003e\npublic:\u003cbr\u003e\nExistenceClientStateMainScreen(Urho3D::Context * context);\u003cbr\u003e\nvirtual ~ExistenceClientStateMainScreen();\u003cbr\u003e\nvirtual void Enter();\u003cbr\u003e\nvirtual void Exit();\u003cbr\u003e\nvirtual void OnUpdate(Urho3D::StringHash eventType, Urho3D::VariantMap\u0026amp; eventData );\u003cbr\u003e\nprivate:\u003cbr\u003e\nvoid MainScreen(void);\u003cbr\u003e\nvoid MainScreenUI(void);\u003cbr\u003e\nvoid MainScreenUIHandleClosePressed(StringHash eventType, VariantMap\u0026amp; eventData);\u003cbr\u003e\nvoid HandleCharacterStartButtonReleased(StringHash eventType, VariantMap\u0026amp; eventData);\u003cbr\u003e\nvoid HandleCharacterSelectedReleased(StringHash eventType, VariantMap\u0026amp; eventData);\u003cbr\u003e\nvoid HandleCharacterSelectedInfoButtonReleased(StringHash eventType, VariantMap\u0026amp; eventData);\u003cbr\u003e\nprotected:\u003c/p\u003e\n\u003cp\u003e};\u003c/p\u003e\n\u003cp\u003e/// Main Screen State\u003cbr\u003e\nclass ExistenceClientStateGameMode: public ExistenceClient\u003cbr\u003e\n{\u003cbr\u003e\nOBJECT(ExistenceClientStateGameMode);\u003cbr\u003e\npublic:\u003cbr\u003e\nExistenceClientStateGameMode(Urho3D::Context * context);\u003cbr\u003e\nvirtual ~ExistenceClientStateGameMode();\u003cbr\u003e\nvirtual void Enter();\u003cbr\u003e\nvirtual void Exit();\u003cbr\u003e\nvirtual void OnUpdate(Urho3D::StringHash eventType, Urho3D::VariantMap\u0026amp; eventData );\u003cbr\u003e\nprivate:\u003cbr\u003e\nvoid GameMode(void);\u003cbr\u003e\nprotected:\u003c/p\u003e\n\u003cp\u003e};\u003c/p\u003e\n\u003cp\u003e/// Player Create Login State\u003cbr\u003e\nclass ExistenceClientStatePlayer: public ExistenceClient\u003cbr\u003e\n{\u003cbr\u003e\nOBJECT(ExistenceClientStatePlayer);\u003cbr\u003e\npublic:\u003cbr\u003e\nExistenceClientStatePlayer(Urho3D::Context * context);\u003cbr\u003e\nvirtual ~ExistenceClientStatePlayer();\u003cbr\u003e\nvirtual void Enter();\u003cbr\u003e\nvirtual void Exit();\u003cbr\u003e\nvirtual void OnUpdate(Urho3D::StringHash eventType, Urho3D::VariantMap\u0026amp; eventData );\u003cbr\u003e\nprivate:\u003cbr\u003e\nvoid Player(void);\u003cbr\u003e\nvoid CreatePlayerScreenUI(void);\u003cbr\u003e\nvoid HandlerCameraOrientation(StringHash eventType, VariantMap\u0026amp; eventData);\u003cbr\u003e\nvoid CameraOrientationRotateMove (float degrees, int movement);\u003cbr\u003e\nvoid HandleMouseReleased(StringHash eventType, VariantMap\u0026amp; eventData);\u003cbr\u003e\nvoid CreatePlayerUIHandleClosePressed(StringHash eventType, VariantMap\u0026amp; eventData);\u003cbr\u003e\nvoid loadSceneCreationCreation(const char * lineinput);\u003cbr\u003e\nvoid CreatePlayerUIHandleControlClicked(StringHash eventType, VariantMap\u0026amp; eventData);\u003cbr\u003e\nvoid HandlePersonalitySelectionItemClick(StringHash eventType, VariantMap\u0026amp; eventData);\u003cbr\u003e\nprotected:\u003c/p\u003e\n\u003cp\u003e};\u003c/p\u003e\n\u003cp\u003e/// Main Screen State\u003cbr\u003e\nclass ExistenceClientStateProgress :public ExistenceClient\u003cbr\u003e\n{\u003cbr\u003e\nOBJECT(ExistenceClientStateProgress);\u003cbr\u003e\npublic:\u003cbr\u003e\nExistenceClientStateProgress(Urho3D::Context * context);\u003cbr\u003e\nvirtual ~ExistenceClientStateProgress();\u003cbr\u003e\nvirtual void Enter();\u003cbr\u003e\nvirtual void Exit();\u003cbr\u003e\nvirtual void OnUpdate(Urho3D::StringHash eventType, Urho3D::VariantMap\u0026amp; eventData );\u003cbr\u003e\nprivate:\u003cbr\u003e\nvoid Progress(void);\u003cbr\u003e\nvoid ProgressScreenUI(void);\u003cbr\u003e\nvoid ProgressScreenUIHandleClosePressed(StringHash eventType, VariantMap\u0026amp; eventData);\u003cbr\u003e\nvoid CreateCharacter(void);\u003cbr\u003e\nvoid GenerateScene(terrain_rule terrainrule,const char *differentialfilename);\u003cbr\u003e\nint GenerateSceneBuildWorld(terrain_rule terrainrule);\u003cbr\u003e\nvoid loadDummyScene(void);\u003cbr\u003e\nvoid loadScene(const int mode, const char * lineinput);\u003cbr\u003e\nprotected:\u003c/p\u003e\n\u003cp\u003e};\u003c/p\u003e\n\u003cp\u003e/// Miscellanous functions\u003cbr\u003e\nvector split(const string\u0026amp; s, const string\u0026amp; delim, const bool keep_empty=true);\u003cbr\u003e\ntime_t ConvertStringToTime(const char * buff, time_t timeseed);\u003cbr\u003e\nstring GenerateName(char group, char subgroup);\u003c/p\u003e\n\u003cp\u003estring ConvertUIntToString(unsigned int val);\u003cbr\u003e\nfloat cutoff(float inputvalue, float pointmid, float range,bool debug);\u003cbr\u003e\nfloat StringToFloat(string buffer);\u003cbr\u003e\nVector3 NormalizedToWorld(Image *height, Terrain *terrain, Vector2 normalized);\u003cbr\u003e\ntypedef std::pair\u0026lt;float,float\u0026gt; range ;\u003cbr\u003e\nbool intersects( range a, range b );\u003cbr\u003e\nrange make_range( float a, float b );\u003c/p\u003e\n\u003cp\u003e#endif\u003cbr\u003e\n[/code]\u003c/p\u003e","post_number":7,"post_type":1,"updated_at":"2017-01-02T01:05:26.199Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":0,"reads":20,"readers_count":19,"score":4.0,"yours":false,"topic_id":1091,"topic_slug":"basic-game-state-implementation-help","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":88,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":6509,"name":"","username":"vivienneanthony","avatar_template":"/user_avatar/discourse.urho3d.io/vivienneanthony/{size}/942_2.png","created_at":"2015-06-21T15:06:43.000Z","cooked":"\u003cp\u003eHi\u003c/p\u003e\n\u003cp\u003eI ran into a hiccup and need help. The game state changer works fine but some reading the game mode load part doesn’. The status text does not update but if youlook at the picture with the window it actually runs.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"http://imgur.com/a/K9F9q\" rel=\"nofollow noopener\"\u003eimgur.com/a/K9F9q\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eI can’t figure it out after throwing a massive amount of debug messages and looking at the call stack. So, I uploaded the code to Github including resources needed mentioned in the blog.\u003c/p\u003e\n\u003cp\u003eAs to the status, its pretty much a running standalone, I did not add scene save(any changes) or save user changes etc. Waiting to make a playable game with purpose.\u003c/p\u003e\n\u003cp\u003eAs to everything, if anyone wants to help me develop it while I can focus back on the procedural expect. I welcome any additional developer and hopefully present Urho3D and provide a gaming experience. Aka. A game for now.\u003c/p\u003e\n\u003cp\u003eSome areas I can see is more in depth, character display, ghost mode save and load, NPC(with varied AI), content like some starbases and ground map, object interaction, inventory attachment systems, vehicles, armor, guns etc and above all exploration objections with a bunch of surprise.\u003c/p\u003e\n\u003cp\u003eThis is my call out to develop it full speed. My email is \u003ca href=\"mailto:cgprojectsfx@gmail.com\"\u003ecgprojectsfx@gmail.com\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eVivienne Anthony\u003c/p\u003e","post_number":8,"post_type":1,"updated_at":"2017-01-02T01:05:37.255Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":0,"reads":13,"readers_count":12,"score":2.6,"yours":false,"topic_id":1091,"topic_slug":"basic-game-state-implementation-help","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"link_counts":[{"url":"http://imgur.com/a/K9F9q","internal":false,"reflection":false,"title":"hmmmmm - Album on Imgur","clicks":4}],"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":88,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false}],"stream":[6332,6333,6334,6340,6341,6346,6361,6509]},"timeline_lookup":[[1,2735],[2,2734],[4,2733],[7,2730],[8,2712]],"suggested_topics":[{"id":7160,"title":"RayCast trouble","fancy_title":"RayCast trouble","slug":"raycast-trouble","posts_count":17,"reply_count":9,"highest_post_number":19,"image_url":null,"created_at":"2022-01-29T00:06:00.367Z","last_posted_at":"2022-01-30T00:29:39.356Z","bumped":true,"bumped_at":"2022-01-30T00:29:39.356Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":3,"views":260,"category_id":10,"featured_link":null,"has_accepted_answer":true,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster, Accepted Answer","user":{"id":861,"username":"GodMan","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/g/e79b87/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":627,"username":"George1","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/g/9e8a1a/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":628,"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":1038,"username":"dertom","name":"Thomas Trocha","avatar_template":"/user_avatar/discourse.urho3d.io/dertom/{size}/1815_2.png"}}]},{"id":7097,"title":"View Physics event for ConvexCast","fancy_title":"View Physics event for ConvexCast","slug":"view-physics-event-for-convexcast","posts_count":11,"reply_count":5,"highest_post_number":11,"image_url":null,"created_at":"2021-12-09T23:56:27.507Z","last_posted_at":"2021-12-12T20:20:02.788Z","bumped":true,"bumped_at":"2021-12-12T20:20:02.788Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":6,"views":206,"category_id":10,"featured_link":null,"has_accepted_answer":true,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":861,"username":"GodMan","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/g/e79b87/{size}.png"}},{"extras":null,"description":"Frequent Poster, Accepted Answer","user":{"id":192,"username":"Modanung","name":"魔大农 𝞍𝞎𝝳 現招蜍","avatar_template":"/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":628,"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}}]},{"id":7107,"title":"Error: SDL/SDL_gamecontroller.h: No such file or directory #include \u003cSDL/SDL_gamecontroller.h\u003e","fancy_title":"Error: SDL/SDL_gamecontroller.h: No such file or directory #include \u0026lt;SDL/SDL_gamecontroller.h\u0026gt;","slug":"error-sdl-sdl-gamecontroller-h-no-such-file-or-directory-include-sdl-sdl-gamecontroller-h","posts_count":6,"reply_count":1,"highest_post_number":6,"image_url":null,"created_at":"2021-12-21T15:29:52.810Z","last_posted_at":"2021-12-22T15:32:44.818Z","bumped":true,"bumped_at":"2021-12-22T15:32:44.818Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":3,"views":271,"category_id":10,"featured_link":null,"has_accepted_answer":true,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":1497,"username":"timob256","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/t/b782af/{size}.png"}},{"extras":null,"description":"Frequent Poster, Accepted Answer","user":{"id":628,"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}}]},{"id":7074,"title":"First Person and 3rd person camera and water reflections","fancy_title":"First Person and 3rd person camera and water reflections","slug":"first-person-and-3rd-person-camera-and-water-reflections","posts_count":4,"reply_count":1,"highest_post_number":4,"image_url":null,"created_at":"2021-12-01T18:37:28.669Z","last_posted_at":"2021-12-01T21:19:51.519Z","bumped":true,"bumped_at":"2021-12-01T21:19:51.519Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":1,"views":158,"category_id":10,"featured_link":null,"has_accepted_answer":true,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster, Accepted Answer","user":{"id":861,"username":"GodMan","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/g/e79b87/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":484,"username":"Eugene","name":"Eugene Kozlov","avatar_template":"/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png"}}]},{"id":7178,"title":"Medium-Quality Technique for Semi-Reflective/Specular Glass in Urho","fancy_title":"Medium-Quality Technique for Semi-Reflective/Specular Glass in Urho","slug":"medium-quality-technique-for-semi-reflective-specular-glass-in-urho","posts_count":3,"reply_count":0,"highest_post_number":3,"image_url":"https://global.discourse-cdn.com/standard17/uploads/urho3d/original/2X/5/51408fe152ba02eb8b92237cc9a9411c8ee922e6.jpeg","created_at":"2022-01-31T22:57:50.134Z","last_posted_at":"2022-02-01T04:32:37.418Z","bumped":true,"bumped_at":"2022-02-01T04:32:37.418Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":1,"views":154,"category_id":10,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":1334,"username":"najak3d","name":"Brian Knox","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/n/6a8cbe/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":1317,"username":"Lys0gen","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/l/57b2e6/{size}.png"}}]}],"tags_descriptions":{},"id":1091,"title":"Basic Game State Implementation Help","fancy_title":"Basic Game State Implementation Help","posts_count":8,"created_at":"2015-05-29T17:01:33.000Z","views":834,"reply_count":0,"like_count":0,"last_posted_at":"2015-06-21T15:06:43.000Z","visible":true,"closed":false,"archived":false,"has_summary":false,"archetype":"regular","slug":"basic-game-state-implementation-help","category_id":10,"word_count":3412,"deleted_at":null,"user_id":88,"featured_link":null,"pinned_globally":false,"pinned_at":null,"pinned_until":null,"image_url":null,"slow_mode_seconds":0,"draft":null,"draft_key":"topic_1091","draft_sequence":null,"unpinned":null,"pinned":false,"current_post_number":1,"highest_post_number":8,"deleted_by":null,"actions_summary":[{"id":4,"count":0,"hidden":false,"can_act":false},{"id":8,"count":0,"hidden":false,"can_act":false},{"id":7,"count":0,"hidden":false,"can_act":false}],"chunk_size":20,"bookmarked":false,"bookmarks":[],"topic_timer":null,"message_bus_last_id":0,"participant_count":1,"show_read_indicator":false,"thumbnails":null,"slow_mode_enabled_until":null,"tags_disable_ads":false,"details":{"can_edit":false,"notification_level":1,"participants":[{"id":88,"username":"vivienneanthony","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/vivienneanthony/{size}/942_2.png","post_count":8,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"trust_level":2}],"created_by":{"id":88,"username":"vivienneanthony","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/vivienneanthony/{size}/942_2.png"},"last_poster":{"id":88,"username":"vivienneanthony","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/vivienneanthony/{size}/942_2.png"},"links":[{"url":"https://github.com/vivienneanthony/Urho3D-Mastercurrent-Existence","title":"GitHub - vivienneanthony/Urho3D-Mastercurrent-Existence","internal":false,"attachment":false,"reflection":false,"clicks":4,"user_id":88,"domain":"github.com","root_domain":"github.com"},{"url":"http://imgur.com/a/K9F9q","title":"hmmmmm - Album on Imgur","internal":false,"attachment":false,"reflection":false,"clicks":4,"user_id":88,"domain":"imgur.com","root_domain":"imgur.com"},{"url":"https://github.com/vivienneanthony/Urho3D-Mastercurrent-Existence/blob/development/Source/ExistenceApps/ExistenceClient/GameStateComponent.cpp","title":null,"internal":false,"attachment":false,"reflection":false,"clicks":3,"user_id":88,"domain":"github.com","root_domain":"github.com"},{"url":"http://imgur.com/h3bOglh,Ag4sVr2","title":"Imgur: The most awesome images on the Internet","internal":false,"attachment":false,"reflection":false,"clicks":2,"user_id":88,"domain":"imgur.com","root_domain":"imgur.com"},{"url":"https://github.com/vivienneanthony/Urho3D-Mastercurrent-Existence/tree/development/Source/ExistenceApps/ExistenceClient","title":"Urho3D-Mastercurrent-Existence/Source/ExistenceApps/ExistenceClient at development · vivienneanthony/Urho3D-Mastercurrent-Existence · GitHub","internal":false,"attachment":false,"reflection":false,"clicks":2,"user_id":88,"domain":"github.com","root_domain":"github.com"},{"url":"https://github.com/vivienneanthony/Urho3D-Mastercurrent-Existence/blob/development/Source/ExistenceApps/ExistenceClient/ExistenceClient.h","title":"Urho3D-Mastercurrent-Existence/ExistenceClient.h at development · vivienneanthony/Urho3D-Mastercurrent-Existence · GitHub","internal":false,"attachment":false,"reflection":false,"clicks":1,"user_id":88,"domain":"github.com","root_domain":"github.com"},{"url":"https://github.com/vivienneanthony/Urho3D-Mastercurrent-Existence/blob/development/Source/ExistenceApps/ExistenceClient/GameStateHandler.h","title":null,"internal":false,"attachment":false,"reflection":false,"clicks":1,"user_id":88,"domain":"github.com","root_domain":"github.com"}]}}