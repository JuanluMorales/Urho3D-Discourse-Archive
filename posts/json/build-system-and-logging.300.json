{"post_stream":{"posts":[{"id":1625,"name":"","username":"NemesisFS","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/n/d2c977/{size}.png","created_at":"2014-06-12T18:10:10.000Z","cooked":"\u003cp\u003eHi,\u003c/p\u003e\n\u003cp\u003eafter a while I picked my project up again and so far have made some progress with this awesome eninge!\u003cbr\u003e\nDoing so  I have encountered a few things that are bothering me.\u003cbr\u003e\nThe build system is still not very consistend with the cmake conventions which has resulted in some trouble for my project:\u003cbr\u003e\nI want to use a CMakeLists.txt in my project-root but when I do this the executable is always put out to $CMAKE_SOURCE_DIR/…/Bin. I havent found a way to work around this, I guess its comes beacuse the Urho3D CMakeLists.txt resides in its Source Folder instead of the project root. Also quite confusing is the use of the macrof for setup_main_executable as those seem to do quite a lot of stuff which should be done by the using project itself like setting the exe type, modifying the includes\u0026amp;libraries etc. I`d much prefer a solution where the FindUrho3D.cmake sets the variables needed for setting up the executable (Urho3D_INCLUDE_DIRS and Urho3D_LIBRARIES, see \u003ca href=\"http://www.cmake.org/Wiki/CMake:How_To_Find_Libraries#Writing_find_modules\" data-bbcode=\"true\" rel=\"nofollow noopener\"\u003ehttp://www.cmake.org/Wiki/CMake:How_To_Find_Libraries#Writing_find_modules\u003c/a\u003e and \u003ca href=\"http://www.cmake.org/Wiki/CMake/Tutorials/How_to_create_a_ProjectConfig.cmake_file\" data-bbcode=\"true\" rel=\"nofollow noopener\"\u003ehttp://www.cmake.org/Wiki/CMake/Tutorials/How_to_create_a_ProjectConfig.cmake_file\u003c/a\u003e) and leaving that work to the project developer.\u003c/p\u003e\n\u003cp\u003eRegarding the logging I find it strange that, if you use Urho3D as a library you cant change the loglevel that was set when compiling and also the convenience macros like LOG_DEBUG wont work as they are disabled during compile time.\u003c/p\u003e\n\u003cp\u003eGreetings,\u003cbr\u003e\nNemesisFS\u003c/p\u003e","post_number":1,"post_type":1,"updated_at":"2017-01-02T00:59:29.625Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":69,"reads":17,"readers_count":16,"score":348.4,"yours":false,"topic_id":300,"topic_slug":"build-system-and-logging","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"link_counts":[{"url":"http://www.cmake.org/Wiki/CMake:How_To_Find_Libraries#Writing_find_modules","internal":false,"reflection":false,"title":"CMake:How To Find Libraries - KitwarePublic","clicks":2},{"url":"http://www.cmake.org/Wiki/CMake/Tutorials/How_to_create_a_ProjectConfig.cmake_file","internal":false,"reflection":false,"title":"CMake/Tutorials/How to create a ProjectConfig.cmake file - KitwarePublic","clicks":0}],"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":19,"hidden":false,"trust_level":1,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":1627,"name":"Yao Wei Tjong","username":"weitjong","avatar_template":"/user_avatar/discourse.urho3d.io/weitjong/{size}/4_2.png","created_at":"2014-06-13T07:38:02.000Z","cooked":"\u003cp\u003eAs the main maintainer of the build scripts, this is getting old to me. I think I have explained the rationale why we moved the CMakeLists.txt from root to the Source directory in the previous discussion threads. I have also explained why we need to make certain assumption on our project structure so we can write concise and reusable macros for all our targets in our project in a cross-platform manner.\u003c/p\u003e\n\u003cp\u003eIf you just want to use Urho3D as an external library in your own project then you don’t have to use our macros, if you think it does too many things than what you need. You don’t have to use Urho3D-CMake-common module even for that matter, if you want the full control on how to setup your own project.\u003c/p\u003e\n\u003cp\u003eBack to your issues.\u003cbr\u003e\n[ol]\u003cbr\u003e\n[li] The location of runtime output directory is set in line 332 of Urho3D-CMake-common module.\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eset_output_directories (${PROJECT_ROOT_DIR}/${PLATFORM_PREFIX}Bin RUNTIME PDB)\u003c/code\u003eYou can modify this location as you see fit, however, you will be on your own to make the build scripts work for all the Urho3D supported platforms afterward. There are other build scripts down the road that expect/assume the location of the output directory as per originally designed, so you may have to change those scripts as well.\u003c/p\u003e\n\u003cp\u003e[/li]\u003cbr\u003e\n[li] The setup_main_executable macro doing too many things. This is a rather strange complain. It is just a macro. The things that it does need to be carried out one way or another for each target. Without the macro(s), we will have to repeat the similar commands all over the places for each of our internal target. Besides, with the macros, we only need to change one place for any bug fixes or enhancement. Again, you don’t have to use it. You can always just use the original commands provided by the CMake to setup your target, if that works best for you.\u003c/p\u003e\n\u003cp\u003e[/li]\u003cbr\u003e\n[li] I agree our scripts do not follow the convention out there. As you may already know we don’t force our user to install Urho3D library into a local filesystem in order to use it as external library. Or otherwise we could shorten the FindUrho3D module size by half. We could remove away those cross platform logic too to make it 100% conformant with the CMake’s Wiki. The question is, why we want to do that?\u003c/p\u003e\n\u003cp\u003eIt reminds me of a story about a farmer, and his son, and a donkey. We cannot keep everyone happy. Having said that, if you think you can do it better then you can submit your changes as pull request.[/li][/ol]\u003cbr\u003e\nI have no comment on the logging issue as I failed to reproduce the problem. I am able to call logging macros in my test external project. Ensure your project has defined the “URHO3D_LOGGING” compiler definition. I can change the logging level in runtime also as per documentation.\u003c/p\u003e","post_number":2,"post_type":1,"updated_at":"2017-01-02T00:59:29.750Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":0,"reads":17,"readers_count":16,"score":3.4,"yours":false,"topic_id":300,"topic_slug":"build-system-and-logging","display_username":"Yao Wei Tjong","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":"Admin","title_is_group":false,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":true,"staff":true,"user_id":4,"hidden":false,"trust_level":4,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":1656,"name":"","username":"NemesisFS","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/n/d2c977/{size}.png","created_at":"2014-06-17T19:10:08.000Z","cooked":"\u003cp\u003eThanks for your reply.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eI didnt find the location to change the output, I will use that now. Would it be possible to use the  EXECUTABLE_OUTPUT_PATH variable in that location instead (and maybe also the references) or does something speak against this?\u003c/li\u003e\n\u003cli\u003eCould you tell me where the FindUrho3D.cmake saves the include dirs needed for compiling against Urho3D? The libraries are set in URHO3D_LIBRARIES but I cannot find the includes…\u003c/li\u003e\n\u003cli\u003eIt looks like I lack knowledge of the build process of urho. From an uninformed standpoint it just looks unnecessary as cmake is designed to support cross platform builds. When I undestand the build process better I hope my confusion cleared up or im able to supply patches so that I can help instead of only criticising.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eAlso you were right about the logging problem that solved itself for now, I set some variables wrong.\u003c/p\u003e","post_number":3,"post_type":1,"updated_at":"2017-01-02T00:59:31.892Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":0,"reads":15,"readers_count":14,"score":3.0,"yours":false,"topic_id":300,"topic_slug":"build-system-and-logging","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":19,"hidden":false,"trust_level":1,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":1677,"name":"Yao Wei Tjong","username":"weitjong","avatar_template":"/user_avatar/discourse.urho3d.io/weitjong/{size}/4_2.png","created_at":"2014-06-20T06:31:22.000Z","cooked":"\u003cp\u003e[ol]\u003cbr\u003e\n[li] You can find the references easily using git grep command.\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$ git grep '${PROJECT_ROOT_DIR}'\nDocs/CMakeLists.txt:            COMMAND ${PROJECT_ROOT_DIR}/Bin/ScriptCompiler -dumpapi ScriptAPI.dox AngelScriptAPI.h\nDocs/CMakeLists.txt:        file (GLOB PKGS RELATIVE ${PROJECT_ROOT_DIR}/Source/Engine/LuaScript/pkgs ${PROJECT_ROOT_DIR}/Source/Engine/LuaScript/pkgs/*.pkg)\nDocs/CMakeLists.txt:        file (WRITE ${PROJECT_ROOT_DIR}/Bin/LuaPkgToDox.txt ${PKGLIST})\nDocs/CMakeLists.txt:            COMMAND ${PROJECT_ROOT_DIR}/Bin/tolua++ -L ToDoxHook.lua -P -o ${CMAKE_CURRENT_SOURCE_DIR}/LuaScriptAPI.dox ${PROJECT_ROOT_DIR}/Bin/LuaPkgToDox.tx\nDocs/CMakeLists.txt:            WORKING_DIRECTORY ${PROJECT_ROOT_DIR}/Source/Engine/LuaScript/pkgs\nSource/CMake/Modules/FindUrho3D.cmake:    set (URHO3D_HOME ${PROJECT_ROOT_DIR} CACHE PATH \"Path to Urho3D project root tree\" FORCE)\nSource/CMake/Modules/Urho3D-CMake-common.cmake:set_output_directories (${PROJECT_ROOT_DIR}/${PLATFORM_PREFIX}Bin RUNTIME PDB)\nSource/CMake/Modules/Urho3D-CMake-common.cmake:        list (APPEND SOURCE_FILES ${PROJECT_ROOT_DIR}/Source/ThirdParty/SDL/src/main/android/SDL_android_main.c)\nSource/CMake/Modules/Urho3D-CMake-common.cmake:        set (RESOURCE_FILES ${PROJECT_ROOT_DIR}/Bin/CoreData ${PROJECT_ROOT_DIR}/Bin/Data)\nSource/CMakeLists.txt:file (GLOB APP_SCRIPTS ${PROJECT_ROOT_DIR}/Bin/${SCRIPT_PATTERN})\nSource/CMakeLists.txt:install (DIRECTORY ${PROJECT_ROOT_DIR}/Bin/CoreData ${PROJECT_ROOT_DIR}/Bin/Data DESTINATION ${DEST_RUNTIME_DIR} ${DEST_PERMISSIONS})\nSource/CMakeLists.txt:install (DIRECTORY ${PROJECT_ROOT_DIR}/Source/CMake/ DESTINATION ${DEST_SHARE_DIR}/CMake ${DEST_PERMISSIONS})    # Note: the trailing slash is significant\nSource/CMakeLists.txt:file (GLOB CMAKE_SCRIPTS ${PROJECT_ROOT_DIR}/${SCRIPT_PATTERN})\nSource/CMakeLists.txt:set (CPACK_RESOURCE_FILE_LICENSE ${PROJECT_ROOT_DIR}/License.txt)\nSource/Engine/CMakeLists.txt:    set (OUTPUT_PATH ${PROJECT_ROOT_DIR}/${PLATFORM_PREFIX}Lib)     # ${PLATFORM_PREFIX} is empty for native build\nSource/Engine/LuaScript/CMakeLists.txt:    execute_process (COMMAND ${PROJECT_ROOT_DIR}/Bin/tolua++ -v RESULT_VARIABLE TOLUA_EXIT_CODE OUTPUT_QUIET ERROR_QUIET)\nSource/Engine/LuaScript/CMakeLists.txt:        COMMAND ${PROJECT_ROOT_DIR}/Bin/tolua++ -L ToCppHook.lua -o ${CMAKE_CURRENT_BINARY_DIR}/${GEN_CPP_FILE} ${NAME}\nSource/ThirdParty/LuaJIT/CMakeLists.txt:    execute_process (COMMAND ${PROJECT_ROOT_DIR}/Bin/${BUILDVM_X} RESULT_VARIABLE BUILDVM_EXIT_CODE OUTPUT_QUIET ERROR_QUIET)\nSource/ThirdParty/LuaJIT/CMakeLists.txt:        file (WRITE ${PROJECT_ROOT_DIR}/Bin/${BUILDVM_X}-arch.txt ${TARGET_TESTARCH})\nSource/ThirdParty/LuaJIT/CMakeLists.txt:    file (GLOB VARIANT_ARCHS ${PROJECT_ROOT_DIR}/Bin/buildvm-*-arch.txt)\nSource/ThirdParty/LuaJIT/CMakeLists.txt:        COMMAND ${PROJECT_ROOT_DIR}/Bin/${BUILDVM_X} -m ${mode} -o ${GEN_SRC} ${ARGN}\nSource/ThirdParty/LuaJIT/CMakeLists.txt:    set (LUAJIT_DEP_DIR ${PROJECT_ROOT_DIR}/Bin/Data/LuaScripts/jit)\nSource/ThirdParty/LuaJIT/CMakeLists.txt-buildvm.in:    COMMAND ${PROJECT_ROOT_DIR}/Bin/minilua ${DASM} ${DASM_FLAGS} -o ${GEN_ARCH_H} ${DASM_DASC}\nSource/ThirdParty/LuaJIT/DetectTargetArchitecture.cmake:            \"To recover from this error, remove this file (generated by Android build script when LuaJIT is enabled) in ${\n(END)\u003c/code\u003eAs you can see there are only two occurrences of ‘${PROJECT_ROOT_DIR}/${PLATFORM_PREFIX}’. One for the Bin and one for the Lib. Once set, CMake is smart enough to handle the rest. In my last post, I was more worry about the scripts which referencing the tools. The tools are usually built natively even though we are cross-compiling to target a different platform. So they are always expected to be found in ‘${PROJECT_ROOT_DIR}/Bin’ directory regardless of the platform. Thus you need to adjust the tool location accordingly for those scripts if you change the RUNTIME output location. Using a single variable EXECUTABLE_OUTPUT_PATH may not work when your platform-specific output directory is different than the native output directory.\u003c/p\u003e\n\u003cp\u003e[/li]\u003cbr\u003e\n[li] Using git grep again. I think it is clear in which variable it is saved. \u003ccode\u003e$ git grep INCLUDE Source/CMake/Modules/FindUrho3D.cmake\nSource/CMake/Modules/FindUrho3D.cmake:#  URHO3D_INCLUDE_DIRS\nSource/CMake/Modules/FindUrho3D.cmake:        set (URHO3D_INCLUDE_DIRS ${URHO3D_SOURCE_TREE})\nSource/CMake/Modules/FindUrho3D.cmake:            list (APPEND URHO3D_INCLUDE_DIRS ${URHO3D_SOURCE_TREE}/${DIR})     # Note: variable change to list context after this\nSource/CMake/Modules/FindUrho3D.cmake:            list (APPEND URHO3D_INCLUDE_DIRS ${URHO3D_HOME}/Source/ThirdParty/${DIR})\nSource/CMake/Modules/FindUrho3D.cmake:        list (APPEND URHO3D_INCLUDE_DIRS ${BINARY_DIR}/Engine)\nSource/CMake/Modules/FindUrho3D.cmake:    find_path (URHO3D_INCLUDE_DIRS Urho3D.h PATHS ${URHO3D_INC_SEARCH_PATH} PATH_SUFFIXES ${PATH_SUFFIX})\nSource/CMake/Modules/FindUrho3D.cmake:    if (URHO3D_INCLUDE_DIRS)\nSource/CMake/Modules/FindUrho3D.cmake:        set (BASE_DIR ${URHO3D_INCLUDE_DIRS})\nSource/CMake/Modules/FindUrho3D.cmake:            list (APPEND URHO3D_INCLUDE_DIRS ${BASE_DIR}/${DIR})     # Note: variable change to list context after this, so we need BASE_DIR\nSource/CMake/Modules/FindUrho3D.cmake:if (URHO3D_INCLUDE_DIRS AND URHO3D_LIBRARIES)\nSource/CMake/Modules/FindUrho3D.cmake:    FIND_PACKAGE_MESSAGE (Urho3D ${FOUND_MESSAGE} \"[${URHO3D_LIBRARIES}][${URHO3D_INCLUDE_DIRS}]\")\nSource/CMake/Modules/FindUrho3D.cmake:mark_as_advanced (URHO3D_INCLUDE_DIRS URHO3D_LIBRARIES URHO3D_SOURCE_TREE)\n(END)\n\u003c/code\u003e Remember this module works in two modes (Urho3D build tree detection mode or Urho3D SDK installation mode). The first part of the grep result shows how the include directory is appended using URHO3D_HOME build tree. The second part shows how it is obtained using CMake’s find_path command to find the installed Urho3D SDK in a filesystem. You may want to check how the build scripts perform the install operation for the include directory in order to see the full picture.[/li][/ol]\u003c/p\u003e","post_number":4,"post_type":1,"updated_at":"2017-01-02T00:59:33.367Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":0,"reads":15,"readers_count":14,"score":3.0,"yours":false,"topic_id":300,"topic_slug":"build-system-and-logging","display_username":"Yao Wei Tjong","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":"Admin","title_is_group":false,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":true,"staff":true,"user_id":4,"hidden":false,"trust_level":4,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false}],"stream":[1625,1627,1656,1677]},"timeline_lookup":[[1,3085],[3,3080],[4,3078]],"suggested_topics":[{"id":7304,"title":"Urho3D is crashing on Android 12","fancy_title":"Urho3D is crashing on Android 12","slug":"urho3d-is-crashing-on-android-12","posts_count":1,"reply_count":0,"highest_post_number":1,"image_url":null,"created_at":"2022-07-28T10:03:51.280Z","last_posted_at":"2022-07-28T10:03:51.349Z","bumped":true,"bumped_at":"2022-07-28T10:38:06.014Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":1,"views":126,"category_id":9,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest single","description":"Original Poster, Most Recent Poster","user":{"id":809,"username":"elix22","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/elix22/{size}/1437_2.png"}}]},{"id":7344,"title":"Do we give up supporting dx11？","fancy_title":"Do we give up supporting dx11？","slug":"do-we-give-up-supporting-dx11","posts_count":3,"reply_count":1,"highest_post_number":3,"image_url":null,"created_at":"2022-11-03T09:37:37.893Z","last_posted_at":"2022-11-03T13:09:15.153Z","bumped":true,"bumped_at":"2022-11-03T15:28:58.128Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":0,"views":78,"category_id":9,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":1510,"username":"SoNewBee","name":"So New Bee","avatar_template":"/user_avatar/discourse.urho3d.io/sonewbee/{size}/3755_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":263,"username":"1vanK","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/1vank/{size}/768_2.png"}}]},{"id":7347,"title":"How does Urho handle script objects each frame?","fancy_title":"How does Urho handle script objects each frame?","slug":"how-does-urho-handle-script-objects-each-frame","posts_count":3,"reply_count":1,"highest_post_number":3,"image_url":null,"created_at":"2022-11-08T02:33:56.461Z","last_posted_at":"2022-11-08T14:46:09.857Z","bumped":true,"bumped_at":"2022-11-08T14:46:09.857Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":0,"views":64,"category_id":9,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":1292,"username":"evolgames","name":"evol","avatar_template":"/user_avatar/discourse.urho3d.io/evolgames/{size}/3169_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":628,"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}}]},{"id":7281,"title":"Cannot launch + Converting .fbx to .ani","fancy_title":"Cannot launch + Converting .fbx to .ani","slug":"cannot-launch-converting-fbx-to-ani","posts_count":14,"reply_count":10,"highest_post_number":14,"image_url":null,"created_at":"2022-06-17T04:59:42.992Z","last_posted_at":"2022-06-20T16:21:59.555Z","bumped":true,"bumped_at":"2022-06-20T16:21:59.555Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":3,"views":258,"category_id":10,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":null,"description":"Original Poster","user":{"id":1526,"username":"NoobBeggar","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/n/e68b1a/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":631,"username":"JTippetts1","name":"J Tippetts","avatar_template":"/user_avatar/discourse.urho3d.io/jtippetts1/{size}/96_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":263,"username":"1vanK","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/1vank/{size}/768_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":484,"username":"Eugene","name":"Eugene Kozlov","avatar_template":"/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png"}},{"extras":"latest","description":"Most Recent Poster","user":{"id":628,"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}}]},{"id":7178,"title":"Medium-Quality Technique for Semi-Reflective/Specular Glass in Urho","fancy_title":"Medium-Quality Technique for Semi-Reflective/Specular Glass in Urho","slug":"medium-quality-technique-for-semi-reflective-specular-glass-in-urho","posts_count":3,"reply_count":0,"highest_post_number":3,"image_url":"https://global.discourse-cdn.com/standard17/uploads/urho3d/original/2X/5/51408fe152ba02eb8b92237cc9a9411c8ee922e6.jpeg","created_at":"2022-01-31T22:57:50.134Z","last_posted_at":"2022-02-01T04:32:37.418Z","bumped":true,"bumped_at":"2022-02-01T04:32:37.418Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":1,"views":154,"category_id":10,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":1334,"username":"najak3d","name":"Brian Knox","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/n/6a8cbe/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":1317,"username":"Lys0gen","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/l/57b2e6/{size}.png"}}]}],"tags_descriptions":{},"id":300,"title":"Build System and logging","fancy_title":"Build System and logging","posts_count":4,"created_at":"2014-06-12T18:10:10.000Z","views":577,"reply_count":0,"like_count":0,"last_posted_at":"2014-06-20T06:31:22.000Z","visible":true,"closed":false,"archived":false,"has_summary":false,"archetype":"regular","slug":"build-system-and-logging","category_id":9,"word_count":1613,"deleted_at":null,"user_id":19,"featured_link":null,"pinned_globally":false,"pinned_at":null,"pinned_until":null,"image_url":null,"slow_mode_seconds":0,"draft":null,"draft_key":"topic_300","draft_sequence":null,"unpinned":null,"pinned":false,"current_post_number":1,"highest_post_number":4,"deleted_by":null,"actions_summary":[{"id":4,"count":0,"hidden":false,"can_act":false},{"id":8,"count":0,"hidden":false,"can_act":false},{"id":7,"count":0,"hidden":false,"can_act":false}],"chunk_size":20,"bookmarked":false,"bookmarks":[],"topic_timer":null,"message_bus_last_id":0,"participant_count":2,"show_read_indicator":false,"thumbnails":null,"slow_mode_enabled_until":null,"tags_disable_ads":false,"details":{"can_edit":false,"notification_level":1,"participants":[{"id":4,"username":"weitjong","name":"Yao Wei Tjong","avatar_template":"/user_avatar/discourse.urho3d.io/weitjong/{size}/4_2.png","post_count":2,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"admin":true,"trust_level":4},{"id":19,"username":"NemesisFS","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/n/d2c977/{size}.png","post_count":2,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"trust_level":1}],"created_by":{"id":19,"username":"NemesisFS","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/n/d2c977/{size}.png"},"last_poster":{"id":4,"username":"weitjong","name":"Yao Wei Tjong","avatar_template":"/user_avatar/discourse.urho3d.io/weitjong/{size}/4_2.png"},"links":[{"url":"http://www.cmake.org/Wiki/CMake:How_To_Find_Libraries#Writing_find_modules","title":"CMake:How To Find Libraries - KitwarePublic","internal":false,"attachment":false,"reflection":false,"clicks":2,"user_id":19,"domain":"www.cmake.org","root_domain":"cmake.org"}]}}