{"post_stream": {"posts": [{"id": 20312, "name": "Eugene Kozlov", "username": "Eugene", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png", "created_at": "2017-08-23T21:58:51.228Z", "cooked": "<p>Here is semi-major attribute refactoring.<br>\nI would be happy if someone review code and/or test changes before I push it.<br>\n<a href=\"https://github.com/urho3d/Urho3D/pull/2091\" class=\"onebox\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/urho3d/Urho3D/pull/2091</a></p>\n<ol>\n<li>Arbitrary attribute metadata was added.</li>\n</ol>\n<p>Attribute metadata is per-attribute <code>VariantMap</code> with custom values.<br>\nThe only way to set metadata is to call <code>SetMetadata</code> on <code>URHO3D_ATTRIBUTE</code>-like macros. <code>SetMetadata</code> calls may be chained.</p>\n<p>Metadata may be acquired via <code>AttributeInfo::GetMetadata</code> or <code>AttributeInfo::GetMetadata&lt;T&gt;</code>. It is also exposed to Angel Script.</p>\n<ol start=\"2\">\n<li>Offset-based attributes were removed due to unsafety.</li>\n</ol>\n<p><code>URHO3D_ATTRIBUTE</code> and <code>URHO3D_ENUM_ATTRIBUTE</code> are aliased to accesor attributes now. So, offset can\u2019t be used to identify attribute anymore. Use attribute name or metadata. See <code>Constraint</code> for example.</p>\n<p>Attribute type hacking will get broken. If you lied with attribute type, code won\u2019t compile. E.g. <code>Light::CascadeParameters::splits_</code> were <code>float[4]</code> and serialized like <code>Vector4</code>. Don\u2019t lie to your compiler anymore.</p>\n<ol start=\"3\">\n<li>Vector structure elements and corresponding defines were removed, <a class=\"mention\" href=\"/u/konstanttom\">@KonstantTom</a>.</li>\n</ol>\n<p>Use metadata variable <code>AttributeMetadata::P_VECTOR_STRUCT_ELEMENTS</code> instead. It shall be initialized with <code>StringVector</code> instead of <code>const char*[]</code>, no trailing zero is needed.</p>", "post_number": 1, "post_type": 1, "updated_at": "2017-08-23T21:59:28.258Z", "reply_count": 1, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 57, "reads": 68, "readers_count": 67, "score": 348.6, "yours": false, "topic_id": 3482, "topic_slug": "attribute-refactoring", "display_username": "Eugene Kozlov", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "https://github.com/urho3d/Urho3D/pull/2091", "internal": false, "reflection": false, "title": "Attribute refactoring by eugeneko \u00b7 Pull Request #2091 \u00b7 urho3d/Urho3D \u00b7 GitHub", "clicks": 35}, {"url": "http://discourse.urho3d.io/t/stepping-down-from-urho-lead-dev-role/3478/51", "internal": true, "reflection": true, "title": "Stepping down from Urho lead dev role", "clicks": 1}], "read": true, "user_title": "Core developer", "title_is_group": false, "bookmarked": false, "actions_summary": [{"id": 2, "count": 1}], "moderator": false, "admin": false, "staff": false, "user_id": 484, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 20317, "name": "Yushli", "username": "yushli1", "avatar_template": "/user_avatar/discourse.urho3d.io/yushli1/{size}/1163_2.png", "created_at": "2017-08-24T02:03:06.564Z", "cooked": "<p>Can you compare the performance difference between these changes, especially the retiring the offset part.</p>", "post_number": 2, "post_type": 1, "updated_at": "2017-08-24T02:03:06.564Z", "reply_count": 1, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 55, "readers_count": 54, "score": 16.0, "yours": false, "topic_id": 3482, "topic_slug": "attribute-refactoring", "display_username": "Yushli", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 622, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 20318, "name": "Konstantin Tomashevich", "username": "KonstantTom", "avatar_template": "/user_avatar/discourse.urho3d.io/konstanttom/{size}/203_2.png", "created_at": "2017-08-24T05:26:33.278Z", "cooked": "<aside class=\"quote no-group\" data-username=\"Eugene\" data-post=\"1\" data-topic=\"3482\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/eugene/40/902_2.png\" class=\"avatar\"> Eugene:</div>\n<blockquote>\n<ol start=\"3\">\n<li>Vector structure elements and corresponding defines were removed,</li>\n</ol>\n</blockquote>\n</aside>\n<p>These changes are fine to me. Arbitrary metadata is much more flexible. It looks good for me.</p>", "post_number": 3, "post_type": 1, "updated_at": "2017-08-24T07:40:54.609Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 1, "incoming_link_count": 0, "reads": 57, "readers_count": 56, "score": 11.4, "yours": false, "topic_id": 3482, "topic_slug": "attribute-refactoring", "display_username": "Konstantin Tomashevich", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 2, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 333, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 20321, "name": "Alex Piola", "username": "Alex-Doc", "avatar_template": "/user_avatar/discourse.urho3d.io/alex-doc/{size}/503_2.png", "created_at": "2017-08-24T06:27:48.062Z", "cooked": "<p>It looks good to me.</p>\n<p>The only thing I don\u2019t like is the new line for <code>.SetMetadata</code> but it\u2019s just a matter of personal taste.</p>", "post_number": 4, "post_type": 1, "updated_at": "2017-08-24T06:28:29.614Z", "reply_count": 1, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 57, "readers_count": 56, "score": 16.4, "yours": false, "topic_id": 3482, "topic_slug": "attribute-refactoring", "display_username": "Alex Piola", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 752, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 20332, "name": "Eugene Kozlov", "username": "Eugene", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png", "created_at": "2017-08-24T10:08:46.129Z", "cooked": "<aside class=\"quote\" data-post=\"2\" data-topic=\"3482\" data-full=\"true\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/yushli1/40/1163_1.png\" class=\"avatar\"> yushli1:</div>\n<blockquote>\n<p>Can you compare the performance difference between these changes, especially the retiring the offset part.</p>\n</blockquote>\n</aside>\n<p>Performance is not affected. The test below take the same time with both old and new version (75++5 ms for Debug, 10-+0.5 ms for Release). I didn\u2019t test metadata-related changes because they have very limited area.</p>\n<details>\n<summary>\nCode</summary>\n<pre><code>#include &lt;Urho3D/Scene/Serializable.h&gt;\n#include &lt;Urho3D/IO/VectorBuffer.h&gt;\n#include &lt;Urho3D/Core/StringUtils.h&gt;\n#include &lt;chrono&gt;\n\nusing namespace Urho3D;\n\n#define URHO3D_NEW_ATTRIBUTE(name, typeName, variable, defaultValue, mode) URHO3D_ACCESSOR_ATTRIBUTE_FREE(name, [](const ClassName* classPtr) -&gt; typename AttributeTrait&lt;typeName &gt;::ReturnType { return classPtr-&gt;variable; }, [](ClassName* classPtr, typename AttributeTrait&lt;typeName &gt;::ParameterType value) { classPtr-&gt;variable = value; }, typeName, defaultValue, mode)\n#undef URHO3D_ATTRIBUTE\n#define URHO3D_ATTRIBUTE(name, typeName, variable, defaultValue, mode) URHO3D_NEW_ATTRIBUTE(name, typeName, variable, defaultValue, mode)\n\nclass TestSerializable : public Serializable\n{\n   URHO3D_OBJECT(TestSerializable, Serializable);\n\npublic:\n   TestSerializable(Context* context) : Serializable(context)\n   {\n      bool_ = !!Random(0, 1);\n      int_ = Random(1, 100);\n      float_ = Random(1.0f, 100.0f);\n      string_ = String(Random(1, 100));\n      vector_ = { Random(1, 100), Random(1, 100), Random(1, 100) };\n      map_ = { { \"1\", Random(1, 100) }, { \"2\", Random(1, 100) }, { \"3\", Random(1, 100) } };\n   }\n   static void RegisterObject(Context* context)\n   {\n      context-&gt;RegisterFactory&lt;TestSerializable&gt;();\n\n      URHO3D_ATTRIBUTE(\"Bool\", bool, bool_, false, AM_DEFAULT);\n      URHO3D_ATTRIBUTE(\"Int\", int, int_, 0, AM_DEFAULT);\n      URHO3D_ATTRIBUTE(\"Float\", float, float_, 0.0f, AM_DEFAULT);\n      URHO3D_ATTRIBUTE(\"String\", String, string_, String::EMPTY, AM_DEFAULT);\n      URHO3D_ATTRIBUTE(\"VariantVector\", VariantVector, vector_, Variant::emptyVariantVector, AM_DEFAULT);\n      URHO3D_ATTRIBUTE(\"VariantMap\", VariantMap, map_, Variant::emptyVariantMap, AM_DEFAULT);\n   }\nprivate:\n   bool bool_;\n   int int_;\n   float float_;\n   String string_;\n   VariantVector vector_;\n   VariantMap map_;\n};\n\nsize_t Test(Context* context)\n{\n   TestSerializable::RegisterObject(context);\n   Vector&lt;SharedPtr&lt;TestSerializable&gt;&gt; objects;\n   for (int i = 0; i &lt; 10000; ++i)\n      objects.Push(MakeShared&lt;TestSerializable&gt;(context));\n   VectorBuffer output;\n   output.Resize(1024 * 1024);\n\n   auto t1 = std::chrono::high_resolution_clock::now();\n   for (TestSerializable* object : objects)\n      object-&gt;Save(output);\n   auto t2 = std::chrono::high_resolution_clock::now();\n   size_t us = (size_t)std::chrono::duration_cast&lt;std::chrono::microseconds&gt;(t2 - t1).count();\n\n   File file(context);\n   file.Open(\"C:/output.bin\", FILE_WRITE);\n   file.Write(output.GetData(), output.GetSize());\n   file.Close();\n   return us;\n}\n</code></pre>\n</details>\n<aside class=\"quote\" data-post=\"4\" data-topic=\"3482\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/alex-doc/40/503_1.png\" class=\"avatar\"> Alex-Doc:</div>\n<blockquote>\n<p>The only thing I don\u2019t like is the new line for .SetMetadata but it\u2019s just a matter of personal taste</p>\n</blockquote>\n</aside>\n<p>The idea is pretty simple here. Have you heard about \u201csingle line -<br>\nsingle declaration\u201d rule in C++? Here is the same situation. Metadata  is the declaration of the new variable inside the map, so it shall be placed on its own line.<br>\nThe same is about variadic <code>SendEvent</code>: I\u2019d like to put every event parameter on its own line.</p>", "post_number": 5, "post_type": 1, "updated_at": "2017-08-24T11:11:18.945Z", "reply_count": 1, "reply_to_post_number": 2, "quote_count": 2, "incoming_link_count": 2, "reads": 57, "readers_count": 56, "score": 26.4, "yours": false, "topic_id": 3482, "topic_slug": "attribute-refactoring", "display_username": "Eugene Kozlov", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 3, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Core developer", "title_is_group": false, "reply_to_user": {"username": "yushli1", "name": "Yushli", "avatar_template": "/user_avatar/discourse.urho3d.io/yushli1/{size}/1163_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 484, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 20333, "name": "", "username": "TheComet", "avatar_template": "/user_avatar/discourse.urho3d.io/thecomet/{size}/1493_2.png", "created_at": "2017-08-24T10:57:15.350Z", "cooked": "<p>In this test code you\u2019re not really testing the performance of <code>object-&gt;Save()</code>, you\u2019re testing the hundreds of memory allocations that are occurring in VectorBuffer, which are comparatively slow to serialization.</p>\n<p>I can\u2019t test it for myself now but recommend reserving space on the vector buffer before doing the test and see if it makes any difference.</p>\n<pre><code class=\"lang-cpp\">output.Resize(sizeof(TestSerializable) * 10000);  // Not entirely sure how attributes contribute to the size of the serialized data, so maybe you need to increase this factor\n</code></pre>", "post_number": 6, "post_type": 1, "updated_at": "2017-08-24T10:57:15.350Z", "reply_count": 1, "reply_to_post_number": 5, "quote_count": 0, "incoming_link_count": 0, "reads": 53, "readers_count": 52, "score": 15.6, "yours": false, "topic_id": 3482, "topic_slug": "attribute-refactoring", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Community repository maintainer", "title_is_group": false, "reply_to_user": {"username": "Eugene", "name": "Eugene Kozlov", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 37, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 20334, "name": "Eugene Kozlov", "username": "Eugene", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png", "created_at": "2017-08-24T11:23:49.380Z", "cooked": "<aside class=\"quote\" data-post=\"6\" data-topic=\"3482\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/thecomet/40/142_1.png\" class=\"avatar\"> TheComet:</div>\n<blockquote>\n<p>In this test code you\u2019re not really testing the performance of object-&gt;Save(), you\u2019re testing the hundreds of memory allocations that are occurring in VectorBuffer, which are comparatively slow to serialization.</p>\n</blockquote>\n</aside>\n<p>Hundreds of memory allocations take only about 10% of overall time. New test results:</p>\n<p>Debug Old: 65\u202675 ms;<br>\nDebug New: 70\u202676 ms;<br>\nRelease Old: 8.8\u202610 ms;<br>\nRelease New: 9.3\u202610 ms.</p>", "post_number": 7, "post_type": 1, "updated_at": "2017-08-24T11:23:49.380Z", "reply_count": 1, "reply_to_post_number": 6, "quote_count": 1, "incoming_link_count": 0, "reads": 51, "readers_count": 50, "score": 15.2, "yours": false, "topic_id": 3482, "topic_slug": "attribute-refactoring", "display_username": "Eugene Kozlov", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Core developer", "title_is_group": false, "reply_to_user": {"username": "TheComet", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/thecomet/{size}/1493_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 484, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 20341, "name": "Yushli", "username": "yushli1", "avatar_template": "/user_avatar/discourse.urho3d.io/yushli1/{size}/1163_2.png", "created_at": "2017-08-24T12:58:21.399Z", "cooked": "<p>How are the meanings of these results? Does that mean Release Old use 8.8 to 10 ms while Release New use 9.3 to 10 ms?<br>\nAlso VauleAnimation and ObjectAnimation relies on AttributeAnimation. We may need to test their performance differences before commiting such a fundamental code change as well.</p>", "post_number": 8, "post_type": 1, "updated_at": "2017-08-24T12:58:21.399Z", "reply_count": 0, "reply_to_post_number": 7, "quote_count": 0, "incoming_link_count": 0, "reads": 50, "readers_count": 49, "score": 10.0, "yours": false, "topic_id": 3482, "topic_slug": "attribute-refactoring", "display_username": "Yushli", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "reply_to_user": {"username": "Eugene", "name": "Eugene Kozlov", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 622, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 20342, "name": "Yushli", "username": "yushli1", "avatar_template": "/user_avatar/discourse.urho3d.io/yushli1/{size}/1163_2.png", "created_at": "2017-08-24T13:03:49.224Z", "cooked": "<p>Please come back often and give the valuable opinions. It may take you ten minutes but will save a lot of arguments and point the right direction for this amazing engine. Like the retiring the attribute offset thing, do you think it will affect the overall performance since AttributeAnimation, ValueAnimation and ObjectAnimation are all depending on it?</p>", "post_number": 9, "post_type": 1, "updated_at": "2017-08-24T13:38:44.844Z", "reply_count": 1, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 59, "readers_count": 58, "score": 16.8, "yours": false, "topic_id": 3482, "topic_slug": "attribute-refactoring", "display_username": "Yushli", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 622, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 20343, "name": "Eugene Kozlov", "username": "Eugene", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png", "created_at": "2017-08-24T13:22:32.269Z", "cooked": "<p>I don\u2019t understand why do you care about performance at all.</p>\n<ol>\n<li>offset attributes is an old hack that should be removed ASAP.</li>\n<li>Performance can\u2019t be worse than accessor attributes.</li>\n<li>Only 25% of urho attributes are affected.</li>\n</ol>", "post_number": 10, "post_type": 1, "updated_at": "2017-08-24T13:38:44.871Z", "reply_count": 1, "reply_to_post_number": 9, "quote_count": 0, "incoming_link_count": 0, "reads": 55, "readers_count": 54, "score": 16.0, "yours": false, "topic_id": 3482, "topic_slug": "attribute-refactoring", "display_username": "Eugene Kozlov", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Core developer", "title_is_group": false, "reply_to_user": {"username": "yushli1", "name": "Yushli", "avatar_template": "/user_avatar/discourse.urho3d.io/yushli1/{size}/1163_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 484, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 20346, "name": "Yushli", "username": "yushli1", "avatar_template": "/user_avatar/discourse.urho3d.io/yushli1/{size}/1163_2.png", "created_at": "2017-08-24T13:55:14.430Z", "cooked": "<p>Debug Old: 65\u202675 ms;<br>\nDebug New: 70\u202676 ms;<br>\nRelease Old: 8.8\u202610 ms;<br>\nRelease New: 9.3\u202610 ms.</p>\n<p>Judging from this test result,  new performance is  actually a bit slower, consistently in both debug and release.</p>", "post_number": 11, "post_type": 1, "updated_at": "2017-08-24T13:55:14.430Z", "reply_count": 1, "reply_to_post_number": 10, "quote_count": 0, "incoming_link_count": 0, "reads": 45, "readers_count": 44, "score": 14.0, "yours": false, "topic_id": 3482, "topic_slug": "attribute-refactoring", "display_username": "Yushli", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "reply_to_user": {"username": "Eugene", "name": "Eugene Kozlov", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 622, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 20347, "name": "Eugene Kozlov", "username": "Eugene", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png", "created_at": "2017-08-24T14:18:29.143Z", "cooked": "<p>You should treat these results as \u2018accessor attributes are negligibly slower (~5% in release mode) than offset attributes due to two extra pointer-to-function calls\u2019.<br>\nThen, my refactorig is obligatory migration to accessor attributes without breaking API for safety reasons.</p>", "post_number": 12, "post_type": 1, "updated_at": "2017-08-24T14:18:29.143Z", "reply_count": 1, "reply_to_post_number": 11, "quote_count": 0, "incoming_link_count": 0, "reads": 44, "readers_count": 43, "score": 13.8, "yours": false, "topic_id": 3482, "topic_slug": "attribute-refactoring", "display_username": "Eugene Kozlov", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Core developer", "title_is_group": false, "reply_to_user": {"username": "yushli1", "name": "Yushli", "avatar_template": "/user_avatar/discourse.urho3d.io/yushli1/{size}/1163_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 484, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 20349, "name": "", "username": "Enhex", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png", "created_at": "2017-08-24T14:44:09.919Z", "cooked": "<p>I understand fixing Undefined Behavior with the offset usage (just use lambda accessor instead?).</p>\n<p>I don\u2019t understand why:</p>\n<ol>\n<li>you need attribute meta info</li>\n<li>overhead is introduced</li>\n</ol>", "post_number": 13, "post_type": 1, "updated_at": "2017-08-24T14:44:38.403Z", "reply_count": 1, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 42, "readers_count": 41, "score": 13.4, "yours": false, "topic_id": 3482, "topic_slug": "attribute-refactoring", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 184, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 20352, "name": "Eugene Kozlov", "username": "Eugene", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png", "created_at": "2017-08-24T14:54:36.538Z", "cooked": "<aside class=\"quote\" data-post=\"13\" data-topic=\"3482\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/enhex/40/81_1.png\" class=\"avatar\"> Enhex:</div>\n<blockquote>\n<p>you need attribute meta info</p>\n</blockquote>\n</aside>\n<p>I just wanted to add attribute metadata at some point and get rid of kludge named \u2018vector structure elements\u2019. When I tried to remove offset attributes, I understood that the point is now. See changes in Constraint.cpp in my PR.</p>\n<aside class=\"quote\" data-post=\"13\" data-topic=\"3482\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/enhex/40/81_1.png\" class=\"avatar\"> Enhex:</div>\n<blockquote>\n<p>overhead is introduced</p>\n</blockquote>\n</aside>\n<p>What overhead do you mean?</p>", "post_number": 14, "post_type": 1, "updated_at": "2017-08-24T14:54:36.538Z", "reply_count": 1, "reply_to_post_number": 13, "quote_count": 1, "incoming_link_count": 2, "reads": 45, "readers_count": 44, "score": 24.0, "yours": false, "topic_id": 3482, "topic_slug": "attribute-refactoring", "display_username": "Eugene Kozlov", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Core developer", "title_is_group": false, "reply_to_user": {"username": "Enhex", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 484, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 20354, "name": "Yushli", "username": "yushli1", "avatar_template": "/user_avatar/discourse.urho3d.io/yushli1/{size}/1163_2.png", "created_at": "2017-08-24T15:08:39.751Z", "cooked": "<p>5% slower in release mode consistently is not negligible for such a core feature because many other features are depending on it, like ValueAnimation, ObjectAnimation, Serialization, Deserialization and Networking. Using offset exists safely for many years and should not be changed just for so called safety at the price of performance. And this change cannot be opt out. I suggest only commit such a change with thorough test and ensure no negative performance introduced at all.</p>", "post_number": 15, "post_type": 1, "updated_at": "2017-08-24T15:08:39.751Z", "reply_count": 1, "reply_to_post_number": 12, "quote_count": 0, "incoming_link_count": 0, "reads": 47, "readers_count": 46, "score": 14.4, "yours": false, "topic_id": 3482, "topic_slug": "attribute-refactoring", "display_username": "Yushli", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "reply_to_user": {"username": "Eugene", "name": "Eugene Kozlov", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 622, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 20360, "name": "", "username": "Enhex", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png", "created_at": "2017-08-24T15:52:53.466Z", "cooked": "<aside class=\"quote no-group\" data-username=\"Eugene\" data-post=\"14\" data-topic=\"3482\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/eugene/40/902_2.png\" class=\"avatar\"> Eugene:</div>\n<blockquote>\n<p>vector structure elements</p>\n</blockquote>\n</aside>\n<p>Looked at it a bit, undocumented and looks quite messy. I\u2019m not sure I understand what is it used for (stores names of members encoded into a VariantVector?).<br>\nAlso it only seems to be used in a single place in the editor, which is also undocumented.</p>\n<p>Internally Urho uses URHO3D_ACCESSOR_VARIANT_VECTOR_STRUCTURE_ATTRIBUTE for two classes: StaticModelGroup and SplinePath.</p>\n<p>They seem to use VariantVector to store known ID type + size count as the first element, which doesn\u2019t make sense (just use a <code>vector&lt;T&gt;</code> of the known type).<br>\nIs it because serialization doesn\u2019t support vector or something?</p>\n<p>To me it seems this kludge should be completely removed and replaced with a proper solution.<br>\nIf meta info suppose to replace it, it still doesn\u2019t solve the underlying kludge that caused it in the first place.</p>", "post_number": 16, "post_type": 1, "updated_at": "2017-08-24T16:54:56.896Z", "reply_count": 2, "reply_to_post_number": null, "quote_count": 1, "incoming_link_count": 1, "reads": 49, "readers_count": 48, "score": 24.8, "yours": false, "topic_id": 3482, "topic_slug": "attribute-refactoring", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 2, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 184, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 20363, "name": "Eugene Kozlov", "username": "Eugene", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png", "created_at": "2017-08-24T16:19:19.269Z", "cooked": "<blockquote>\n<p>5% slower in release mode consistently is not negligible for such a core feature</p>\n</blockquote>\n<p>So, it\u2019s the problem of accessor attributes introduced six years ago. Accessor attributes were <em>designed</em> to make code more <em>simple</em> and <em>safe</em> despite some performance loss. Do you think it was bad decision? Why nobody cared about it for six years?</p>\n<blockquote>\n<p>should not be changed just for so called safety at the price of performance</p>\n</blockquote>\n<p>Undefined Behavior must not be used. Consider this as axiom.</p>\n<p>Think the opposite: there is no reason to use unsafe code unless it is noticeably faster.<br>\nNow the difference is too small to care about. Note that random performance fluctuation is much bigger than performace loss. So, performace loss is negligibly small.<br>\n<img src=\"https://global.discourse-cdn.com/standard17/uploads/urho3d/original/1X/1f5e62ee0f3f56a9585123fa1029547afeb2167a.png\" alt=\"image\" width=\"480\" height=\"288\"></p>\n<p>100 tries, test duration measured in microseconds.</p>", "post_number": 17, "post_type": 1, "updated_at": "2017-08-24T16:31:05.931Z", "reply_count": 2, "reply_to_post_number": 15, "quote_count": 0, "incoming_link_count": 0, "reads": 50, "readers_count": 49, "score": 20.0, "yours": false, "topic_id": 3482, "topic_slug": "attribute-refactoring", "display_username": "Eugene Kozlov", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 2, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Core developer", "title_is_group": false, "reply_to_user": {"username": "yushli1", "name": "Yushli", "avatar_template": "/user_avatar/discourse.urho3d.io/yushli1/{size}/1163_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 484, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 20365, "name": "", "username": "Enhex", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png", "created_at": "2017-08-24T16:58:17.660Z", "cooked": "<p>You should label charts.</p>\n<p>Also there are benchmarking frameworks for getting statistically sound results.<br>\n<a href=\"https://github.com/nickbruun/hayai\" class=\"onebox\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/nickbruun/hayai</a><br>\n<a href=\"https://github.com/DigitalInBlue/Celero\" class=\"onebox\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/DigitalInBlue/Celero</a><br>\n<a href=\"https://github.com/google/benchmark\" class=\"onebox\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/google/benchmark</a></p>", "post_number": 18, "post_type": 1, "updated_at": "2017-08-24T16:58:17.660Z", "reply_count": 0, "reply_to_post_number": 17, "quote_count": 0, "incoming_link_count": 1, "reads": 47, "readers_count": 46, "score": 14.4, "yours": false, "topic_id": 3482, "topic_slug": "attribute-refactoring", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "https://github.com/google/benchmark", "internal": false, "reflection": false, "title": "GitHub - google/benchmark: A microbenchmark support library", "clicks": 1}, {"url": "https://github.com/nickbruun/hayai", "internal": false, "reflection": false, "title": "GitHub - nickbruun/hayai: C++ benchmarking framework", "clicks": 0}, {"url": "https://github.com/DigitalInBlue/Celero", "internal": false, "reflection": false, "title": "GitHub - DigitalInBlue/Celero: C++ Benchmark Authoring Library/Framework", "clicks": 0}], "read": true, "user_title": null, "reply_to_user": {"username": "Eugene", "name": "Eugene Kozlov", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 184, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 20366, "name": "Eugene Kozlov", "username": "Eugene", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png", "created_at": "2017-08-24T17:01:42.258Z", "cooked": "<aside class=\"quote\" data-post=\"16\" data-topic=\"3482\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/enhex/40/81_1.png\" class=\"avatar\"> Enhex:</div>\n<blockquote>\n<p>To me it seems this kludge should be completely removed and replaced with a proper solution.</p>\n<p>If meta info suppose to replace it, it still doesn\u2019t solve the underlying kludge that caused it in the first place.</p>\n</blockquote>\n</aside>\n<p>What do you call \u2018proper solution\u2019? Metadata is designed to be something that <em>is not used</em> by the engine core.</p>\n<blockquote>\n<p>stores names of members encoded into a VariantVector?</p>\n</blockquote>\n<p>It stores display names of VariantVector elements.</p>", "post_number": 19, "post_type": 1, "updated_at": "2017-08-24T17:01:42.258Z", "reply_count": 1, "reply_to_post_number": 16, "quote_count": 1, "incoming_link_count": 1, "reads": 48, "readers_count": 47, "score": 19.6, "yours": false, "topic_id": 3482, "topic_slug": "attribute-refactoring", "display_username": "Eugene Kozlov", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Core developer", "title_is_group": false, "reply_to_user": {"username": "Enhex", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 484, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 20367, "name": "Lasse \u00d6\u00f6rni", "username": "cadaver", "avatar_template": "/user_avatar/discourse.urho3d.io/cadaver/{size}/3_2.png", "created_at": "2017-08-24T17:17:17.910Z", "cooked": "<p>On the performance of attribute animations, regardless of whether set accessor or offset access is used, the path to getting the value into the intended destination is complex and ugly. If there are 100\u2019s or 1000\u2019s of scene objects which need to animate this way, so that the time taken to apply the animations is significant, then optimizing to an explicit update could be beneficial. Also note the call to ApplyAttributes() which is necessary according to how the attributes work and how they may have late-applied side-effects. In most cases when you know what you\u2019re animating, it should be unnecessary, but the animation system cannot decide that.</p>", "post_number": 20, "post_type": 1, "updated_at": "2017-08-24T17:17:40.831Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 1, "reads": 48, "readers_count": 47, "score": 14.6, "yours": false, "topic_id": 3482, "topic_slug": "attribute-refactoring", "display_username": "Lasse \u00d6\u00f6rni", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Urho3D Author", "title_is_group": false, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": true, "staff": true, "user_id": 3, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 20369, "name": "", "username": "Enhex", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png", "created_at": "2017-08-24T17:33:01.576Z", "cooked": "<p>What I understood from:</p>\n<blockquote>\n<p>I just wanted to add attribute metadata at some point and get rid of kludge named \u2018vector structure elements\u2019.</p>\n</blockquote>\n<p>is that metadata suppose to replace <code>vector structure elements</code>.<br>\nWhat I\u2019m saying is to begin with <code>vector structure elements</code> was added to handle a kludge of using <code>VariantVector</code> instead of <code>vector&lt;T&gt;</code>.<br>\nSolving original vector kludge -&gt; <code>vector structure elements</code> isn\u2019t needed -&gt; nothing to replace.</p>\n<p>Extra name info is only used by the editor, for displaying things.<br>\nThat means that the naming info can be implemented in a way which is completely external to the engine.</p>\n<p>Or just display <code>vector&lt;T&gt;</code> without naming each element entry, just indenting and/or with some default name like \u201celement\u201d, so no extra naming info is needed. Though that might degrade UX.</p>", "post_number": 21, "post_type": 1, "updated_at": "2017-08-24T17:48:39.545Z", "reply_count": 1, "reply_to_post_number": 19, "quote_count": 0, "incoming_link_count": 0, "reads": 46, "readers_count": 45, "score": 14.2, "yours": false, "topic_id": 3482, "topic_slug": "attribute-refactoring", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 2, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "reply_to_user": {"username": "Eugene", "name": "Eugene Kozlov", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 184, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 20372, "name": "Eugene Kozlov", "username": "Eugene", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png", "created_at": "2017-08-24T18:30:36.515Z", "cooked": "<blockquote>\n<p>Or just display vector without naming each element entry, just indenting and/or with some default name like \u201celement\u201d, so no extra naming info is needed</p>\n</blockquote>\n<p>It sux.<br>\n<img src=\"https://global.discourse-cdn.com/standard17/uploads/urho3d/original/1X/fe2fff8d7535f58f9f4c8294575b9b11060fda91.png\" alt=\"image\" width=\"365\" height=\"318\"></p>\n<blockquote>\n<p>That means that the naming info can be implemented in a way which is completely external to the engine</p>\n</blockquote>\n<p>It was implemented inside an Editor year ago. If you need to hack Editor code to make the component attributes work, the architecture sux.</p>\n<blockquote>\n<p>Solving original vector kludge<br>\nHow to do it? What\u2019s T for BillboardSet?</p>\n</blockquote>", "post_number": 22, "post_type": 1, "updated_at": "2017-08-24T18:30:36.515Z", "reply_count": 1, "reply_to_post_number": 21, "quote_count": 0, "incoming_link_count": 0, "reads": 47, "readers_count": 46, "score": 14.4, "yours": false, "topic_id": 3482, "topic_slug": "attribute-refactoring", "display_username": "Eugene Kozlov", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Core developer", "title_is_group": false, "reply_to_user": {"username": "Enhex", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 484, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 20375, "name": "", "username": "Lumak", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/l/8491ac/{size}.png", "created_at": "2017-08-24T19:17:35.650Z", "cooked": "<p>I was reluctant about this, especially regarding if this will cause loss in performance. However, this statement:</p>\n<aside class=\"quote no-group\" data-username=\"Eugene\" data-post=\"17\" data-topic=\"3482\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/eugene/40/902_2.png\" class=\"avatar\"> Eugene:</div>\n<blockquote>\n<p>Think the opposite: there is no reason to use unsafe code unless it is noticeably faster.</p>\n</blockquote>\n</aside>\n<p>want to give this a benefit of doubt.</p>", "post_number": 23, "post_type": 1, "updated_at": "2017-08-24T19:17:35.650Z", "reply_count": 0, "reply_to_post_number": 17, "quote_count": 1, "incoming_link_count": 0, "reads": 45, "readers_count": 44, "score": 9.0, "yours": false, "topic_id": 3482, "topic_slug": "attribute-refactoring", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 256, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 20377, "name": "Eugene Kozlov", "username": "Eugene", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png", "created_at": "2017-08-24T20:02:24.298Z", "cooked": "<p><a class=\"mention\" href=\"/u/cadaver\">@cadaver</a> May you elaborate how Constraint attributes work?<br>\nThere is <code>Position</code> attribute. When it is set via serializable interface, <code>otherPosition_</code> is updated. When it is set via <code>SetPosition</code>,<code>otherPosition_</code> is untouched.<br>\nWhat\u2019s the point?</p>", "post_number": 24, "post_type": 1, "updated_at": "2017-08-24T22:23:18.183Z", "reply_count": 1, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 45, "readers_count": 44, "score": 14.0, "yours": false, "topic_id": 3482, "topic_slug": "attribute-refactoring", "display_username": "Eugene Kozlov", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 2, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Core developer", "title_is_group": false, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 484, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 20378, "name": "Konstantin Tomashevich", "username": "KonstantTom", "avatar_template": "/user_avatar/discourse.urho3d.io/konstanttom/{size}/203_2.png", "created_at": "2017-08-24T20:07:15.597Z", "cooked": "<aside class=\"quote\" data-post=\"16\" data-topic=\"3482\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/enhex/40/81_1.png\" class=\"avatar\"> Enhex:</div>\n<blockquote>\n<p>Internally Urho uses URHO3D_ACCESSOR_VARIANT_VECTOR_STRUCTURE_ATTRIBUTE for two classes: StaticModelGroup and SplinePath.</p>\n</blockquote>\n</aside>\n<p>Also it\u2019s used by BillboardSet in which each billboard has position, size, uv, color and other parameters. So, vector structure elements are designed for cases such as BillboardSet billboards.<br>\n<aside class=\"onebox githubblob\">\n  <header class=\"source\">\n      <a href=\"https://github.com/urho3d/Urho3D/blob/master/Source/Urho3D/Graphics/BillboardSet.cpp#L60\" target=\"_blank\" rel=\"nofollow noopener\">github.com</a>\n  </header>\n  <article class=\"onebox-body\">\n    <h4><a href=\"https://github.com/urho3d/Urho3D/blob/master/Source/Urho3D/Graphics/BillboardSet.cpp#L60\" target=\"_blank\" rel=\"nofollow noopener\">urho3d/Urho3D/blob/master/Source/Urho3D/Graphics/BillboardSet.cpp#L60</a></h4>\n<pre class=\"onebox\"><code class=\"lang-cpp\"><ol class=\"start lines\" start=\"50\" style=\"counter-reset: li-counter 49 ;\">\n<li>\"None\",\n</li>\n<li>\"Rotate XYZ\",\n</li>\n<li>\"Rotate Y\",\n</li>\n<li>\"LookAt XYZ\",\n</li>\n<li>\"LookAt Y\",\n</li>\n<li>\"LookAt Mixed\",\n</li>\n<li>\"Direction\",\n</li>\n<li>nullptr\n</li>\n<li>};\n</li>\n<li>\n</li>\n<li class=\"selected\">static const StringVector billboardsStructureElementNames =\n</li>\n<li>{\n</li>\n<li>\"Billboard Count\",\n</li>\n<li>\"   Position\",\n</li>\n<li>\"   Size\",\n</li>\n<li>\"   UV Coordinates\",\n</li>\n<li>\"   Color\",\n</li>\n<li>\"   Rotation\",\n</li>\n<li>\"   Direction\",\n</li>\n<li>\"   Is Enabled\"\n</li>\n<li>};\n</li>\n</ol></code></pre>\n\n\n  </article>\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n  <div style=\"clear: both\"></div>\n</aside>\n</p>", "post_number": 25, "post_type": 1, "updated_at": "2017-08-24T20:15:13.260Z", "reply_count": 0, "reply_to_post_number": 16, "quote_count": 1, "incoming_link_count": 2, "reads": 47, "readers_count": 46, "score": 19.4, "yours": false, "topic_id": 3482, "topic_slug": "attribute-refactoring", "display_username": "Konstantin Tomashevich", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 2, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "https://github.com/urho3d/Urho3D/blob/master/Source/Urho3D/Graphics/BillboardSet.cpp#L60", "internal": false, "reflection": false, "title": "Urho3D/BillboardSet.cpp at master \u00b7 urho3d/Urho3D \u00b7 GitHub", "clicks": 0}], "read": true, "user_title": null, "reply_to_user": {"username": "Enhex", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 333, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 20380, "name": "", "username": "Enhex", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png", "created_at": "2017-08-24T23:49:03.089Z", "cooked": "<p>With BillboardSet, you got a vector of <code>Billboard</code>'s, T is <code>Billboard</code>.<br>\nI didnt mean just display \u201ccount\u201d.<br>\nFor something like StaticModelGroup, you have NodeIDs, so it will say something like \u201cNodeIDs count/size\u201d.<br>\nWe\u2019re suppose to be serializing <code>vector&lt;T&gt;</code> as an attribute here, so it should already have a name. We also don\u2019t just serialize some random set of unnamed attributes for each element, we\u2019re serializing T. Information about T\u2019s attributes should be provided, including their names.<br>\nSo it\u2019s more like a nested type attributes thingy. And there\u2019s no need for editor-side stuff.<br>\nA good example for nested type serialization thingy is <a href=\"http://uscilab.github.io/cereal/\" rel=\"nofollow noopener\">cereal library</a>. Now that we can use C++11 we could do something similar.</p>\n<p>Looking at Urho I see that the <code>AttributeInfo</code> type is limited to the hardcoded <code>VariantType</code>'s. That means that adding \u201cnested type serialization\u201d support will require a refactor to support any type. I\u2019m assuming other things rely on attributes to use <code>Variant</code>, so it may also require further refactoring of other code to be more generic.<br>\nThe rabbit hole goes deeper. Perhaps it will be better to find the most low level part that requires refactoring and start from there, and work our way up to attributes. To me it seems to be usage of <code>Variant</code> where generic templates could\u2019ve been used.</p>\n<p>I don\u2019t have a full overview about what attributes are used for, and what they require to be able to do. If I\u2019m missing something let me know (documentation\u2019s welcome!).</p>\n<p><a class=\"mention\" href=\"/u/konstanttom\">@KonstantTom</a> Thanks, forgot to search for the <code>MIXED</code> macro version. This post also addresses your point.</p>", "post_number": 26, "post_type": 1, "updated_at": "2017-08-24T23:50:05.883Z", "reply_count": 1, "reply_to_post_number": 22, "quote_count": 0, "incoming_link_count": 0, "reads": 45, "readers_count": 44, "score": 14.0, "yours": false, "topic_id": 3482, "topic_slug": "attribute-refactoring", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "http://uscilab.github.io/cereal/", "internal": false, "reflection": false, "title": "cereal Docs - Main", "clicks": 8}], "read": true, "user_title": null, "reply_to_user": {"username": "Eugene", "name": "Eugene Kozlov", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 184, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 20381, "name": "Yushli", "username": "yushli1", "avatar_template": "/user_avatar/discourse.urho3d.io/yushli1/{size}/1163_2.png", "created_at": "2017-08-25T02:47:47.023Z", "cooked": "<p>void AttributeAnimationInfo::ApplyValue(const Variant&amp; newValue)<br>\n{<br>\nAnimatable* animatable = static_cast&lt;Animatable*&gt;(target_.Get());<br>\nif (animatable)<br>\n{<br>\nanimatable-&gt;OnSetAttribute(attributeInfo_, newValue);<br>\nanimatable-&gt;ApplyAttributes();<br>\n}<br>\n}<br>\nIf attribute are to be redesigned and improved, I think it should take this use case into consideration. Each update will need to set the attribute by using a Variant, while the type information of the variant is already known when creating the animation. That actually waste a lot of execution time. Can this variant be taken away at compile time, say, by using template?</p>", "post_number": 27, "post_type": 1, "updated_at": "2017-08-25T02:47:47.023Z", "reply_count": 2, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 43, "readers_count": 42, "score": 18.6, "yours": false, "topic_id": 3482, "topic_slug": "attribute-refactoring", "display_username": "Yushli", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 622, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 20384, "name": "Eugene Kozlov", "username": "Eugene", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png", "created_at": "2017-08-25T06:33:09.850Z", "cooked": "<aside class=\"quote\" data-post=\"26\" data-topic=\"3482\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/enhex/40/81_1.png\" class=\"avatar\"> Enhex:</div>\n<blockquote>\n<p>Now that we can use C++11 we could do something similar.</p>\n</blockquote>\n</aside>\n<aside class=\"quote\" data-post=\"27\" data-topic=\"3482\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/yushli1/40/1163_1.png\" class=\"avatar\"> yushli1:</div>\n<blockquote>\n<p>Each update will need to set the attribute by using a Variant, while the type information of the variant is already known when creating the animation.</p>\n</blockquote>\n</aside>\n<p>We couldn\u2019t. We will never be able to mix templates and polymorphism. Unless we drop all virtual cascades and do serialization in the header, we cannot perserve real type in any way and get rid of Variant. And it\u2019s not the point of this topic because of it.</p>\n<aside class=\"quote\" data-post=\"27\" data-topic=\"3482\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/yushli1/40/1163_1.png\" class=\"avatar\"> yushli1:</div>\n<blockquote>\n<p>That actually waste a lot of execution time</p>\n</blockquote>\n</aside>\n<p>We often lose execution time to make code usage convinient. The more generic engine is, the more performance is lost.</p>", "post_number": 28, "post_type": 1, "updated_at": "2017-08-25T06:36:32.528Z", "reply_count": 1, "reply_to_post_number": 26, "quote_count": 2, "incoming_link_count": 0, "reads": 44, "readers_count": 43, "score": 13.8, "yours": false, "topic_id": 3482, "topic_slug": "attribute-refactoring", "display_username": "Eugene Kozlov", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Core developer", "title_is_group": false, "reply_to_user": {"username": "Enhex", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 484, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 20386, "name": "hd_", "username": "hdunderscore", "avatar_template": "/user_avatar/discourse.urho3d.io/hdunderscore/{size}/1151_2.png", "created_at": "2017-08-25T07:05:45.340Z", "cooked": "<p>I think the solution provided is relatively clean. The mixing of macro and method chaining is a bit on the ugly side but should do.</p>\n<p>The performance test appears to have been done only for saving ? How relevant is that performance test on the average run-time of a game?</p>", "post_number": 29, "post_type": 1, "updated_at": "2017-08-25T07:05:45.340Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 41, "readers_count": 40, "score": 8.2, "yours": false, "topic_id": 3482, "topic_slug": "attribute-refactoring", "display_username": "hd_", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Contributor", "title_is_group": false, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 114, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 20387, "name": "", "username": "Enhex", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png", "created_at": "2017-08-25T08:01:17.967Z", "cooked": "<aside class=\"quote no-group\" data-username=\"yushli1\" data-post=\"27\" data-topic=\"3482\" data-full=\"true\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/yushli1/40/1163_2.png\" class=\"avatar\"> yushli1:</div>\n<blockquote>\n<p>Can this variant be taken away at compile time, say, by using template?</p>\n</blockquote>\n</aside>\n<p>Yes. The type is known at compile time. <code>AttributeAnimationInfo</code> should be templated to animate <code>T</code> and use<br>\n<code>ApplyValue(const T&amp; newValue)</code>. The question is what else needs to be refactored.</p>\n<aside class=\"quote no-group\" data-username=\"Eugene\" data-post=\"28\" data-topic=\"3482\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/eugene/40/902_2.png\" class=\"avatar\"> Eugene:</div>\n<blockquote>\n<p>We couldn\u2019t. We will never be able to mix templates and polymorphism. Unless we drop all virtual cascades and do serialization in the header, we cannot perserve real type in any way and get rid of Variant. And it\u2019s not the point of this topic because of it.</p>\n</blockquote>\n</aside>\n<p>Can you better explain what\u2019s the problem with Cereal\u2019s approach?<br>\nThe topic started with trying to fix code smell. I think it\u2019s better to dig deep, find the root cause, and fix it.</p>\n<aside class=\"quote no-group\" data-username=\"Eugene\" data-post=\"28\" data-topic=\"3482\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/eugene/40/902_2.png\" class=\"avatar\"> Eugene:</div>\n<blockquote>\n<p>We often lose execution time to make code usage convinient. The more generic engine is, the more performance is lost.</p>\n</blockquote>\n</aside>\n<p>This is wrong.<br>\nAgain, look at Cereal - <em><strong>much</strong></em> simpler and convenient code usage than Urho\u2019s serialization, without losing any execution time, in fact it\u2019s even faster because things are being done at compile time.<br>\nAnd it\u2019s more generic than Urho\u2019s serialization - it can handle any type.</p>\n<p>You\u2019re not trading off execution time for usage connivance.<br>\nYou\u2019re trading off proper problem solving and design for an easier problem (which is not inherently a bad thing, common practice when considering resource constraints).</p>\n<p>If anyone which is familiar with Attribute and/or Attribute animation can give me complete requirements for what they need to technically do (instead of me guessing and missing stuff by looking at code), I could try to prototype a system that uses templates to see if it\u2019s feasible.<br>\nMeanwhile I can start prototyping based on what I already understand.</p>\n<p>In general documentation for developers could be nice - overviews of how systems in the engine are designed, what problem they\u2019re trying to solve and how. It\u2019s much faster and safer than trying to guess and assume based on code.</p>", "post_number": 30, "post_type": 1, "updated_at": "2017-08-25T08:09:31.641Z", "reply_count": 2, "reply_to_post_number": 28, "quote_count": 2, "incoming_link_count": 0, "reads": 40, "readers_count": 39, "score": 33.0, "yours": false, "topic_id": 3482, "topic_slug": "attribute-refactoring", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 2, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [{"id": 2, "count": 1}], "moderator": false, "admin": false, "staff": false, "user_id": 184, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 20388, "name": "Yushli", "username": "yushli1", "avatar_template": "/user_avatar/discourse.urho3d.io/yushli1/{size}/1163_2.png", "created_at": "2017-08-25T08:19:38.128Z", "cooked": "<aside class=\"quote\" data-post=\"30\" data-topic=\"3482\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/enhex/40/81_1.png\" class=\"avatar\"> Enhex:</div>\n<blockquote>\n<p>, I could try to prototype a system that uses templates to see if it\u2019s feasible.</p>\n<p>Meanwhile I can start prototyping based on what I already understand.</p>\n</blockquote>\n</aside>\n<p>I will vote for this try.</p>", "post_number": 31, "post_type": 1, "updated_at": "2017-08-25T08:19:38.128Z", "reply_count": 1, "reply_to_post_number": 30, "quote_count": 1, "incoming_link_count": 0, "reads": 35, "readers_count": 34, "score": 12.0, "yours": false, "topic_id": 3482, "topic_slug": "attribute-refactoring", "display_username": "Yushli", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "reply_to_user": {"username": "Enhex", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 622, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 20391, "name": "", "username": "Enhex", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png", "created_at": "2017-08-25T09:06:50.582Z", "cooked": "<p>So for now I can prototype:</p>\n<ul>\n<li>serialize attribute of any type, using compile time information.</li>\n<li>animate attribute value, using compile time information.</li>\n</ul>", "post_number": 32, "post_type": 1, "updated_at": "2017-08-25T09:06:50.582Z", "reply_count": 0, "reply_to_post_number": 31, "quote_count": 0, "incoming_link_count": 0, "reads": 34, "readers_count": 33, "score": 6.8, "yours": false, "topic_id": 3482, "topic_slug": "attribute-refactoring", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "reply_to_user": {"username": "yushli1", "name": "Yushli", "avatar_template": "/user_avatar/discourse.urho3d.io/yushli1/{size}/1163_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 184, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 20392, "name": "Eugene Kozlov", "username": "Eugene", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png", "created_at": "2017-08-25T09:11:49.515Z", "cooked": "<blockquote>\n<p>AttributeAnimationInfo should be templated to animate T and use<br>\nApplyValue(const T&amp; newValue). The question is what else needs to be refactored</p>\n</blockquote>\n<p>It will give you exactly nothing. ValueAnimation is the Resource that stores Variant-s. You will have to cast this variant somehow before applying it to the attribute. Now this cast is performed inisde accessor. If you templatize anything, you will just make the architecture more compliacted and move this cast at the level of AttributeAnimationInfo or ValueAnimationInfo. You will not get <em>any</em> benefit unless you templatize ValueAnimation Resource itself.</p>\n<blockquote>\n<p>Can you better explain what\u2019s the problem with Cereal\u2019s approach?</p>\n</blockquote>\n<p>Just compare the syntax of Cereal and Urho. I can\u2019t imagine how to match it without breaking the API and resource compatibility.</p>\n<blockquote>\n<p>Again, look at Cereal - much simpler and convenient code usage than Urho\u2019s serialization</p>\n</blockquote>\n<p>And much less powerful.</p>\n<blockquote>\n<p>If anyone which is familiar with Attribute and/or Attribute animation can give me complete requirements for what they need to technically do (instead of me guessing and missing stuff by looking at code), I could try to prototype a system that uses templates to see if it\u2019s feasible</p>\n</blockquote>\n<p>My current experience tell me that it\u2019s <em>not</em> feasible. Of course, you could try. Here are requrements, good luck:</p>\n<ol>\n<li>Don\u2019t break Serializable API, including these macros. Urho and user components shall work without changes.</li>\n<li>Don\u2019t break compatibility of serialized XMLs and Jsons;</li>\n</ol>\n<p>I suppose it\u2019s ok to break OnSetAttribute hooks (8 Urho components used it). It is smelly hack and have to be removed at some point.</p>", "post_number": 33, "post_type": 1, "updated_at": "2017-08-25T09:11:49.515Z", "reply_count": 1, "reply_to_post_number": 30, "quote_count": 0, "incoming_link_count": 2, "reads": 37, "readers_count": 36, "score": 22.4, "yours": false, "topic_id": 3482, "topic_slug": "attribute-refactoring", "display_username": "Eugene Kozlov", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Core developer", "title_is_group": false, "reply_to_user": {"username": "Enhex", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 484, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 20393, "name": "", "username": "Enhex", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png", "created_at": "2017-08-25T09:17:51.896Z", "cooked": "<p>backward compatibility isn\u2019t a requirement for what the system suppose to do.<br>\nI mean things like \u201cbe able to add value animations dynamically\u201d.</p>\n<p>Value animation will require complete rethinking. That\u2019s why I suggested earlier to start refactoring from the bottom - so you\u2019ll know what you\u2019re building on.</p>", "post_number": 34, "post_type": 1, "updated_at": "2017-08-25T09:17:51.896Z", "reply_count": 1, "reply_to_post_number": 33, "quote_count": 0, "incoming_link_count": 0, "reads": 34, "readers_count": 33, "score": 11.8, "yours": false, "topic_id": 3482, "topic_slug": "attribute-refactoring", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "reply_to_user": {"username": "Eugene", "name": "Eugene Kozlov", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 184, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 20394, "name": "Lasse \u00d6\u00f6rni", "username": "cadaver", "avatar_template": "/user_avatar/discourse.urho3d.io/cadaver/{size}/3_2.png", "created_at": "2017-08-25T09:28:51.099Z", "cooked": "<p>Did you read the comment?</p>\n<pre><code>    // Convenience for editing static constraints: if not connected to another body, adjust world position to match local\n    // (when deserializing, the proper other body position will be read after own position, so this calculation is safely\n    // overridden and does not accumulate constraint error\n</code></pre>\n<p>It\u2019s somewhat of a kludge. Feel free to remove or refactor.</p>", "post_number": 35, "post_type": 1, "updated_at": "2017-08-25T09:28:51.099Z", "reply_count": 0, "reply_to_post_number": 24, "quote_count": 0, "incoming_link_count": 0, "reads": 36, "readers_count": 35, "score": 7.2, "yours": false, "topic_id": 3482, "topic_slug": "attribute-refactoring", "display_username": "Lasse \u00d6\u00f6rni", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Urho3D Author", "title_is_group": false, "reply_to_user": {"username": "Eugene", "name": "Eugene Kozlov", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": true, "staff": true, "user_id": 3, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 20395, "name": "Eugene Kozlov", "username": "Eugene", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png", "created_at": "2017-08-25T09:42:14.302Z", "cooked": "<aside class=\"quote\" data-post=\"34\" data-topic=\"3482\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/enhex/40/81_1.png\" class=\"avatar\"> Enhex:</div>\n<blockquote>\n<p>backward compatibility isn\u2019t a requirement for what the system suppose to do.</p>\n</blockquote>\n</aside>\n<p>It is a requirement for Urho API (with exceptions listed in poritng notes)</p>\n<blockquote>\n<p>That\u2019s why I suggested earlier to start refactoring from the bottom - so you\u2019ll know what you\u2019re building on</p>\n</blockquote>\n<p>Refactoring != breaking anything and building from scratch. What\u2019s the point of such changes? Especially when benefit is so impalpable. You won\u2019t win any FPS. You will win few milliseconds for binary serialization. And you will lose all users, beacuse (I suppose) such PR will never be merged.</p>\n<p>Okay, here are functional requirements:</p>\n<ol>\n<li>\n<p>Of course, The System shall be able to serialize variant attributes of the object. Either all attributes simultaneously or one-by-one.</p>\n</li>\n<li>\n<p>The System shall store and provide access to attribute information: attribute name, enum names, default values, attribute flags and metadata.</p>\n</li>\n<li>\n<p>The System shall allow to iterate over attributes.</p>\n</li>\n<li>\n<p>The System shall support attributes with custom setters and getters.</p>\n</li>\n<li>\n<p>The System shall support XML, Json and binary formats.</p>\n</li>\n<li>\n<p>The System shall support user-friendly enums for XML and Json.</p>\n</li>\n</ol>", "post_number": 36, "post_type": 1, "updated_at": "2017-08-25T09:42:14.302Z", "reply_count": 1, "reply_to_post_number": 34, "quote_count": 1, "incoming_link_count": 0, "reads": 39, "readers_count": 38, "score": 12.8, "yours": false, "topic_id": 3482, "topic_slug": "attribute-refactoring", "display_username": "Eugene Kozlov", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Core developer", "title_is_group": false, "reply_to_user": {"username": "Enhex", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 484, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 20397, "name": "Konstantin Tomashevich", "username": "KonstantTom", "avatar_template": "/user_avatar/discourse.urho3d.io/konstanttom/{size}/203_2.png", "created_at": "2017-08-25T10:37:43.597Z", "cooked": "<p>Why did you save enum names? I think, enum names can be added as metadata too.</p>", "post_number": 37, "post_type": 1, "updated_at": "2017-08-25T10:37:43.597Z", "reply_count": 1, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 36, "readers_count": 35, "score": 12.2, "yours": false, "topic_id": 3482, "topic_slug": "attribute-refactoring", "display_username": "Konstantin Tomashevich", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 333, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 20398, "name": "Eugene Kozlov", "username": "Eugene", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png", "created_at": "2017-08-25T11:05:04.044Z", "cooked": "<p>Enum names are important for Urho core mechanisms. I don\u2019t want to use metadata for obligatory attribute parameters. However, I may change my opinion later\u2026</p>", "post_number": 38, "post_type": 1, "updated_at": "2017-08-25T11:05:04.044Z", "reply_count": 0, "reply_to_post_number": 37, "quote_count": 0, "incoming_link_count": 2, "reads": 36, "readers_count": 35, "score": 17.2, "yours": false, "topic_id": 3482, "topic_slug": "attribute-refactoring", "display_username": "Eugene Kozlov", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Core developer", "title_is_group": false, "reply_to_user": {"username": "KonstantTom", "name": "Konstantin Tomashevich", "avatar_template": "/user_avatar/discourse.urho3d.io/konstanttom/{size}/203_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 484, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 20403, "name": "", "username": "Enhex", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png", "created_at": "2017-08-25T12:25:24.482Z", "cooked": "<p>Did some initial prototyping for generic serialization.<br>\nNote that it\u2019s a simple prototype showing generic serialization(only) implementation, and not drop-in replacement for Urho\u2019s attributes.</p>\n<p><a href=\"https://wandbox.org/permlink/ib1BFzZ32aGTTWP8\" rel=\"nofollow noopener\">Simple introduction example for variadic templates usage</a>.<br>\n<a href=\"https://gist.github.com/Enhex/4d42ef13dda1681eaac7ae6ead25669c\" rel=\"nofollow noopener\">Example of generic serialization to file</a>.</p>", "post_number": 39, "post_type": 1, "updated_at": "2017-08-25T12:25:24.482Z", "reply_count": 1, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 36, "readers_count": 35, "score": 12.2, "yours": false, "topic_id": 3482, "topic_slug": "attribute-refactoring", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "https://wandbox.org/permlink/ib1BFzZ32aGTTWP8", "internal": false, "reflection": false, "title": "[Wandbox]\u4e09\u3078( \u3078\u055e\u0a0a \u055e)\u3078 \uff8a\uff6f\uff8a\uff6f", "clicks": 13}, {"url": "https://gist.github.com/Enhex/4d42ef13dda1681eaac7ae6ead25669c", "internal": false, "reflection": false, "title": "generic_serialization.cpp \u00b7 GitHub", "clicks": 12}], "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 184, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 20404, "name": "Eugene Kozlov", "username": "Eugene", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png", "created_at": "2017-08-25T12:34:24.527Z", "cooked": "<p>Will you try to make your serialization meet at least these weak requirements?</p>\n<aside class=\"quote no-group\" data-username=\"Eugene\" data-post=\"36\" data-topic=\"3482\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/eugene/40/902_2.png\" class=\"avatar\"> Eugene:</div>\n<blockquote>\n<p>Of course, The System shall be able to serialize variant attributes of the object. Either all attributes simultaneously or one-by-one.</p>\n<p>The System shall store and provide access to attribute information: attribute name, enum names, default values, attribute flags and metadata.</p>\n<p>The System shall allow to iterate over attributes.</p>\n<p>The System shall support attributes with custom setters and getters.</p>\n</blockquote>\n</aside>", "post_number": 40, "post_type": 1, "updated_at": "2017-08-25T12:34:24.527Z", "reply_count": 1, "reply_to_post_number": 39, "quote_count": 1, "incoming_link_count": 0, "reads": 38, "readers_count": 37, "score": 12.6, "yours": false, "topic_id": 3482, "topic_slug": "attribute-refactoring", "display_username": "Eugene Kozlov", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Core developer", "title_is_group": false, "reply_to_user": {"username": "Enhex", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 484, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 20405, "name": "", "username": "Enhex", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png", "created_at": "2017-08-25T12:46:45.970Z", "cooked": "<aside class=\"quote no-group\" data-username=\"Eugene\" data-post=\"40\" data-topic=\"3482\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/eugene/40/902_2.png\" class=\"avatar\"> Eugene:</div>\n<blockquote>\n<p>serialize variant attributes</p>\n</blockquote>\n</aside>\n<p>That\u2019s what we need to fix.</p>\n<p>You\u2019re confusing serialization and other features related to attributes.<br>\nSerialization is just about reading and writing, it isn\u2019t responsible all the other things u listed.<br>\nSerialization can use setters and getters, you can specialize the type\u2019s serialization for input and output, and call set / get in each.</p>\n<p>And the core problem is the use of variant, which create limitations that lead to kludges (already explained how).<br>\nNaming, default values, etc don\u2019t use variant therefore there\u2019s no problem to fix here.</p>\n<p>There are only 2 things that I know of that use variant - attribute serialization and animation.</p>", "post_number": 41, "post_type": 1, "updated_at": "2017-08-25T12:46:45.970Z", "reply_count": 1, "reply_to_post_number": 40, "quote_count": 1, "incoming_link_count": 0, "reads": 34, "readers_count": 33, "score": 11.8, "yours": false, "topic_id": 3482, "topic_slug": "attribute-refactoring", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 184, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 20406, "name": "Eugene Kozlov", "username": "Eugene", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png", "created_at": "2017-08-25T13:11:08.264Z", "cooked": "<aside class=\"quote\" data-post=\"41\" data-topic=\"3482\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/enhex/40/81_1.png\" class=\"avatar\"> Enhex:</div>\n<blockquote>\n<p>That\u2019s what we need to fix.</p>\n</blockquote>\n</aside>\n<p>I meant, serialize types supported by variant.</p>\n<blockquote>\n<p>You\u2019re confusing serialization and other features related to attributes<br>\nSerialization is just about reading and writing, it isn\u2019t responsible all the other things u listed</p>\n</blockquote>\n<p>Urho don\u2019t need plain serialization like cereal per se.<br>\nUrho need attribute system that allows to treat object as group of named and parameterized attributes.<br>\nSerialization is just an usage of this attribute system.<br>\nHave you tried to prototype such attribute system without Variant? It\u2019s hard for me to even imagine it.</p>", "post_number": 42, "post_type": 1, "updated_at": "2017-08-25T13:11:51.328Z", "reply_count": 1, "reply_to_post_number": 41, "quote_count": 1, "incoming_link_count": 0, "reads": 35, "readers_count": 34, "score": 12.0, "yours": false, "topic_id": 3482, "topic_slug": "attribute-refactoring", "display_username": "Eugene Kozlov", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Core developer", "title_is_group": false, "reply_to_user": {"username": "Enhex", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 484, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 20407, "name": "", "username": "Enhex", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png", "created_at": "2017-08-25T13:34:12.244Z", "cooked": "<aside class=\"quote no-group\" data-username=\"Eugene\" data-post=\"42\" data-topic=\"3482\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/eugene/40/902_2.png\" class=\"avatar\"> Eugene:</div>\n<blockquote>\n<p>I meant, serialize types supported by variant.</p>\n</blockquote>\n</aside>\n<p>It\u2019s trivial.<br>\nFirst of all in the example I automatically generate serialization for arithmetic types, that includes all the kinds of integers and floats.<br>\nI updated the example with a Vector3 class. Serializing it is this simple:</p>\n<pre><code class=\"lang-auto\">template&lt;typename Stream&gt;\nvoid serialize(Stream&amp; f, Vector3&amp; value) {\n\tread_or_write(f, value);\n}\n</code></pre>\n<p>We don\u2019t need to completely replace all of Urho\u2019s attributes system. Just get rid of the use of variant where it causes limitations and can be replaced with a better solution.</p>", "post_number": 43, "post_type": 1, "updated_at": "2017-08-25T13:34:12.244Z", "reply_count": 1, "reply_to_post_number": null, "quote_count": 1, "incoming_link_count": 0, "reads": 39, "readers_count": 38, "score": 12.8, "yours": false, "topic_id": 3482, "topic_slug": "attribute-refactoring", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 184, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 20408, "name": "Eugene Kozlov", "username": "Eugene", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png", "created_at": "2017-08-25T13:41:21.136Z", "cooked": "<aside class=\"quote\" data-post=\"43\" data-topic=\"3482\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/enhex/40/81_1.png\" class=\"avatar\"> Enhex:</div>\n<blockquote>\n<p>Just get rid of the use of variant where it causes limitations and can be replaced with a better solution</p>\n</blockquote>\n</aside>\n<p>Variant is the basement of Urho attributes. How do you replace it with templates?</p>", "post_number": 44, "post_type": 1, "updated_at": "2017-08-25T13:42:01.640Z", "reply_count": 1, "reply_to_post_number": 43, "quote_count": 1, "incoming_link_count": 0, "reads": 41, "readers_count": 40, "score": 13.2, "yours": false, "topic_id": 3482, "topic_slug": "attribute-refactoring", "display_username": "Eugene Kozlov", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Core developer", "title_is_group": false, "reply_to_user": {"username": "Enhex", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 484, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 20409, "name": "Lasse \u00d6\u00f6rni", "username": "cadaver", "avatar_template": "/user_avatar/discourse.urho3d.io/cadaver/{size}/3_2.png", "created_at": "2017-08-25T14:08:14.442Z", "cooked": "<p>In the Tundra project we had attributes with templates / subclasses.</p>\n<p><aside class=\"onebox githubblob\">\n  <header class=\"source\">\n      <a href=\"https://github.com/realXtend/tundra-urho3d/blob/master/src/TundraCore/Scene/IAttribute.h\" target=\"_blank\" rel=\"nofollow noopener\">github.com</a>\n  </header>\n  <article class=\"onebox-body\">\n    <h4><a href=\"https://github.com/realXtend/tundra-urho3d/blob/master/src/TundraCore/Scene/IAttribute.h\" target=\"_blank\" rel=\"nofollow noopener\">realXtend/tundra-urho3d/blob/master/src/TundraCore/Scene/IAttribute.h</a></h4>\n<pre><code class=\"lang-h\">/**\n    For conditions of distribution and use, see copyright notice in LICENSE\n\n    @file   IAttribute.h\n    @brief  Abstract base class and template class implementations for entity-component attributes. */\n\n#pragma once\n\n#include \"TundraCoreApi.h\"\n#include \"CoreDefines.h\"\n#include \"CoreTypes.h\"\n#include \"AttributeChangeType.h\"\n#include \"SceneFwd.h\"\n\n#include &lt;Urho3D/Container/Ptr.h&gt;\n#include &lt;Urho3D/Container/Str.h&gt;\n\nnamespace Tundra\n{\n\n</code></pre>\n\n  This file has been truncated. <a href=\"https://github.com/realXtend/tundra-urho3d/blob/master/src/TundraCore/Scene/IAttribute.h\" target=\"_blank\" rel=\"nofollow noopener\">show original</a>\n\n  </article>\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n  <div style=\"clear: both\"></div>\n</aside>\n<br>\n<aside class=\"onebox githubblob\">\n  <header class=\"source\">\n      <a href=\"https://github.com/realXtend/tundra-urho3d/blob/master/src/TundraCore/Scene/IAttribute.cpp\" target=\"_blank\" rel=\"nofollow noopener\">github.com</a>\n  </header>\n  <article class=\"onebox-body\">\n    <h4><a href=\"https://github.com/realXtend/tundra-urho3d/blob/master/src/TundraCore/Scene/IAttribute.cpp\" target=\"_blank\" rel=\"nofollow noopener\">realXtend/tundra-urho3d/blob/master/src/TundraCore/Scene/IAttribute.cpp</a></h4>\n<pre><code class=\"lang-cpp\">/**\n    For conditions of distribution and use, see copyright notice in LICENSE\n\n    @file   IAttribute.cpp\n    @brief  Abstract base class and template class for entity-component attributes. */\n\n#include \"StableHeaders.h\"\n\n#include \"IAttribute.h\"\n#include \"Entity.h\"\n#include \"IComponent.h\"\n#include \"CoreTypes.h\"\n#include \"CoreDefines.h\"\n#include \"CoreStringUtils.h\"\n#include \"AssetReference.h\"\n#include \"EntityReference.h\"\n#include \"Math/Transform.h\"\n#include \"Math/Color.h\"\n#include \"Math/Point.h\"\n#include \"LoggingFunctions.h\"\n</code></pre>\n\n  This file has been truncated. <a href=\"https://github.com/realXtend/tundra-urho3d/blob/master/src/TundraCore/Scene/IAttribute.cpp\" target=\"_blank\" rel=\"nofollow noopener\">show original</a>\n\n  </article>\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n  <div style=\"clear: both\"></div>\n</aside>\n</p>\n<p>Not necessarily prettier. Another part of using Variant is that you gain freeform data for scripting.</p>", "post_number": 45, "post_type": 1, "updated_at": "2017-08-25T14:08:14.442Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 6, "reads": 44, "readers_count": 43, "score": 53.8, "yours": false, "topic_id": 3482, "topic_slug": "attribute-refactoring", "display_username": "Lasse \u00d6\u00f6rni", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "https://github.com/realXtend/tundra-urho3d/blob/master/src/TundraCore/Scene/IAttribute.h", "internal": false, "reflection": false, "title": "tundra-urho3d/IAttribute.h at master \u00b7 realXtend/tundra-urho3d \u00b7 GitHub", "clicks": 7}, {"url": "https://github.com/realXtend/tundra-urho3d/blob/master/src/TundraCore/Scene/IAttribute.cpp", "internal": false, "reflection": false, "title": "tundra-urho3d/IAttribute.cpp at master \u00b7 realXtend/tundra-urho3d \u00b7 GitHub", "clicks": 5}], "read": true, "user_title": "Urho3D Author", "title_is_group": false, "bookmarked": false, "actions_summary": [{"id": 2, "count": 1}], "moderator": false, "admin": true, "staff": true, "user_id": 3, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 20410, "name": "", "username": "Enhex", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png", "created_at": "2017-08-25T14:08:33.695Z", "cooked": "<aside class=\"quote no-group\" data-username=\"Eugene\" data-post=\"44\" data-topic=\"3482\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/eugene/40/902_2.png\" class=\"avatar\"> Eugene:</div>\n<blockquote>\n<p>How do you replace it with templates?</p>\n</blockquote>\n</aside>\n<ul>\n<li>Identify what are the problems Variant is used for.</li>\n<li>Prototype a better solution in isolation so you don\u2019t have to deal with external complexity.</li>\n<li>Integrate the better solution to replace the previous solution.</li>\n</ul>\n<p>Again, I only came across variant being used for serialization and animation, and in both cases I don\u2019t see any necessity to use variant instead of generic templates.<br>\nSo the next step is to prototype a generic solution for attribute animation. That may be more complicated since animations are dynamically added.</p>\n<p>Later on we need to see how they\u2019re integrated into Urho - that may lead to more refactoring as other code that interacts with the previous systems uses variant.</p>", "post_number": 46, "post_type": 1, "updated_at": "2017-08-25T14:10:24.603Z", "reply_count": 2, "reply_to_post_number": 44, "quote_count": 1, "incoming_link_count": 0, "reads": 41, "readers_count": 40, "score": 18.2, "yours": false, "topic_id": 3482, "topic_slug": "attribute-refactoring", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 184, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 20411, "name": "Eugene Kozlov", "username": "Eugene", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png", "created_at": "2017-08-25T15:07:03.239Z", "cooked": "<p>If we make hierarchy like in Tundra<br>\nAttributeInfo &lt;- AttributeInfoImpl</p>\n<ol>\n<li>AttributeInfo shall have virtual Save/Load XML/JSon/Binary for serialization (PImpl-ed);</li>\n<li>AttributeInfo shall have virtual SetVariant to work with ValueAnimation resource (just postpone the problem for now);</li>\n<li>We shall expose all AttributeInfoImpl to AS and update Editor code.</li>\n</ol>", "post_number": 47, "post_type": 1, "updated_at": "2017-08-25T15:09:26.715Z", "reply_count": 0, "reply_to_post_number": 46, "quote_count": 0, "incoming_link_count": 1, "reads": 41, "readers_count": 40, "score": 13.2, "yours": false, "topic_id": 3482, "topic_slug": "attribute-refactoring", "display_username": "Eugene Kozlov", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Core developer", "title_is_group": false, "reply_to_user": {"username": "Enhex", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 484, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 20426, "name": "Eugene Kozlov", "username": "Eugene", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png", "created_at": "2017-08-26T12:59:07.009Z", "cooked": "<p>Here is one more important change.<br>\nI replaced attribute accessor with function pointers and used lambda <em>for each</em> attribute macro.</p>\n<p>Pros:</p>\n<ul>\n<li>Removed <code>AttributeTrait</code>, <code>MixedAttributeTrait</code> and the whole hierarchy of <code>AttributeAccessor</code>;</li>\n<li>Removed one virtual call on attribute set/get;</li>\n<li>Things are more generic now, <strong>accessors don\u2019t have to match the exact type anymore</strong>\n</li>\n<li>So, <code>URHO3D_MIXED_ACCESSOR_ATTRIBUTE</code> is deprecated (not removed, of course), use <code>URHO3D_ACCESSOR_ATTRIBUTE</code> instead.</li>\n</ul>\n<p>Cons:</p>\n<ul>\n<li>??? things have changed, maybe</li>\n</ul>\n<aside class=\"quote\" data-post=\"46\" data-topic=\"3482\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/enhex/40/81_1.png\" class=\"avatar\"> Enhex:</div>\n<blockquote>\n<p>Later on we need to see how they\u2019re integrated into Urho - that may lead to more refactoring as other code that interacts with the previous systems uses variant.</p>\n</blockquote>\n</aside>\n<p>Getting rid of Variant in attributes will make script API more complicated and cause a lot of work, so I am not going to work on it. Despite the fact that serialization could became faster without Variant casting.<br>\nYou could try to do it on your own if you have enough passion.</p>", "post_number": 48, "post_type": 1, "updated_at": "2017-08-26T12:59:07.009Z", "reply_count": 1, "reply_to_post_number": 46, "quote_count": 1, "incoming_link_count": 0, "reads": 41, "readers_count": 40, "score": 13.2, "yours": false, "topic_id": 3482, "topic_slug": "attribute-refactoring", "display_username": "Eugene Kozlov", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Core developer", "title_is_group": false, "reply_to_user": {"username": "Enhex", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 484, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 20430, "name": "", "username": "Enhex", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png", "created_at": "2017-08-26T14:17:44.445Z", "cooked": "<aside class=\"quote no-group\" data-username=\"Eugene\" data-post=\"48\" data-topic=\"3482\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/eugene/40/902_2.png\" class=\"avatar\"> Eugene:</div>\n<blockquote>\n<p>I replaced attribute accessor with function pointers</p>\n</blockquote>\n</aside>\n<p>Instead of function pointers you can use template functors. It will allow inlining lambdas and functions. <a href=\"https://github.com/Enhex/Benchmarks/tree/master/lambda%20std%20function%20vs%20template%20parameter\" rel=\"noopener nofollow ugc\">Example</a></p>\n<aside class=\"quote no-group\" data-username=\"Eugene\" data-post=\"48\" data-topic=\"3482\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/eugene/40/902_2.png\" class=\"avatar\"> Eugene:</div>\n<blockquote>\n<p>Getting rid of Variant in attributes will make script API more complicated</p>\n</blockquote>\n</aside>\n<p>How will it make things more complicated?</p>", "post_number": 49, "post_type": 1, "updated_at": "2017-08-26T14:23:07.877Z", "reply_count": 1, "reply_to_post_number": 48, "quote_count": 1, "incoming_link_count": 0, "reads": 41, "readers_count": 40, "score": 13.2, "yours": false, "topic_id": 3482, "topic_slug": "attribute-refactoring", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 2, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "https://github.com/Enhex/Benchmarks/tree/master/lambda%20std%20function%20vs%20template%20parameter", "internal": false, "reflection": false, "clicks": 6}], "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 184, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 20433, "name": "Eugene Kozlov", "username": "Eugene", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png", "created_at": "2017-08-26T14:45:48.027Z", "cooked": "<aside class=\"quote\" data-post=\"49\" data-topic=\"3482\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/enhex/40/81_1.png\" class=\"avatar\"> Enhex:</div>\n<blockquote>\n<p>How will it make things more complicated?</p>\n</blockquote>\n</aside>\n<p>This is just a guess.<br>\nVariant is simple. It\u2019s plain type, that is easy to pass to function, return from function or facade to script API. Once you replace straightforward value type with virtual hierarchy, it causes wide scale refactoring. Try to get attributes from the Tundra and fit them into Urho-s <code>ScriptInstance</code>.</p>\n<aside class=\"quote\" data-post=\"49\" data-topic=\"3482\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/enhex/40/81_1.png\" class=\"avatar\"> Enhex:</div>\n<blockquote>\n<p>Instead of function pointers you can use template functors</p>\n</blockquote>\n</aside>\n<p>I cannot because AttributeInfo is non-template.</p>", "post_number": 50, "post_type": 1, "updated_at": "2017-08-26T14:45:48.027Z", "reply_count": 1, "reply_to_post_number": 49, "quote_count": 1, "incoming_link_count": 0, "reads": 40, "readers_count": 39, "score": 13.0, "yours": false, "topic_id": 3482, "topic_slug": "attribute-refactoring", "display_username": "Eugene Kozlov", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Core developer", "title_is_group": false, "reply_to_user": {"username": "Enhex", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 484, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 20434, "name": "", "username": "Enhex", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png", "created_at": "2017-08-26T15:24:59.362Z", "cooked": "<p>It isn\u2019t a simple type, it\u2019s like a union. You have to manually handle each case for each type.</p>\n<p>Why use virtual hierarchy as a replacement?</p>\n<p>Of course it would cause wide scale refactoring.<br>\nIf we can\u2019t find a way to fix things without causing performance regression, I suggest dropping this issue for now.<br>\nThe current attributes system isn\u2019t broken. It\u2019s better to focus on something else.</p>", "post_number": 51, "post_type": 1, "updated_at": "2017-08-26T15:24:59.362Z", "reply_count": 1, "reply_to_post_number": 50, "quote_count": 0, "incoming_link_count": 0, "reads": 36, "readers_count": 35, "score": 12.2, "yours": false, "topic_id": 3482, "topic_slug": "attribute-refactoring", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "reply_to_user": {"username": "Eugene", "name": "Eugene Kozlov", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 184, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 20436, "name": "Eugene Kozlov", "username": "Eugene", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png", "created_at": "2017-08-26T15:47:19.266Z", "cooked": "<aside class=\"quote\" data-post=\"51\" data-topic=\"3482\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/enhex/40/81_1.png\" class=\"avatar\"> Enhex:</div>\n<blockquote>\n<p>If we can\u2019t find a way to fix things without causing performance regression, I suggest dropping this issue for now.</p>\n</blockquote>\n</aside>\n<p>Probably I misunderstood something. Where do you see performance regression?</p>", "post_number": 53, "post_type": 1, "updated_at": "2017-08-26T15:47:19.266Z", "reply_count": 1, "reply_to_post_number": 51, "quote_count": 1, "incoming_link_count": 0, "reads": 36, "readers_count": 35, "score": 12.2, "yours": false, "topic_id": 3482, "topic_slug": "attribute-refactoring", "display_username": "Eugene Kozlov", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Core developer", "title_is_group": false, "reply_to_user": {"username": "Enhex", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 484, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 20437, "name": "", "username": "Enhex", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png", "created_at": "2017-08-26T16:51:39.691Z", "cooked": "<p>earlier you reported your fix reduced performance</p>", "post_number": 54, "post_type": 1, "updated_at": "2017-08-26T16:51:39.691Z", "reply_count": 1, "reply_to_post_number": 53, "quote_count": 0, "incoming_link_count": 0, "reads": 35, "readers_count": 34, "score": 12.0, "yours": false, "topic_id": 3482, "topic_slug": "attribute-refactoring", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "reply_to_user": {"username": "Eugene", "name": "Eugene Kozlov", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 184, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 20438, "name": "Eugene Kozlov", "username": "Eugene", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png", "created_at": "2017-08-26T17:07:51.292Z", "cooked": "<aside class=\"quote\" data-post=\"54\" data-topic=\"3482\" data-full=\"true\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/enhex/40/81_1.png\" class=\"avatar\"> Enhex:</div>\n<blockquote>\n<p>earlier you reported your fix reduced performance</p>\n</blockquote>\n</aside>\n<p>My fix is unrelated here.<br>\nIn release mode accessor attributes are negligibly slower than offset attributes probably due to two extra pointer-to-function calls. Negligibly means that measurement error is greater than the difference.</p>\n<p>I can not get the idea of better attribute refactoring out of my head, btw\u2026</p>", "post_number": 55, "post_type": 1, "updated_at": "2017-08-26T17:07:51.292Z", "reply_count": 0, "reply_to_post_number": 54, "quote_count": 1, "incoming_link_count": 0, "reads": 35, "readers_count": 34, "score": 7.0, "yours": false, "topic_id": 3482, "topic_slug": "attribute-refactoring", "display_username": "Eugene Kozlov", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Core developer", "title_is_group": false, "reply_to_user": {"username": "Enhex", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 484, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 20448, "name": "Yao Wei Tjong", "username": "weitjong", "avatar_template": "/user_avatar/discourse.urho3d.io/weitjong/{size}/4_2.png", "created_at": "2017-08-26T23:56:10.347Z", "cooked": "<p>I have to agree with Enhex on this. If ain\u2019t broken then don\u2019t fix it. Or perhaps don\u2019t do it now until you have more overview or more comfortable with the code base.</p>\n<p>At a quick glance on the last commit in the master branch, I don\u2019t feel it has went through all the basic use cases yet. I could be wrong though, but it looks like the refactoring work is incomplete as it has only done on those cases where the <code>Serializable::OnSetAttribute()</code> are being overridden. Also, it does not feel that right (at least to me) to have so many almost identical accessor methods. It bloats the code base unnecessarily.</p>\n<p>I think the last commit should be reverted back first and keep it in a new topic branch. The work can be continued in the branch if there is really such need. And when the whole refactoring is done then a pull request is made to ask the lib users to evaluate, before actually merging. I think Lasse would do it like this for fundamental change.</p>", "post_number": 56, "post_type": 1, "updated_at": "2017-08-26T23:56:10.347Z", "reply_count": 1, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 1, "reads": 36, "readers_count": 35, "score": 17.2, "yours": false, "topic_id": 3482, "topic_slug": "attribute-refactoring", "display_username": "Yao Wei Tjong", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Admin", "title_is_group": false, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": true, "staff": true, "user_id": 4, "hidden": false, "trust_level": 4, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 20449, "name": "Eugene Kozlov", "username": "Eugene", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png", "created_at": "2017-08-27T00:22:58.629Z", "cooked": "<blockquote>\n<p>At a quick glance on the last commit in the master branch, I don\u2019t feel it has went through all the basic use cases yet. I could be wrong though, but it looks like the refactoring work is incomplete as it has only done on those cases where the Serializable::OnSetAttribute() are being overridden.</p>\n</blockquote>\n<p>Commit in the master is not heavily tied to this attribute refactoring, I wanted to do it anyway.<br>\nIf the Component need an action on attribute set, it shall explicitly state this action.<br>\nif-cascades in <code>OnSetAttribute</code> are a bit too ugly.<br>\nI could (ok, <em>you could</em>) revert this commit if you don\u2019t like the implementation, but I don\u2019t want to keep attribute hooks in <code>OnSetAttribute</code>. They looks like they came from the pre-accessor epoch when all logic had to be implemented inside <code>OnSetAttribute</code>.</p>", "post_number": 57, "post_type": 1, "updated_at": "2017-08-27T00:24:29.009Z", "reply_count": 0, "reply_to_post_number": 56, "quote_count": 0, "incoming_link_count": 0, "reads": 40, "readers_count": 39, "score": 8.0, "yours": false, "topic_id": 3482, "topic_slug": "attribute-refactoring", "display_username": "Eugene Kozlov", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Core developer", "title_is_group": false, "reply_to_user": {"username": "weitjong", "name": "Yao Wei Tjong", "avatar_template": "/user_avatar/discourse.urho3d.io/weitjong/{size}/4_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 484, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 20450, "name": "Yao Wei Tjong", "username": "weitjong", "avatar_template": "/user_avatar/discourse.urho3d.io/weitjong/{size}/4_2.png", "created_at": "2017-08-27T00:41:30.054Z", "cooked": "<p>I believe all the related commits for a fundamental change should go in together as a whole instead of piecemeal. The last commit appears to be a small part of the whole work to me.</p>", "post_number": 58, "post_type": 1, "updated_at": "2017-08-27T00:42:34.745Z", "reply_count": 1, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 38, "readers_count": 37, "score": 12.6, "yours": false, "topic_id": 3482, "topic_slug": "attribute-refactoring", "display_username": "Yao Wei Tjong", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Admin", "title_is_group": false, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": true, "staff": true, "user_id": 4, "hidden": false, "trust_level": 4, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 20451, "name": "Eugene Kozlov", "username": "Eugene", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png", "created_at": "2017-08-27T00:48:40.973Z", "cooked": "<p>Now I have an idea how to get rid of the hooks without such amouth of methods\u2026<br>\nI reverted last commit. It was big and unpleasant, I agree.</p>", "post_number": 59, "post_type": 1, "updated_at": "2017-08-27T00:48:40.973Z", "reply_count": 0, "reply_to_post_number": 58, "quote_count": 0, "incoming_link_count": 0, "reads": 39, "readers_count": 38, "score": 52.8, "yours": false, "topic_id": 3482, "topic_slug": "attribute-refactoring", "display_username": "Eugene Kozlov", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Core developer", "title_is_group": false, "reply_to_user": {"username": "weitjong", "name": "Yao Wei Tjong", "avatar_template": "/user_avatar/discourse.urho3d.io/weitjong/{size}/4_2.png"}, "bookmarked": false, "actions_summary": [{"id": 2, "count": 1}], "moderator": false, "admin": false, "staff": false, "user_id": 484, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 20454, "name": "Lasse \u00d6\u00f6rni", "username": "cadaver", "avatar_template": "/user_avatar/discourse.urho3d.io/cadaver/{size}/3_2.png", "created_at": "2017-08-27T10:12:49.544Z", "cooked": "<p>The accessor hooks are / were a tool, because they were available, they got used, for better or worse. Whatever was most convenient.</p>\n<p>In this case the price of removing them is the introduction of (more) functions needed only for the manipulation of attributes. I don\u2019t see a way around this, at least immediately. Ideally the attribute accessors would be just the same as the component\u2019s public API, but in case of ID attributes and such, it needs those \u201cfictional\u201d functions just for the attributes. A \u201cdeeper\u201d solution might transform pointers to / from IDs and resource refs directly.</p>", "post_number": 60, "post_type": 1, "updated_at": "2017-08-27T10:31:16.636Z", "reply_count": 2, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 43, "readers_count": 42, "score": 18.6, "yours": false, "topic_id": 3482, "topic_slug": "attribute-refactoring", "display_username": "Lasse \u00d6\u00f6rni", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 2, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Urho3D Author", "title_is_group": false, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": true, "staff": true, "user_id": 3, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 20455, "name": "Eugene Kozlov", "username": "Eugene", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png", "created_at": "2017-08-27T10:34:41.957Z", "cooked": "<aside class=\"quote\" data-post=\"60\" data-topic=\"3482\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/cadaver/40/3_1.png\" class=\"avatar\"> cadaver:</div>\n<blockquote>\n<p>Ideally the attribute accessors would be just the same as the component\u2019s public API</p>\n</blockquote>\n</aside>\n<p>I see one more problem here. Public API do the work immediatelly, but attribute setters postpone heavy actions for ApplyAttributes. E.g. CollisionShape::SetShapeType updates shape and rigid body, but attribute accessor just set the <code>recreateShape_ = true</code> flag. This is also dirty: two separate mechanisms of doing the same work.</p>\n<aside class=\"quote\" data-post=\"60\" data-topic=\"3482\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/cadaver/40/3_1.png\" class=\"avatar\"> cadaver:</div>\n<blockquote>\n<p>I don\u2019t see a way around this, at least immediately.</p>\n</blockquote>\n</aside>\n<p>For example, the action could be explicitly specified in the attribute declaration. So it would be explicitly stated that attribute A setup cause MarkSomethingDirty, attribute B setup cause MarkSomethingElseDirty and attribute C setup cause ValidateThisThisAndThis.</p>\n<p>However, it doesn\u2019t fix generic problem with GetSmthAttr+GetSmth pairs.</p>", "post_number": 61, "post_type": 1, "updated_at": "2017-08-27T10:40:44.963Z", "reply_count": 0, "reply_to_post_number": 60, "quote_count": 1, "incoming_link_count": 1, "reads": 42, "readers_count": 41, "score": 13.4, "yours": false, "topic_id": 3482, "topic_slug": "attribute-refactoring", "display_username": "Eugene Kozlov", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 2, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Core developer", "title_is_group": false, "reply_to_user": {"username": "cadaver", "name": "Lasse \u00d6\u00f6rni", "avatar_template": "/user_avatar/discourse.urho3d.io/cadaver/{size}/3_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 484, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 20458, "name": "Lasse \u00d6\u00f6rni", "username": "cadaver", "avatar_template": "/user_avatar/discourse.urho3d.io/cadaver/{size}/3_2.png", "created_at": "2017-08-27T11:55:53.303Z", "cooked": "<p>I\u2019m talking idealistically now, so in practice any changes might be unfeasible or cause performance loss, but it seems a bit of an antipattern that there even is a difference between the public API and attribute access, in regard to this \u201clate\u201d setting of heavy state. After all, if you\u2019re instantiating something purely in code, you\u2019re going to make several public API calls to set the state anyway.</p>\n<p>For example collision shape recreation or other heavy operations could be made to happen on demand before next Bullet update if needed, etc. regardless of which route the change was made.</p>\n<p>But of course, this is just daydreaming, there\u2019s surely a lot of improvements to Urho that could be made that are more important than this.</p>", "post_number": 62, "post_type": 1, "updated_at": "2017-08-27T12:31:15.377Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 41, "readers_count": 40, "score": 8.2, "yours": false, "topic_id": 3482, "topic_slug": "attribute-refactoring", "display_username": "Lasse \u00d6\u00f6rni", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 2, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Urho3D Author", "title_is_group": false, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": true, "staff": true, "user_id": 3, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 20460, "name": "", "username": "elix22", "avatar_template": "/user_avatar/discourse.urho3d.io/elix22/{size}/1437_2.png", "created_at": "2017-08-27T12:46:13.196Z", "cooked": "<p>Just my 2 cents<br>\nSince you already moved  to C++11.<br>\nTake a look at the following:<br>\n<aside class=\"onebox whitelistedgeneric\">\n  <header class=\"source\">\n      <img src=\"https://assets-cdn.github.com/favicon.ico\" class=\"site-icon\" width=\"32\" height=\"32\">\n      <a href=\"https://github.com/billyquith/ponder\" target=\"_blank\" rel=\"nofollow noopener\">GitHub</a>\n  </header>\n  <article class=\"onebox-body\">\n    <img src=\"https://avatars2.githubusercontent.com/u/1754471?s=400&amp;v=4\" class=\"thumbnail onebox-avatar\" width=\"400\" height=\"400\">\n\n<h3><a href=\"https://github.com/billyquith/ponder\" target=\"_blank\" rel=\"nofollow noopener\">billyquith/ponder</a></h3>\n\n<p>ponder - C++ reflection library</p>\n\n\n  </article>\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n  <div style=\"clear: both\"></div>\n</aside>\n</p>", "post_number": 63, "post_type": 1, "updated_at": "2017-08-27T12:46:13.196Z", "reply_count": 1, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 42, "readers_count": 41, "score": 13.4, "yours": false, "topic_id": 3482, "topic_slug": "attribute-refactoring", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "https://github.com/billyquith/ponder", "internal": false, "reflection": false, "title": "GitHub - billyquith/ponder: C++ reflection library", "clicks": 22}], "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 809, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 20461, "name": "Yao Wei Tjong", "username": "weitjong", "avatar_template": "/user_avatar/discourse.urho3d.io/weitjong/{size}/4_2.png", "created_at": "2017-08-27T13:32:43.533Z", "cooked": "<p>It looks neat but I wonder about its performance. As we all know the reflection approach is usually slower.</p>", "post_number": 64, "post_type": 1, "updated_at": "2017-08-27T13:32:43.533Z", "reply_count": 0, "reply_to_post_number": 63, "quote_count": 0, "incoming_link_count": 6, "reads": 41, "readers_count": 40, "score": 38.2, "yours": false, "topic_id": 3482, "topic_slug": "attribute-refactoring", "display_username": "Yao Wei Tjong", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Admin", "title_is_group": false, "reply_to_user": {"username": "elix22", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/elix22/{size}/1437_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": true, "staff": true, "user_id": 4, "hidden": false, "trust_level": 4, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 20473, "name": "Eugene Kozlov", "username": "Eugene", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png", "created_at": "2017-08-28T09:25:36.541Z", "cooked": "<aside class=\"quote\" data-post=\"60\" data-topic=\"3482\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/cadaver/40/3_1.png\" class=\"avatar\"> cadaver:</div>\n<blockquote>\n<p>I don\u2019t see a way around this, at least immediately.</p>\n</blockquote>\n</aside>\n<p>However, there are semi-optimal solutions that both not very heavy and and help to avoid public API bloating.</p>\n<p>Getter and setter could be written as lambda function inside RegisterObject even now, but it\u2019s not the shortest and the simplest solution.</p>\n<p>It migth be better to specify epilogue (post-set) action in the non-accessor attribute declaration. Such changes will require some design effort, but the attributes will be more straightforward than with OnSetAttr hooks. I\u2019ll try to implement this.</p>", "post_number": 65, "post_type": 1, "updated_at": "2017-08-28T09:25:36.541Z", "reply_count": 0, "reply_to_post_number": 60, "quote_count": 1, "incoming_link_count": 2, "reads": 43, "readers_count": 42, "score": 18.6, "yours": false, "topic_id": 3482, "topic_slug": "attribute-refactoring", "display_username": "Eugene Kozlov", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Core developer", "title_is_group": false, "reply_to_user": {"username": "cadaver", "name": "Lasse \u00d6\u00f6rni", "avatar_template": "/user_avatar/discourse.urho3d.io/cadaver/{size}/3_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 484, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 21296, "name": "", "username": "rku", "avatar_template": "/user_avatar/discourse.urho3d.io/rku/{size}/3200_2.png", "created_at": "2017-10-17T07:50:47.376Z", "cooked": "<p>Someone recently pointed me to awesome lib that may be relevant in this case. Maybe you people should check it out: <a href=\"http://www.rttr.org/\" rel=\"nofollow noopener\">http://www.rttr.org/</a></p>", "post_number": 66, "post_type": 1, "updated_at": "2017-10-17T07:50:47.376Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 1, "reads": 36, "readers_count": 35, "score": 12.2, "yours": false, "topic_id": 3482, "topic_slug": "attribute-refactoring", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "http://www.rttr.org/", "internal": false, "reflection": false, "title": "Home | RTTR", "clicks": 23}], "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 246, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 21666, "name": "Eugene Kozlov", "username": "Eugene", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png", "created_at": "2017-11-11T17:04:26.926Z", "cooked": "<p>I have to go back to this task, so here is new revision.<br>\n<a href=\"https://github.com/urho3d/Urho3D/pull/2091\" class=\"onebox\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/urho3d/Urho3D/pull/2091</a><br>\nI temporarily added some code in HelloWorld to test things, you could check it for example.</p>\n<p><strong>Important changed:</strong></p>\n<ul>\n<li>\n<p>offset_ is removed, all attributes are working via accessors now.</p>\n</li>\n<li>\n<p>So, identifying attribute inside OnSetAttribute by offset doesn\u2019t work anymore.</p>\n</li>\n<li>\n<p>I added <code>URHO3D_ATTRIBUTE_EX</code> and <code>URHO3D_ENUM_ATTRIBUTE_EX</code> that call specified member function when attribute is set (similar to accessor attributes, but this function doesn\u2019t have input arguments). Metadata or attribute name could also be used to identify the attribute, but I decided to avoid this for now. Could be changed.</p>\n</li>\n<li>\n<p>I replaced all <code>URHO3D_*_FREE</code> functions with <code>URHO3D_CUSTOM_ATTRIBUTE</code> and <code>URHO3D_CUSTOM_ENUM_ATTRIBUTE</code> that work with any getter/setter functional objects. Note that these new functions works with Variant type due to performance reasons. Could be changed later.</p>\n</li>\n</ul>\n<p><strong>Benefits:</strong></p>\n<ul>\n<li>\n<p>No UB in attributes anymore!</p>\n</li>\n<li>\n<p>No extra calls (or even less calls) comparing to old version. Every attribute is set or get via the following chain of calls: <code>AttributeAccessor::Set(virtual)-&gt;[internal lambda](probably inline)-&gt;member access or setter/getter call</code></p>\n</li>\n<li>\n<p>No extra memory allocation even for lambda getters/setters</p>\n</li>\n<li>\n<p>No extra copying. Attribute actions are performed directly with Variant came from Serializable code.</p>\n</li>\n<li>\n<p>Exact type matching is not required anymore. It\u2019s enough for member attribure to be <em>convertible</em> to corresponding Variant type. Same for getters and setters, no need in mixed accessors anymore.</p>\n</li>\n<li>\n<p>No more tons of accessors and traits. Compiler resolves all type stuff on its own.</p>\n</li>\n<li>\n<p>Any lambda could be passed as attribute accessors. Note: this lambda should work with Variant directly.</p>\n</li>\n<li>\n<p>Attribute with explicit post-set action is more straightforward than custom logic in OnSetAttribute.</p>\n</li>\n</ul>\n<p><strong>Disadvantages:</strong></p>\n<ul>\n<li>\n<p>Old offset-based attribute identifying doesn\u2019t work anymore.</p>\n</li>\n<li>\n<p>Old type hacks like for Light cascade splits don\u2019t work enymore.</p>\n</li>\n<li>\n<p>Someone may dislike macro magic used to make lambdas. Probably will change it a bit\u2026</p>\n</li>\n<li>\n<p>Attribute identifying may be considered less readable. Feel free to discuss.</p>\n</li>\n</ul>", "post_number": 67, "post_type": 1, "updated_at": "2017-11-11T17:06:04.297Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 35, "readers_count": 34, "score": 82.0, "yours": false, "topic_id": 3482, "topic_slug": "attribute-refactoring", "display_username": "Eugene Kozlov", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "https://github.com/urho3d/Urho3D/pull/2091", "internal": false, "reflection": false, "title": "Attribute refactoring by eugeneko \u00b7 Pull Request #2091 \u00b7 urho3d/Urho3D \u00b7 GitHub", "clicks": 2}], "read": true, "user_title": "Core developer", "title_is_group": false, "bookmarked": false, "actions_summary": [{"id": 2, "count": 3}], "moderator": false, "admin": false, "staff": false, "user_id": 484, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}], "stream": [20312, 20317, 20318, 20321, 20332, 20333, 20334, 20341, 20342, 20343, 20346, 20347, 20349, 20352, 20354, 20360, 20363, 20365, 20366, 20367, 20369, 20372, 20375, 20377, 20378, 20380, 20381, 20384, 20386, 20387, 20388, 20391, 20392, 20393, 20394, 20395, 20397, 20398, 20403, 20404, 20405, 20406, 20407, 20408, 20409, 20410, 20411, 20426, 20430, 20433, 20434, 20436, 20437, 20438, 20448, 20449, 20450, 20451, 20454, 20455, 20458, 20460, 20461, 20473, 21296, 21666]}, "timeline_lookup": [[1, 1917], [18, 1916], [48, 1915], [54, 1914], [64, 1913], [65, 1863], [66, 1837]], "tags_descriptions": {}, "id": 3482, "title": "Attribute refactoring", "fancy_title": "Attribute refactoring", "posts_count": 66, "created_at": "2017-08-23T21:58:51.132Z", "views": 2860, "reply_count": 44, "like_count": 7, "last_posted_at": "2017-11-11T17:04:26.926Z", "visible": true, "closed": false, "archived": false, "has_summary": true, "archetype": "regular", "slug": "attribute-refactoring", "category_id": 16, "word_count": 6194, "deleted_at": null, "user_id": 484, "featured_link": null, "pinned_globally": false, "pinned_at": null, "pinned_until": null, "image_url": null, "slow_mode_seconds": 0, "draft": null, "draft_key": "topic_3482", "draft_sequence": null, "unpinned": null, "pinned": false, "current_post_number": 1, "highest_post_number": 67, "deleted_by": null, "actions_summary": [{"id": 4, "count": 0, "hidden": false, "can_act": false}, {"id": 8, "count": 0, "hidden": false, "can_act": false}, {"id": 7, "count": 0, "hidden": false, "can_act": false}], "chunk_size": 20, "bookmarked": false, "bookmarks": [], "topic_timer": null, "message_bus_last_id": 0, "participant_count": 12, "show_read_indicator": false, "thumbnails": null, "slow_mode_enabled_until": null, "tags_disable_ads": false, "details": {"can_edit": false, "notification_level": 1, "participants": [{"id": 484, "username": "Eugene", "name": "Eugene Kozlov", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png", "post_count": 27, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "trust_level": 2}, {"id": 184, "username": "Enhex", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png", "post_count": 15, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "trust_level": 2}, {"id": 622, "username": "yushli1", "name": "Yushli", "avatar_template": "/user_avatar/discourse.urho3d.io/yushli1/{size}/1163_2.png", "post_count": 7, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "trust_level": 2}, {"id": 3, "username": "cadaver", "name": "Lasse \u00d6\u00f6rni", "avatar_template": "/user_avatar/discourse.urho3d.io/cadaver/{size}/3_2.png", "post_count": 5, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "admin": true, "trust_level": 2}, {"id": 4, "username": "weitjong", "name": "Yao Wei Tjong", "avatar_template": "/user_avatar/discourse.urho3d.io/weitjong/{size}/4_2.png", "post_count": 3, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "admin": true, "trust_level": 4}, {"id": 333, "username": "KonstantTom", "name": "Konstantin Tomashevich", "avatar_template": "/user_avatar/discourse.urho3d.io/konstanttom/{size}/203_2.png", "post_count": 3, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "trust_level": 2}, {"id": 809, "username": "elix22", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/elix22/{size}/1437_2.png", "post_count": 1, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "trust_level": 2}, {"id": 752, "username": "Alex-Doc", "name": "Alex Piola", "avatar_template": "/user_avatar/discourse.urho3d.io/alex-doc/{size}/503_2.png", "post_count": 1, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "trust_level": 2}, {"id": 114, "username": "hdunderscore", "name": "hd_", "avatar_template": "/user_avatar/discourse.urho3d.io/hdunderscore/{size}/1151_2.png", "post_count": 1, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "trust_level": 2}, {"id": 246, "username": "rku", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/rku/{size}/3200_2.png", "post_count": 1, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "trust_level": 2}, {"id": 256, "username": "Lumak", "name": "", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/l/8491ac/{size}.png", "post_count": 1, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "trust_level": 2}, {"id": 37, "username": "TheComet", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/thecomet/{size}/1493_2.png", "post_count": 1, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "trust_level": 2}], "created_by": {"id": 484, "username": "Eugene", "name": "Eugene Kozlov", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png"}, "last_poster": {"id": 484, "username": "Eugene", "name": "Eugene Kozlov", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png"}, "links": [{"url": "https://github.com/urho3d/Urho3D/pull/2091", "title": "Attribute refactoring by eugeneko \u00b7 Pull Request #2091 \u00b7 urho3d/Urho3D \u00b7 GitHub", "internal": false, "attachment": false, "reflection": false, "clicks": 37, "user_id": 484, "domain": "github.com", "root_domain": "github.com"}, {"url": "http://www.rttr.org/", "title": "Home | RTTR", "internal": false, "attachment": false, "reflection": false, "clicks": 23, "user_id": 246, "domain": "www.rttr.org", "root_domain": "rttr.org"}, {"url": "https://github.com/billyquith/ponder", "title": "GitHub - billyquith/ponder: C++ reflection library", "internal": false, "attachment": false, "reflection": false, "clicks": 22, "user_id": 809, "domain": "github.com", "root_domain": "github.com"}, {"url": "https://wandbox.org/permlink/ib1BFzZ32aGTTWP8", "title": "[Wandbox]\u4e09\u3078( \u3078\u055e\u0a0a \u055e)\u3078 \uff8a\uff6f\uff8a\uff6f", "internal": false, "attachment": false, "reflection": false, "clicks": 13, "user_id": 184, "domain": "wandbox.org", "root_domain": "wandbox.org"}, {"url": "https://gist.github.com/Enhex/4d42ef13dda1681eaac7ae6ead25669c", "title": "generic_serialization.cpp \u00b7 GitHub", "internal": false, "attachment": false, "reflection": false, "clicks": 12, "user_id": 184, "domain": "gist.github.com", "root_domain": "github.com"}, {"url": "http://uscilab.github.io/cereal/", "title": "cereal Docs - Main", "internal": false, "attachment": false, "reflection": false, "clicks": 8, "user_id": 184, "domain": "uscilab.github.io", "root_domain": "uscilab.github.io"}, {"url": "https://github.com/realXtend/tundra-urho3d/blob/master/src/TundraCore/Scene/IAttribute.h", "title": "tundra-urho3d/IAttribute.h at master \u00b7 realXtend/tundra-urho3d \u00b7 GitHub", "internal": false, "attachment": false, "reflection": false, "clicks": 7, "user_id": 3, "domain": "github.com", "root_domain": "github.com"}, {"url": "https://github.com/Enhex/Benchmarks/tree/master/lambda%20std%20function%20vs%20template%20parameter", "title": null, "internal": false, "attachment": false, "reflection": false, "clicks": 6, "user_id": 184, "domain": "github.com", "root_domain": "github.com"}, {"url": "https://github.com/realXtend/tundra-urho3d/blob/master/src/TundraCore/Scene/IAttribute.cpp", "title": "tundra-urho3d/IAttribute.cpp at master \u00b7 realXtend/tundra-urho3d \u00b7 GitHub", "internal": false, "attachment": false, "reflection": false, "clicks": 5, "user_id": 3, "domain": "github.com", "root_domain": "github.com"}, {"url": "http://discourse.urho3d.io/t/stepping-down-from-urho-lead-dev-role/3478/51", "title": "Stepping down from Urho lead dev role", "internal": true, "attachment": false, "reflection": true, "clicks": 1, "user_id": 4, "domain": "discourse.urho3d.io", "root_domain": "urho3d.io"}, {"url": "https://github.com/google/benchmark", "title": "GitHub - google/benchmark: A microbenchmark support library", "internal": false, "attachment": false, "reflection": false, "clicks": 1, "user_id": 184, "domain": "github.com", "root_domain": "github.com"}]}, "suggested_topics": [{"id": 7063, "title": "Quadspinner Gaea support on Urho?", "fancy_title": "Quadspinner Gaea support on Urho?", "slug": "quadspinner-gaea-support-on-urho", "posts_count": 1, "reply_count": 0, "highest_post_number": 1, "image_url": null, "created_at": "2021-11-23T23:30:45.335Z", "last_posted_at": "2021-11-23T23:30:45.396Z", "bumped": true, "bumped_at": "2021-11-23T23:30:45.396Z", "archetype": "regular", "unseen": false, "pinned": false, "unpinned": null, "visible": true, "closed": false, "archived": false, "bookmarked": null, "liked": null, "tags_descriptions": {}, "like_count": 0, "views": 150, "category_id": 16, "featured_link": null, "has_accepted_answer": false, "posters": [{"extras": "latest single", "description": "Original Poster, Most Recent Poster", "user": {"id": 1304, "username": "lebrewer", "name": "lebrewer", "avatar_template": "/user_avatar/discourse.urho3d.io/lebrewer/{size}/2811_2.png"}}]}, {"id": 7183, "title": "Automating Lua Bindings", "fancy_title": "Automating Lua Bindings", "slug": "automating-lua-bindings", "posts_count": 15, "reply_count": 4, "highest_post_number": 16, "image_url": null, "created_at": "2022-02-03T17:02:43.829Z", "last_posted_at": "2022-08-17T18:54:38.644Z", "bumped": true, "bumped_at": "2022-08-17T18:54:38.644Z", "archetype": "regular", "unseen": false, "pinned": false, "unpinned": null, "visible": true, "closed": false, "archived": false, "bookmarked": null, "liked": null, "tags_descriptions": {}, "like_count": 16, "views": 700, "category_id": 16, "featured_link": null, "has_accepted_answer": false, "posters": [{"extras": "latest", "description": "Original Poster, Most Recent Poster", "user": {"id": 628, "username": "SirNate0", "name": "SirNate0", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}}, {"extras": null, "description": "Frequent Poster", "user": {"id": 631, "username": "JTippetts1", "name": "J Tippetts", "avatar_template": "/user_avatar/discourse.urho3d.io/jtippetts1/{size}/96_2.png"}}, {"extras": null, "description": "Frequent Poster", "user": {"id": 263, "username": "1vanK", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/1vank/{size}/768_2.png"}}, {"extras": null, "description": "Frequent Poster", "user": {"id": 4, "username": "weitjong", "name": "Yao Wei Tjong", "avatar_template": "/user_avatar/discourse.urho3d.io/weitjong/{size}/4_2.png"}}, {"extras": null, "description": "Frequent Poster", "user": {"id": 1447, "username": "Batch", "name": "", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/b/f17d59/{size}.png"}}]}, {"id": 7101, "title": "Unique Per-Node Shader Uniform for Model-Particles", "fancy_title": "Unique Per-Node Shader Uniform for Model-Particles", "slug": "unique-per-node-shader-uniform-for-model-particles", "posts_count": 2, "reply_count": 0, "highest_post_number": 2, "image_url": null, "created_at": "2021-12-16T03:16:09.579Z", "last_posted_at": "2021-12-16T09:40:41.978Z", "bumped": true, "bumped_at": "2021-12-16T09:40:41.978Z", "archetype": "regular", "unseen": false, "pinned": false, "unpinned": null, "visible": true, "closed": false, "archived": false, "bookmarked": null, "liked": null, "tags_descriptions": {}, "like_count": 0, "views": 139, "category_id": 16, "featured_link": null, "has_accepted_answer": false, "posters": [{"extras": null, "description": "Original Poster", "user": {"id": 628, "username": "SirNate0", "name": "SirNate0", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}}, {"extras": "latest", "description": "Most Recent Poster", "user": {"id": 192, "username": "Modanung", "name": "\u9b54\u5927\u519c \ud835\udf8d\ud835\udf8e\ud835\udf73 \u73fe\u62db\u870d", "avatar_template": "/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png"}}]}, {"id": 7158, "title": "Xamarin android urhosharp has no octree.getdrawables", "fancy_title": "Xamarin android urhosharp has no octree.getdrawables", "slug": "xamarin-android-urhosharp-has-no-octree-getdrawables", "posts_count": 11, "reply_count": 9, "highest_post_number": 11, "image_url": null, "created_at": "2022-01-27T15:03:52.636Z", "last_posted_at": "2022-02-02T07:17:04.722Z", "bumped": true, "bumped_at": "2022-02-02T07:17:04.722Z", "archetype": "regular", "unseen": false, "pinned": false, "unpinned": null, "visible": true, "closed": false, "archived": false, "bookmarked": null, "liked": null, "tags_descriptions": {}, "like_count": 0, "views": 256, "category_id": 16, "featured_link": null, "has_accepted_answer": false, "posters": [{"extras": null, "description": "Original Poster", "user": {"id": 1503, "username": "tianlv777", "name": "zerrrrr", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/t/a4c791/{size}.png"}}, {"extras": null, "description": "Frequent Poster", "user": {"id": 484, "username": "Eugene", "name": "Eugene Kozlov", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png"}}, {"extras": null, "description": "Frequent Poster", "user": {"id": 627, "username": "George1", "name": "", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/9e8a1a/{size}.png"}}, {"extras": "latest", "description": "Most Recent Poster", "user": {"id": 809, "username": "elix22", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/elix22/{size}/1437_2.png"}}]}, {"id": 7264, "title": "Mesh not rendering right and no idea why [SOLVED]", "fancy_title": "Mesh not rendering right and no idea why [SOLVED]", "slug": "mesh-not-rendering-right-and-no-idea-why-solved", "posts_count": 4, "reply_count": 1, "highest_post_number": 4, "image_url": "https://global.discourse-cdn.com/standard17/uploads/urho3d/optimized/2X/5/58b096d0ea560021fc4301ffe097f4b1350670af_2_1024x519.jpeg", "created_at": "2022-05-13T01:26:06.152Z", "last_posted_at": "2022-05-13T20:26:12.059Z", "bumped": true, "bumped_at": "2022-05-13T20:26:12.059Z", "archetype": "regular", "unseen": false, "pinned": false, "unpinned": null, "visible": true, "closed": false, "archived": false, "bookmarked": null, "liked": null, "tags_descriptions": {}, "like_count": 2, "views": 147, "category_id": 16, "featured_link": null, "has_accepted_answer": false, "posters": [{"extras": "latest", "description": "Original Poster, Most Recent Poster", "user": {"id": 1507, "username": "Kest", "name": "Kest", "avatar_template": "/user_avatar/discourse.urho3d.io/kest/{size}/3734_2.png"}}, {"extras": null, "description": "Frequent Poster", "user": {"id": 628, "username": "SirNate0", "name": "SirNate0", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}}, {"extras": null, "description": "Frequent Poster", "user": {"id": 1358, "username": "JSandusky", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/jsandusky/{size}/3220_2.png"}}]}]}