{"post_stream":{"posts":[{"id":44728,"name":"Brian Knox","username":"najak3d","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/n/6a8cbe/{size}.png","created_at":"2022-02-26T04:46:13.862Z","cooked":"\u003cp\u003eCurrently we do all of this on the CPU.   Our GPS app screen is about 1500 x 2000 pixels, and filled with Elevation map data (heightmap transferred to a GrayScale 16bit Texture).\u003c/p\u003e\n\u003cp\u003eWhat we do on the CPU is a quite expensive calculation of Normals, so that we can do adequate shading, for a Relief map (see image below).  This is the MOST EXPENSIVE thing we do currently, and is causing hiccups as you pan the map (up 0.1 sec worst case on Android).\u003c/p\u003e\n\u003cp\u003eWe’d like to push these calculations onto the GPU, via a “Compute Shader”, which seems to not be supported by Urho3D, currently.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://global.discourse-cdn.com/standard17/uploads/urho3d/original/2X/f/f3699392311fc006b02311f4ac539017ce2ba760.jpeg\" alt=\"image\" data-base62-sha1=\"yJkdKFElTaCISwKlQG9fGQLmRnW\" width=\"662\" height=\"428\"\u003e\u003c/p\u003e\n\u003cp\u003eI think we might be able to do this without Compute Shaders if we could do one specific operation using regular Shaders:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eCreate offscreen scene, with Orthographic Camera.\u003c/li\u003e\n\u003cli\u003eIn this scene, place a plane that fills the full screen, and is covered by the HeighMap texture (16bpp grayscale).\u003c/li\u003e\n\u003cli\u003eThen use RTT to render to a new texture, same size as the HeightMap.  Matched 1:1.\u003c/li\u003e\n\u003cli\u003eThe Vertex Shader outputs varying XY texture position coords (varies per pixel).\u003c/li\u003e\n\u003cli\u003ePixel Shader Samples the Height Map texture surrounding pixels to calculate the local Slope/Normal, and outputs this into the RTT target, 1:1 pixel matching the HeightMap.\u003c/li\u003e\n\u003cli\u003eDONE.   Now we can use this RTT target Normals Texture as Input to our TerrainShader.\u003cbr\u003e\n(We already do #(6), with a Normals Texture generated on our CPU.)\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eHas anyone else tried anything like this?   Does this seem like a viable approach?  (or am I missing something?)\u003c/p\u003e\n\u003cp\u003eNOTE: Our Heightmap database is currently 0.5 GB, and the largest DB we have.  If we added Normals to this DB, it would double it’s size, which is not a viable option.\u003c/p\u003e\n\u003cp\u003eUse of a Compute shader technique is the best solution, by far.\u003c/p\u003e","post_number":1,"post_type":1,"updated_at":"2022-02-26T04:54:40.314Z","reply_count":1,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":79,"reads":27,"readers_count":26,"score":405.4,"yours":false,"topic_id":7209,"topic_slug":"need-compute-shader-for-heightmap-normals-calculation","display_username":"Brian Knox","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":2,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":1334,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":44729,"name":"","username":"Nerrik","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/n/958977/{size}.png","created_at":"2022-02-26T08:55:02.946Z","cooked":"\u003caside class=\"quote no-group\" data-username=\"najak3d\" data-post=\"1\" data-topic=\"7209\"\u003e\n\u003cdiv class=\"title\"\u003e\n\u003cdiv class=\"quote-controls\"\u003e\u003c/div\u003e\n\u003cimg loading=\"lazy\" alt=\"\" width=\"20\" height=\"20\" src=\"https://avatars.discourse-cdn.com/v4/letter/n/6a8cbe/40.png\" class=\"avatar\"\u003e najak3d:\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003eghtmap transferred to a GrayScale 16bit Texture).\u003c/p\u003e\n\u003cp\u003eWhat we do on the CPU is a quite expensive calculation of Normals, so that we can do adequate shading, for a Relief map (see image below). This is the MOST EXPENSIVE thing we do currently, and is causing hiccups as you pan the map (up 0.1 sec worst case on Android).\u003c/p\u003e\n\u003cp\u003eWe’d like to push these calculations onto the GPU, via a “Compute Shader”, which seems to not be supported by Urho3D, currently.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/aside\u003e\n\u003cp\u003ehere some code snippets from my terrain shader that calculate normal / tangets in the Vertexshader\u003c/p\u003e\n\u003cp\u003eIt’s some kind of “dirty” and is still being revised.\u003c/p\u003e\n\u003cp\u003etextureLod doesnt work for me under directx9 at Urho3D (only dx11 and opengl), I didn’t bother with that any further yet but there are alternatives for.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003evec3 calculateNormal(vec3 p1, vec2 TexCoord) {\n\tfloat delta = 0.5;\n\tfloat texturestep = 1.0 / 512.0; // size of texture\n\t\n\tvec4 sample1=textureLod(sWeightMap0, vec2(TexCoord.x + texturestep,TexCoord.y),0);\n\tfloat p2h = (sample1.r + sample1.g / 100.0) * cTerrainScale;\n\t\n\tvec4 sample2=textureLod(sWeightMap0, vec2(TexCoord.x,TexCoord.y - texturestep),0);\n\tfloat p3h = (sample2.r + sample2.g / 100.0) * cTerrainScale;\n\t\n\tvec3 p2 = (p1 + vec3(delta, 0.0f, 0.0f)) * vec3(1.0f, 0.0f, 1.0f);\n\tvec3 p3 = (p1 + vec3(0.0f, 0.0f, -delta)) * vec3(1.0f, 0.0f, 1.0f);\n\n\tp2.y = p2h;\n\tp3.y = p3h;\n\n\tvec3 u = p2 - p1;\n\tvec3 v = p3 - p1;\n\n\tvec3 normal = vec3(0.0f);\n\tnormal.x = (u.y * v.z) - (u.z * v.y);\n\tnormal.y = (u.z * v.x) - (u.x * v.z);\n\tnormal.z = (u.x * v.y) - (u.y * v.x);\n\n\treturn normalize(normal);\n}\n\n\n\nvec3 calculateTan(vec3 norm) {\n\tvec3 tangent;\n\n\n\tvec3 c1 = cross(norm, vec3(0.0f, 0.0f, 1.0f));\n\tvec3 c2 = cross(norm, vec3(0.0f, 1.0f, 0.0f));\n\n\tif (length(c1) \u0026gt; length(c2))\n\t{\n\t\ttangent = c1;\n\t}\n\telse\n\t{\n\t\ttangent = c2;\n\t}\n\n\ttangent = normalize(tangent);\n\n\treturn tangent;\n}\n\nVS: \n\nvec4 wm=textureLod(sWeightMap0, iTexCoord,0); //heightmap\nfloat hadd=wm.r + wm.g/100.0;\nfloat height=hadd*cTerrainScale;\nvec3 worldPos = GetWorldPos(modelMatrix);\nworldPos.y+=height;\n......\n#ifdef NORMALMAP\nvec3 mNormal=calculateNormal(worldPos, iTexCoord);\nvNormal = normalize(mNormal * GetNormalMatrix(modelMatrix));\n#else\nvNormal = GetWorldNormal(modelMatrix);\n#endif\n......\n\n#ifdef NORMALMAP\nvec3 mtangent = calculateTan(mNormal);\nvec4 tangent = vec4(normalize(mtangent.xyz * GetNormalMatrix(modelMatrix)), 1.0);\nvec3 bitangent = cross(tangent.xyz, vNormal) * 0.5;\nvTexCoord = vec4(GetTexCoord(iTexCoord), bitangent.xy);\nvTangent = vec4(tangent.xyz, bitangent.z);\n#else\nvTexCoord = GetTexCoord(iTexCoord);\n#endif\n\n\nPS:\n\n    #ifdef NORMALMAP\n    mat3 tbn = mat3(vTangent.xyz, vec3(vTexCoord.zw, vTangent.w), vNormal);\n\t\n    vec3 normal = normalize(tbn * DecodeNormal(texture2D(sDetailMap1, vTexCoord.xy)));\n....\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eas model iam using a flat plane grid\u003c/p\u003e\n\u003cp\u003eedit: my heightmap is also some special, so you maybe have to change some calcs, let me know if you need help\u003c/p\u003e\n\u003cp\u003ealso let me know if you have suggestions for a improvement. \u003cimg src=\"https://emoji.discourse-cdn.com/twitter/wink.png?v=12\" title=\":wink:\" class=\"emoji\" alt=\":wink:\" loading=\"lazy\" width=\"20\" height=\"20\"\u003e\u003c/p\u003e","post_number":2,"post_type":1,"updated_at":"2022-02-26T10:05:48.038Z","reply_count":0,"reply_to_post_number":null,"quote_count":1,"incoming_link_count":3,"reads":26,"readers_count":25,"score":35.2,"yours":false,"topic_id":7209,"topic_slug":"need-compute-shader-for-heightmap-normals-calculation","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":5,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[{"id":2,"count":1}],"moderator":false,"admin":false,"staff":false,"user_id":230,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":44730,"name":"Brian Knox","username":"najak3d","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/n/6a8cbe/{size}.png","created_at":"2022-02-26T13:01:35.121Z","cooked":"\u003cp\u003eNerrik, thank you for your answer.  This looks similar to what we’re doing now in C# on the CPU now.\u003c/p\u003e\n\u003cp\u003eIs this a regular Terrain shader, which re-executes all of this logic “per render frame” for the terrain?  Or have you found a way to output this result to another Texture in the GPU, which then can be re-used by a Terrain shader which no-longer needs to recalculate these normals each frame (as it uses this shader-generated Normals Texture).\u003c/p\u003e\n\u003cp\u003eOur app is designed for mobile devices, and so we’re trying hard to maintain “no hiccups” while at same time minimizing the power-usage (which goes up as you pound the CPU/GPU with extra work).  Therefore, we’re really interested an optimization that would avoid these rather expensive per-vertex calculations every frame.\u003c/p\u003e\n\u003cp\u003eHas anyone else used Urho3D Shaders to do something like this?   I’m just not positive about the best way to essentially do this 1:1 translation between HeightMap Texture to NormalMap texture.\u003c/p\u003e","post_number":3,"post_type":1,"updated_at":"2022-02-26T13:01:35.121Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":1,"reads":24,"readers_count":23,"score":9.8,"yours":false,"topic_id":7209,"topic_slug":"need-compute-shader-for-heightmap-normals-calculation","display_username":"Brian Knox","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":1334,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":44731,"name":"","username":"Nerrik","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/n/958977/{size}.png","created_at":"2022-02-26T13:31:24.531Z","cooked":"\u003cp\u003ehi, it reexecute this logic every frame / vertex. In my case the HM changes often because its only a cutted part of a very bigger hm so it does not bother me and on PC it is not a “noticeable calculation”.\u003c/p\u003e\n\u003cp\u003eI also experimented with \u003ca href=\"https://github.com/eugeneko/Urho3D/commits/GeometryShaders\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\"\u003eCommits · eugeneko/Urho3D · GitHub\u003c/a\u003e and implemented it into the current branch for a grass geometry / vegetation shader. It worked but i discarded it because of some problems with the shader defines(in the geometry PS). As I remember there was also an compute shader support included.\u003c/p\u003e","post_number":4,"post_type":1,"updated_at":"2022-02-26T13:41:07.382Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":1,"reads":24,"readers_count":23,"score":9.8,"yours":false,"topic_id":7209,"topic_slug":"need-compute-shader-for-heightmap-normals-calculation","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":2,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"link_counts":[{"url":"https://github.com/eugeneko/Urho3D/commits/GeometryShaders","internal":false,"reflection":false,"title":"Commits · eugeneko/Urho3D · GitHub","clicks":4}],"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":230,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":44738,"name":"J Tippetts","username":"JTippetts1","avatar_template":"/user_avatar/discourse.urho3d.io/jtippetts1/{size}/96_2.png","created_at":"2022-03-01T15:37:45.114Z","cooked":"\u003cp\u003eYou should be able to do this pretty much the way you describe. Create a custom shader, draw a full-screen quad, render to a texture then you can save the texture data as an image when finished.\u003c/p\u003e\n\u003cp\u003eYou can sample from your input heightmap texture in the vertex shader to do the normal computation right there. In GLSL you can use \u003ccode\u003etextureSize(sampler, lod)\u003c/code\u003e to get the size of a texture and \u003ccode\u003etexelFetch(sampler, ivec2, lod)\u003c/code\u003e to get a pixel at a specified coordinate. Using texelFetch it is trivial to write a vertex shader that samples the top/right/bottom/left adjacent pixels and calculates a normal, which can be passed in a varying to the pixel shader to convert it to a color and draw the fragment. In HLSL, I believe the equivalent functions are \u003ccode\u003eGetDimensions()\u003c/code\u003e and \u003ccode\u003eLoad()\u003c/code\u003e but I’m not 100% sure about that. If you draw a unit size quad in the scene, you can multiply the input coordinate position by textureSize to obtain a pixel coordinate, then perform your normal calculation.\u003c/p\u003e\n\u003cp\u003eMy house is in your example map image btw.\u003c/p\u003e","post_number":5,"post_type":1,"updated_at":"2022-03-01T15:37:45.114Z","reply_count":1,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":0,"reads":23,"readers_count":22,"score":24.6,"yours":false,"topic_id":7209,"topic_slug":"need-compute-shader-for-heightmap-normals-calculation","display_username":"J Tippetts","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[{"id":2,"count":1}],"moderator":false,"admin":false,"staff":false,"user_id":631,"hidden":false,"trust_level":0,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":true},{"id":44739,"name":"Brian Knox","username":"najak3d","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/n/6a8cbe/{size}.png","created_at":"2022-03-01T18:26:36.776Z","cooked":"\u003cp\u003eThank you very much for the advice!  I’ll give this a shot.\u003c/p\u003e","post_number":6,"post_type":1,"updated_at":"2022-03-01T18:26:36.776Z","reply_count":0,"reply_to_post_number":5,"quote_count":0,"incoming_link_count":0,"reads":22,"readers_count":21,"score":4.4,"yours":false,"topic_id":7209,"topic_slug":"need-compute-shader-for-heightmap-normals-calculation","display_username":"Brian Knox","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"reply_to_user":{"username":"JTippetts1","name":"J Tippetts","avatar_template":"/user_avatar/discourse.urho3d.io/jtippetts1/{size}/96_2.png"},"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":1334,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":44749,"name":"","username":"JSandusky","avatar_template":"/user_avatar/discourse.urho3d.io/jsandusky/{size}/3220_2.png","created_at":"2022-03-06T05:00:43.124Z","cooked":"\u003cp\u003eIf you want to smash in compute yourself you can refer to my pull for RBFX \u003ca href=\"https://github.com/rbfx/rbfx/pull/203\" rel=\"noopener nofollow ugc\"\u003ehttps://github.com/rbfx/rbfx/pull/203\u003c/a\u003e. If you don’t have any complicated requirements it’s not hard to plug in compute for GL as it you don’t have to fuss with UAVs. Things only start to get crazy when you need to deal with structured buffers.\u003c/p\u003e\n\u003cp\u003eUnsure if there’s any GLES specific issues though, I only wrote for desktop GL.\u003c/p\u003e","post_number":7,"post_type":1,"updated_at":"2022-03-06T05:00:43.124Z","reply_count":1,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":1,"reads":21,"readers_count":20,"score":14.2,"yours":false,"topic_id":7209,"topic_slug":"need-compute-shader-for-heightmap-normals-calculation","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"link_counts":[{"url":"https://github.com/rbfx/rbfx/pull/203","internal":false,"reflection":false,"title":"Compute shader (cleaned) by JSandusky · Pull Request #203 · rbfx/rbfx · GitHub","clicks":4}],"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":1358,"hidden":false,"trust_level":0,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"user_suspended":true,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":44750,"name":"Brian Knox","username":"najak3d","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/n/6a8cbe/{size}.png","created_at":"2022-03-06T06:46:04.167Z","cooked":"\u003cp\u003eFor the project where we are needing this, we’re currently stuck on UrhoSharp, which builds off Urho3D from 2019, and we don’t have the option to change anything.   UrhoSharp appears currently unbuildable and unmaintainable even by \u003ca class=\"mention\" href=\"/u/egorbo\"\u003e@Egorbo\u003c/a\u003e  who wrote it.   It’s dormant and dying, from what I can tell.\u003c/p\u003e\n\u003cp\u003eWe can’t use \u003ca href=\"http://Urho.NET\" rel=\"noopener nofollow ugc\"\u003eUrho.NET\u003c/a\u003e yet for that project, because it doesn’t support Xamarin Forms.\u003c/p\u003e\n\u003cp\u003eSo we’re stuck with vanilla Urho3D from 2019 for this project.  Our needs are relatively easy, so it seems to be working for us well enough.   I’m hoping I can get this kludge technique using Ortho Camera to work well enough.   It doesn’t need to be elegant, it just needs to work, so that we can stop doing this heavy computing on the CPU, which is causing hiccups, or lag.\u003c/p\u003e","post_number":8,"post_type":1,"updated_at":"2022-03-06T06:46:04.167Z","reply_count":0,"reply_to_post_number":7,"quote_count":0,"incoming_link_count":0,"reads":22,"readers_count":21,"score":4.4,"yours":false,"topic_id":7209,"topic_slug":"need-compute-shader-for-heightmap-normals-calculation","display_username":"Brian Knox","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"link_counts":[{"url":"http://Urho.NET","internal":false,"reflection":false,"clicks":0}],"read":true,"user_title":null,"reply_to_user":{"username":"JSandusky","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/jsandusky/{size}/3220_2.png"},"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":1334,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":44760,"name":"","username":"Nerrik","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/n/958977/{size}.png","created_at":"2022-03-09T10:13:23.282Z","cooked":"\u003cp\u003eJust a theoretical thought,\u003c/p\u003e\n\u003cp\u003eI would try to use a blank transparent rgba texture/image for the normaldata, and sample it in the vertexshader.\u003c/p\u003e\n\u003cp\u003eIf the sample is blank (alpha=0) using my calculateNormal function and write the result into the texture/image with \u003ca href=\"https://www.khronos.org/registry/OpenGL-Refpages/es3.1/html/imageStore.xhtml\" rel=\"noopener nofollow ugc\"\u003eimageStore\u003c/a\u003e  with vec4(normal.x, normal.y, normal.z, 1.0f) at the pixel-uvposition.\u003c/p\u003e\n\u003cp\u003eSo it have to do this caluclation only in the first frame.\u003c/p\u003e\n\u003cp\u003eedit: never used imageStore in the vertexshader with urho3d, so its just  theoretical because of \u003ca href=\"https://www.khronos.org/opengl/wiki/Memory_Model#Incoherent_memory_access\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\"\u003eMemory Model - OpenGL Wiki\u003c/a\u003e and the binding, you maybe have to implement this for your self also.\u003c/p\u003e","post_number":9,"post_type":1,"updated_at":"2022-03-09T10:59:07.150Z","reply_count":1,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":0,"reads":22,"readers_count":21,"score":9.4,"yours":false,"topic_id":7209,"topic_slug":"need-compute-shader-for-heightmap-normals-calculation","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":5,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"link_counts":[{"url":"https://www.khronos.org/registry/OpenGL-Refpages/es3.1/html/imageStore.xhtml","internal":false,"reflection":false,"title":"imageStore - OpenGL ES 3.1 Reference Pages","clicks":2},{"url":"https://www.khronos.org/opengl/wiki/Memory_Model#Incoherent_memory_access","internal":false,"reflection":false,"title":"Memory Model - OpenGL Wiki","clicks":0}],"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":230,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":44763,"name":"Brian Knox","username":"najak3d","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/n/6a8cbe/{size}.png","created_at":"2022-03-09T15:37:28.270Z","cooked":"\u003cp\u003eIn short, are you suggesting that we can then do it with one-shader?  And so when the first vertex comes in and samples “0” is found, then we sample the ENTIRE source texture and create the entire normal map all from this first vertex sample?   If not, then I’m not understanding your proposal.\u003c/p\u003e","post_number":10,"post_type":1,"updated_at":"2022-03-09T15:37:28.270Z","reply_count":0,"reply_to_post_number":9,"quote_count":0,"incoming_link_count":0,"reads":20,"readers_count":19,"score":4.0,"yours":false,"topic_id":7209,"topic_slug":"need-compute-shader-for-heightmap-normals-calculation","display_username":"Brian Knox","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"reply_to_user":{"username":"Nerrik","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/n/958977/{size}.png"},"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":1334,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":44764,"name":"SirNate0","username":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png","created_at":"2022-03-09T16:05:00.003Z","cooked":"\u003cp\u003eI think that is the suggestion. I wouldn’t recommend it, though, as it would incur a small performance penalty every frame for the conditional verses the single cost at the start and the additional complexity in the c++ code to set up the initial run that occurs only once.\u003c/p\u003e","post_number":11,"post_type":1,"updated_at":"2022-03-09T16:05:00.003Z","reply_count":1,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":0,"reads":19,"readers_count":18,"score":8.8,"yours":false,"topic_id":7209,"topic_slug":"need-compute-shader-for-heightmap-normals-calculation","display_username":"SirNate0","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":628,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":44765,"name":"Brian Knox","username":"najak3d","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/n/6a8cbe/{size}.png","created_at":"2022-03-09T16:39:17.714Z","cooked":"\u003cp\u003eMy other concern is that there is no such thing as “first vertex”, because the first batch of vertices will come in unison, and in unison, they’ll all be trying to create this Normal Map.\u003c/p\u003e\n\u003cp\u003eThe original idea also permits the normal map to be produced using the parallel cores with 100% efficiency, rather than putting all of that load onto a single GPU core (would be essentially single-threaded for normals processing).\u003c/p\u003e\n\u003cp\u003eWhen I get time to do this, I’m going to attempt the solution from \u003ca class=\"mention\" href=\"/u/jtippetts1\"\u003e@JTippetts1\u003c/a\u003e .\u003c/p\u003e","post_number":12,"post_type":1,"updated_at":"2022-03-09T16:39:17.714Z","reply_count":0,"reply_to_post_number":11,"quote_count":0,"incoming_link_count":0,"reads":18,"readers_count":17,"score":3.4,"yours":false,"topic_id":7209,"topic_slug":"need-compute-shader-for-heightmap-normals-calculation","display_username":"Brian Knox","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"reply_to_user":{"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"},"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":1334,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":44769,"name":"","username":"Nerrik","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/n/958977/{size}.png","created_at":"2022-03-09T23:21:10.776Z","cooked":"\u003cp\u003eI mean to write the calculated normal permanent into the textureimage if the normal is missed at this textureposition (blank) \u003cstrong\u003eone time\u003c/strong\u003e with imageStore. So u dont need a compute shader for the normaltexture to create.\u003c/p\u003e\n\u003cp\u003esomething like\u003c/p\u003e\n\u003cp\u003ePseudocode:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003evec4 hm_data = textureLod(hm_data_image, vec2(TexCoord.x,TexCoord.y),0); // imageLoad(hm_data_image...) in this case;\n\nif (hm_data.a==0)\n{\nvec3 new_normal = calculateNormal(worldPos, iTexCoord);\nhm_data = vec4(new_normal , 1.0f);\nivec2 coord=ivec2(iTexCoord.x * texturesize, iTexCoord.y * texturesize);\nimageStore( hm_data_image, coord, hm_data ); \n}\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eSo each Vertexcall create its own “normaldata pixel” permanent if its not happend yet (blank), what happens only in the first call - after that it uses the pixeldata from the texture without any further calculations.\u003c/p\u003e\n\u003cp\u003eBut i have looked into OGLGraphics and Urho3d dont do glBindImageTexture calls so there is no support for image2D.\u003c/p\u003e\n\u003cp\u003eSo you have to extend it \u003cimg src=\"https://emoji.discourse-cdn.com/twitter/confused.png?v=12\" title=\":confused:\" class=\"emoji\" alt=\":confused:\" loading=\"lazy\" width=\"20\" height=\"20\"\u003e\u003c/p\u003e\n\u003cp\u003eIt was just an untestet fast Idea \u003cimg src=\"https://emoji.discourse-cdn.com/twitter/wink.png?v=12\" title=\":wink:\" class=\"emoji\" alt=\":wink:\" loading=\"lazy\" width=\"20\" height=\"20\"\u003e\u003c/p\u003e","post_number":13,"post_type":1,"updated_at":"2022-03-09T23:24:05.460Z","reply_count":1,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":0,"reads":19,"readers_count":18,"score":8.6,"yours":false,"topic_id":7209,"topic_slug":"need-compute-shader-for-heightmap-normals-calculation","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":230,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":44770,"name":"Brian Knox","username":"najak3d","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/n/6a8cbe/{size}.png","created_at":"2022-03-10T00:07:52.127Z","cooked":"\u003cp\u003eI appreciate the brainstorm.    I think for our situation this too won’t work great, because need normals for the Pixel Shader, not Vertex Shader.   So between two vertices, our Pixel Shader will sample many many normals (potentially, depending upon how close camera is to the geometry).\u003c/p\u003e\n\u003cp\u003eI think \u003ca class=\"mention\" href=\"/u/jtippetts1\"\u003e@JTippetts1\u003c/a\u003e  approach might still be our best option.\u003c/p\u003e","post_number":14,"post_type":1,"updated_at":"2022-03-10T00:07:52.127Z","reply_count":0,"reply_to_post_number":13,"quote_count":0,"incoming_link_count":1,"reads":19,"readers_count":18,"score":8.6,"yours":false,"topic_id":7209,"topic_slug":"need-compute-shader-for-heightmap-normals-calculation","display_username":"Brian Knox","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"reply_to_user":{"username":"Nerrik","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/n/958977/{size}.png"},"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":1334,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false}],"stream":[44728,44729,44730,44731,44738,44739,44749,44750,44760,44763,44764,44765,44769,44770]},"timeline_lookup":[[1,270],[5,267],[6,266],[7,262],[9,259],[12,258]],"suggested_topics":[{"id":7067,"title":"Can the latest Urho3D version be built with VS2013?","fancy_title":"Can the latest Urho3D version be built with VS2013?","slug":"can-the-latest-urho3d-version-be-built-with-vs2013","posts_count":3,"reply_count":0,"highest_post_number":3,"image_url":null,"created_at":"2021-11-25T18:00:24.336Z","last_posted_at":"2021-11-26T17:22:21.878Z","bumped":true,"bumped_at":"2021-11-26T17:22:21.878Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":0,"views":157,"category_id":10,"featured_link":null,"has_accepted_answer":true,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":861,"username":"GodMan","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/g/e79b87/{size}.png"}},{"extras":null,"description":"Frequent Poster, Accepted Answer","user":{"id":4,"username":"weitjong","name":"Yao Wei Tjong","avatar_template":"/user_avatar/discourse.urho3d.io/weitjong/{size}/4_2.png"}}]},{"id":7193,"title":"Can Z-Axis Feasibly be \"Up\"?","fancy_title":"Can Z-Axis Feasibly be \u0026ldquo;Up\u0026rdquo;?","slug":"can-z-axis-feasibly-be-up","posts_count":4,"reply_count":2,"highest_post_number":4,"image_url":null,"created_at":"2022-02-14T05:17:28.054Z","last_posted_at":"2022-02-14T07:26:53.817Z","bumped":true,"bumped_at":"2022-02-14T07:26:53.817Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":1,"views":161,"category_id":10,"featured_link":null,"has_accepted_answer":true,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":1334,"username":"najak3d","name":"Brian Knox","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/n/6a8cbe/{size}.png"}},{"extras":null,"description":"Frequent Poster, Accepted Answer","user":{"id":484,"username":"Eugene","name":"Eugene Kozlov","avatar_template":"/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png"}}]},{"id":7125,"title":"Android mobile shows jaggies in the instersection plane-terrain","fancy_title":"Android mobile shows jaggies in the instersection plane-terrain","slug":"android-mobile-shows-jaggies-in-the-instersection-plane-terrain","posts_count":5,"reply_count":3,"highest_post_number":5,"image_url":"https://global.discourse-cdn.com/standard17/uploads/urho3d/original/2X/d/d36aedb4e8cf5409efca6c976aae7e4a5c499eb9.png","created_at":"2022-01-11T11:59:18.993Z","last_posted_at":"2022-01-11T21:27:40.692Z","bumped":true,"bumped_at":"2022-01-12T07:36:41.695Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":0,"views":129,"category_id":10,"featured_link":null,"has_accepted_answer":true,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":856,"username":"feresmu","name":null,"avatar_template":"https://avatars.discourse-cdn.com/v4/letter/f/f08c70/{size}.png"}},{"extras":null,"description":"Frequent Poster, Accepted Answer","user":{"id":484,"username":"Eugene","name":"Eugene Kozlov","avatar_template":"/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png"}}]},{"id":7186,"title":"Best way to do Blob Shadows in Urho","fancy_title":"Best way to do Blob Shadows in Urho","slug":"best-way-to-do-blob-shadows-in-urho","posts_count":3,"reply_count":1,"highest_post_number":3,"image_url":"https://global.discourse-cdn.com/standard17/uploads/urho3d/original/2X/2/22e3dc1892512375cae09bf84fd92071a1ae27d8.png","created_at":"2022-02-05T04:59:31.388Z","last_posted_at":"2022-02-05T13:29:22.054Z","bumped":true,"bumped_at":"2022-02-05T13:31:44.299Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":0,"views":179,"category_id":10,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":null,"description":"Original Poster","user":{"id":1334,"username":"najak3d","name":"Brian Knox","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/n/6a8cbe/{size}.png"}},{"extras":"latest","description":"Most Recent Poster","user":{"id":628,"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}}]},{"id":7210,"title":"Shadow Map Coverage Skewed to the Side","fancy_title":"Shadow Map Coverage Skewed to the Side","slug":"shadow-map-coverage-skewed-to-the-side","posts_count":8,"reply_count":5,"highest_post_number":8,"image_url":"https://global.discourse-cdn.com/standard17/uploads/urho3d/optimized/2X/6/640dc6184f3d70ce00e656555c22db772ea941a4_2_1024x545.jpeg","created_at":"2022-02-28T15:02:02.662Z","last_posted_at":"2022-03-06T04:51:22.096Z","bumped":true,"bumped_at":"2022-03-06T04:51:22.096Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":0,"views":211,"category_id":10,"featured_link":null,"has_accepted_answer":true,"posters":[{"extras":null,"description":"Original Poster, Accepted Answer","user":{"id":1334,"username":"najak3d","name":"Brian Knox","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/n/6a8cbe/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":628,"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}},{"extras":"latest","description":"Most Recent Poster","user":{"id":1358,"username":"JSandusky","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/jsandusky/{size}/3220_2.png"}}]}],"tags_descriptions":{},"id":7209,"title":"Need Compute Shader for Heightmap Normals Calculation","fancy_title":"Need Compute Shader for Heightmap Normals Calculation","posts_count":14,"created_at":"2022-02-26T04:46:13.776Z","views":410,"reply_count":5,"like_count":2,"last_posted_at":"2022-03-10T00:07:52.127Z","visible":true,"closed":false,"archived":false,"has_summary":false,"archetype":"regular","slug":"need-compute-shader-for-heightmap-normals-calculation","category_id":10,"word_count":2007,"deleted_at":null,"user_id":1334,"featured_link":null,"pinned_globally":false,"pinned_at":null,"pinned_until":null,"image_url":"https://global.discourse-cdn.com/standard17/uploads/urho3d/original/2X/f/f3699392311fc006b02311f4ac539017ce2ba760.jpeg","slow_mode_seconds":0,"draft":null,"draft_key":"topic_7209","draft_sequence":null,"unpinned":null,"pinned":false,"current_post_number":1,"highest_post_number":14,"deleted_by":null,"actions_summary":[{"id":4,"count":0,"hidden":false,"can_act":false},{"id":8,"count":0,"hidden":false,"can_act":false},{"id":7,"count":0,"hidden":false,"can_act":false}],"chunk_size":20,"bookmarked":false,"bookmarks":[],"topic_timer":null,"message_bus_last_id":0,"participant_count":5,"show_read_indicator":false,"thumbnails":[{"max_width":null,"max_height":null,"width":662,"height":428,"url":"https://global.discourse-cdn.com/standard17/uploads/urho3d/original/2X/f/f3699392311fc006b02311f4ac539017ce2ba760.jpeg"}],"slow_mode_enabled_until":null,"tags_disable_ads":false,"accepted_answer":{"post_number":5,"username":"JTippetts1","excerpt":"You should be able to do this pretty much the way you describe. Create a custom shader, draw a full-screen quad, render to a texture then you can save the texture data as an image when finished. \nYou can sample from your input heightmap texture in the vertex shader to do the normal computation right\u0026hellip;"},"details":{"can_edit":false,"notification_level":1,"participants":[{"id":1334,"username":"najak3d","name":"Brian Knox","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/n/6a8cbe/{size}.png","post_count":7,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"trust_level":2},{"id":230,"username":"Nerrik","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/n/958977/{size}.png","post_count":4,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"trust_level":2},{"id":628,"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png","post_count":1,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"trust_level":2},{"id":631,"username":"JTippetts1","name":"J Tippetts","avatar_template":"/user_avatar/discourse.urho3d.io/jtippetts1/{size}/96_2.png","post_count":1,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"trust_level":0},{"id":1358,"username":"JSandusky","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/jsandusky/{size}/3220_2.png","post_count":1,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"trust_level":0}],"created_by":{"id":1334,"username":"najak3d","name":"Brian Knox","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/n/6a8cbe/{size}.png"},"last_poster":{"id":1334,"username":"najak3d","name":"Brian Knox","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/n/6a8cbe/{size}.png"},"links":[{"url":"https://github.com/eugeneko/Urho3D/commits/GeometryShaders","title":"Commits · eugeneko/Urho3D · GitHub","internal":false,"attachment":false,"reflection":false,"clicks":4,"user_id":230,"domain":"github.com","root_domain":"github.com"},{"url":"https://github.com/rbfx/rbfx/pull/203","title":"Compute shader (cleaned) by JSandusky · Pull Request #203 · rbfx/rbfx · GitHub","internal":false,"attachment":false,"reflection":false,"clicks":4,"user_id":1358,"domain":"github.com","root_domain":"github.com"},{"url":"https://www.khronos.org/registry/OpenGL-Refpages/es3.1/html/imageStore.xhtml","title":"imageStore - OpenGL ES 3.1 Reference Pages","internal":false,"attachment":false,"reflection":false,"clicks":2,"user_id":230,"domain":"www.khronos.org","root_domain":"khronos.org"}]}}