{"post_stream":{"posts":[{"id":14271,"name":"","username":"Lumak","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/l/8491ac/{size}.png","created_at":"2016-10-30T17:16:00.000Z","cooked":"\u003cp\u003eDrawing connected UI quads show a gap. The points of the left of the 2nd quad are equal to points on the right of the 1st quad.\u003c/p\u003e\n\u003cp\u003eI don’t expect there to be a gap, but why does it show?\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"http://i.imgur.com/jgj8PQJ.jpg\" alt=\"\" width=\"360\" height=\"282\"\u003e\u003c/p\u003e\n\u003cp\u003eQuads: (top left, top right, bottom left, bottom right)\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003e    RectQuad quadList[2] =\n    {\n        // a0, b0, c0, d0\n        { Vector2(110.008f, 116.000f), Vector2(196.595f, 116.192f), Vector2(109.991f, 323.999f), Vector2(196.684f, 324.191f) },\n\n        // a1, b1, c1, d1 where a1 = b0, c1 = d0\n        { Vector2(196.595f, 116.192f), Vector2(260.244f, 114.675f), Vector2(196.684f, 324.191f), Vector2(261.163f, 322.588f) },\n    };\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e\u003cspan class=\"bbcode-b\"\u003eSimple test code\u003c/span\u003e\u003cbr\u003e\ndrop it into and replace Samples/37_UIDrag/UIDrag.cpp\u003c/p\u003e\n\u003cp\u003e[spoiler][code]\u003cbr\u003e\n// Copyright © 2008-2016 the Urho3D project.\u003cbr\u003e\n//\u003cbr\u003e\n// Permission is hereby granted, free of charge, to any person obtaining a copy\u003cbr\u003e\n// of this software and associated documentation files (the “Software”), to deal\u003cbr\u003e\n// in the Software without restriction, including without limitation the rights\u003cbr\u003e\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\u003cbr\u003e\n// copies of the Software, and to permit persons to whom the Software is\u003cbr\u003e\n// furnished to do so, subject to the following conditions:\u003cbr\u003e\n//\u003cbr\u003e\n// The above copyright notice and this permission notice shall be included in\u003cbr\u003e\n// all copies or substantial portions of the Software.\u003cbr\u003e\n//\u003cbr\u003e\n// THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\u003cbr\u003e\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\u003cbr\u003e\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\u003cbr\u003e\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\u003cbr\u003e\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\u003cbr\u003e\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\u003cbr\u003e\n// THE SOFTWARE.\u003cbr\u003e\n//\u003c/p\u003e\n\u003cp\u003e\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Core/CoreEvents.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/UI/Button.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/UI/Font.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/UI/Text.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/UI/UIEvents.h\u0026gt;\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/Graphics/Zone.h\u0026gt;\u003c/p\u003e\n\u003cp\u003e\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “UIDrag.h”\u003c/p\u003e\n\u003cp\u003e\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \u0026lt;Urho3D/DebugNew.h\u0026gt;\u003c/p\u003e\n\u003cp\u003e//=============================================================================\u003cbr\u003e\n//=============================================================================\u003cbr\u003e\nclass UIQuad : public UIElement\u003cbr\u003e\n{\u003cbr\u003e\nURHO3D_OBJECT(UIQuad, UIElement);\u003cbr\u003e\npublic:\u003cbr\u003e\nstatic void RegisterObject(Context* context);\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eUIQuad(Context *context);\n~UIQuad();\n\nvirtual void GetBatches(PODVector\u0026lt;UIBatch\u0026gt;\u0026amp; batches, PODVector\u0026lt;float\u0026gt;\u0026amp; vertexData, const IntRect\u0026amp; currentScissor);\n\nvoid SetBlendMode(BlendMode mode)    { blendMode_ = mode;  }\nvoid SetImgRect(const IntRect\u0026amp; rect) { imageRect_ = rect;  }\n\nvoid SetTexture(Texture* texture);\nvoid AddQuad(Vector2 \u0026amp;a, Vector2 \u0026amp;b, Vector2 \u0026amp;c, Vector2 \u0026amp;d);\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eprotected:\u003cbr\u003e\nvoid ClearBatches();\u003c/p\u003e\n\u003cp\u003eprotected:\u003cbr\u003e\nSharedPtr     texture_;\u003cbr\u003e\nfloat                  invTextureWidth_;\u003cbr\u003e\nfloat                  invTextureHeight_;\u003cbr\u003e\nIntRect                imageRect_;\u003cbr\u003e\nBlendMode              blendMode_;\u003cbr\u003e\nPODVector       vertexData_;\u003cbr\u003e\nPODVector     batches_;\u003cbr\u003e\n};\u003c/p\u003e\n\u003cp\u003e//=============================================================================\u003cbr\u003e\n//=============================================================================\u003cbr\u003e\nURHO3D_DEFINE_APPLICATION_MAIN(UIDrag)\u003c/p\u003e\n\u003cp\u003e//=============================================================================\u003cbr\u003e\n//=============================================================================\u003cbr\u003e\nUIDrag::UIDrag(Context* context) :\u003cbr\u003e\nSample(context)\u003cbr\u003e\n{\u003cbr\u003e\nUIQuad::RegisterObject(context);\u003cbr\u003e\n}\u003c/p\u003e\n\u003cp\u003evoid UIDrag::Start()\u003cbr\u003e\n{\u003cbr\u003e\n// Execute base class startup\u003cbr\u003e\nSample::Start();\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eGetSubsystem\u0026lt;Renderer\u0026gt;()-\u0026gt;GetDefaultZone()-\u0026gt;SetFogColor(Color(0.3f, 0.3f, 0.9f));\n\n// Set mouse visible\nString platform = GetPlatform();\nif (platform != \"Android\" \u0026amp;\u0026amp; platform != \"iOS\")\n    GetSubsystem\u0026lt;Input\u0026gt;()-\u0026gt;SetMouseVisible(true);\n\n// Create the UI content\nCreateGUI();\nCreateInstructions();\n\n// Hook up to the frame update events\nSubscribeToEvents();\n\n// Set the mouse mode to use in the sample\nSample::InitMouseMode(MM_FREE);\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e}\u003c/p\u003e\n\u003cp\u003evoid UIDrag::CreateGUI()\u003cbr\u003e\n{\u003cbr\u003e\nResourceCache* cache = GetSubsystem();\u003cbr\u003e\nUI* ui = GetSubsystem();\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eUIElement* root = ui-\u0026gt;GetRoot();\nroot-\u0026gt;SetDefaultStyle(cache-\u0026gt;GetResource\u0026lt;XMLFile\u0026gt;(\"UI/DefaultStyle.xml\"));\n\n// UI quads\nTexture2D *quatTex2d = cache-\u0026gt;GetResource\u0026lt;Texture2D\u0026gt;(\"Textures/UI.png\");\nUIQuad *uiQuad = root-\u0026gt;CreateChild\u0026lt;UIQuad\u0026gt;();\n\n// the IntRect(84,87,85,88) position is where the white rectangle is in the UI.png\nuiQuad-\u0026gt;SetImgRect(IntRect(84,87,85,88));\nuiQuad-\u0026gt;SetTexture(quatTex2d);\n//uiQuad-\u0026gt;SetColor(Color::RED);\n\nstruct RectQuad\n{\n    Vector2 a, b, c, d;\n};\n\n// problem drawing ui quads is that there's a gap between the 2 quads connected\nRectQuad quadList[2] =\n{\n    // a0, b0, c0, d0\n    { Vector2(110.008f, 116.000f), Vector2(196.595f, 116.192f), Vector2(109.991f, 323.999f), Vector2(196.684f, 324.191f) },\n\n    // a1, b1, c1, d1 where a1 = b0, c1 = d0\n    { Vector2(196.595f, 116.192f), Vector2(260.244f, 114.675f), Vector2(196.684f, 324.191f), Vector2(261.163f, 322.588f) },\n};\n\nfor ( int i = 0; i \u0026lt; 2; ++i )\n{\n    uiQuad-\u0026gt;AddQuad(quadList[i].a, quadList[i].b, quadList[i].c, quadList[i].d );\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e}\u003c/p\u003e\n\u003cp\u003evoid UIDrag::CreateInstructions()\u003cbr\u003e\n{\u003cbr\u003e\n}\u003c/p\u003e\n\u003cp\u003evoid UIDrag::SubscribeToEvents()\u003cbr\u003e\n{\u003cbr\u003e\nSubscribeToEvent(E_UPDATE, URHO3D_HANDLER(UIDrag, HandleUpdate));\u003cbr\u003e\n}\u003c/p\u003e\n\u003cp\u003evoid UIDrag::HandleDragBegin(StringHash eventType, VariantMap\u0026amp; eventData)\u003cbr\u003e\n{\u003cbr\u003e\nusing namespace DragBegin;\u003cbr\u003e\nButton* element = (Button*)eventData[P_ELEMENT].GetVoidPtr();\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eint lx = eventData[P_X].GetInt();\nint ly = eventData[P_Y].GetInt();\n\nIntVector2 p = element-\u0026gt;GetPosition();\nelement-\u0026gt;SetVar(\"START\", p);\nelement-\u0026gt;SetVar(\"DELTA\", IntVector2(p.x_ - lx, p.y_ - ly));\n\nint buttons = eventData[P_BUTTONS].GetInt();\nelement-\u0026gt;SetVar(\"BUTTONS\", buttons);\n\nText* t = (Text*)element-\u0026gt;GetChild(String(\"Text\"));\nt-\u0026gt;SetText(\"Drag Begin Buttons: \" + String(buttons));\n\nt = (Text*)element-\u0026gt;GetChild(String(\"Num Touch\"));\nt-\u0026gt;SetText(\"Number of buttons: \" + String(eventData[P_NUMBUTTONS].GetInt()));\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e}\u003c/p\u003e\n\u003cp\u003evoid UIDrag::HandleDragMove(StringHash eventType, VariantMap\u0026amp; eventData)\u003cbr\u003e\n{\u003cbr\u003e\nusing namespace DragBegin;\u003cbr\u003e\nButton* element = (Button*)eventData[P_ELEMENT].GetVoidPtr();\u003cbr\u003e\nint buttons = eventData[P_BUTTONS].GetInt();\u003cbr\u003e\nIntVector2 d = element-\u0026gt;GetVar(“DELTA”).GetIntVector2();\u003cbr\u003e\nint X = eventData[P_X].GetInt() + d.x_;\u003cbr\u003e\nint Y = eventData[P_Y].GetInt() + d.y_;\u003cbr\u003e\nint BUTTONS = element-\u0026gt;GetVar(“BUTTONS”).GetInt();\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eText* t = (Text*)element-\u0026gt;GetChild(String(\"Event Touch\"));\nt-\u0026gt;SetText(\"Drag Move Buttons: \" + String(buttons));\n\nif (buttons == BUTTONS)\n    element-\u0026gt;SetPosition(IntVector2(X, Y));\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e}\u003c/p\u003e\n\u003cp\u003evoid UIDrag::HandleDragCancel(StringHash eventType, VariantMap\u0026amp; eventData)\u003cbr\u003e\n{\u003cbr\u003e\nusing namespace DragBegin;\u003cbr\u003e\nButton* element = (Button*)eventData[P_ELEMENT].GetVoidPtr();\u003cbr\u003e\nIntVector2 P = element-\u0026gt;GetVar(“START”).GetIntVector2();\u003cbr\u003e\nelement-\u0026gt;SetPosition§;\u003cbr\u003e\n}\u003c/p\u003e\n\u003cp\u003evoid UIDrag::HandleDragEnd(StringHash eventType, VariantMap\u0026amp; eventData)\u003cbr\u003e\n{\u003cbr\u003e\nusing namespace DragBegin;\u003cbr\u003e\nButton* element = (Button*)eventData[P_ELEMENT].GetVoidPtr();\u003cbr\u003e\n}\u003c/p\u003e\n\u003cp\u003evoid UIDrag::HandleUpdate(StringHash eventType, VariantMap\u0026amp; eventData)\u003cbr\u003e\n{\u003cbr\u003e\n}\u003c/p\u003e\n\u003cp\u003e//=============================================================================\u003cbr\u003e\n//=============================================================================\u003cbr\u003e\nvoid UIQuad::RegisterObject(Context* context)\u003cbr\u003e\n{\u003cbr\u003e\ncontext-\u0026gt;RegisterFactory();\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eURHO3D_COPY_BASE_ATTRIBUTES(UIElement);\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e}\u003c/p\u003e\n\u003cp\u003eUIQuad::UIQuad(Context *context)\u003cbr\u003e\n: UIElement(context)\u003cbr\u003e\n, blendMode_(BLEND_REPLACE)\u003cbr\u003e\n, imageRect_(IntRect::ZERO)\u003cbr\u003e\n{\u003cbr\u003e\nSetSize(1, 1);\u003cbr\u003e\n}\u003c/p\u003e\n\u003cp\u003eUIQuad::~UIQuad()\u003cbr\u003e\n{\u003cbr\u003e\n}\u003c/p\u003e\n\u003cp\u003evoid UIQuad::GetBatches(PODVector\u0026amp; batches, PODVector\u0026amp; vertexData, const IntRect\u0026amp; currentScissor)\u003cbr\u003e\n{\u003cbr\u003e\nfor ( unsigned i = 0; i \u0026lt; batches_.Size(); ++i )\u003cbr\u003e\n{\u003cbr\u003e\nUIBatch \u0026amp;batch     = batches_[ i ];\u003cbr\u003e\nunsigned beg       = batch.vertexStart_;\u003cbr\u003e\nunsigned end       = batch.vertexEnd_;\u003cbr\u003e\nbatch.vertexStart_ = vertexData.Size();\u003cbr\u003e\nbatch.vertexEnd_   = vertexData.Size() + (end - beg);\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e    vertexData.Resize( batch.vertexEnd_ );\n    memcpy( \u0026amp;vertexData[ batch.vertexStart_ ], \u0026amp;vertexData_[ beg ], (end - beg) * sizeof(float) );\n\n    UIBatch::AddOrMerge( batch, batches );\n\n    // restore\n    batch.vertexStart_ = beg;\n    batch.vertexEnd_   = end;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e}\u003c/p\u003e\n\u003cp\u003evoid UIQuad::SetTexture(Texture* texture)\u003cbr\u003e\n{\u003cbr\u003e\ntexture_ = texture;\u003cbr\u003e\ninvTextureWidth_ = 1.0f/(float)texture_-\u0026gt;GetWidth();\u003cbr\u003e\ninvTextureHeight_ = 1.0f/(float)texture_-\u0026gt;GetHeight();\u003cbr\u003e\n}\u003c/p\u003e\n\u003cp\u003evoid UIQuad::ClearBatches()\u003cbr\u003e\n{\u003cbr\u003e\nvertexData_.Clear();\u003cbr\u003e\nbatches_.Clear();\u003cbr\u003e\n}\u003c/p\u003e\n\u003cp\u003evoid UIQuad::AddQuad(Vector2 \u0026amp;a, Vector2 \u0026amp;b, Vector2 \u0026amp;c, Vector2 \u0026amp;d)\u003cbr\u003e\n{\u003cbr\u003e\nstruct VertexData\u003cbr\u003e\n{\u003cbr\u003e\nfloat x;\u003cbr\u003e\nfloat y;\u003cbr\u003e\nfloat u;\u003cbr\u003e\nfloat v;\u003cbr\u003e\nColor col;\u003cbr\u003e\n};\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eVertexData ver[6];\n\nver[0].x = a.x_;\nver[0].y = a.y_;\nver[0].u = (float)imageRect_.left_ * invTextureWidth_;\nver[0].v = (float)imageRect_.top_ * invTextureHeight_;\nver[0].col = color_[C_TOPLEFT];\nver[1].x = b.x_;\nver[1].y = b.y_;\nver[1].u = (float)imageRect_.right_ * invTextureWidth_;\nver[1].v = (float)imageRect_.top_ * invTextureHeight_;\nver[1].col = color_[C_TOPRIGHT];\nver[2].x = d.x_;\nver[2].y = d.y_;\nver[2].u = (float)imageRect_.right_ * invTextureWidth_;\nver[2].v = (float)imageRect_.bottom_ * invTextureHeight_;\nver[2].col = color_[C_BOTTOMRIGHT];\n\nver[3].x = a.x_;\nver[3].y = a.y_;\nver[3].u = (float)imageRect_.left_ * invTextureWidth_;\nver[3].v = (float)imageRect_.top_ * invTextureHeight_; \nver[3].col = color_[C_TOPLEFT];\nver[4].x = d.x_;\nver[4].y = d.y_;\nver[4].u = (float)imageRect_.right_ * invTextureWidth_;  \nver[4].v = (float)imageRect_.bottom_ * invTextureHeight_;\nver[4].col = color_[C_BOTTOMRIGHT];\nver[5].x = c.x_;\nver[5].y = c.y_;\nver[5].u = (float)imageRect_.left_ * invTextureWidth_;  \nver[5].v = (float)imageRect_.bottom_ * invTextureHeight_;\nver[5].col = color_[C_BOTTOMRIGHT];\n\n// scissor min/max\nint minx =  M_MAX_INT, miny =  M_MAX_INT;\nint maxx = -M_MAX_INT, maxy = -M_MAX_INT;\n\nfor ( int i = 0; i \u0026lt; 6; ++i )\n{\n    if ((int)ver[i].x \u0026lt; minx ) minx = (int)ver[i].x;\n    if ((int)ver[i].x \u0026gt; maxx ) maxx = (int)ver[i].x;\n    if ((int)ver[i].y \u0026lt; miny ) miny = (int)ver[i].y;\n    if ((int)ver[i].y \u0026gt; maxy ) maxy = (int)ver[i].y;\n}\n\nIntRect scissor(minx, miny, maxx, maxy);\nUIBatch batch( this, blendMode_, scissor, texture_, \u0026amp;vertexData_ );\n\nunsigned begin = batch.vertexData_-\u0026gt;Size();\nbatch.vertexData_-\u0026gt;Resize(begin + 6*UI_VERTEX_SIZE);\nfloat* dest = \u0026amp;(batch.vertexData_-\u0026gt;At(begin));\n\n// set start/end\nbatch.vertexStart_ = begin;\nbatch.vertexEnd_   = batch.vertexData_-\u0026gt;Size();\n\nfor ( int i = 0; i \u0026lt; 6; ++i )\n{\n    dest[0+i*UI_VERTEX_SIZE]              = ver[i].x; \n    dest[1+i*UI_VERTEX_SIZE]              = ver[i].y; \n    dest[2+i*UI_VERTEX_SIZE]              = 0.0f;\n    ((unsigned\u0026amp;)dest[3+i*UI_VERTEX_SIZE]) = ver[i].col.ToUInt();\n    dest[4+i*UI_VERTEX_SIZE]              = ver[i].u; \n    dest[5+i*UI_VERTEX_SIZE]              = ver[i].v;\n}\n\nUIBatch::AddOrMerge( batch, batches_ );\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e}[/code][/spoiler]\u003c/p\u003e","post_number":1,"post_type":1,"updated_at":"2017-01-02T01:15:00.765Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":4,"reads":10,"readers_count":9,"score":22.0,"yours":false,"topic_id":2368,"topic_slug":"solved-connected-ui-quads-show-gap","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":256,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":14272,"name":"","username":"Lumak","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/l/8491ac/{size}.png","created_at":"2016-10-30T17:34:24.000Z","cooked":"\u003cp\u003eNvm, just figured it out.\u003c/p\u003e","post_number":2,"post_type":1,"updated_at":"2017-01-02T01:15:00.860Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":0,"reads":5,"readers_count":4,"score":1.0,"yours":false,"topic_id":2368,"topic_slug":"solved-connected-ui-quads-show-gap","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":256,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false}],"stream":[14271,14272]},"timeline_lookup":[[1,2214]],"suggested_topics":[{"id":7105,"title":"Multiple Application.UI Roots?","fancy_title":"Multiple Application.UI Roots?","slug":"multiple-application-ui-roots","posts_count":3,"reply_count":1,"highest_post_number":3,"image_url":"https://global.discourse-cdn.com/standard17/uploads/urho3d/optimized/2X/7/74b10ce575f1b69fe43be4abcb07605d74a1d27c_2_1024x544.jpeg","created_at":"2021-12-20T08:55:14.707Z","last_posted_at":"2021-12-22T02:33:05.795Z","bumped":true,"bumped_at":"2021-12-22T02:33:05.795Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":0,"views":243,"category_id":10,"featured_link":null,"has_accepted_answer":true,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":1334,"username":"najak3d","name":"Brian Knox","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/n/6a8cbe/{size}.png"}},{"extras":null,"description":"Frequent Poster, Accepted Answer","user":{"id":628,"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}}]},{"id":7115,"title":"Is it possbile to use one billboard for a lens flare?","fancy_title":"Is it possbile to use one billboard for a lens flare?","slug":"is-it-possbile-to-use-one-billboard-for-a-lens-flare","posts_count":17,"reply_count":4,"highest_post_number":17,"image_url":null,"created_at":"2022-01-02T03:10:48.953Z","last_posted_at":"2022-01-03T21:37:51.953Z","bumped":true,"bumped_at":"2022-01-03T21:37:51.953Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":4,"views":275,"category_id":10,"featured_link":null,"has_accepted_answer":true,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":861,"username":"GodMan","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/g/e79b87/{size}.png"}},{"extras":null,"description":"Frequent Poster, Accepted Answer","user":{"id":192,"username":"Modanung","name":"魔大农 𝞍𝞎𝝳 現招蜍","avatar_template":"/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":628,"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}}]},{"id":7132,"title":"How to Draw Anti-Aliased Outlined Line on the UI layer?","fancy_title":"How to Draw Anti-Aliased Outlined Line on the UI layer?","slug":"how-to-draw-anti-aliased-outlined-line-on-the-ui-layer","posts_count":8,"reply_count":5,"highest_post_number":8,"image_url":"https://global.discourse-cdn.com/standard17/uploads/urho3d/optimized/2X/c/c040fdbc2f1856c238ba6328fd7f5ff80b15858f_2_782x1024.jpeg","created_at":"2022-01-17T22:08:06.874Z","last_posted_at":"2022-01-20T20:13:30.614Z","bumped":true,"bumped_at":"2022-01-20T20:13:30.614Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":3,"views":173,"category_id":10,"featured_link":null,"has_accepted_answer":true,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":1334,"username":"najak3d","name":"Brian Knox","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/n/6a8cbe/{size}.png"}},{"extras":null,"description":"Frequent Poster, Accepted Answer","user":{"id":631,"username":"JTippetts1","name":"J Tippetts","avatar_template":"/user_avatar/discourse.urho3d.io/jtippetts1/{size}/96_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":628,"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":192,"username":"Modanung","name":"魔大农 𝞍𝞎𝝳 現招蜍","avatar_template":"/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png"}}]},{"id":7146,"title":"How create affordable comfortable and modern terrain?","fancy_title":"How create affordable comfortable and modern terrain?","slug":"how-create-affordable-comfortable-and-modern-terrain","posts_count":5,"reply_count":1,"highest_post_number":5,"image_url":null,"created_at":"2022-01-21T15:20:08.910Z","last_posted_at":"2022-01-21T21:51:58.799Z","bumped":true,"bumped_at":"2022-01-21T22:03:14.896Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":4,"views":193,"category_id":10,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":null,"description":"Original Poster","user":{"id":1497,"username":"timob256","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/t/b782af/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":1304,"username":"lebrewer","name":"lebrewer","avatar_template":"/user_avatar/discourse.urho3d.io/lebrewer/{size}/2811_2.png"}},{"extras":"latest","description":"Most Recent Poster","user":{"id":230,"username":"Nerrik","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/n/958977/{size}.png"}}]},{"id":7182,"title":"How install landscape in the format (.tor or .obj)?","fancy_title":"How install landscape in the format (.tor or .obj)?","slug":"how-install-landscape-in-the-format-tor-or-obj","posts_count":4,"reply_count":1,"highest_post_number":4,"image_url":null,"created_at":"2022-02-03T16:58:20.976Z","last_posted_at":"2022-02-04T16:34:09.663Z","bumped":true,"bumped_at":"2022-02-04T16:34:09.663Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":2,"views":151,"category_id":10,"featured_link":null,"has_accepted_answer":true,"posters":[{"extras":null,"description":"Original Poster","user":{"id":1497,"username":"timob256","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/t/b782af/{size}.png"}},{"extras":"latest","description":"Most Recent Poster, Accepted Answer","user":{"id":1317,"username":"Lys0gen","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/l/57b2e6/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":628,"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}}]}],"tags_descriptions":{},"id":2368,"title":"[SOLVED] connected UI quads show gap","fancy_title":"[SOLVED] connected UI quads show gap","posts_count":2,"created_at":"2016-10-30T17:16:00.000Z","views":386,"reply_count":0,"like_count":0,"last_posted_at":"2016-10-30T17:34:24.000Z","visible":true,"closed":false,"archived":false,"has_summary":false,"archetype":"regular","slug":"solved-connected-ui-quads-show-gap","category_id":10,"word_count":1353,"deleted_at":null,"user_id":256,"featured_link":null,"pinned_globally":false,"pinned_at":null,"pinned_until":null,"image_url":null,"slow_mode_seconds":0,"draft":null,"draft_key":"topic_2368","draft_sequence":null,"unpinned":null,"pinned":false,"current_post_number":1,"highest_post_number":2,"deleted_by":null,"actions_summary":[{"id":4,"count":0,"hidden":false,"can_act":false},{"id":8,"count":0,"hidden":false,"can_act":false},{"id":7,"count":0,"hidden":false,"can_act":false}],"chunk_size":20,"bookmarked":false,"bookmarks":[],"topic_timer":null,"message_bus_last_id":0,"participant_count":1,"show_read_indicator":false,"thumbnails":null,"slow_mode_enabled_until":null,"tags_disable_ads":false,"details":{"can_edit":false,"notification_level":1,"participants":[{"id":256,"username":"Lumak","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/l/8491ac/{size}.png","post_count":2,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"trust_level":2}],"created_by":{"id":256,"username":"Lumak","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/l/8491ac/{size}.png"},"last_poster":{"id":256,"username":"Lumak","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/l/8491ac/{size}.png"}}}