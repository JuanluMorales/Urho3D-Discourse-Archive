{"post_stream": {"posts": [{"id": 30194, "name": "Leith Ketchell", "username": "Leith", "avatar_template": "/user_avatar/discourse.urho3d.io/leith/{size}/2384_2.png", "created_at": "2019-06-12T05:22:27.184Z", "cooked": "<p>It\u2019s been raining all day and night here.<br>\nI decided to spend some time playing with lezak\u2019s BehaviorTree codebase.<br>\nAfter doing that for some time, I decided to find a decent editor I could use to create my trees, rather than using hardcode or handcrafting xml/json.</p>\n<p>I came across \u201cowl-bt\u201d today. <a href=\"https://www.npmjs.com/package/owl-bt\" rel=\"nofollow noopener\">https://www.npmjs.com/package/owl-bt</a><br>\nI\u2019ve fallen in love with its simple approach and engine-agnostic design.<br>\nSuper easy to add new custom node types and even declare custom data types\u2026<br>\nSaves to json. Hotloads your changes. Runs in your web browser.</p>\n<p>I can see myself putting together code to load that json into lezak\u2019s codebase, which is also highly flexible, and seems to be well thought out, other than one small issue\u2026 it\u2019s a classical implementation of BT, and so there is no thought to data oriented design or re-use of existing subtrees\u2026</p>\n<p>Behaviour tree nodes that contain dynamic data are a no-no\u2026 (nodes that use constant or statically shared data are ok)\u2026<br>\nIf we do that, and by that, I mean store any dynamic values in our nodes, then we can\u2019t easily reference entire subtrees at runtime, which means that every actor that needs a BT has to have a whole unique copy of said tree instantiated at runtime.</p>\n<p>A perfect example is a repeater node, that holds a counter. We need to store that data outside the node, and pass it in our calling context, then we are \u201csweet\u201d.</p>\n<p>Just my two cents worth.</p>", "post_number": 1, "post_type": 1, "updated_at": "2019-06-12T06:01:57.667Z", "reply_count": 1, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 98, "reads": 64, "readers_count": 63, "score": 551.8, "yours": false, "topic_id": 5228, "topic_slug": "behaviour-trees", "display_username": "Leith Ketchell", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 4, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "https://www.npmjs.com/package/owl-bt", "internal": false, "reflection": false, "title": "owl-bt - npm", "clicks": 22}], "read": true, "user_title": "suspended user", "title_is_group": false, "bookmarked": false, "actions_summary": [{"id": 2, "count": 1}], "moderator": false, "admin": false, "staff": false, "user_id": 1098, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "user_suspended": true, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 30197, "name": "kabu", "username": "johnnycable", "avatar_template": "/user_avatar/discourse.urho3d.io/johnnycable/{size}/788_2.png", "created_at": "2019-06-12T14:50:11.893Z", "cooked": "<p>Interesting find. I was searching for s.t. like it without the hassle of putting together an editor\u2026 Thx</p>", "post_number": 2, "post_type": 1, "updated_at": "2019-06-12T14:50:11.893Z", "reply_count": 1, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 1, "reads": 60, "readers_count": 59, "score": 37.0, "yours": false, "topic_id": 5228, "topic_slug": "behaviour-trees", "display_username": "kabu", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [{"id": 2, "count": 1}], "moderator": false, "admin": false, "staff": false, "user_id": 660, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 30200, "name": "Justin Miller", "username": "jmiller", "avatar_template": "/user_avatar/discourse.urho3d.io/jmiller/{size}/2367_2.png", "created_at": "2019-06-12T16:58:05.989Z", "cooked": "<aside class=\"quote no-group\" data-username=\"Leith\" data-post=\"1\" data-topic=\"5228\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/leith/40/2384_2.png\" class=\"avatar\"> Leith:</div>\n<blockquote>\n<p>lezak\u2019s codebase</p>\n</blockquote>\n</aside>\n<aside class=\"quote\" data-post=\"1\" data-topic=\"2947\">\n  <div class=\"title\">\n    <div class=\"quote-controls\"></div>\n    <img loading=\"lazy\" alt=\"\" width=\"20\" height=\"20\" src=\"https://avatars.discourse-cdn.com/v4/letter/l/b38774/40.png\" class=\"avatar\">\n    <a href=\"https://discourse.urho3d.io/t/behavior-tree-for-urho3d/2947\">Behavior Tree for Urho3D</a> <a class=\"badge-wrapper  bullet\" href=\"/c/showcase/17\"><span class=\"badge-category-bg\" style=\"background-color: #F1592A;\"></span><span style=\"\" data-drop-close=\"true\" class=\"badge-category clear-badge\" title=\"Share things created with or for Urho3D.\">Showcase</span></a>\n  </div>\n  <blockquote>\n    Hello Everybody! \nI\u2019ve created behavior tree system for Urho3D. This implementation is based on event-drivenBT from  <a href=\"https://youtu.be/n4aREFb3SsU\" rel=\"nofollow noopener\">this video</a> (~36 min) \nYou can get source code from  <a href=\"https://github.com/lezak/Urho3DBehaviorTree\" rel=\"nofollow noopener\"> here</a>. \nAlso check out <a href=\"https://github.com/lezak/Urho3DBehaviorTreeDemo\" rel=\"nofollow noopener\"> demo project</a> for some basic intructions (especially source files for Example1 - right now I don\u2019t have time to write more detailed instruction). \nIf You are Windows(64 bits) user, You can get binary form of demo <a href=\"https://drive.google.com/file/d/0B0msHYrZwQHYT056R3d2UnVLc1U/view?usp=sharing\" rel=\"nofollow noopener\"> from here </a>. \nI hope You\u2019ll find this useful.\n  </blockquote>\n</aside>\n\n<p>\u2013 referencebot</p>", "post_number": 3, "post_type": 1, "updated_at": "2019-06-12T16:58:05.989Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 1, "incoming_link_count": 1, "reads": 59, "readers_count": 58, "score": 31.8, "yours": false, "topic_id": 5228, "topic_slug": "behaviour-trees", "display_username": "Justin Miller", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "https://discourse.urho3d.io/t/behavior-tree-for-urho3d/2947", "internal": true, "reflection": false, "title": "Behavior Tree for Urho3D", "clicks": 0}], "read": true, "user_title": "", "bookmarked": false, "actions_summary": [{"id": 2, "count": 1}], "moderator": true, "admin": false, "staff": true, "user_id": 21, "hidden": false, "trust_level": 3, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 30203, "name": "Leith Ketchell", "username": "Leith", "avatar_template": "/user_avatar/discourse.urho3d.io/leith/{size}/2384_2.png", "created_at": "2019-06-13T02:25:51.071Z", "cooked": "<p>Have started writing code to load the json saved by owl-bt<br>\nI thought I\u2019d mention a couple of things I\u2019ve noticed so far:</p>\n<ol>\n<li>Any node can have a Name - but the editor does not display them or let you set them.</li>\n<li>Node properties are not serialized if they bear the value we specified to be default (similar to Urho attributes).</li>\n<li>Manual editing of the owl-bt.json file usually (but not always) is hotloaded by the editor.</li>\n<li>Manual editing of mytree.json file is never hotloaded (refresh your browser to reload the tree)</li>\n</ol>\n<p>I am still very happy with this editor because it is so easy to adapt to your custom bt node types.</p>", "post_number": 4, "post_type": 1, "updated_at": "2019-06-13T02:25:51.071Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 54, "readers_count": 53, "score": 10.8, "yours": false, "topic_id": 5228, "topic_slug": "behaviour-trees", "display_username": "Leith Ketchell", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "suspended user", "title_is_group": false, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 1098, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "user_suspended": true, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 30204, "name": "Leith Ketchell", "username": "Leith", "avatar_template": "/user_avatar/discourse.urho3d.io/leith/{size}/2384_2.png", "created_at": "2019-06-13T06:05:14.785Z", "cooked": "<p>Since I have access to class names, I\u2019ve decided to let the parser attempt to construct node instances by name via class object factory method. Since I use scripting little if at all, I\u2019ve been searching for a while for a good reason to register object factories, in a context where I could take advantage of name-based instantiation. It\u2019s a shame we can\u2019t register factory functions with arguments.</p>", "post_number": 5, "post_type": 1, "updated_at": "2019-06-13T06:05:14.785Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 53, "readers_count": 52, "score": 10.6, "yours": false, "topic_id": 5228, "topic_slug": "behaviour-trees", "display_username": "Leith Ketchell", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "suspended user", "title_is_group": false, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 1098, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "user_suspended": true, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 30205, "name": "Leith Ketchell", "username": "Leith", "avatar_template": "/user_avatar/discourse.urho3d.io/leith/{size}/2384_2.png", "created_at": "2019-06-13T06:46:51.622Z", "cooked": "<p>What is the proper way to cast a shared pointer in Urho? If I am using factory instantiation, then I get a SharedPtr, which is not really what my object type is.</p>", "post_number": 6, "post_type": 1, "updated_at": "2019-06-13T06:46:51.622Z", "reply_count": 1, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 53, "readers_count": 52, "score": 15.6, "yours": false, "topic_id": 5228, "topic_slug": "behaviour-trees", "display_username": "Leith Ketchell", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "suspended user", "title_is_group": false, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 1098, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "user_suspended": true, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 30206, "name": "Leith Ketchell", "username": "Leith", "avatar_template": "/user_avatar/discourse.urho3d.io/leith/{size}/2384_2.png", "created_at": "2019-06-13T06:55:44.436Z", "cooked": "<p><a class=\"mention\" href=\"/u/johnnycable\">@johnnycable</a>, yeah, \u201csomething like it\u201d was what I needed too - something that was not dedicated to an existing codebase or engine, and was easily configurable for my nefarious purposes.<br>\nI certainly wanted to avoid writing a full fledged editor, though there is some sourcecode floating around that I could have used to do so - it\u2019s just not a good use of my time, for my project, to create custom editor solutions, when I can just rely on established stuff like xml and json, and deal with that at my end.</p>", "post_number": 7, "post_type": 1, "updated_at": "2019-06-13T07:08:04.776Z", "reply_count": 0, "reply_to_post_number": 2, "quote_count": 0, "incoming_link_count": 0, "reads": 53, "readers_count": 52, "score": 10.6, "yours": false, "topic_id": 5228, "topic_slug": "behaviour-trees", "display_username": "Leith Ketchell", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 2, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "suspended user", "title_is_group": false, "reply_to_user": {"username": "johnnycable", "name": "kabu", "avatar_template": "/user_avatar/discourse.urho3d.io/johnnycable/{size}/788_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 1098, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "user_suspended": true, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 30207, "name": "Justin Miller", "username": "jmiller", "avatar_template": "/user_avatar/discourse.urho3d.io/jmiller/{size}/2367_2.png", "created_at": "2019-06-13T13:54:24.636Z", "cooked": "<aside class=\"quote no-group\" data-username=\"Leith\" data-post=\"6\" data-topic=\"5228\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/leith/40/2384_2.png\" class=\"avatar\"> Leith:</div>\n<blockquote>\n<p>What is the proper way to cast a shared pointer in Urho?</p>\n</blockquote>\n</aside>\n<p>What I see in Urho (and what I often do) is cast the raw pointer. <code>SharedPtr::Get()</code> et al.</p>", "post_number": 8, "post_type": 1, "updated_at": "2019-06-13T13:54:24.636Z", "reply_count": 2, "reply_to_post_number": 6, "quote_count": 1, "incoming_link_count": 0, "reads": 52, "readers_count": 51, "score": 35.4, "yours": false, "topic_id": 5228, "topic_slug": "behaviour-trees", "display_username": "Justin Miller", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "", "bookmarked": false, "actions_summary": [{"id": 2, "count": 1}], "moderator": true, "admin": false, "staff": true, "user_id": 21, "hidden": false, "trust_level": 3, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 30208, "name": "Leith Ketchell", "username": "Leith", "avatar_template": "/user_avatar/discourse.urho3d.io/leith/{size}/2384_2.png", "created_at": "2019-06-14T01:55:16.940Z", "cooked": "<p>[WARNING: WORKAROUND HACK CODE AHEAD! Also - this code is not complete\u2026]</p>\n<p>What I was looking for was Detach()\u2026</p>\n<p>Urho\u2019s object factory implementation returns a shared pointer, but deep in my recursive json parser it was not necessary or even desirable to have my object pointers wrapped at all, let alone by the insidious shared pointer (hey - I DO use them, but I want to decide when and where something gets wrapped in one of those\u2026)</p>\n<p>I did need to perform an upcast from Urho3D::Object to my baseclass prior to calling Detach in order to ensure I was returned the correct object type.<br>\nAlso, I think I\u2019ll rename my classes to avoid the following ugly name-mangling\u2026 owl-bt calls its classes \u201cSequence\u201d, \u201cSelector\u201d etc., while lezak\u2019s classes are called \u201cSequenceNode\u201d, \u201cSelectorNode\u201d, and so on - and its the C++ class name that matters when instantiating class objects by name via factory.</p>\n<pre><code class=\"lang-auto\">    BehaviorTreeNode* BehaviorTree::ParseNodeFromJSON(const Urho3D::JSONValue&amp; jvalue){\n        String nodetype =jvalue.Get(\"type\").GetString();\n        String nodename =jvalue.Get(\"name\").GetString();\n\n        /// Instantiate the node by typename\n        SharedPtr&lt;BehaviorTreeNode&gt; newNode(context_-&gt;CreateObject(nodetype+\"Node\")-&gt;Cast&lt;BehaviorTreeNode&gt;());\n\n        /// If that failed, we probably forgot to register a node class with Urho!\n        if(newNode==nullptr){\n            URHO3D_LOGERROR(\"JSON PARSER - UNHANDLED NODE TYPE: \"+nodetype);\n            return nullptr;\n        }\n\n        /// Process node properties (if any)\n        Urho3D::JSONArray props=jvalue.Get(\"properties\").GetArray();\n        for(auto it=props.Begin(); it!=props.End(); it++)\n            ParseNodePropertyFromJSON(*it);\n\n        /// Process node decorators (if any)\n        Urho3D::JSONArray decorators=jvalue.Get(\"decorators\").GetArray();\n        for(auto it=decorators.Begin(); it!=decorators.End(); it++)\n            ParseNodeDecoratorFromJSON(*it);\n\n        /// If the node we just created is a Composite type?\n        CompositeNode* n=newNode-&gt;Cast&lt;CompositeNode&gt;();\n        if(n){\n            /// Call initializer method on composite type\n            n-&gt;OnFactoryConstruct(this, false, nodename);\n\n            /// Process child nodes (only Composite Nodes should have children!)\n            Urho3D::JSONArray children=jvalue.Get(\"childNodes\").GetArray();\n            for(auto it=children.Begin(); it!=children.End(); it++)\n                n-&gt;AddChild(ParseNodeFromJSON(*it));\n        }\n        else\n        {\n            /// TODO:\n            /// Node is some kind of Leaf node...\n            /// Set a breakpoint here!\n            int x=0;\n        }\n\n        /// HACK:\n        /// Node Factory Function gave us a SharedPtr, but we did not really want one.\n        /// We know there's no other \"owners\" of the shared pointer...\n        /// Let's detach the raw pointer from the shared pointer :)\n        return newNode.Detach();\n\n    }</code></pre>\n<p>My code now returns raw pointers to the caller, who is in turn responsible for storing them in smart pointer objects. This is somewhat better than trying to pass / return shared pointers across call boundaries, and all the needless construction, copying and destruction that involves.<br>\nIt would be nice if the Context class / Factory implementation provided a constructor that returned a raw pointer\u2026 is there something I missed?</p>", "post_number": 9, "post_type": 1, "updated_at": "2019-06-14T04:55:06.784Z", "reply_count": 0, "reply_to_post_number": 8, "quote_count": 0, "incoming_link_count": 4, "reads": 49, "readers_count": 48, "score": 44.8, "yours": false, "topic_id": 5228, "topic_slug": "behaviour-trees", "display_username": "Leith Ketchell", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 6, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "suspended user", "title_is_group": false, "reply_to_user": {"username": "jmiller", "name": "Justin Miller", "avatar_template": "/user_avatar/discourse.urho3d.io/jmiller/{size}/2367_2.png"}, "bookmarked": false, "actions_summary": [{"id": 2, "count": 1}], "moderator": false, "admin": false, "staff": false, "user_id": 1098, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "user_suspended": true, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 30209, "name": "Leith Ketchell", "username": "Leith", "avatar_template": "/user_avatar/discourse.urho3d.io/leith/{size}/2384_2.png", "created_at": "2019-06-14T04:33:24.796Z", "cooked": "<p>The reason that I have chosen to use factory instantiation is just this: once written, the same parser/loader code will still work, even if we register new node class types to Urho, with no further changes needed in the loader (99 percent of the time).</p>", "post_number": 10, "post_type": 1, "updated_at": "2019-06-14T04:33:24.796Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 47, "readers_count": 46, "score": 9.4, "yours": false, "topic_id": 5228, "topic_slug": "behaviour-trees", "display_username": "Leith Ketchell", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "suspended user", "title_is_group": false, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 1098, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "user_suspended": true, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 30218, "name": "Leith Ketchell", "username": "Leith", "avatar_template": "/user_avatar/discourse.urho3d.io/leith/{size}/2384_2.png", "created_at": "2019-06-15T04:58:45.552Z", "cooked": "<p>I tried to get my JSON parser to register new class attributes - this turned out to be a fizzer for several reasons, but I found an amicable workaround in the UIElement class - it implements a serializable attribute (variantmap type) called \u201cVariables\u201d (vars_ membername). I could easily add such an attribute to my base BT node class, so ANY node can potentially own an arbitrary list of properties / named and typed variables which would serialize easily.<br>\nI realized quickly that I could just add \u201cnode properties\u201d as typed variants in a serialized map - this way, my classes did not need to express any details pertaining to properties.<br>\nNow dealing with some small issues involving an incomplete typemapping between JSON and Urho.</p>", "post_number": 11, "post_type": 1, "updated_at": "2019-06-15T06:14:38.051Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 46, "readers_count": 45, "score": 9.2, "yours": false, "topic_id": 5228, "topic_slug": "behaviour-trees", "display_username": "Leith Ketchell", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 4, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "suspended user", "title_is_group": false, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 1098, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "user_suspended": true, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 30225, "name": "Leith Ketchell", "username": "Leith", "avatar_template": "/user_avatar/discourse.urho3d.io/leith/{size}/2384_2.png", "created_at": "2019-06-16T08:44:25.075Z", "cooked": "<p>There are a bunch of \u201cgotchas\u201d when working with lezak\u2019s behaviortree code.<br>\nI\u2019ll try to put together some kind of documentation, as the owl-bt editor has very few limitations, while lezak\u2019s code has a number of limitations where it comes to tree topology and execution.</p>\n<p>One example is that the (owl-bt) editor will let you add multiple Decorators to any node in the tree, while the current codebase only allows one decorator per node.</p>\n<p>It took me most of a day to completely implement and test the following node types:</p>\n<p>Composites: Selector, Sequence, Parallel<br>\nActions: LogAction, WaitStepsAction<br>\nDecorators: Invert, Loop, Success, Failure, IsBlackboardValueSet, IsBlackboardValueEqual</p>\n<p>I found testing difficult, mainly because my understanding of how a BT works is fairly different to this (stack-based) re-entrant implementation. I am trying to cope, docs on the way (\u201cit\u2019s a man page\u201d)</p>", "post_number": 12, "post_type": 1, "updated_at": "2019-06-16T08:53:25.504Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 46, "readers_count": 45, "score": 9.2, "yours": false, "topic_id": 5228, "topic_slug": "behaviour-trees", "display_username": "Leith Ketchell", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 2, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "suspended user", "title_is_group": false, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 1098, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "user_suspended": true, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 30261, "name": "Leith Ketchell", "username": "Leith", "avatar_template": "/user_avatar/discourse.urho3d.io/leith/{size}/2384_2.png", "created_at": "2019-06-18T10:22:17.610Z", "cooked": "<p>The first \u201cgotcha\u201d is that lezak\u2019s BT nodes only support ONE Decorator. If you make more in the editor, they will not be loaded by my code (room to address this).</p>\n<p>The second \u201cgotcha\u201d is that Decorators are only executed by nodes whose child reported that they completed (ie, not running).</p>\n<p>The third, is that there are corner cases where Decorators won\u2019t run at all.<br>\nI will try to elaborate on this as my understanding increases.</p>\n<p>My next step is to implement something missing from lezak\u2019s codebase: Service nodes\u2026 these basically execute a script\u2026 my first real foray into a reason to use script at all, coming right up\u2026</p>\n<p>Since decorators only \u201crun late\u201d, I may also introduce the notion of \u201cguard node\u201d - where one decorator node may prevent the execution of the node to which it is attached.</p>\n<p>This is not immediately a good fit with the owl-bt editor, but I can work with it, given the flexibility in the editor, and possibly petition the author to extend their work.</p>", "post_number": 13, "post_type": 1, "updated_at": "2019-06-18T10:25:45.974Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 1, "reads": 47, "readers_count": 46, "score": 14.4, "yours": false, "topic_id": 5228, "topic_slug": "behaviour-trees", "display_username": "Leith Ketchell", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "suspended user", "title_is_group": false, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 1098, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "user_suspended": true, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 30266, "name": "Leith Ketchell", "username": "Leith", "avatar_template": "/user_avatar/discourse.urho3d.io/leith/{size}/2384_2.png", "created_at": "2019-06-19T06:10:22.523Z", "cooked": "<p>Here\u2019s a screenshot showing some customizing of Owl-BT \u2026 I can load and run this behaviortree, not that it does much yet - it\u2019s just a testing ground to help me verify my custom node implementations and to help me to perform sanity-checking.<br>\n<div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://global.discourse-cdn.com/standard17/uploads/urho3d/original/2X/2/21b0156efb407fa126f3f295e9866e7b2363e0d4.png\" title=\"OwlBT.png\" rel=\"nofollow noopener\"><img src=\"https://global.discourse-cdn.com/standard17/uploads/urho3d/optimized/2X/2/21b0156efb407fa126f3f295e9866e7b2363e0d4_2_690x374.png\" alt=\"OwlBT\" data-base62-sha1=\"4O10SrVXY5SopnpZe3klTUDYQSw\" width=\"690\" height=\"374\" srcset=\"https://global.discourse-cdn.com/standard17/uploads/urho3d/optimized/2X/2/21b0156efb407fa126f3f295e9866e7b2363e0d4_2_690x374.png, https://global.discourse-cdn.com/standard17/uploads/urho3d/optimized/2X/2/21b0156efb407fa126f3f295e9866e7b2363e0d4_2_1035x561.png 1.5x, https://global.discourse-cdn.com/standard17/uploads/urho3d/optimized/2X/2/21b0156efb407fa126f3f295e9866e7b2363e0d4_2_1380x748.png 2x\" data-small-upload=\"https://global.discourse-cdn.com/standard17/uploads/urho3d/optimized/2X/2/21b0156efb407fa126f3f295e9866e7b2363e0d4_2_10x10.png\"><div class=\"meta\">\n<svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use xlink:href=\"#far-image\"></use></svg><span class=\"filename\">OwlBT.png</span><span class=\"informations\">1920\u00d71042 130 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use xlink:href=\"#discourse-expand\"></use></svg>\n</div></a></div></p>\n<p>Most nodes can be annotated with comments, and composite nodes support random or ordered child execution. Owl-bt has no support for testing tree logic inside the editor, but I\u2019ve never seen a BT editor that did - it has no idea how our implementation works!</p>\n<p>My loader code attempts to automatically deal with new node types and node properties, which makes life pretty easy for the coder to support new node types should new requirements emerge.</p>", "post_number": 14, "post_type": 1, "updated_at": "2019-06-19T06:46:04.425Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 43, "readers_count": 42, "score": 8.6, "yours": false, "topic_id": 5228, "topic_slug": "behaviour-trees", "display_username": "Leith Ketchell", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 2, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "https://global.discourse-cdn.com/standard17/uploads/urho3d/original/2X/2/21b0156efb407fa126f3f295e9866e7b2363e0d4.png", "internal": false, "reflection": false, "title": "21b0156efb407fa126f3f295e9866e7b2363e0d4.png", "clicks": 0}], "read": true, "user_title": "suspended user", "title_is_group": false, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 1098, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "user_suspended": true, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 30269, "name": "Leith Ketchell", "username": "Leith", "avatar_template": "/user_avatar/discourse.urho3d.io/leith/{size}/2384_2.png", "created_at": "2019-06-19T06:39:51.342Z", "cooked": "<p>I\u2019ve implemented \u201cSetVariable\u201d and \u201cIsSetVariable\u201d as \u201caction nodes\u201d (aka leaf nodes).</p>\n<p>SetVariable stores a named and typed value in the context of the owner tree (for now).<br>\nCurrently supported types are string, number (evaluates to a float) or bool.<br>\nUnsupported types generate suitable debug spew.</p>\n<p>IsSetVariable just tells us if some named variable has been set at all.</p>\n<p>Action nodes can return Success, Failure or Running.<br>\nMy \u201cLogAction\u201d node always returns Success - unless explicitly decorated to return something else.</p>\n<p>\u201cSetVariable\u201d likewise, always succeeds, unless decorated.</p>\n<p>But \u201cIsSetVariable\u201d can return Success (variable exists) or Failure (no such variable).</p>\n<p>The variables of which I speak currently reside in a VariantMap (aka Blackboard) held by the BehaviorTree container object, but more correctly belong in a visiting Agent, or at least a Calling Context. These are not global variables, they represent the \u201cknowledge\u201d of the AI Agent who is the chief subject of the tree execution.</p>", "post_number": 15, "post_type": 1, "updated_at": "2019-06-19T06:53:59.306Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 44, "readers_count": 43, "score": 8.8, "yours": false, "topic_id": 5228, "topic_slug": "behaviour-trees", "display_username": "Leith Ketchell", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 2, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "suspended user", "title_is_group": false, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 1098, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "user_suspended": true, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 30282, "name": "Leith Ketchell", "username": "Leith", "avatar_template": "/user_avatar/discourse.urho3d.io/leith/{size}/2384_2.png", "created_at": "2019-06-20T04:17:20.875Z", "cooked": "<p>Today I extended lezak\u2019s BT codebase to support Subtree recursion. The changes should allow us to do two important things:</p>\n<ul>\n<li>be able to construct complex behaviors by referencing more simple ones \u2026 building blocks</li>\n<li>be able to share one behaviortree instance across any number of actors \u2026 persistent data is not stored in the tree</li>\n</ul>\n<p>The concept is that we have a special kind of Leaf node which holds a weak reference to another behaviortree, and acts as a proxy by executing the subtree and returning the result of the subtree execution to the parent node (of the proxy node) in the usual way (for behavior tree nodes).<br>\nOne instance of such a node in a behaviortree is representative of an entire nested copy of some other tree. Of course, no such cloning of subtrees is actually done\u2026 instead, we can rely on a little logic: the execution-sensitive variables owned by the nodes in one subtree are safe for the entire execution of that subtree - and if we prevent subtree nesting, then they are safe across subtree executions, as they exist in a single \u201cframe of tree execution\u201d. In order to deliberately share data across subtrees, I chose a Blackboard approach\u2026</p>\n<p>I began by changing the return value of BehaviorTree::Process() to return the BTNodeState value from the root node execution all the way back to the caller of Process method.<br>\nThis would allow a subtree to return its result to a caller node in a parent tree.</p>\n<p>Secondly, I introduced the notion of a BehaviorTreeContext object which is passed down during subtree recursion - this acts as a \u201cBlackboard\u201d that nodes can read and write to, which contextually is \u201cowned by the actor who is the subject of tree execution\u201d. This mechanism allows data variables to persist and be shared by multiple subtrees, while remaining the property of the caller, and not the property of any individual node or subtree.</p>\n<p>Thirdly, I added a guard stack to the BTContext object, so that it can remember which subtrees it has previously recursed during a single execution of the entire tree, and will trigger an error if an attempt is made to recurse a previously-visited subtree (to prevent the possibility of infinite recursion).</p>\n<p>Fourthly, I added a static HashMap&lt;String, SharedPtr&gt; BehaviorTree::SubTreeLibrary and static methods to add your loaded behaviortree objects to the library, and to locate existing subtrees by name.<br>\nThis mechanism will allow the JSON loader to locate previously-loaded behaviors by name alone.</p>\n<p>The code all compiles and looks to be complete and logically sound\u2026 I\u2019ll test it soon, need to modify owl-bt to support my new Subtree proxy node.</p>\n<p>[EDIT]<br>\nAll tested and working!<br>\nI\u2019m loading two behaviortrees, and storing them as named behaviors. One of these two trees represents the root, and it contains a proxy node that references the other subtree. When that proxy node is reached, it executes the child tree, then returns the result from the child tree.</p>\n<p>I\u2019ve only tested a single depth-level of subtree recursion, but it works fine, and I can\u2019t imagine why it would fail at deeper levels (ie, subtrees referencing even finer subtrees).<br>\nYou just need to be mindful of a few things (time to write some docs?) - some are: subtrees must be loaded before attempting to load any higher behavior that references them, and we need to think more carefully about how the return value from a subtree is interpreted by the parent tree.</p>\n<p>From now on, I don\u2019t have to deal with large, sprawling, complex trees in the owl-bt editor - I can concentrate on one small sub-behavior at a time.</p>", "post_number": 16, "post_type": 1, "updated_at": "2019-06-20T07:23:46.631Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 43, "readers_count": 42, "score": 8.6, "yours": false, "topic_id": 5228, "topic_slug": "behaviour-trees", "display_username": "Leith Ketchell", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 5, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "suspended user", "title_is_group": false, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 1098, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "user_suspended": true, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 30283, "name": "Leith Ketchell", "username": "Leith", "avatar_template": "/user_avatar/discourse.urho3d.io/leith/{size}/2384_2.png", "created_at": "2019-06-20T06:53:28.653Z", "cooked": "<p>Here\u2019s what the code looks like now for proxy-execution of a Subtree\u2026 We can see the implementation of the new signature for the execution entrypoint \u2026 BTNodeState BehaviorTree::Process(float, BehaviorTreeContext*)</p>\n<pre><code class=\"lang-auto\">    BTNodeState SubTree::HandleStep(){\n        if(tree_-&gt;btContext_==nullptr)\n        {\n            URHO3D_LOGERROR(\"Behavior Subtree cannot execute with no Context!\");\n            return NS_ERROR;\n        }\n        return subTreeRef_-&gt;Process(tree_-&gt;timeStep_, tree_-&gt;btContext_);\n\n    }</code></pre>\n<p>It is vital to note the use of a cascading execution context argument, this is our \u201cpersistent data container, per calling agent\u201d. It\u2019s the blackboard which allows us to share both subtrees and entire trees across multiple game entities, and it also implements my safety code to prevent problems associated with subtree nesting.</p>\n<p>Each behaviortree has members to hold the calling BTContext and the deltatime - these values are set when a subtree is about to be processed, and so become available to all nodes in that tree, including those belonging to subtrees, since these values are passed from parent tree to child subtree in the Process() entrypoint call. These values are NOT passed during node-stepping within a single subtree, including the root subtree - they are simply retained and shared for the duration of the frame of execution.</p>\n<p>Here\u2019s what the class definition looks like for SubTree node.</p>\n<pre><code class=\"lang-auto\">    class SubTree:public LeafNode\n    {\n        /// All BehaviorTree nodes derive from Urho3D::Serializable\n        /// The reason is that we support full serialization (to file) of node-local properties.\n        URHO3D_OBJECT(SubTree, LeafNode)\n        \n    public:\n    \n        /// Registers this class with Urho3D (required for factory-based instantiation)\n        static void RegisterObject(Context* context);\n\n        /// Called by JSON Loader to \"unpack Properties\" associated with this class\n        /// The only property for this Node that matters is the SubTreeName string.\n        /// It will never change again for this object instance, so this is a good place for Loader to set that member\n        virtual void OnFactoryConstruct();\n\n        /// Factory Constructor: This is what the JSON Loader uses\n        SubTree(Context*);\n\n        /// Set this node's subtree reference to the given BehaviorTree instance\n        void SetSubTree(BehaviorTree* subtree){ subTreeRef_ = subtree; }\n\n        /// Set this node's subtree reference from Behavior Library, according to the subTreeName_ member\n        void SetSubTree();\n\n    protected:\n        /// We redefine the execution behavior for this node.\n        /// Basically we just execute this node's subtree reference, and return what it gives back to us.\n        virtual BTNodeState HandleStep() override;\n\n        /// Set by JSON Loader\n        /// Unique Name of the Behavior that this node will attempt to execute\n        String subTreeName_;\n        \n        /// See SetSubTree methods\n        /// Holds reference to a BehaviorTree\n        WeakPtr&lt;BehaviorTree&gt; subTreeRef_;\n\n    };</code></pre>\n<p>Love to hear your thoughts, though it\u2019s probably ready to upload somewhere for proper evaluation.</p>", "post_number": 17, "post_type": 1, "updated_at": "2019-06-20T07:17:01.869Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 43, "readers_count": 42, "score": 8.6, "yours": false, "topic_id": 5228, "topic_slug": "behaviour-trees", "display_username": "Leith Ketchell", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 3, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "suspended user", "title_is_group": false, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 1098, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "user_suspended": true, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 30284, "name": "Leith Ketchell", "username": "Leith", "avatar_template": "/user_avatar/discourse.urho3d.io/leith/{size}/2384_2.png", "created_at": "2019-06-20T07:27:50.292Z", "cooked": "<p>For the sake of completion, and sorry if this is a lot to take in!</p>\n<pre><code class=\"lang-auto\">    /// Execution Context for processing a BehaviorTree:\n    /// The calling AI Agent should implement this class!\n    ///\n    class BehaviorTreeContext{\n    public:\n        /// Used to store variables during tree execution\n        VariantMap blackboard_;\n\n        /// Used to guard against subtree re-entrancy (infinite recursion)\n        /// BehaviorTree::Process() is responsible for this safety mechanism\n        Vector&lt;WeakPtr&lt;BehaviorTree&gt;&gt; subtreeStack_;\n    };</code></pre>\n<p>Here is the per-game-actor container we hand in when we execute our root ai behavior.<br>\nIt has two members: one is the blackboard of shared variables for this agent, representing what this agent \u201cknows\u201d about the game world, and the other is a guard stack, used to stop bad things happening due to re-entrancy.</p>\n<p>This guy should probably be a struct, but thus far, my code is still only in the testing phase, so I am not too worried about the fact there\u2019s no code in this class.</p>", "post_number": 18, "post_type": 1, "updated_at": "2019-06-20T07:29:08.606Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 40, "readers_count": 39, "score": 8.0, "yours": false, "topic_id": 5228, "topic_slug": "behaviour-trees", "display_username": "Leith Ketchell", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "suspended user", "title_is_group": false, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 1098, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "user_suspended": true, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 30286, "name": "Leith Ketchell", "username": "Leith", "avatar_template": "/user_avatar/discourse.urho3d.io/leith/{size}/2384_2.png", "created_at": "2019-06-20T09:36:50.242Z", "cooked": "<p>Sorry for belated thanks, your reply<br>\nhelped me get back on track</p>", "post_number": 19, "post_type": 1, "updated_at": "2019-06-20T09:36:50.242Z", "reply_count": 0, "reply_to_post_number": 8, "quote_count": 0, "incoming_link_count": 0, "reads": 37, "readers_count": 36, "score": 52.4, "yours": false, "topic_id": 5228, "topic_slug": "behaviour-trees", "display_username": "Leith Ketchell", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "suspended user", "title_is_group": false, "reply_to_user": {"username": "jmiller", "name": "Justin Miller", "avatar_template": "/user_avatar/discourse.urho3d.io/jmiller/{size}/2367_2.png"}, "bookmarked": false, "actions_summary": [{"id": 2, "count": 1}], "moderator": false, "admin": false, "staff": false, "user_id": 1098, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "user_suspended": true, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 30289, "name": "Leith Ketchell", "username": "Leith", "avatar_template": "/user_avatar/discourse.urho3d.io/leith/{size}/2384_2.png", "created_at": "2019-06-20T14:42:28.325Z", "cooked": "<p>For anyone who is experimenting with owl-bt, or is interested in doing so, here is the json I use to modify the editor for my purposes so far. Maybe you will see something in here you can use too.<br>\nThis replaces the \u201cowl-bt.json\u201d configuration file\u2026 you\u2019ll figure it out if you haven\u2019t already <img src=\"https://emoji.discourse-cdn.com/twitter/slight_smile.png?v=9\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\"></p>\n<pre><code class=\"lang-auto\">{\n    \"nodes\": [\n        {\n            \"name\": \"Selector\",\n            \"icon\": \"question\",\n            \"isComposite\": true,\n            \"description\": \"{{Name}}: isRandom = {{isRandom}}\",\n            \"properties\": [\n                {\n                    \"name\": \"isRandom\",\n                    \"type\": \"bool\",\n                    \"value\": false,\n                    \"default\":false\n                },\n                {\n                    \"name\": \"Name\",\n                    \"value\":\"SelectorNode\",\n                    \"default\":\"[nameless]\"\n                }\n            ]\n\n        },\n        {\n            \"name\": \"Sequence\",\n            \"icon\": \"arrow-right\",\n            \"isComposite\": true,\n            \"description\": \"{{Name}}: isRandom = {{isRandom}}\",\n            \"properties\": [\n                {\n                    \"name\": \"isRandom\",\n                    \"type\": \"bool\",\n                    \"value\": false,\n                    \"default\":false\n                },\n                {\n                    \"name\": \"Name\",\n                    \"value\":\"SequenceNode\",\n                    \"default\":\"[nameless]\"\n                }\n            ]\n        },\n        {\n            \"name\": \"Something\",\n            \"icon\": \"question\",\n            \"isComposite\":true,\n            \"description\": \"Is blackboard value \\\"{{Field}}\\\" set\",\n            \"properties\": [\n                {\n                    \"name\": \"Field\",\n                    \"type\": \"string\",\n                    \"default\":\"set me\"\n                }\n            ]\n        },{\n            \"name\": \"LogAction\",\n            \"icon\": \"arrow-up\",\n            \"isComposite\": false,\n            \"description\": \"Log &lt;&lt; \\\"{{Text}}\\\"\",\n            \"properties\": [\n                {\n                    \"name\": \"Text\",\n                    \"type\": \"string\",\n                    \"default\":\"set me\",\n                    \"value\": \"something\"\n                }\n            ]\n        },\n        {\n            \"name\": \"WaitStepsAction\",\n            \"icon\": \"arrow-\",\n            \"isComposite\":false,\n            \"description\" : \"Wait for \\\"{{Counter}}\\\" ticks\",\n            \"properties\": [\n                {\n                    \"name\": \"Counter\",\n                    \"type\" : \"number\",   \n                    \"default\":0,                 \n                    \"value\": 2                    \n                }\n            ]        \n        },\n        {\n            \"name\": \"SetVariable\",\n            \"icon\": \"arrow-down\",\n            \"isComposite\":false,\n            \"description\" : \"Set \\\"{{VarName}}\\\" to {{Type}}  \\\"{{Value}}\\\"\",\n            \"properties\": [\n                {\n                    \"name\": \"VarName\",\n                    \"default\":\"[not set]\",                 \n                    \"value\": \"varName\"           \n                },\n                {\n                    \"name\": \"Value\",\n                    \"default\":\"[not set]\",                 \n                    \"value\": \"value\"           \n                },\n                {\n                      \"name\": \"Type\",\n                      \"default\": \"None\",\n                      \"type\": \"enum\",\n                      \"values\": [\n                        \"string\",\n                        \"number\",\n                        \"bool\",\n                        \"Panic\"\n                      ]\n                }\n            ]        \n        },\n        {\n            \"name\":\"IsSetVariable\",\n            \"icon\": \"arrow-up\",\n            \"isComposite\":false,\n            \"description\" : \"Does \\\"{{VarName}}\\\" exist?\",\n            \"properties\": [\n                {\n                    \"name\": \"VarName\",\n                    \"default\":\"[not set]\",                 \n                    \"value\": \"varName\"           \n                }\n            ]\n        },{\n            \"name\":\"SubTree\",\n            \"icon\":\"cog\",\n            \"isComposite\":false,\n            \"description\":\"Runs Behavior: \\\"{{SubTreeName}}\\\" ... Please Note, {{description}}\",\n            \"properties\": [\n                {\n                    \"name\": \"SubTreeName\",\n                    \"default\":\"[not set]\",                 \n                    \"value\": \"subTree\"           \n                },{\n                    \"name\": \"description\",\n                    \"default\":\"[not set]\",\n                    \"value\":\"description\"\n                }\n            ]\n        }\n    ],\n    \"decorators\": [\n        {\n            \"name\": \"Failure\",\n            \"icon\": \"thumbs-o-down\"\n        },\n        {\n            \"name\": \"Invert\",\n            \"icon\": \"exchange\"\n        },\n        {\n            \"name\": \"Success\",\n            \"icon\": \"thumbs-o-up\"\n        },\n        {\n            \"name\": \"RepeatUntilFailure\",\n            \"icon\": \"arrow-up\",\n            \"description\":\"Execute child until Failure\"\n        }\n\n    ],\n    \"services\": [\n        {\n            \"name\": \"Sample service\",\n            \"icon\": \"cog\",\n            \"description\": \"sample service\",\n            \"properties\": [\n                {\n                    \"name\": \"BlackboardKey\",\n                    \"default\": \"Target\",\n                    \"type\": \"string\"\n                },\n                {\n                    \"name\": \"BlackboardKey2\",\n                    \"default\": \"1\",\n                    \"type\": \"string\"\n                }\n            ]\n        },\n        {\n            \"name\": \"ScriptFunction\",\n            \"icon\": \"cog\",\n            \"description\": \"Execute a scripted function \\\"{{FunctionName}}\\\" with arg1=BBKey \\\"{{BlackboardKey}}\\\" and arg2=BBKey \\\"{{BlackboardKey2}}\\\" and arg3=number  \\\"{{ConstantNumber}}\\\"\",\n            \"properties\": [\n                {\n                    \"name\": \"FunctionName\",\n                    \"default\": \"TakeDamage\",\n                    \"type\": \"string\"\n                },\n                {\n                    \"name\": \"BlackboardKey\",\n                    \"default\": \"Target\",\n                    \"type\": \"string\"\n                },\n                {\n                    \"name\": \"BlackboardKey2\",\n                    \"default\": \"SomeArg2\",\n                    \"type\": \"string\"\n                },\n                {\n                    \"name\": \"ConstantNumber\",\n                    \"default\": \"1\",\n                    \"type\": \"number\"                \n                }\n            ]\n        }\n    ]\n}</code></pre>", "post_number": 20, "post_type": 1, "updated_at": "2019-06-20T14:46:11.391Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 42, "readers_count": 41, "score": 8.4, "yours": false, "topic_id": 5228, "topic_slug": "behaviour-trees", "display_username": "Leith Ketchell", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "suspended user", "title_is_group": false, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 1098, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "user_suspended": true, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 30297, "name": "Leith Ketchell", "username": "Leith", "avatar_template": "/user_avatar/discourse.urho3d.io/leith/{size}/2384_2.png", "created_at": "2019-06-21T05:01:02.193Z", "cooked": "<p>So far, I have a mechanism whereby I can create rich behaviors using references to (not copies of)  more primitive behaviors - Agents can share the same behaviors without new objects being created \u2026 I can store data per agent and query it back again, but agents can\u2019t query the state of the world.</p>\n<p>I plan on using the GlobalVars (owned by Urho Context) to act as a global blackboard, and I\u2019ll devise a couple more node types that will allow me to copy variables between blackboards.</p>\n<p>The idea is to let the ai \u201cobserve\u201d its world, and record its most recent knowledge of its environment, which is then used in decision-making. When the AI decides not to eat an apple because it is not hungry, it may go off to do other things. When it gets hungry, it may remember where it saw an apple - and set off to retrieve it. But when it arrives, the apple may no longer be there. This is plausible ai.</p>", "post_number": 21, "post_type": 1, "updated_at": "2019-06-21T05:01:56.208Z", "reply_count": 1, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 37, "readers_count": 36, "score": 12.4, "yours": false, "topic_id": 5228, "topic_slug": "behaviour-trees", "display_username": "Leith Ketchell", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "suspended user", "title_is_group": false, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 1098, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "user_suspended": true, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 30302, "name": "SirNate0", "username": "SirNate0", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png", "created_at": "2019-06-21T10:12:56.536Z", "cooked": "<p>Have you thought about how to handle node position and similar constantly updating variables? Will they just have to be copied to the blackboard hash map every time the tree, or will there be special methods for observing position and the like?</p>", "post_number": 22, "post_type": 1, "updated_at": "2019-06-21T10:12:56.536Z", "reply_count": 2, "reply_to_post_number": 21, "quote_count": 0, "incoming_link_count": 0, "reads": 35, "readers_count": 34, "score": 17.0, "yours": false, "topic_id": 5228, "topic_slug": "behaviour-trees", "display_username": "SirNate0", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "reply_to_user": {"username": "Leith", "name": "Leith Ketchell", "avatar_template": "/user_avatar/discourse.urho3d.io/leith/{size}/2384_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 628, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 30303, "name": "Leith Ketchell", "username": "Leith", "avatar_template": "/user_avatar/discourse.urho3d.io/leith/{size}/2384_2.png", "created_at": "2019-06-21T10:14:32.021Z", "cooked": "<p>so far, updating the logic tree of an ai informs the parent node what to do - it \u201cjust works\u201d<br>\nI can see some situations where this may not work, but so far, so good<br>\nagent position is not something we need to store in the agent blackboard, its a world blackboard thing, i will cover this in the next day or two - and hopefully it will become more clear</p>", "post_number": 23, "post_type": 1, "updated_at": "2019-06-21T10:17:22.286Z", "reply_count": 1, "reply_to_post_number": 22, "quote_count": 0, "incoming_link_count": 0, "reads": 36, "readers_count": 35, "score": 12.2, "yours": false, "topic_id": 5228, "topic_slug": "behaviour-trees", "display_username": "Leith Ketchell", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "suspended user", "title_is_group": false, "reply_to_user": {"username": "SirNate0", "name": "SirNate0", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 1098, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "user_suspended": true, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 30304, "name": "Leith Ketchell", "username": "Leith", "avatar_template": "/user_avatar/discourse.urho3d.io/leith/{size}/2384_2.png", "created_at": "2019-06-21T10:20:08.798Z", "cooked": "<p>I have not yet cut any pieces of meat out of the original codebase, I have merely extended it, I have loads of respect for the OP</p>", "post_number": 24, "post_type": 1, "updated_at": "2019-06-21T10:20:08.798Z", "reply_count": 0, "reply_to_post_number": 23, "quote_count": 0, "incoming_link_count": 0, "reads": 33, "readers_count": 32, "score": 6.6, "yours": false, "topic_id": 5228, "topic_slug": "behaviour-trees", "display_username": "Leith Ketchell", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "suspended user", "title_is_group": false, "reply_to_user": {"username": "Leith", "name": "Leith Ketchell", "avatar_template": "/user_avatar/discourse.urho3d.io/leith/{size}/2384_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 1098, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "user_suspended": true, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 30305, "name": "Leith Ketchell", "username": "Leith", "avatar_template": "/user_avatar/discourse.urho3d.io/leith/{size}/2384_2.png", "created_at": "2019-06-21T10:23:55.870Z", "cooked": "<p>i should be more clear, since this is my thread after all \u2026 we can ask an AI Agent about what it knows, or we can ask the world about what it knows - these two concepts are entirely separated.<br>\nThe AI may recall things it has seen recently, but it will not have access to the world data\u2026 it has its own data! It may perform a visibility test to see what it can see, but it may not see what it likes.</p>", "post_number": 25, "post_type": 1, "updated_at": "2019-06-21T10:23:55.870Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 33, "readers_count": 32, "score": 6.6, "yours": false, "topic_id": 5228, "topic_slug": "behaviour-trees", "display_username": "Leith Ketchell", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "suspended user", "title_is_group": false, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 1098, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "user_suspended": true, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 30320, "name": "Leith Ketchell", "username": "Leith", "avatar_template": "/user_avatar/discourse.urho3d.io/leith/{size}/2384_2.png", "created_at": "2019-06-22T05:00:31.425Z", "cooked": "<p>I added some more action (aka task) nodes today, involving blackboard variables.<br>\nThere\u2019s now a clear concept that the game world represents a global blackboard (implemented via the GlobalVars stored in the Urho3D context), while each Actor has its own blackboard.</p>\n<p>There are now task nodes which can set both global and actor-owned variables by name, supporting variant type, and nodes to check for the existence of both global and actor-owned vars.<br>\nNext will come some simple nodes to copy named variables between agent-local and global blackboards, and then a node or nodes to perform conditional testing, which will allow me to implement \u201cguard conditions\u201d that allow or disallow the execution of logical subtrees.<br>\nI also need to implement support for VariantVector based stack variables, and nodes to \u201cpush and pop\u201d nameless member values.</p>\n<p>With respect to design, I must credit Chris Simpson for some brilliant ideas with regard to utility nodes.<br>\n[<a href=\"https://www.gamasutra.com/blogs/ChrisSimpson/20140717/221339/Behavior_trees_for_AI_How_they_work.php\" rel=\"nofollow noopener\">https://www.gamasutra.com/blogs/ChrisSimpson/20140717/221339/Behavior_trees_for_AI_How_they_work.php</a>]</p>\n<p>Here is the full set of nodes I have implemented so far, minus a few test ones that didn\u2019t end up fitting with my use-case:</p>\n<pre><code class=\"lang-auto\">    void BehaviorTree::RegisterCommonNodeTypes(Context* context){\n\n        /// Special Case: we're registering an attribute in the base class\n        /// but we don't register an object factory for the base class\n        BehaviorTreeNode::   RegisterObject(context);\n\n        /// Register Composite node types:\n        SelectorNode::       RegisterObject(context);\n        SequenceNode::       RegisterObject(context);\n        ParallelNode::       RegisterObject(context);\n\n        /// Register Action node types:\n        LogAction::          RegisterObject(context);\n        WaitStepsAction::    RegisterObject(context);\n        SetVariable::        RegisterObject(context);\n        IsSetVariable::      RegisterObject(context);\n        SetGlobalVariable::  RegisterObject(context);\n        IsSetGlobalVariable::RegisterObject(context);\n        SubTree::            RegisterObject(context);\n\n        /// Register Decorator node types:\n        InvertDecorator::    RegisterObject(context);\n        LoopDecorator::      RegisterObject(context);\n        SuccessDecorator::   RegisterObject(context);\n        FailureDecorator::   RegisterObject(context);\n        RepeatUntilFailure:: RegisterObject(context);\n\n    }</code></pre>", "post_number": 26, "post_type": 1, "updated_at": "2019-06-22T05:09:24.846Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 36, "readers_count": 35, "score": 7.2, "yours": false, "topic_id": 5228, "topic_slug": "behaviour-trees", "display_username": "Leith Ketchell", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 2, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "https://www.gamasutra.com/blogs/ChrisSimpson/20140717/221339/Behavior_trees_for_AI_How_they_work.php", "internal": false, "reflection": false, "title": "Gamasutra: Chris Simpson's Blog - Behavior trees for AI: How they work", "clicks": 1}], "read": true, "user_title": "suspended user", "title_is_group": false, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 1098, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "user_suspended": true, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 30322, "name": "Leith Ketchell", "username": "Leith", "avatar_template": "/user_avatar/discourse.urho3d.io/leith/{size}/2384_2.png", "created_at": "2019-06-22T05:14:49.923Z", "cooked": "<p>There will be \u201cservice nodes\u201d which are used to observe runtime state - I have not yet supported the owl-bt concept of service nodes at all, but this is how we will get our state updates - and where I get to implement \u201cai sensory input and memory\u201d in terms of writing observed information to the per agent blackboard representing its knowledge of the world, as opposed to the actual world state.</p>\n<p>In my own previous work, I had nodes with \u201cinput and output pins\u201d that could be used to pass input args and return values during node execution, on top of the usual state return value\u2026 but the practical design and testing of these kinds of trees, even with a decent visual editor, turned out to be counter-productive.</p>\n<p>Anyway, before I experiment with observer patterns, I need to implement support for stack variables.</p>", "post_number": 27, "post_type": 1, "updated_at": "2019-06-22T05:42:06.904Z", "reply_count": 0, "reply_to_post_number": 22, "quote_count": 0, "incoming_link_count": 0, "reads": 32, "readers_count": 31, "score": 6.4, "yours": false, "topic_id": 5228, "topic_slug": "behaviour-trees", "display_username": "Leith Ketchell", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 2, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "suspended user", "title_is_group": false, "reply_to_user": {"username": "SirNate0", "name": "SirNate0", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 1098, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "user_suspended": true, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 30324, "name": "Leith Ketchell", "username": "Leith", "avatar_template": "/user_avatar/discourse.urho3d.io/leith/{size}/2384_2.png", "created_at": "2019-06-22T06:24:09.519Z", "cooked": "<p>I\u2019m currently experimenting with a kind of \u201cguard condition\u201d node.<br>\nIt can perform one of six kinds of logical compare operation, using two input variables.<br>\nThe inputs can sourced from one of three places: constant value, agent blackboard variable, world blackboard variable.</p>\n<p>The tests it can do are:</p>\n<ul>\n<li>IsNull</li>\n<li>IsEqual</li>\n<li>IsGreater</li>\n<li>IsGreaterOrEqual</li>\n<li>IsLess</li>\n<li>IsLessOrEqual</li>\n</ul>\n<p>We don\u2019t need so many flag bits to encode all those operations, do we?<br>\nWell, the encoding I propose below has some degenerate states (IsGreaterOrLess, IsNullOrGreater, so on), and in truth, I could reduce this flag set further based on the fact that we have an Inverter decorator node\u2026 anyway, let\u2019s move on!</p>\n<pre><code class=\"lang-auto\">    enum ConditionalOperator{\n        COND_NULL=0,\n        COND_EQUAL=1,\n        COND_GREATER=2,\n        COND_LESS=4\n    };\n\n    enum ConditionalValueSource{\n        Constant,\n        Actor,\n        World\n    };\n\n    class VariableCompare:public LeafNode {\n        URHO3D_OBJECT(VariableCompare, LeafNode)\n    public:\n        static void RegisterObject(Context* context);\n        VariableCompare(Context*);\n        virtual void OnFactoryConstruct();\n    protected:\n        virtual BTNodeState HandleStep() override;\n\n        ConditionalOperator conditionOperator_;\n\n        ConditionalValueSource Type_A;\n        ConditionalValueSource Type_B;\n        \n        String NameOrValue_A;\n        String NameOrValue_B;\n\n    };</code></pre>\n<p>This node lets us perform logical compares using values that can come from the actor doing the query, or from the game world. What is missing, is the ability to query a target agent. But a target agent is just a blackboard variable, so I feel I am getting warmer.</p>", "post_number": 28, "post_type": 1, "updated_at": "2019-06-22T06:32:50.409Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 35, "readers_count": 34, "score": 7.0, "yours": false, "topic_id": 5228, "topic_slug": "behaviour-trees", "display_username": "Leith Ketchell", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 2, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "suspended user", "title_is_group": false, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 1098, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "user_suspended": true, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 30349, "name": "Leith Ketchell", "username": "Leith", "avatar_template": "/user_avatar/discourse.urho3d.io/leith/{size}/2384_2.png", "created_at": "2019-06-23T07:04:46.612Z", "cooked": "<p>The following is a double post\u2026 I realized too late that I had posted this in the wrong thread.<br>\nI\u2019ll sort that out, here it is:<br>\nHere\u2019s the owl-bt config for my new \u201cguard condition node\u201d.</p>\n<pre><code class=\"lang-auto\">        {\n            \"name\":         \"VariableCompare\",\n            \"icon\":         \"question\",\n            \"isComposite\":  false,\n            \"description\":  \"Is {{SourceA}}:{{VarA}} {{CondOp}} {{SourceB}}::{{VarB}} ?\",\n            \"properties\": [\n\n\n                {\n                    \"name\": \"SourceA\",\n                    \"type\": \"enum\",\n                    \"values\": [\n                        \"Constant\",\n                        \"Agent\",\n                        \"World\"\n                    ]\n                },\n                {\n                    \"name\": \"VarA\",\n                    \"default\": \"[not set]\",\n                    \"source\": \"string\"\n                },\n                {\n                    \"name\": \"CondOp\",\n                    \"type\": \"enum\",\n                    \"values\": [\n                        \"==\",\n                        \"&gt;\",\n                        \"&gt;=\",\n                        \"Panic\"\n                    ]\n                },\n                {\n                    \"name\": \"SourceB\",\n                    \"type\": \"enum\",\n                    \"values\": [\n                        \"Constant\",\n                        \"Agent\",\n                        \"World\"\n                    ]\n                },\n                {\n                    \"name\": \"VarB\",\n                    \"default\": \"[not set]\",\n                    \"source\": \"string\"\n                }\n            ]\n        },</code></pre>\n<p>Here\u2019s what it looks like in owl-bt right now:<br>\n<div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://global.discourse-cdn.com/standard17/uploads/urho3d/original/2X/f/f82a90313356a94aecf8692fe9451793f53718f5.png\" title=\"VariantCompare.png\" rel=\"nofollow noopener\"><img src=\"https://global.discourse-cdn.com/standard17/uploads/urho3d/optimized/2X/f/f82a90313356a94aecf8692fe9451793f53718f5_2_622x500.png\" alt=\"VariantCompare\" data-base62-sha1=\"zpnBrPO52EEQBaBoWSoZsiNhNCR\" width=\"622\" height=\"500\" srcset=\"https://global.discourse-cdn.com/standard17/uploads/urho3d/optimized/2X/f/f82a90313356a94aecf8692fe9451793f53718f5_2_622x500.png, https://global.discourse-cdn.com/standard17/uploads/urho3d/original/2X/f/f82a90313356a94aecf8692fe9451793f53718f5.png 1.5x, https://global.discourse-cdn.com/standard17/uploads/urho3d/original/2X/f/f82a90313356a94aecf8692fe9451793f53718f5.png 2x\" data-small-upload=\"https://global.discourse-cdn.com/standard17/uploads/urho3d/optimized/2X/f/f82a90313356a94aecf8692fe9451793f53718f5_2_10x10.png\"><div class=\"meta\">\n<svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use xlink:href=\"#far-image\"></use></svg><span class=\"filename\">VariantCompare.png</span><span class=\"informations\">794\u00d7638 25.6 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use xlink:href=\"#discourse-expand\"></use></svg>\n</div></a></div></p>\n<p>and here\u2019s the code to drive the compare logic:</p>\n<pre><code class=\"lang-auto\">    BTNodeState VariableCompare::HandleStep(){\n\n        Urho3D::Variant vA, vB;\n                 double dA, dB;\n\n\n        switch(SourceType_A){\n            case ConditionalValueSource::Actor:\n                vA=tree_-&gt;btContext_-&gt;blackboard_[NameOrValue_A];\n                break;\n            case ConditionalValueSource::World:\n                vA=context_-&gt;GetGlobalVar(NameOrValue_A);\n                break;\n            case ConditionalValueSource::Constant:\n                vA.FromString(ValueType_A,NameOrValue_A);\n                break;\n            default:\n                URHO3D_LOGERROR(\"Unhandled SourceType A in VariableCompare\");\n                return NS_ERROR;\n        }\n\n\n        switch(SourceType_B){\n            case ConditionalValueSource::Actor:\n                vB=tree_-&gt;btContext_-&gt;blackboard_[NameOrValue_B];\n                break;\n            case ConditionalValueSource::World:\n                vB=context_-&gt;GetGlobalVar(NameOrValue_B);\n                break;\n            case ConditionalValueSource::Constant:\n                vB.FromString(ValueType_B,NameOrValue_B);\n                break;\n            default:\n                URHO3D_LOGERROR(\"Unhandled SourceType B in VariableCompare\");\n                return NS_ERROR;\n        }\n\n        switch(this-&gt;conditionOperator_){\n            case ConditionalOperator::COND_EQUAL:\n            if(vA==vB)\n                return NS_SUCCESS;\n            else\n                return NS_FAILURE;\n            break;\n\n            case COND_GREATER:\n                double dA, dB;\n                switch(ValueType_A){\n                    case VAR_BOOL:\n                        dA=static_cast&lt;double&gt;(vA.GetBool());\n                        break;\n                    case VAR_FLOAT:\n                    case VAR_INT:\n                    case VAR_DOUBLE:\n                    case VAR_INT64:\n                        dA=vA.GetDouble();\n                    default:\n                        URHO3D_LOGERROR(\"Unhandled Variant Type A detected in VariableCompare node\");\n                        return NS_ERROR;\n                }\n                switch(ValueType_B){\n                    case VAR_BOOL:\n                        dB=static_cast&lt;double&gt;(vB.GetBool());\n                        break;\n                    case VAR_FLOAT:\n                    case VAR_INT:\n                    case VAR_DOUBLE:\n                    case VAR_INT64:\n                        dB=vB.GetDouble();\n                    default:\n                        URHO3D_LOGERROR(\"Unhandled Variant Type B detected in VariableCompare node\");\n                        return NS_ERROR;\n                }\n\n                if(dA&gt;dB)\n                    return NS_SUCCESS;\n                else\n                    return NS_FAILURE;\n                break;\n\n            case (COND_GREATER | COND_EQUAL):\n                switch(ValueType_A){\n                    case VAR_BOOL:\n                        dA=static_cast&lt;double&gt;(vA.GetBool());\n                        break;\n                    case VAR_FLOAT:\n                    case VAR_INT:\n                    case VAR_DOUBLE:\n                    case VAR_INT64:\n                        dA=vA.GetDouble();\n                    default:\n                        URHO3D_LOGERROR(\"Unhandled Variant Type A detected in VariableCompare node\");\n                        return NS_ERROR;\n                }\n                switch(ValueType_B){\n                    case VAR_BOOL:\n                        dB=static_cast&lt;double&gt;(vB.GetBool());\n                        break;\n                    case VAR_FLOAT:\n                    case VAR_INT:\n                    case VAR_DOUBLE:\n                    case VAR_INT64:\n                        dB=vB.GetDouble();\n                    default:\n                        URHO3D_LOGERROR(\"Unhandled Variant Type B detected in VariableCompare node\");\n                        return NS_ERROR;\n                }\n                if(dA&gt;=dB)\n                    return NS_SUCCESS;\n                else\n                    return NS_FAILURE;\n                break;\n\n            default:\n                URHO3D_LOGERROR(\"Unhandled Operator in VariableCompare\");\n                return NS_ERROR;\n        }\n    }</code></pre>\n<p>The only thing I have not shown is the code that \u201cunpacks\u201d the property values during loading from JSON. The loader is universal - it can load property values for node types without having any idea what kind of node it is - each concrete node class provides code to \u201cunpack\u201d the property values that the loader has retrieved.</p>\n<p>Note that this is still just a draft, it\u2019s incomplete but good enough to test how well a generic compare node works in my use-case. If you have any experience in low level BT design, I would love to hear your thoughts on what I\u2019ve done, and what I could possibly do to improve on it, including desirable new node types.</p>", "post_number": 29, "post_type": 1, "updated_at": "2019-06-23T07:04:46.612Z", "reply_count": 1, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 38, "readers_count": 37, "score": 12.6, "yours": false, "topic_id": 5228, "topic_slug": "behaviour-trees", "display_username": "Leith Ketchell", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "https://global.discourse-cdn.com/standard17/uploads/urho3d/original/2X/f/f82a90313356a94aecf8692fe9451793f53718f5.png", "internal": false, "reflection": false, "title": "f82a90313356a94aecf8692fe9451793f53718f5.png", "clicks": 0}], "read": true, "user_title": "suspended user", "title_is_group": false, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 1098, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "user_suspended": true, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 30356, "name": "SirNate0", "username": "SirNate0", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png", "created_at": "2019-06-23T15:34:56.452Z", "cooked": "<p>I have essentially no experience with behavior trees, but I do have a little experience with node based editors. While it\u2019s certainly up to you, as I have little idea about the complexity involved vs perceived gain, I think adding support for more complicated expressions would be desirable, beyond just comparisons. For example, how would you implement (a + 20 &gt; b) or the like? As such, (and do to my own personal opposition to construction potentially complicated mathematical expressions through a series of nodes), I would propose implementing something similar to <a href=\"https://archive.codeplex.com/?p=fastmathparser\" rel=\"nofollow noopener\">ExprTk</a> for your logic/arithmetic. Basically, allow an arbitrary expression specified as a string with some number of variables (ideally very large, perhaps due to editor constrains more limited). It\u2019s up to you (of course), but for now that\u2019s my only suggestion.</p>", "post_number": 30, "post_type": 1, "updated_at": "2019-06-23T15:34:56.452Z", "reply_count": 1, "reply_to_post_number": 29, "quote_count": 0, "incoming_link_count": 0, "reads": 30, "readers_count": 29, "score": 26.0, "yours": false, "topic_id": 5228, "topic_slug": "behaviour-trees", "display_username": "SirNate0", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "https://archive.codeplex.com/?p=fastmathparser", "internal": false, "reflection": false, "title": "CodePlex Archive", "clicks": 0}], "read": true, "user_title": null, "reply_to_user": {"username": "Leith", "name": "Leith Ketchell", "avatar_template": "/user_avatar/discourse.urho3d.io/leith/{size}/2384_2.png"}, "bookmarked": false, "actions_summary": [{"id": 2, "count": 1}], "moderator": false, "admin": false, "staff": false, "user_id": 628, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 30363, "name": "Leith Ketchell", "username": "Leith", "avatar_template": "/user_avatar/discourse.urho3d.io/leith/{size}/2384_2.png", "created_at": "2019-06-24T06:51:19.586Z", "cooked": "<p>Thanks for your response!</p>\n<p>Yes I did think about supporting more complex expressions - but so far have resisted the urge to implement a \u201cgeneral logical expression\u201d node.</p>\n<p>For nodes that implement \u201ccanned logic\u201d - where the logic is complex enough to warrant it - I plan to implement Script Nodes which can execute a named script function, pass arguments, and to some degree, handle return values. Currently there is essentially no support for scripting, but that would be my ideal way to deal with complex general expressions, as well as expert behaviors such as detecting what an agent can \u201csee\u201d, or whether a valid path to a given target exists. The most expensive canned behaviors can be promoted to c++ in order to reduce computational cost at runtime.</p>\n<p>Tonight, I plan to spend some time planning exactly how the AI will determine its current goal. This should help inform future design decisions with respect to BT.</p>\n<p>I like the idea of canned task nodes a lot - along with subtree ref nodes, they give us a way to wrap up what would otherwise be a sprawling mess of primitive nodes, and greatly assist us mere humans in understanding what the BT is actually doing at any moment.</p>", "post_number": 31, "post_type": 1, "updated_at": "2019-06-24T06:53:21.971Z", "reply_count": 0, "reply_to_post_number": 30, "quote_count": 0, "incoming_link_count": 0, "reads": 33, "readers_count": 32, "score": 21.6, "yours": false, "topic_id": 5228, "topic_slug": "behaviour-trees", "display_username": "Leith Ketchell", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "suspended user", "title_is_group": false, "reply_to_user": {"username": "SirNate0", "name": "SirNate0", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}, "bookmarked": false, "actions_summary": [{"id": 2, "count": 1}], "moderator": false, "admin": false, "staff": false, "user_id": 1098, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "user_suspended": true, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 30369, "name": "Leith Ketchell", "username": "Leith", "avatar_template": "/user_avatar/discourse.urho3d.io/leith/{size}/2384_2.png", "created_at": "2019-06-24T13:33:31.486Z", "cooked": "<p>I studied game programming at a fancy new-age place with connections to the game and movie industries. It cost me a lot of money, but I got a discount on the time I had to study based on the fact that I could code asm shaders that made the test machines scream audibly, with frame rates around 3000 fps on custom render tech.<br>\nOne of my teachers was an asian guy called Ted. He was a pretty bad teacher to be honest, but he did have street cred - he worked on the AI for star wars - kotor, and the sims series. He explained to me how the AI worked in his games. I will at some point try to express what he told me.<br>\nOne of the reasons I say that Ted was a bad teacher, is that he left me stranded, and went back into the industry, when I needed him the most. I am just lucky to have met him.<br>\nTed had an amazing grasp of higher mathematics, including set theory, and I only wish I had more time to get to know him and his amazing brain.</p>", "post_number": 32, "post_type": 1, "updated_at": "2019-06-24T13:46:25.483Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 2, "reads": 33, "readers_count": 32, "score": 16.6, "yours": false, "topic_id": 5228, "topic_slug": "behaviour-trees", "display_username": "Leith Ketchell", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 3, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "suspended user", "title_is_group": false, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 1098, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "user_suspended": true, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 30371, "name": "Leith Ketchell", "username": "Leith", "avatar_template": "/user_avatar/discourse.urho3d.io/leith/{size}/2384_2.png", "created_at": "2019-06-24T14:37:32.927Z", "cooked": "<p>How NOT to use behavior trees for decision making!<br>\n                    <a href=\"https://miro.medium.com/max/500/1*2jnsFCe0YmRjb8EvVAo93w.gif\" target=\"_blank\" class=\"onebox\" rel=\"nofollow noopener\">\n            <img src=\"https://miro.medium.com/max/500/1*2jnsFCe0YmRjb8EvVAo93w.gif\" width=\"500\" height=\"283\">\n          </a>\n\n</p>\n<p>Apparently, if you earn under 30k, and have a criminal record, you qualify for a loan.</p>", "post_number": 33, "post_type": 1, "updated_at": "2019-06-24T14:37:51.654Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 32, "readers_count": 31, "score": 21.4, "yours": false, "topic_id": 5228, "topic_slug": "behaviour-trees", "display_username": "Leith Ketchell", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "https://miro.medium.com/max/500/1*2jnsFCe0YmRjb8EvVAo93w.gif", "internal": false, "reflection": false, "title": "1*2jnsFCe0YmRjb8EvVAo93w.gif", "clicks": 2}], "read": true, "user_title": "suspended user", "title_is_group": false, "bookmarked": false, "actions_summary": [{"id": 2, "count": 1}], "moderator": false, "admin": false, "staff": false, "user_id": 1098, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "user_suspended": true, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 30385, "name": "Virgo", "username": "Virgo", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/v/f05b48/{size}.png", "created_at": "2019-06-25T07:39:55.398Z", "cooked": "<p><img src=\"https://emoji.discourse-cdn.com/twitter/rofl.png?v=9\" title=\":rofl:\" class=\"emoji\" alt=\":rofl:\"> first of all pardon my laziness<br>\n<strong>this thread is too long and has too many replies</strong> and i dont wanna read them<br>\njust post this link here and i will leave <img src=\"https://emoji.discourse-cdn.com/twitter/thinking.png?v=9\" title=\":thinking:\" class=\"emoji\" alt=\":thinking:\"></p>\n<aside class=\"onebox whitelistedgeneric\">\n  <header class=\"source\">\n      <img src=\"https://github.githubassets.com/favicon.ico\" class=\"site-icon\" width=\"16\" height=\"16\">\n      <a href=\"https://github.com/BehaviorTree/BehaviorTree.CPP\" target=\"_blank\" rel=\"nofollow noopener\">GitHub</a>\n  </header>\n  <article class=\"onebox-body\">\n    <img src=\"https://avatars3.githubusercontent.com/u/44158496?s=400&amp;amp;v=4\" class=\"thumbnail onebox-avatar\" width=\"60\" height=\"60\">\n\n<h3><a href=\"https://github.com/BehaviorTree/BehaviorTree.CPP\" target=\"_blank\" rel=\"nofollow noopener\">BehaviorTree/BehaviorTree.CPP</a></h3>\n\n<p>Behavior Trees Library in C++. Batteries included. - BehaviorTree/BehaviorTree.CPP</p>\n\n\n  </article>\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n  <div style=\"clear: both\"></div>\n</aside>\n\n<p>hope this will help?</p>", "post_number": 34, "post_type": 1, "updated_at": "2019-06-25T07:39:55.398Z", "reply_count": 2, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 33, "readers_count": 32, "score": 46.6, "yours": false, "topic_id": 5228, "topic_slug": "behaviour-trees", "display_username": "Virgo", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "https://github.com/BehaviorTree/BehaviorTree.CPP", "internal": false, "reflection": false, "title": "GitHub - BehaviorTree/BehaviorTree.CPP: Behavior Trees Library in C++. Batteries included.", "clicks": 1}], "read": true, "user_title": null, "bookmarked": false, "actions_summary": [{"id": 2, "count": 2}], "moderator": false, "admin": false, "staff": false, "user_id": 931, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 30388, "name": "kabu", "username": "johnnycable", "avatar_template": "/user_avatar/discourse.urho3d.io/johnnycable/{size}/788_2.png", "created_at": "2019-06-25T14:29:55.463Z", "cooked": "<blockquote>\n<p>\u2026It provides a type-safe and flexible mechanism to do  <strong>Dataflow</strong>  between Nodes of the Tree.</p>\n</blockquote>\n<p>Hmm\u2026 I like it. This reminds me every application is a behaviour tree\u2026</p>", "post_number": 35, "post_type": 1, "updated_at": "2019-06-25T14:29:55.463Z", "reply_count": 1, "reply_to_post_number": 34, "quote_count": 0, "incoming_link_count": 0, "reads": 33, "readers_count": 32, "score": 26.6, "yours": false, "topic_id": 5228, "topic_slug": "behaviour-trees", "display_username": "kabu", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "reply_to_user": {"username": "Virgo", "name": "Virgo", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/v/f05b48/{size}.png"}, "bookmarked": false, "actions_summary": [{"id": 2, "count": 1}], "moderator": false, "admin": false, "staff": false, "user_id": 660, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 30397, "name": "Leith Ketchell", "username": "Leith", "avatar_template": "/user_avatar/discourse.urho3d.io/leith/{size}/2384_2.png", "created_at": "2019-06-26T02:12:37.462Z", "cooked": "<p>I like to think of behavior trees as being like a well-structured functional program - we have a bunch of dedicated functions that are well-insulated and reusable, and which by themselves don\u2019t do anything, and we have some control logic which guides the execution of the program based partly on the return values of the island functions, effectively \u201cstringing them together\u201d - just like the edges in a tree of nodes. Conceptually, there\u2019s nothing different happening other than how the logic is being represented. When I think of the number of times I have rewritten the same code over the years, the idea of a visual programming library, where the building blocks represent code I actually wrote, seems attractive, even a seasoned programmer can benefit from modern approaches to design and development.</p>", "post_number": 36, "post_type": 1, "updated_at": "2019-06-26T02:17:13.695Z", "reply_count": 0, "reply_to_post_number": 35, "quote_count": 0, "incoming_link_count": 0, "reads": 35, "readers_count": 34, "score": 7.0, "yours": false, "topic_id": 5228, "topic_slug": "behaviour-trees", "display_username": "Leith Ketchell", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 2, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "suspended user", "title_is_group": false, "reply_to_user": {"username": "johnnycable", "name": "kabu", "avatar_template": "/user_avatar/discourse.urho3d.io/johnnycable/{size}/788_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 1098, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "user_suspended": true, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 30405, "name": "Leith Ketchell", "username": "Leith", "avatar_template": "/user_avatar/discourse.urho3d.io/leith/{size}/2384_2.png", "created_at": "2019-06-26T07:46:33.797Z", "cooked": "<p>Thanks for the input!<br>\nI do appreciate your effort, and I took the time to examine the sourcecode.<br>\nUnfortunately, the model is not \u201cimmediately\u201d useful to me, however I have taken onboard some of the ideas (some are new, some are old to me) and I will bring them into my next evaluation iteration.</p>\n<p>Whether or not I end up actually using any of it, I am grateful that others are willing to take the time to throw me a bone occasionally.</p>", "post_number": 37, "post_type": 1, "updated_at": "2019-06-26T07:46:33.797Z", "reply_count": 1, "reply_to_post_number": 34, "quote_count": 0, "incoming_link_count": 0, "reads": 35, "readers_count": 34, "score": 12.0, "yours": false, "topic_id": 5228, "topic_slug": "behaviour-trees", "display_username": "Leith Ketchell", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "suspended user", "title_is_group": false, "reply_to_user": {"username": "Virgo", "name": "Virgo", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/v/f05b48/{size}.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 1098, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "user_suspended": true, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 30431, "name": "Virgo", "username": "Virgo", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/v/f05b48/{size}.png", "created_at": "2019-06-26T17:02:25.179Z", "cooked": "<p>i have been wanting to do a behavior tree for a long time, but due to my lack of knowledge and poor understanding &amp; imagination i just keep procrastinating.<br>\nwe talked about bullet implementation before, and i havent started writing it neither <img src=\"https://emoji.discourse-cdn.com/twitter/joy.png?v=9\" title=\":joy:\" class=\"emoji\" alt=\":joy:\"></p>", "post_number": 38, "post_type": 1, "updated_at": "2019-06-26T17:02:25.179Z", "reply_count": 1, "reply_to_post_number": 37, "quote_count": 0, "incoming_link_count": 0, "reads": 35, "readers_count": 34, "score": 12.0, "yours": false, "topic_id": 5228, "topic_slug": "behaviour-trees", "display_username": "Virgo", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "reply_to_user": {"username": "Leith", "name": "Leith Ketchell", "avatar_template": "/user_avatar/discourse.urho3d.io/leith/{size}/2384_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 931, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 30434, "name": "\u9b54\u5927\u519c \ud835\udf8d\ud835\udf8e\ud835\udf73 \u73fe\u62db\u870d", "username": "Modanung", "avatar_template": "/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png", "created_at": "2019-06-26T19:15:18.673Z", "cooked": "<p>When I try to think about designing AI I imagine something more like a (designed) neural net, with a set of inputs processed through some graph resulting in a set of weighted actions. Any nodes in between would <em>exactly</em> be arithmetic nodes. For instance the decision to flee should take health, remaining potions and distance to enemy into account, I believe these values can be multiplied and added in a way that relatively realistic behaviour can be designed. Factors instead of if-statements would form the network, and not orders but motivation would be the logic behinds its structure. Slight variations in these factors would be like introducing neurodiversity to your entities.</p>", "post_number": 39, "post_type": 1, "updated_at": "2019-06-26T20:03:53.314Z", "reply_count": 2, "reply_to_post_number": 38, "quote_count": 0, "incoming_link_count": 13, "reads": 36, "readers_count": 35, "score": 82.2, "yours": false, "topic_id": 5228, "topic_slug": "behaviour-trees", "display_username": "\u9b54\u5927\u519c \ud835\udf8d\ud835\udf8e\ud835\udf73 \u73fe\u62db\u870d", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 3, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "", "reply_to_user": {"username": "Virgo", "name": "Virgo", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/v/f05b48/{size}.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 192, "hidden": false, "trust_level": 0, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "user_suspended": true, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 30435, "name": "Green Zone", "username": "green-zone", "avatar_template": "/user_avatar/discourse.urho3d.io/green-zone/{size}/1684_2.png", "created_at": "2019-06-26T19:57:12.005Z", "cooked": "<p>Also, for learn BT you can see:<br>\n<aside class=\"onebox whitelistedgeneric\">\n  <header class=\"source\">\n      <img src=\"https://github.githubassets.com/favicon.ico\" class=\"site-icon\" width=\"16\" height=\"16\">\n      <a href=\"https://github.com/LeegleechN/libbehavior\" target=\"_blank\" rel=\"nofollow noopener\">GitHub</a>\n  </header>\n  <article class=\"onebox-body\">\n    <img src=\"https://avatars0.githubusercontent.com/u/1856139?s=400&amp;amp;v=4\" class=\"thumbnail onebox-avatar\" width=\"60\" height=\"60\">\n\n<h3><a href=\"https://github.com/LeegleechN/libbehavior\" target=\"_blank\" rel=\"nofollow noopener\">LeegleechN/libbehavior</a></h3>\n\n<p>Automatically exported from code.google.com/p/libbehavior - LeegleechN/libbehavior</p>\n\n\n  </article>\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n  <div style=\"clear: both\"></div>\n</aside>\n<br>\n<a href=\"https://code.google.com/archive/p/libbehavior\" class=\"onebox\" target=\"_blank\" rel=\"nofollow noopener\">https://code.google.com/archive/p/libbehavior</a><br>\nIt easy learn code.</p>", "post_number": 40, "post_type": 1, "updated_at": "2019-06-26T19:57:12.005Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 36, "readers_count": 35, "score": 7.2, "yours": false, "topic_id": 5228, "topic_slug": "behaviour-trees", "display_username": "Green Zone", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "https://code.google.com/archive/p/libbehavior", "internal": false, "reflection": false, "title": "Google Code Archive - Long-term storage for Google Code Project Hosting.", "clicks": 2}, {"url": "https://github.com/LeegleechN/libbehavior", "internal": false, "reflection": false, "title": "GitHub - LeegleechN/libbehavior: Automatically exported from code.google.com/p/libbehavior", "clicks": 2}], "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 1044, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 30438, "name": "Leith Ketchell", "username": "Leith", "avatar_template": "/user_avatar/discourse.urho3d.io/leith/{size}/2384_2.png", "created_at": "2019-06-27T07:55:34.079Z", "cooked": "<p>I worked on GPU-accelerated neural networks for game AI for my final bachelor paper.<br>\nBasically I wanted to prove that realtime neural AI was possible using consumer grade hardware, we simply needed to format our data to suit the gpu pipeline. I used OpenCL 1.0 - the simulation involved three species in competition: herbivores (rabbits), carnivores (wolves), and omnivores (humans). The emphasis of the experiment was to highlight emergent behaviours, such as pack-hunting behaviours, which were completely unrehearsed and never coded.</p>", "post_number": 41, "post_type": 1, "updated_at": "2019-06-27T07:58:13.294Z", "reply_count": 0, "reply_to_post_number": 39, "quote_count": 0, "incoming_link_count": 0, "reads": 32, "readers_count": 31, "score": 21.4, "yours": false, "topic_id": 5228, "topic_slug": "behaviour-trees", "display_username": "Leith Ketchell", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "suspended user", "title_is_group": false, "reply_to_user": {"username": "Modanung", "name": "\u9b54\u5927\u519c \ud835\udf8d\ud835\udf8e\ud835\udf73 \u73fe\u62db\u870d", "avatar_template": "/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png"}, "bookmarked": false, "actions_summary": [{"id": 2, "count": 1}], "moderator": false, "admin": false, "staff": false, "user_id": 1098, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "user_suspended": true, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 30439, "name": "Virgo", "username": "Virgo", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/v/f05b48/{size}.png", "created_at": "2019-06-27T09:04:07.176Z", "cooked": "<p><img src=\"https://emoji.discourse-cdn.com/twitter/bowing_man.png?v=9\" title=\":bowing_man:\" class=\"emoji\" alt=\":bowing_man:\">the thing is i dont have enough knowledge to start investing in neural network thing, and i suppose it require much more power than behavior tree to simulate game AIs? we dont need AIs in game to be that super intelligent anyway (<strong>just excuses</strong>)</p>", "post_number": 42, "post_type": 1, "updated_at": "2019-06-27T09:04:07.176Z", "reply_count": 1, "reply_to_post_number": 39, "quote_count": 0, "incoming_link_count": 0, "reads": 33, "readers_count": 32, "score": 11.6, "yours": false, "topic_id": 5228, "topic_slug": "behaviour-trees", "display_username": "Virgo", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "reply_to_user": {"username": "Modanung", "name": "\u9b54\u5927\u519c \ud835\udf8d\ud835\udf8e\ud835\udf73 \u73fe\u62db\u870d", "avatar_template": "/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 931, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 30448, "name": "Leith Ketchell", "username": "Leith", "avatar_template": "/user_avatar/discourse.urho3d.io/leith/{size}/2384_2.png", "created_at": "2019-06-28T05:11:24.364Z", "cooked": "<p>Behavior trees, and other kinds of decision trees such as GOAP, are better for game development (than neural solutions) generally, and the reason that I say this is because we can develop solutions that do exactly what we want and no more, while neural solutions tend to veer off course and produce behaviors which, although successful according to our rules of engagement, were not at all what we had in mind.<br>\nWe as game developers are control freaks.<br>\nWe design our logic based on variable input and desirable output.<br>\nNeural networks, on the other hand, simply want to find the best way to make our \u201cfitness function\u201d happy.</p>\n<p>Basically I am stating that those neural networks for games which can learn at all times, are unpredictable and therefore present a real business risk.</p>", "post_number": 43, "post_type": 1, "updated_at": "2019-06-28T05:13:21.030Z", "reply_count": 1, "reply_to_post_number": 42, "quote_count": 0, "incoming_link_count": 0, "reads": 34, "readers_count": 33, "score": 11.8, "yours": false, "topic_id": 5228, "topic_slug": "behaviour-trees", "display_username": "Leith Ketchell", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "suspended user", "title_is_group": false, "reply_to_user": {"username": "Virgo", "name": "Virgo", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/v/f05b48/{size}.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 1098, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "user_suspended": true, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 30456, "name": "\u9b54\u5927\u519c \ud835\udf8d\ud835\udf8e\ud835\udf73 \u73fe\u62db\u870d", "username": "Modanung", "avatar_template": "/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png", "created_at": "2019-06-28T09:40:19.109Z", "cooked": "<p>Indeed the <em>self-learning</em> element that people think of when mentioning neural nets introduces complex math and unpredictable evolution towards potentially godlike opponents. The constituent neurons, on the other hand, are quite simple. What I <em>imagine</em> is a neural net <em>designer</em> that allows its users to design static comprehensible brains using math nodes. Something like a behaviour tree, but one weighing out factors instead of checking conditions.</p>", "post_number": 44, "post_type": 1, "updated_at": "2019-06-28T09:42:24.214Z", "reply_count": 1, "reply_to_post_number": 43, "quote_count": 0, "incoming_link_count": 0, "reads": 33, "readers_count": 32, "score": 11.6, "yours": false, "topic_id": 5228, "topic_slug": "behaviour-trees", "display_username": "\u9b54\u5927\u519c \ud835\udf8d\ud835\udf8e\ud835\udf73 \u73fe\u62db\u870d", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "", "reply_to_user": {"username": "Leith", "name": "Leith Ketchell", "avatar_template": "/user_avatar/discourse.urho3d.io/leith/{size}/2384_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 192, "hidden": false, "trust_level": 0, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "user_suspended": true, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 30457, "name": "Leith Ketchell", "username": "Leith", "avatar_template": "/user_avatar/discourse.urho3d.io/leith/{size}/2384_2.png", "created_at": "2019-06-28T09:46:33.350Z", "cooked": "<p>there is a lot of current debate about how we can\u2019t easily analyze modern neural networks - in order to take advantage of gpu acceleration, I was forced to provide a regular structure in each genome - that is to say, all members of a given SPECIES shared the same neural network topology, differing only in terms of neuron weights\u2026 but the networks which learn the most rapidly, and which do best at avoiding getting trapped in local minima, are those that can adapt their network topology and complexity, and not just twiddle with the neural weights and biases. One great example for games is NEAT - neural evolution of adaptive topologies (think I got that right)</p>", "post_number": 45, "post_type": 1, "updated_at": "2019-06-29T09:29:06.478Z", "reply_count": 0, "reply_to_post_number": 44, "quote_count": 0, "incoming_link_count": 0, "reads": 33, "readers_count": 32, "score": 6.6, "yours": false, "topic_id": 5228, "topic_slug": "behaviour-trees", "display_username": "Leith Ketchell", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 3, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "suspended user", "title_is_group": false, "reply_to_user": {"username": "Modanung", "name": "\u9b54\u5927\u519c \ud835\udf8d\ud835\udf8e\ud835\udf73 \u73fe\u62db\u870d", "avatar_template": "/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 1098, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "user_suspended": true, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 30462, "name": "Leith Ketchell", "username": "Leith", "avatar_template": "/user_avatar/discourse.urho3d.io/leith/{size}/2384_2.png", "created_at": "2019-06-29T09:03:47.394Z", "cooked": "<p>Today I extended lezak\u2019s BT codebase to support \u201cprecondition decorators\u201d.</p>\n<p>The codebase had previously supported \u201ctraditional decorators\u201d, which execute after the logic update for a BT node, and are typically used to hack the return value for that node.<br>\nPreconditions on the other hand, execute BEFORE the node\u2019s usual logic, and are typically used to allow or disallow execution of that node, and the entire subtree beneath it.<br>\nIt\u2019s possible to construct such a \u201cguard node\u201d using several more primitive nodes, but that does not scale well with the complexity of our ai behaviors, and quickly becomes ugly to look at as well as potentially ambiguous.</p>\n<p>My implementation reflects the fact that my current preferred BT editor (owl-bt) does not distinguish between decorator types. Preconditions are implemented as decorator nodes, while the JSON data for these node types contains a special markup to identify them to the loader/parser code. Owl-bt can show nodes as different colors and with different icons to identify them visually, but it actually has no concept of how decorators work, it\u2019s just a visual editor.</p>\n<p>I also eliminated the blackboard variantmap from the btContext structure, opting instead to provide a weakptr to the node that acts as root node for the actor / agent. I\u2019m now using the node user variables member to store agent blackboard information. I sense these will be serialized automatically, though I doubt that object handles will be automatically serialized using scene ids\u2026 I\u2019m not done yet, but I\u2019m certainly in a happier place with respect to sharing data between c++ and angelscript!</p>\n<p>Next steps may include support for multiple cascading decorators, both as preconditions and as postconditions\u2026 \u201cAny BT node, including leaf nodes, can have exactly one precondition node, and exactly one postcondition node - but any decorator node can have zero or one child nodes of the same decorator node major type, and so cascading test logic can be easily implemented\u201d</p>\n<pre><code class=\"lang-auto\">    BTNodeState BehaviorTreeNode::OnStep()\n    {\n\n        /// If this node is in \"inactive\" state, we should \"wake it up\".\n        if (state_ == NS_INACTIVE)\n            Initialize();\n\n        /// If this node is in \"error\" state, we should \"bail out\"...\n        else if (state_ == NS_ERROR){\n            URHO3D_LOGERROR(GetTypeName()+\" \"+name_ + \"is in error state\");\n            return NS_ERROR;\n        }\n\n        /// Check for PRECONDITION decorator (these allow or deny execution of the node's logic)\n        if(precondition_) {\n            state_=precondition_-&gt;Decorate(state_);\n            if(state_!=NS_SUCCESS){\n                Terminate(state_);\n                return state_;\n            }\n        }\n\n        /// Execute the node logic (virtual method)\n        state_ = HandleStep();\n\n        /// After executing the node logic, we observe the new state of the node...\n        /// If the node is \"still running\", do nothing..\n        /// But if the node is in any other state, we need to act.\n        if (state_ != NS_RUNNING)\n        {\n            /// Check for postcondition decorator (these manipulate the node's return value)\n            if (decorator_)\n            {\n                state_ = decorator_-&gt;Decorate(state_);\n                if (state_ == NS_INACTIVE)\n                    Initialize();\n            }\n            /// Don't terminate if post-op decorator changed state to running\n            if (state_!= NS_RUNNING)\n                Terminate(state_);\n\n        }\n        return state_;\n    }</code></pre>", "post_number": 46, "post_type": 1, "updated_at": "2019-06-29T10:57:15.570Z", "reply_count": 1, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 35, "readers_count": 34, "score": 12.0, "yours": false, "topic_id": 5228, "topic_slug": "behaviour-trees", "display_username": "Leith Ketchell", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 4, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "suspended user", "title_is_group": false, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 1098, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "user_suspended": true, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 30464, "name": "Leith Ketchell", "username": "Leith", "avatar_template": "/user_avatar/discourse.urho3d.io/leith/{size}/2384_2.png", "created_at": "2019-06-29T11:06:37.402Z", "cooked": "<p>My new chartreuse favourite colour, is \u201c<span class=\"hashtag\">#bada55</span>\u201d</p>", "post_number": 47, "post_type": 1, "updated_at": "2019-06-29T11:06:37.402Z", "reply_count": 0, "reply_to_post_number": 46, "quote_count": 0, "incoming_link_count": 0, "reads": 32, "readers_count": 31, "score": 21.4, "yours": false, "topic_id": 5228, "topic_slug": "behaviour-trees", "display_username": "Leith Ketchell", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "suspended user", "title_is_group": false, "reply_to_user": {"username": "Leith", "name": "Leith Ketchell", "avatar_template": "/user_avatar/discourse.urho3d.io/leith/{size}/2384_2.png"}, "bookmarked": false, "actions_summary": [{"id": 2, "count": 1}], "moderator": false, "admin": false, "staff": false, "user_id": 1098, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "user_suspended": true, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 30544, "name": "Leith Ketchell", "username": "Leith", "avatar_template": "/user_avatar/discourse.urho3d.io/leith/{size}/2384_2.png", "created_at": "2019-07-03T09:18:26.274Z", "cooked": "<p>I took a major change of direction with BT work today.<br>\nThis involved entirely getting rid of my recently-added \u201cbtContext\u201d, and implementing an Actor  angelscript class that can interact with the c++ behaviortree node classes, and effectively provide a shared data store.</p>", "post_number": 48, "post_type": 1, "updated_at": "2019-07-03T09:19:06.485Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 33, "readers_count": 32, "score": 6.6, "yours": false, "topic_id": 5228, "topic_slug": "behaviour-trees", "display_username": "Leith Ketchell", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "suspended user", "title_is_group": false, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 1098, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "user_suspended": true, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 30640, "name": "Leith Ketchell", "username": "Leith", "avatar_template": "/user_avatar/discourse.urho3d.io/leith/{size}/2384_2.png", "created_at": "2019-07-06T04:56:39.913Z", "cooked": "<pre><code class=\"lang-auto\">class Zombie:Actor\n{\n\n\tvoid Update(float dT){\n\t\tPrint(\"Update ZOMBIE: \"+actorName);\n\n\t\t// Execute a named (presumably root-level) behavior: all the \"magic\" happens in here...\n\t\tbtNodeState result = RunBehavior(\"testbehave\",dT,@self);\n\t}\n\n}\n</code></pre>", "post_number": 49, "post_type": 1, "updated_at": "2019-07-07T09:17:11.036Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 35, "readers_count": 34, "score": 7.0, "yours": false, "topic_id": 5228, "topic_slug": "behaviour-trees", "display_username": "Leith Ketchell", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 2, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "suspended user", "title_is_group": false, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 1098, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "user_suspended": true, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 30653, "name": "Leith Ketchell", "username": "Leith", "avatar_template": "/user_avatar/discourse.urho3d.io/leith/{size}/2384_2.png", "created_at": "2019-07-07T08:32:00.294Z", "cooked": "<p>So, I have reached a new \u201cunderstanding\u201d with my latest BT work.</p>\n<p>Basically, I don\u2019t need a \u201cBTContext\u201d to represent the calling agent anymore.<br>\nIn the latest work, all Actors are script objects, represented in Urho via ScriptInstance components.<br>\nEach ScriptInstance component \u201cscrapes\u201d the angelscript object it creates for attributes/properties, the node it is attached to provides further storage for named variables, and there is also access to context-global variables.</p>\n<p>This arrangement makes life a lot easier for me, in terms of \u201chooking up\u201d behavior tree nodes to named methods at runtime!</p>\n<p>I also figured out a solution for getting return values from script methods without having to explicitly add an output argument to my script functions/methods and hand that in during executions\u2026 I now have a clean way to get return values from ScriptInstance::Execute <img src=\"https://emoji.discourse-cdn.com/twitter/slight_smile.png?v=9\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\"></p>", "post_number": 50, "post_type": 1, "updated_at": "2019-07-07T08:32:42.321Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 32, "readers_count": 31, "score": 21.4, "yours": false, "topic_id": 5228, "topic_slug": "behaviour-trees", "display_username": "Leith Ketchell", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "suspended user", "title_is_group": false, "bookmarked": false, "actions_summary": [{"id": 2, "count": 1}], "moderator": false, "admin": false, "staff": false, "user_id": 1098, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "user_suspended": true, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 30664, "name": "Leith Ketchell", "username": "Leith", "avatar_template": "/user_avatar/discourse.urho3d.io/leith/{size}/2384_2.png", "created_at": "2019-07-08T04:11:06.791Z", "cooked": "<p><em>All the world\u2019s an actor, too</em> , And all the men and women merely blackboards;</p>\n<p>So far, I am using global variables to represent world knowledge\u2026 but scene knowledge makes more sense. The game world could be an Actor too\u2026 in theory.</p>\n<p>What is an Actor?</p>\n<p>To me, it is currently defined as, some instance of some script class, which has a blackboard hanging from its neck. Every actor has a blackboard, containing the sum of its knowledge, of its own state, and of world state too. But what of the world? <img src=\"https://emoji.discourse-cdn.com/twitter/slight_smile.png?v=9\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\"></p>\n<p>An actor is simply the owner of a blackboard, and the caller of a behavior.</p>", "post_number": 51, "post_type": 1, "updated_at": "2019-07-08T04:36:20.429Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 33, "readers_count": 32, "score": 21.6, "yours": false, "topic_id": 5228, "topic_slug": "behaviour-trees", "display_username": "Leith Ketchell", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 3, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "suspended user", "title_is_group": false, "bookmarked": false, "actions_summary": [{"id": 2, "count": 1}], "moderator": false, "admin": false, "staff": false, "user_id": 1098, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "user_suspended": true, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 30683, "name": "Leith Ketchell", "username": "Leith", "avatar_template": "/user_avatar/discourse.urho3d.io/leith/{size}/2384_2.png", "created_at": "2019-07-09T13:14:33.938Z", "cooked": "<p>I\u2019ve added two new kinds of BT node.</p>\n<p>The first kind is called \u201cScriptAction\u201d - it is an Action node (ie a leaf node) which can execute an angelscript method (in the script class of the caller agent), with up to two input arguments, and returnvalues are fully supported too.</p>\n<p>The second kind is called \u201cScriptService\u201d - its my first (and only) \u201cservice node\u201d so far.<br>\nService nodes are similar to decorator nodes, in that they can be attached to any other node type.<br>\nService nodes, if present, execute just after any \u201cpreconditions\u201d, and prior to the node logic for the container node. They have a timer that controls how often their logic fires.<br>\nScriptService nodes can call an AngelScript method at a fixed (typically low) frequency.</p>\n<p>Both of these node types can dictate what to do with return values: ignore them, or store them according to a storage type hint (ie, as a named property, variable, or global value).</p>\n<p>It took a fair bit of time to get these nodes working as intended, mostly spent in testing.</p>", "post_number": 52, "post_type": 1, "updated_at": "2019-07-09T13:14:33.938Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 33, "readers_count": 32, "score": 51.6, "yours": false, "topic_id": 5228, "topic_slug": "behaviour-trees", "display_username": "Leith Ketchell", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "suspended user", "title_is_group": false, "bookmarked": false, "actions_summary": [{"id": 2, "count": 3}], "moderator": false, "admin": false, "staff": false, "user_id": 1098, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "user_suspended": true, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 30693, "name": "Leith Ketchell", "username": "Leith", "avatar_template": "/user_avatar/discourse.urho3d.io/leith/{size}/2384_2.png", "created_at": "2019-07-10T07:37:02.357Z", "cooked": "<p>Today\u2019s new node type is an action node called PopFromStack.</p>\n<p>Assuming we have \u201csome way of querying for a stack\u201d\u2026ie,  of shoving a Vector into a named variable (with the usual caveat about storage qualifiers), this node can grab a Variant from a named stack (storage qualifiers again), and shove it into another named variable (storage qualifiers again).</p>\n<p>This gives us a way to perform \u201cforeach\u201d logic within our behavior logic.<br>\nI\u2019ll post a screen shot soon, showing how this looks in the owl-bt behavior editor.</p>\n<p>There\u2019s currently some pain in passing vectors to/from angelscript\u2026<br>\nYou see, our current script implementation does not support Template Types to be exposed to AngelScript\u2026 even though AngelScript can theoretically deal with template types.<br>\nInstead, we have a situation where array proxy containers are used to pass vectors / lists back and forth to angelscript, involving much copying, which is not ideal in my opinion.</p>", "post_number": 53, "post_type": 1, "updated_at": "2019-07-10T07:37:24.869Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 33, "readers_count": 32, "score": 6.6, "yours": false, "topic_id": 5228, "topic_slug": "behaviour-trees", "display_username": "Leith Ketchell", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "suspended user", "title_is_group": false, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 1098, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "user_suspended": true, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 30694, "name": "Leith Ketchell", "username": "Leith", "avatar_template": "/user_avatar/discourse.urho3d.io/leith/{size}/2384_2.png", "created_at": "2019-07-10T07:42:56.744Z", "cooked": "<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://global.discourse-cdn.com/standard17/uploads/urho3d/original/2X/e/ef90fc69f71c45a781414b05e8153f6796472af3.png\" data-download-href=\"/uploads/short-url/ybiKhw1U8w0G09cZ2ESMnTjbKmL.png?dl=1\" title=\"popstack.png\" rel=\"nofollow noopener\"><img src=\"https://global.discourse-cdn.com/standard17/uploads/urho3d/optimized/2X/e/ef90fc69f71c45a781414b05e8153f6796472af3_2_690x417.png\" alt=\"popstack\" data-base62-sha1=\"ybiKhw1U8w0G09cZ2ESMnTjbKmL\" width=\"690\" height=\"417\" srcset=\"https://global.discourse-cdn.com/standard17/uploads/urho3d/optimized/2X/e/ef90fc69f71c45a781414b05e8153f6796472af3_2_690x417.png, https://global.discourse-cdn.com/standard17/uploads/urho3d/optimized/2X/e/ef90fc69f71c45a781414b05e8153f6796472af3_2_1035x625.png 1.5x, https://global.discourse-cdn.com/standard17/uploads/urho3d/optimized/2X/e/ef90fc69f71c45a781414b05e8153f6796472af3_2_1380x834.png 2x\" data-small-upload=\"https://global.discourse-cdn.com/standard17/uploads/urho3d/optimized/2X/e/ef90fc69f71c45a781414b05e8153f6796472af3_2_10x10.png\"><div class=\"meta\">\n<svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use xlink:href=\"#far-image\"></use></svg><span class=\"filename\">popstack.png</span><span class=\"informations\">1410\u00d7853 76.1 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use xlink:href=\"#discourse-expand\"></use></svg>\n</div></a></div></p>", "post_number": 54, "post_type": 1, "updated_at": "2019-07-10T07:42:56.744Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 2, "reads": 35, "readers_count": 34, "score": 17.0, "yours": false, "topic_id": 5228, "topic_slug": "behaviour-trees", "display_username": "Leith Ketchell", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "https://global.discourse-cdn.com/standard17/uploads/urho3d/original/2X/e/ef90fc69f71c45a781414b05e8153f6796472af3.png", "internal": false, "reflection": false, "title": "ef90fc69f71c45a781414b05e8153f6796472af3.png", "clicks": 0}], "read": true, "user_title": "suspended user", "title_is_group": false, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 1098, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "user_suspended": true, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 30695, "name": "Leith Ketchell", "username": "Leith", "avatar_template": "/user_avatar/discourse.urho3d.io/leith/{size}/2384_2.png", "created_at": "2019-07-10T08:01:42.172Z", "cooked": "<p>There are now effectively four kinds of concrete node class: sequence, selector, actions and decorators.<br>\nThe base node class provides for three kinds of decorators: preconditions, postconditions and services.<br>\nThis implies that any node can be decorated in one of three ways.<br>\nDespite deriving from LeafNode, decorators support Chaining through the base node class.</p>\n<p>I have started to document - and not using doxygen!</p>", "post_number": 55, "post_type": 1, "updated_at": "2019-07-10T08:01:42.172Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 35, "readers_count": 34, "score": 7.0, "yours": false, "topic_id": 5228, "topic_slug": "behaviour-trees", "display_username": "Leith Ketchell", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "suspended user", "title_is_group": false, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 1098, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "user_suspended": true, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}], "stream": [30194, 30197, 30200, 30203, 30204, 30205, 30206, 30207, 30208, 30209, 30218, 30225, 30261, 30266, 30269, 30282, 30283, 30284, 30286, 30289, 30297, 30302, 30303, 30304, 30305, 30320, 30322, 30324, 30349, 30356, 30363, 30369, 30371, 30385, 30388, 30397, 30405, 30431, 30434, 30435, 30438, 30439, 30448, 30456, 30457, 30462, 30464, 30544, 30640, 30653, 30664, 30683, 30693, 30694, 30695]}, "timeline_lookup": [[1, 1260], [3, 1259], [9, 1258], [11, 1257], [12, 1256], [13, 1254], [14, 1253], [16, 1252], [21, 1251], [26, 1250], [29, 1249], [31, 1248], [34, 1247], [36, 1246], [38, 1245], [43, 1244], [46, 1243], [48, 1239], [49, 1236], [50, 1235], [51, 1234], [52, 1233], [53, 1232]], "tags_descriptions": {}, "id": 5228, "title": "Behaviour Trees", "fancy_title": "Behaviour Trees", "posts_count": 55, "created_at": "2019-06-12T05:22:27.122Z", "views": 1702, "reply_count": 21, "like_count": 19, "last_posted_at": "2019-07-10T08:01:42.172Z", "visible": true, "closed": false, "archived": false, "has_summary": true, "archetype": "regular", "slug": "behaviour-trees", "category_id": 16, "word_count": 7640, "deleted_at": null, "user_id": 1098, "featured_link": null, "pinned_globally": false, "pinned_at": null, "pinned_until": null, "image_url": null, "slow_mode_seconds": 0, "draft": null, "draft_key": "topic_5228", "draft_sequence": null, "unpinned": null, "pinned": false, "current_post_number": 1, "highest_post_number": 55, "deleted_by": null, "actions_summary": [{"id": 4, "count": 0, "hidden": false, "can_act": false}, {"id": 8, "count": 0, "hidden": false, "can_act": false}, {"id": 7, "count": 0, "hidden": false, "can_act": false}], "chunk_size": 20, "bookmarked": false, "bookmarks": [], "topic_timer": null, "message_bus_last_id": 0, "participant_count": 7, "show_read_indicator": false, "thumbnails": null, "slow_mode_enabled_until": null, "tags_disable_ads": false, "details": {"can_edit": false, "notification_level": 1, "participants": [{"id": 1098, "username": "Leith", "name": "Leith Ketchell", "avatar_template": "/user_avatar/discourse.urho3d.io/leith/{size}/2384_2.png", "post_count": 43, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "trust_level": 1}, {"id": 931, "username": "Virgo", "name": "Virgo", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/v/f05b48/{size}.png", "post_count": 3, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "trust_level": 2}, {"id": 21, "username": "jmiller", "name": "Justin Miller", "avatar_template": "/user_avatar/discourse.urho3d.io/jmiller/{size}/2367_2.png", "post_count": 2, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "moderator": true, "trust_level": 3}, {"id": 628, "username": "SirNate0", "name": "SirNate0", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png", "post_count": 2, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "trust_level": 2}, {"id": 660, "username": "johnnycable", "name": "kabu", "avatar_template": "/user_avatar/discourse.urho3d.io/johnnycable/{size}/788_2.png", "post_count": 2, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "trust_level": 2}, {"id": 192, "username": "Modanung", "name": "\u9b54\u5927\u519c \ud835\udf8d\ud835\udf8e\ud835\udf73 \u73fe\u62db\u870d", "avatar_template": "/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png", "post_count": 2, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "trust_level": 0}, {"id": 1044, "username": "green-zone", "name": "Green Zone", "avatar_template": "/user_avatar/discourse.urho3d.io/green-zone/{size}/1684_2.png", "post_count": 1, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "trust_level": 1}], "created_by": {"id": 1098, "username": "Leith", "name": "Leith Ketchell", "avatar_template": "/user_avatar/discourse.urho3d.io/leith/{size}/2384_2.png"}, "last_poster": {"id": 1098, "username": "Leith", "name": "Leith Ketchell", "avatar_template": "/user_avatar/discourse.urho3d.io/leith/{size}/2384_2.png"}, "links": [{"url": "https://www.npmjs.com/package/owl-bt", "title": "owl-bt - npm", "internal": false, "attachment": false, "reflection": false, "clicks": 22, "user_id": 1098, "domain": "www.npmjs.com", "root_domain": "npmjs.com"}, {"url": "https://code.google.com/archive/p/libbehavior", "title": "Google Code Archive - Long-term storage for Google Code Project Hosting.", "internal": false, "attachment": false, "reflection": false, "clicks": 2, "user_id": 1044, "domain": "code.google.com", "root_domain": "google.com"}, {"url": "https://github.com/LeegleechN/libbehavior", "title": "GitHub - LeegleechN/libbehavior: Automatically exported from code.google.com/p/libbehavior", "internal": false, "attachment": false, "reflection": false, "clicks": 2, "user_id": 1044, "domain": "github.com", "root_domain": "github.com"}, {"url": "https://github.com/BehaviorTree/BehaviorTree.CPP", "title": "GitHub - BehaviorTree/BehaviorTree.CPP: Behavior Trees Library in C++. Batteries included.", "internal": false, "attachment": false, "reflection": false, "clicks": 1, "user_id": 931, "domain": "github.com", "root_domain": "github.com"}, {"url": "https://www.gamasutra.com/blogs/ChrisSimpson/20140717/221339/Behavior_trees_for_AI_How_they_work.php", "title": "Gamasutra: Chris Simpson's Blog - Behavior trees for AI: How they work", "internal": false, "attachment": false, "reflection": false, "clicks": 1, "user_id": 1098, "domain": "www.gamasutra.com", "root_domain": "gamasutra.com"}]}, "suggested_topics": [{"id": 7063, "title": "Quadspinner Gaea support on Urho?", "fancy_title": "Quadspinner Gaea support on Urho?", "slug": "quadspinner-gaea-support-on-urho", "posts_count": 1, "reply_count": 0, "highest_post_number": 1, "image_url": null, "created_at": "2021-11-23T23:30:45.335Z", "last_posted_at": "2021-11-23T23:30:45.396Z", "bumped": true, "bumped_at": "2021-11-23T23:30:45.396Z", "archetype": "regular", "unseen": false, "pinned": false, "unpinned": null, "visible": true, "closed": false, "archived": false, "bookmarked": null, "liked": null, "tags_descriptions": {}, "like_count": 0, "views": 150, "category_id": 16, "featured_link": null, "has_accepted_answer": false, "posters": [{"extras": "latest single", "description": "Original Poster, Most Recent Poster", "user": {"id": 1304, "username": "lebrewer", "name": "lebrewer", "avatar_template": "/user_avatar/discourse.urho3d.io/lebrewer/{size}/2811_2.png"}}]}, {"id": 7062, "title": "Is WebGL2.0 & GLES3.0 being supported in the near future?", "fancy_title": "Is WebGL2.0 &amp; GLES3.0 being supported in the near future?", "slug": "is-webgl2-0-gles3-0-being-supported-in-the-near-future", "posts_count": 2, "reply_count": 0, "highest_post_number": 2, "image_url": null, "created_at": "2021-11-23T09:04:28.802Z", "last_posted_at": "2021-11-23T21:44:08.088Z", "bumped": true, "bumped_at": "2021-11-23T21:44:08.088Z", "archetype": "regular", "unseen": false, "pinned": false, "unpinned": null, "visible": true, "closed": false, "archived": false, "bookmarked": null, "liked": null, "tags_descriptions": {}, "like_count": 1, "views": 199, "category_id": 16, "featured_link": null, "has_accepted_answer": false, "posters": [{"extras": null, "description": "Original Poster", "user": {"id": 1490, "username": "Sunc", "name": "DoubleSuper", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/df788c/{size}.png"}}, {"extras": "latest", "description": "Most Recent Poster", "user": {"id": 631, "username": "JTippetts1", "name": "J Tippetts", "avatar_template": "/user_avatar/discourse.urho3d.io/jtippetts1/{size}/96_2.png"}}]}, {"id": 7196, "title": "Windows Urho3D build with -DURHO3D_OPENGL=1 using rake", "fancy_title": "Windows Urho3D build with -DURHO3D_OPENGL=1 using rake", "slug": "windows-urho3d-build-with-durho3d-opengl-1-using-rake", "posts_count": 18, "reply_count": 9, "highest_post_number": 19, "image_url": null, "created_at": "2022-02-20T12:49:25.777Z", "last_posted_at": "2022-02-24T18:24:11.679Z", "bumped": true, "bumped_at": "2022-02-24T18:24:11.679Z", "archetype": "regular", "unseen": false, "pinned": false, "unpinned": null, "visible": true, "closed": false, "archived": false, "bookmarked": null, "liked": null, "tags_descriptions": {}, "like_count": 3, "views": 254, "category_id": 16, "featured_link": null, "has_accepted_answer": false, "posters": [{"extras": null, "description": "Original Poster", "user": {"id": 421, "username": "Lunarovich", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/lunarovich/{size}/2097_2.png"}}, {"extras": null, "description": "Frequent Poster", "user": {"id": 628, "username": "SirNate0", "name": "SirNate0", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}}, {"extras": null, "description": "Frequent Poster", "user": {"id": 263, "username": "1vanK", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/1vank/{size}/768_2.png"}}, {"extras": null, "description": "Frequent Poster", "user": {"id": 631, "username": "JTippetts1", "name": "J Tippetts", "avatar_template": "/user_avatar/discourse.urho3d.io/jtippetts1/{size}/96_2.png"}}, {"extras": "latest", "description": "Most Recent Poster", "user": {"id": 4, "username": "weitjong", "name": "Yao Wei Tjong", "avatar_template": "/user_avatar/discourse.urho3d.io/weitjong/{size}/4_2.png"}}]}, {"id": 7216, "title": "Why occlusion culling rasterization is implemented by software?", "fancy_title": "Why occlusion culling rasterization is implemented by software?", "slug": "why-occlusion-culling-rasterization-is-implemented-by-software", "posts_count": 4, "reply_count": 2, "highest_post_number": 4, "image_url": null, "created_at": "2022-03-11T11:36:18.222Z", "last_posted_at": "2022-03-13T02:39:16.613Z", "bumped": true, "bumped_at": "2022-03-13T02:39:16.613Z", "archetype": "regular", "unseen": false, "pinned": false, "unpinned": null, "visible": true, "closed": false, "archived": false, "bookmarked": null, "liked": null, "tags_descriptions": {}, "like_count": 0, "views": 193, "category_id": 16, "featured_link": null, "has_accepted_answer": false, "posters": [{"extras": null, "description": "Original Poster", "user": {"id": 1490, "username": "Sunc", "name": "DoubleSuper", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/df788c/{size}.png"}}, {"extras": null, "description": "Frequent Poster", "user": {"id": 484, "username": "Eugene", "name": "Eugene Kozlov", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png"}}, {"extras": "latest", "description": "Most Recent Poster", "user": {"id": 1358, "username": "JSandusky", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/jsandusky/{size}/3220_2.png"}}]}, {"id": 7272, "title": "Normals causing mesh to go all over the place", "fancy_title": "Normals causing mesh to go all over the place", "slug": "normals-causing-mesh-to-go-all-over-the-place", "posts_count": 7, "reply_count": 3, "highest_post_number": 7, "image_url": "https://global.discourse-cdn.com/standard17/uploads/urho3d/optimized/2X/0/0a0a9a3dc40a56fb224dc7ab3b9b167551b57cb6_2_1024x863.png", "created_at": "2022-05-30T22:50:15.428Z", "last_posted_at": "2022-06-03T09:23:21.988Z", "bumped": true, "bumped_at": "2022-06-03T09:42:18.150Z", "archetype": "regular", "unseen": false, "pinned": false, "unpinned": null, "visible": true, "closed": false, "archived": false, "bookmarked": null, "liked": null, "tags_descriptions": {}, "like_count": 0, "views": 172, "category_id": 16, "featured_link": null, "has_accepted_answer": false, "posters": [{"extras": null, "description": "Original Poster", "user": {"id": 1507, "username": "Kest", "name": "Kest", "avatar_template": "/user_avatar/discourse.urho3d.io/kest/{size}/3734_2.png"}}, {"extras": null, "description": "Frequent Poster", "user": {"id": 653, "username": "extobias", "name": "tobias alarcon", "avatar_template": "/user_avatar/discourse.urho3d.io/extobias/{size}/2836_2.png"}}, {"extras": null, "description": "Frequent Poster", "user": {"id": 484, "username": "Eugene", "name": "Eugene Kozlov", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png"}}, {"extras": "latest", "description": "Most Recent Poster", "user": {"id": 809, "username": "elix22", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/elix22/{size}/1437_2.png"}}]}]}