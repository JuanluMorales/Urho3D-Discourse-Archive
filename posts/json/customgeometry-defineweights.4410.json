{"post_stream":{"posts":[{"id":25400,"name":"","username":"simonsch","avatar_template":"/user_avatar/discourse.urho3d.io/simonsch/{size}/1319_2.png","created_at":"2018-07-26T13:29:02.483Z","cooked":"\u003cp\u003eHello Community it is me again with a problem related to CustomGeometry.\u003c/p\u003e\n\u003cp\u003eI have a vertexBuffer which consists out of\u003cbr\u003e\nMASK_POSITION | MASK_NORMAL | MASK_BLENDWEIGHTS | MASK_BLENDINDICES\u003c/p\u003e\n\u003cp\u003eBecause of a specific reason i have to lock this vertexBuffer, read its vertex data and write it through an CustomGeometry. The point is i see no way for CustomGeometry to define MASK_BLENDWEIGHTS and MASK_BLENDINDICES.\u003c/p\u003e\n\u003cp\u003eLike with the functions DefinePosition(), DefineNormal(), DefineTangent(), DefineColor(), any help would be great.\u003c/p\u003e\n\u003cp\u003eAs always if you need more information on the topic feel free to ask.\u003c/p\u003e\n\u003cp\u003eBest Regards\u003c/p\u003e","post_number":1,"post_type":1,"updated_at":"2018-07-26T13:29:35.920Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":19,"reads":44,"readers_count":43,"score":103.8,"yours":false,"topic_id":4410,"topic_slug":"customgeometry-defineweights","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":938,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":25401,"name":"Lasse Öörni","username":"cadaver","avatar_template":"/user_avatar/discourse.urho3d.io/cadaver/{size}/3_2.png","created_at":"2018-07-26T14:52:14.284Z","cooked":"\u003cp\u003eThe ideal should be that you never need to go back from a VertexBuffer (which is already the optimal storage format) to CustomGeometry, which is limited in its use cases and only intended for easy programmatic geometry generation for beginners.\u003c/p\u003e\n\u003cp\u003eIs the reason in the application or in Urho3D API itself? If in Urho3D, it sounds like worth fixing.\u003c/p\u003e\n\u003cp\u003eThere are also other limits in CustomGeometry, like no second texture coords.\u003c/p\u003e","post_number":2,"post_type":1,"updated_at":"2018-07-26T14:52:14.284Z","reply_count":1,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":0,"reads":43,"readers_count":42,"score":13.6,"yours":false,"topic_id":4410,"topic_slug":"customgeometry-defineweights","display_username":"Lasse Öörni","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":"Urho3D Author","title_is_group":false,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":true,"staff":true,"user_id":3,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":25406,"name":"Eugene Kozlov","username":"Eugene","avatar_template":"/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png","created_at":"2018-07-26T18:19:54.657Z","cooked":"\u003cp\u003eThe issue is much deeper than just absence of few functions.\u003cbr\u003e\nFor sane usage of blend weights and indices you have to prepare and pass skeletal matrices into shader.\u003cbr\u003e\nAnd \u003ccode\u003eCustomGeometry\u003c/code\u003e doesn’t have such routines.\u003c/p\u003e","post_number":3,"post_type":1,"updated_at":"2018-07-26T18:19:54.657Z","reply_count":1,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":0,"reads":41,"readers_count":40,"score":13.2,"yours":false,"topic_id":4410,"topic_slug":"customgeometry-defineweights","display_username":"Eugene Kozlov","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":"Core developer","title_is_group":false,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":484,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":25416,"name":"","username":"simonsch","avatar_template":"/user_avatar/discourse.urho3d.io/simonsch/{size}/1319_2.png","created_at":"2018-07-27T07:04:18.576Z","cooked":"\u003cp\u003eThank you for the answer i assumed something like this, the problem is that i have a urho scene with an mdl, the scene contains joint information. For this model i want to define vertexcolor information, but the current vertex buffer has now color mask integrated.\u003c/p\u003e\n\u003cp\u003eMy first attempt was to create a new vertex buffer pass in the old position, normal data and add color on a per vertex base. But then replacing the old vertex buffer didn’t work and gave me weird render issues. With CustomGeometry i was able to do this except applying the weights.\u003c/p\u003e\n\u003cp\u003eSimple said i want a 1 to 1 copy of my node with its AnimatedModel component just with some self defined vertex colors.\u003c/p\u003e","post_number":4,"post_type":1,"updated_at":"2018-07-27T07:04:18.576Z","reply_count":0,"reply_to_post_number":2,"quote_count":0,"incoming_link_count":0,"reads":37,"readers_count":36,"score":7.4,"yours":false,"topic_id":4410,"topic_slug":"customgeometry-defineweights","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"reply_to_user":{"username":"cadaver","name":"Lasse Öörni","avatar_template":"/user_avatar/discourse.urho3d.io/cadaver/{size}/3_2.png"},"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":938,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":25417,"name":"","username":"simonsch","avatar_template":"/user_avatar/discourse.urho3d.io/simonsch/{size}/1319_2.png","created_at":"2018-07-27T07:05:00.643Z","cooked":"\u003cp\u003eHi, thank you for your answer. Yeah i also wondered where the skeletal data is read from my scene then. For details see above post.\u003c/p\u003e","post_number":5,"post_type":1,"updated_at":"2018-07-27T07:05:00.643Z","reply_count":0,"reply_to_post_number":3,"quote_count":0,"incoming_link_count":0,"reads":37,"readers_count":36,"score":7.4,"yours":false,"topic_id":4410,"topic_slug":"customgeometry-defineweights","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"reply_to_user":{"username":"Eugene","name":"Eugene Kozlov","avatar_template":"/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png"},"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":938,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":25418,"name":"Lasse Öörni","username":"cadaver","avatar_template":"/user_avatar/discourse.urho3d.io/cadaver/{size}/3_2.png","created_at":"2018-07-27T08:56:07.064Z","cooked":"\u003cp\u003eReplacing the vertexbuffer is exactly what you should do, and I can’t think of any reason of why it should fail (except if there’s a bug in Urho3D, in which case you can open an issue), if you interleave the new data with the old data correctly.\u003c/p\u003e","post_number":6,"post_type":1,"updated_at":"2018-07-27T08:56:07.064Z","reply_count":1,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":0,"reads":37,"readers_count":36,"score":12.4,"yours":false,"topic_id":4410,"topic_slug":"customgeometry-defineweights","display_username":"Lasse Öörni","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":"Urho3D Author","title_is_group":false,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":true,"staff":true,"user_id":3,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":25419,"name":"","username":"simonsch","avatar_template":"/user_avatar/discourse.urho3d.io/simonsch/{size}/1319_2.png","created_at":"2018-07-27T09:00:52.530Z","cooked":"\u003cp\u003eOkay then i will share some code\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e    // Clone root node to get joint information\n    Node *bufNode = scene_a_-\u0026gt;GetChild(\"RootNode\")-\u0026gt;Clone();\n\n    // Extract the model components which store the needed vbo for redrawing\n    PODVector\u0026lt;Model *\u0026gt; models{};\n    PODVector\u0026lt;StaticModel *\u0026gt; modelComponents{};\n    bufNode-\u0026gt;GetDerivedComponents\u0026lt;StaticModel\u0026gt;(modelComponents, true);\n    for (StaticModel *modelComponent : modelComponents) {\n        models.Push(modelComponent-\u0026gt;GetModel());\n    }\n    Skeleton skeletonBuffer = models[0]-\u0026gt;GetSkeleton();\n\n    // Get old vbo and ibo\n    SharedPtr\u0026lt;VertexBuffer\u0026gt; oldVertexBuffer = models[0]-\u0026gt;GetVertexBuffers()[0];\n    SharedPtr\u0026lt;IndexBuffer\u0026gt; oldIndicesBuffer = models[0]-\u0026gt;GetIndexBuffers()[0];\n\n    unsigned indexSize = oldIndicesBuffer-\u0026gt;GetIndexSize();\n    unsigned numIndices = oldIndicesBuffer-\u0026gt;GetIndexCount();\n    unsigned oldVertexSize = oldVertexBuffer-\u0026gt;GetVertexSize();\n    unsigned numVertices = oldVertexBuffer-\u0026gt;GetVertexCount();\n\n    // Define a new child node for drawing\n    Node *newNode = bufNode-\u0026gt;CreateChild(\"result\");\n    // Little offset so both models don't totally overlap\n    newNode-\u0026gt;SetPosition(Vector3(0.01,0.0,0.0));\n    SharedPtr\u0026lt;AnimatedModel\u0026gt; newAnimatedModel(\n            newNode-\u0026gt;CreateComponent\u0026lt;AnimatedModel\u0026gt;());\n    SharedPtr\u0026lt;Model\u0026gt; newModel(new Model(context_));\n    SharedPtr\u0026lt;VertexBuffer\u0026gt; newVertexBuffer(new VertexBuffer(context_));\n    SharedPtr\u0026lt;Geometry\u0026gt; newGeometry(new Geometry(context_));\n    newVertexBuffer-\u0026gt;SetSize(numVertices, MASK_POSITION | MASK_NORMAL | MASK_TEXCOORD1 | MASK_BLENDWEIGHTS | MASK_BLENDINDICES);\n    unsigned newVertexSize = newVertexBuffer-\u0026gt;GetVertexSize();\n\n\n    // LOCK old and new vbo for editing reading vertex data\n    unsigned char *oldVertexData = (unsigned char *) oldVertexBuffer-\u0026gt;Lock(0, numVertices);\n    unsigned char *newVertexData = (unsigned char *) newVertexBuffer-\u0026gt;Lock(0, numVertices);\n    if (oldVertexData) {\n            unsigned oldMask = oldVertexBuffer-\u0026gt;GetElementMask();\n            unsigned oldPositionOffset = oldVertexBuffer-\u0026gt;GetElementOffset(SEM_POSITION);\n            unsigned oldNormalOffset = oldVertexBuffer-\u0026gt;GetElementOffset(SEM_NORMAL);\n            unsigned oldColorOffset = oldVertexBuffer-\u0026gt;GetElementOffset(SEM_COLOR);\n            unsigned oldBlendWeightOffset = oldVertexBuffer-\u0026gt;GetElementOffset(SEM_BLENDWEIGHTS);\n            unsigned oldBlendIndicesOffset = oldVertexBuffer-\u0026gt;GetElementOffset(SEM_BLENDINDICES);\n            unsigned newMask = newVertexBuffer-\u0026gt;GetElementMask();\n            unsigned newPositionOffset = newVertexBuffer-\u0026gt;GetElementOffset(SEM_POSITION);\n            unsigned newNormalOffset = newVertexBuffer-\u0026gt;GetElementOffset(SEM_NORMAL);\n            unsigned newColorOffset = newVertexBuffer-\u0026gt;GetElementOffset(SEM_COLOR);\n            unsigned newBlendWeightOffset = newVertexBuffer-\u0026gt;GetElementOffset(SEM_BLENDWEIGHTS);\n            unsigned newBlendIndicesOffset = newVertexBuffer-\u0026gt;GetElementOffset(SEM_BLENDINDICES);\n\n            for (int i = 0; i \u0026lt; numVertices; i++) {\n                // Old vertex buffer data\n                unsigned char *oldVertexPos = (oldVertexData + i * oldVertexSize + oldPositionOffset);\n                unsigned char *oldVertexNormal = (oldVertexData + i * oldVertexSize + oldNormalOffset);\n                unsigned char *oldVertexWeights = (oldVertexData + i * oldVertexSize +\n                        oldBlendWeightOffset);\n                unsigned char *oldVertexWeightIndices = (oldVertexData + i * oldVertexSize +\n                        oldBlendIndicesOffset);\n                // New vertex buffer data\n                unsigned char *newVertexPos = (newVertexData + i * newVertexSize + newPositionOffset);\n                unsigned char *newVertexNormal = (newVertexData + i * newVertexSize + newNormalOffset);\n                unsigned char *newVertexWeights = (newVertexData + i * newVertexSize +\n                        newBlendWeightOffset);\n                unsigned char *newVertexWeightIndices = (newVertexData + i * newVertexSize +\n                        newBlendIndicesOffset);\n                if (oldMask \u0026amp; MASK_POSITION) {\n                    Vector3 \u0026amp;src_pos = *reinterpret_cast\u0026lt;Vector3 *\u0026gt;( oldVertexPos );\n                    Vector3 \u0026amp;target_pos = *reinterpret_cast\u0026lt;Vector3 *\u0026gt;( newVertexPos );\n                    target_pos = src_pos;\n                }\n                if (oldMask \u0026amp; MASK_NORMAL) {\n                    Vector3 \u0026amp;src_normal = *reinterpret_cast\u0026lt;Vector3 *\u0026gt;( oldVertexNormal );\n                    Vector3 \u0026amp;target_normal = *reinterpret_cast\u0026lt;Vector3 *\u0026gt;( newVertexNormal );\n                    target_normal = src_normal;\n                }\n                if (oldMask \u0026amp; MASK_BLENDWEIGHTS) {\n                    newVertexWeights = oldVertexWeights;\n                }\n                if (oldMask \u0026amp; MASK_BLENDINDICES) {\n                    newVertexWeightIndices = oldVertexWeightIndices;\n                }\n\n            oldVertexBuffer-\u0026gt;Unlock();\n            newVertexBuffer-\u0026gt;Unlock();\n        }\n    }\n    newGeometry-\u0026gt;SetVertexBuffer(0, newVertexBuffer);\n    newGeometry-\u0026gt;SetIndexBuffer(oldIndicesBuffer);\n    newGeometry-\u0026gt;SetDrawRange(TRIANGLE_LIST, 0, 0, 0,numVertices);\n    newModel-\u0026gt;SetSkeleton(skeletonBuffer);\n    newModel-\u0026gt;SetNumGeometries(1);\n    newModel-\u0026gt;SetGeometry(0, 0, newGeometry);\n    newAnimatedModel-\u0026gt;SetModel(newModel);\n    newAnimatedModel-\u0026gt;SetMaterial(vcolmat);\n    scene_-\u0026gt;AddChild(bufNode);\n\u003c/code\u003e\u003c/pre\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eThis shows only the original model not the new node. This was another try not to replace the vbo but instead creating a copy of the node with a new vbo.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eAdditionally, i should also mention that i don’t know which structure weights and indices have in the vbo the offset tells me\u003cbr\u003e\nBlend weight Offset 32\u003cbr\u003e\nBlend indices Offset 48\u003cbr\u003e\nBut what are those data? I assume those indices are ints?\u003cbr\u003e\nFor the normals e.g. i can get the stride like\u003cbr\u003e\nunsigned char *oldVertexNormal = (oldVertexData + i * oldVertexSize + oldNormalOffset);\u003cbr\u003e\nand cast it\u003cbr\u003e\nVector3 \u0026amp;src_normal = *reinterpret_cast\u0026lt;Vector3 *\u0026gt;( oldVertexNormal );\u003cbr\u003e\nBut what if i want the indices and weights as values? How many are in one stride? Which type they are? Sry if this is obvious.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eAnd now the problem after the problem (yep it goes on). I need the absolute vertex position for some calculation which should give me those vertex colors, i want to display. Is there an easy way reading joint information from scene.xml, using weights, indices from vbo and applying those to our vertex positions? Or do i need to calculate it all via hand? If so i really need help with 2.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e","post_number":7,"post_type":1,"updated_at":"2018-07-27T09:17:57.126Z","reply_count":0,"reply_to_post_number":6,"quote_count":0,"incoming_link_count":0,"reads":38,"readers_count":37,"score":7.6,"yours":false,"topic_id":4410,"topic_slug":"customgeometry-defineweights","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":3,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"reply_to_user":{"username":"cadaver","name":"Lasse Öörni","avatar_template":"/user_avatar/discourse.urho3d.io/cadaver/{size}/3_2.png"},"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":938,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":25420,"name":"Lasse Öörni","username":"cadaver","avatar_template":"/user_avatar/discourse.urho3d.io/cadaver/{size}/3_2.png","created_at":"2018-07-27T09:19:23.533Z","cooked":"\u003cp\u003eThe hardcoded vertex elements (referred to with mask bits) are defined in GraphicsDefs.cpp. You’ll see that a blendweights element is a Vector4, and blendindices is 4 bytes (so practically an unsigned int).\u003c/p\u003e\n\u003cp\u003eSo it looks in your code you’re not copying enough data for the weights \u0026amp; indices.\u003c/p\u003e","post_number":8,"post_type":1,"updated_at":"2018-07-27T09:19:23.533Z","reply_count":1,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":0,"reads":30,"readers_count":29,"score":11.0,"yours":false,"topic_id":4410,"topic_slug":"customgeometry-defineweights","display_username":"Lasse Öörni","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":"Urho3D Author","title_is_group":false,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":true,"staff":true,"user_id":3,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":25421,"name":"","username":"simonsch","avatar_template":"/user_avatar/discourse.urho3d.io/simonsch/{size}/1319_2.png","created_at":"2018-07-27T09:27:53.044Z","cooked":"\u003cp\u003eSry was still editing my post \u003cimg src=\"https://emoji.discourse-cdn.com/twitter/slight_smile.png?v=5\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\"\u003e. So it is possible you missed part 3.\u003c/p\u003e\n\u003cp\u003eThat helps a lot! So both include 4 values? 4 indices with 4 weights.\u003cbr\u003e\nI will try fix that, but at least i should see something when copy the position to the vbo. The loop is iterated correct but after replacing the vbo\u003cbr\u003e\nmodels[0]-\u0026gt;GetGeometry(0,0)-\u0026gt;SetVertexBuffer(0,newVertexBuffer);\u003cbr\u003e\nNothing is rendering.\u003c/p\u003e","post_number":9,"post_type":1,"updated_at":"2018-07-27T09:27:53.044Z","reply_count":1,"reply_to_post_number":8,"quote_count":0,"incoming_link_count":0,"reads":30,"readers_count":29,"score":11.0,"yours":false,"topic_id":4410,"topic_slug":"customgeometry-defineweights","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"reply_to_user":{"username":"cadaver","name":"Lasse Öörni","avatar_template":"/user_avatar/discourse.urho3d.io/cadaver/{size}/3_2.png"},"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":938,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":25422,"name":"Lasse Öörni","username":"cadaver","avatar_template":"/user_avatar/discourse.urho3d.io/cadaver/{size}/3_2.png","created_at":"2018-07-27T09:28:56.257Z","cooked":"\u003cp\u003eUrho doesn’t offer software skinning, so your best bet would be to run your calculation in vertex shader, where you have the skinned world positions.\u003c/p\u003e\n\u003cp\u003eIn skeletal animation, nothing will render correctly without correct blend weights / indices, as the vertex position is multiplied by matrices selected by the index.\u003c/p\u003e","post_number":10,"post_type":1,"updated_at":"2018-07-27T09:31:24.996Z","reply_count":1,"reply_to_post_number":9,"quote_count":0,"incoming_link_count":0,"reads":29,"readers_count":28,"score":10.8,"yours":false,"topic_id":4410,"topic_slug":"customgeometry-defineweights","display_username":"Lasse Öörni","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":"Urho3D Author","title_is_group":false,"reply_to_user":{"username":"simonsch","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/simonsch/{size}/1319_2.png"},"bookmarked":false,"actions_summary":[],"moderator":false,"admin":true,"staff":true,"user_id":3,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":25423,"name":"","username":"simonsch","avatar_template":"/user_avatar/discourse.urho3d.io/simonsch/{size}/1319_2.png","created_at":"2018-07-27T10:21:05.131Z","cooked":"\u003cp\u003eHm\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e    // Clone root node to get joint information\n    Node *bufNode = scene_a_-\u0026gt;GetChild(\"RootNode\")-\u0026gt;Clone();\n\n    // Extract the model components which store the needed vbo for redrawing\n    PODVector\u0026lt;Model *\u0026gt; models{};\n    PODVector\u0026lt;StaticModel *\u0026gt; modelComponents{};\n    bufNode-\u0026gt;GetDerivedComponents\u0026lt;StaticModel\u0026gt;(modelComponents, true);\n    for (StaticModel *modelComponent : modelComponents) {\n        models.Push(modelComponent-\u0026gt;GetModel());\n    }\n    Skeleton skeletonBuffer = models[0]-\u0026gt;GetSkeleton();\n\n    // Get old vbo and ibo\n    SharedPtr\u0026lt;VertexBuffer\u0026gt; oldVertexBuffer = models[0]-\u0026gt;GetVertexBuffers()[0];\n    SharedPtr\u0026lt;IndexBuffer\u0026gt; oldIndicesBuffer = models[0]-\u0026gt;GetIndexBuffers()[0];\n\n    unsigned indexSize = oldIndicesBuffer-\u0026gt;GetIndexSize();\n    unsigned numIndices = oldIndicesBuffer-\u0026gt;GetIndexCount();\n    unsigned oldVertexSize = oldVertexBuffer-\u0026gt;GetVertexSize();\n    unsigned numVertices = oldVertexBuffer-\u0026gt;GetVertexCount();\n\n    // Define a new child node for drawing\n    Node *newNode = bufNode-\u0026gt;CreateChild(\"result\");\n    // Little offset so both models don't totally overlap\n    newNode-\u0026gt;SetPosition(Vector3(0.01,0.0,0.0));\n    SharedPtr\u0026lt;AnimatedModel\u0026gt; newAnimatedModel(\n            newNode-\u0026gt;CreateComponent\u0026lt;AnimatedModel\u0026gt;());\n    SharedPtr\u0026lt;Model\u0026gt; newModel(new Model(context_));\n    SharedPtr\u0026lt;VertexBuffer\u0026gt; newVertexBuffer(new VertexBuffer(context_));\n    SharedPtr\u0026lt;Geometry\u0026gt; newGeometry(new Geometry(context_));\n    newVertexBuffer-\u0026gt;SetSize(numVertices, MASK_POSITION | MASK_NORMAL | MASK_TEXCOORD1 | MASK_BLENDWEIGHTS | MASK_BLENDINDICES);\n    unsigned newVertexSize = newVertexBuffer-\u0026gt;GetVertexSize();\n\n\n    // LOCK old and new vbo for editing reading vertex data\n    unsigned char *oldVertexData = (unsigned char *) oldVertexBuffer-\u0026gt;Lock(0, numVertices);\n    unsigned char *newVertexData = (unsigned char *) newVertexBuffer-\u0026gt;Lock(0, numVertices);\n    if (oldVertexData) {\n            unsigned oldMask = oldVertexBuffer-\u0026gt;GetElementMask();\n            unsigned oldPositionOffset = oldVertexBuffer-\u0026gt;GetElementOffset(SEM_POSITION);\n            unsigned oldNormalOffset = oldVertexBuffer-\u0026gt;GetElementOffset(SEM_NORMAL);\n            unsigned oldColorOffset = oldVertexBuffer-\u0026gt;GetElementOffset(SEM_COLOR);\n            unsigned oldBlendWeightOffset = oldVertexBuffer-\u0026gt;GetElementOffset(SEM_BLENDWEIGHTS);\n            unsigned oldBlendIndicesOffset = oldVertexBuffer-\u0026gt;GetElementOffset(SEM_BLENDINDICES);\n\n            unsigned newMask = newVertexBuffer-\u0026gt;GetElementMask();\n            unsigned newPositionOffset = newVertexBuffer-\u0026gt;GetElementOffset(SEM_POSITION);\n            unsigned newNormalOffset = newVertexBuffer-\u0026gt;GetElementOffset(SEM_NORMAL);\n            unsigned newColorOffset = newVertexBuffer-\u0026gt;GetElementOffset(SEM_COLOR);\n            unsigned newBlendWeightOffset = newVertexBuffer-\u0026gt;GetElementOffset(SEM_BLENDWEIGHTS);\n            unsigned newBlendIndicesOffset = newVertexBuffer-\u0026gt;GetElementOffset(SEM_BLENDINDICES);\n    \n                     for (int i = 0; i \u0026lt; numVertices; i++) {\n                         // Old vertex buffer data\n                         unsigned char *oldVertexPos = (oldVertexData + i * oldVertexSize + oldPositionOffset);\n                         unsigned char *oldVertexNormal = (oldVertexData + i * oldVertexSize + oldNormalOffset);\n                         unsigned char *oldVertexWeights = (oldVertexData + i * oldVertexSize +\n                                 oldBlendWeightOffset);\n                         unsigned char *oldVertexWeightIndices = (oldVertexData + i * oldVertexSize +\n                                 oldBlendIndicesOffset);\n                         // New vertex buffer data\n                         unsigned char *newVertexPos = (newVertexData + i * newVertexSize + newPositionOffset);\n                         unsigned char *newVertexNormal = (newVertexData + i * newVertexSize + newNormalOffset);\n                         unsigned char *newVertexWeights = (newVertexData + i * newVertexSize +\n                                 newBlendWeightOffset);\n                         unsigned char *newVertexWeightIndices = (newVertexData + i * newVertexSize +\n                                 newBlendIndicesOffset);\n                         if (oldMask \u0026amp; MASK_POSITION) {\n                             Vector3 \u0026amp;src_pos = *reinterpret_cast\u0026lt;Vector3 *\u0026gt;( oldVertexPos );\n                             Vector3 \u0026amp;target_pos = *reinterpret_cast\u0026lt;Vector3 *\u0026gt;( newVertexPos );\n                             target_pos.x_ = src_pos.x_;\n                             target_pos.y_ = src_pos.y_;\n                             target_pos.z_ = src_pos.z_;\n                         }\n                         if (oldMask \u0026amp; MASK_NORMAL) {\n                             Vector3 \u0026amp;src_normal = *reinterpret_cast\u0026lt;Vector3 *\u0026gt;( oldVertexNormal );\n                             Vector3 \u0026amp;target_normal = *reinterpret_cast\u0026lt;Vector3 *\u0026gt;( newVertexNormal );\n                             target_normal.x_ = src_normal.x_;\n                             target_normal.y_ = src_normal.y_;\n                             target_normal.z_ = src_normal.z_;\n                         }\n                         if (oldMask \u0026amp; MASK_BLENDWEIGHTS) {\n                             Vector4 \u0026amp;src_weights = *reinterpret_cast\u0026lt;Vector4 *\u0026gt;( oldVertexWeights );\n                             Vector4 \u0026amp;target_weights = *reinterpret_cast\u0026lt;Vector4 *\u0026gt;( newVertexWeights );\n\n                             target_weights.x_ = src_weights.x_;\n                             target_weights.y_ = src_weights.y_;\n                             target_weights.z_ = src_weights.z_;\n                             target_weights.w_ = src_weights.w_;\n                         }\n                         if (oldMask \u0026amp; MASK_BLENDINDICES) {\n                             unsigned int \u0026amp;src_weights = *reinterpret_cast\u0026lt;unsigned int  *\u0026gt;( oldVertexWeightIndices );\n                             unsigned int \u0026amp;target_weights = *reinterpret_cast\u0026lt;unsigned int  *\u0026gt;( newVertexWeightIndices );\n\n                             target_weights = src_weights;\n                         }\n\n                     oldVertexBuffer-\u0026gt;Unlock();\n                     newVertexBuffer-\u0026gt;Unlock();\n                 }\n             }\n    models[0]-\u0026gt;GetGeometry(0,0)-\u0026gt;SetVertexBuffer(0,newVertexBuffer);\n    scene_-\u0026gt;AddChild(bufNode);\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eStill not rendering anything.\u003c/p\u003e\n\u003cp\u003eYeah for a single model that would make sense but i want to compare those values to another model, think i will try doing it on the cpu. It is only done once at scene creation.\u003c/p\u003e","post_number":11,"post_type":1,"updated_at":"2018-07-27T10:21:05.131Z","reply_count":1,"reply_to_post_number":10,"quote_count":0,"incoming_link_count":0,"reads":32,"readers_count":31,"score":11.4,"yours":false,"topic_id":4410,"topic_slug":"customgeometry-defineweights","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"reply_to_user":{"username":"cadaver","name":"Lasse Öörni","avatar_template":"/user_avatar/discourse.urho3d.io/cadaver/{size}/3_2.png"},"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":938,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":25429,"name":"","username":"simonsch","avatar_template":"/user_avatar/discourse.urho3d.io/simonsch/{size}/1319_2.png","created_at":"2018-07-27T12:24:02.629Z","cooked":"\u003cp\u003eI am stupid had some mutex lock issues on my vbo caused by incorrect brackets. It renders ‘something’ now. Will update the status asap.\u003c/p\u003e\n\u003cp\u003eUPDATE:\u003cbr\u003e\nSo finally it works i can replace the vertex buffer of the model with another vertex buffer where i add vertex colors. (For now) only red, here is the working code:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e    // Clone root node to get joint information\n    Node *bufNode = scene_a_-\u0026gt;GetChild(\"RootNode\")-\u0026gt;Clone();\n\n    // Extract the model components which store the needed vbo for redrawing\n    PODVector\u0026lt;StaticModel *\u0026gt; modelComponents{};\n    bufNode-\u0026gt;GetDerivedComponents\u0026lt;StaticModel\u0026gt;(modelComponents, true);\n    \n    // Get old vbo and ibo\n    SharedPtr\u0026lt;VertexBuffer\u0026gt; oldVertexBuffer = modelComponents[0]-\u0026gt;GetModel()-\u0026gt;GetVertexBuffers()[0];\n    SharedPtr\u0026lt;IndexBuffer\u0026gt; oldIndicesBuffer = modelComponents[0]-\u0026gt;GetModel()-\u0026gt;GetIndexBuffers()[0];\n\n    unsigned indexSize = oldIndicesBuffer-\u0026gt;GetIndexSize();\n    unsigned numIndices = oldIndicesBuffer-\u0026gt;GetIndexCount();\n    unsigned oldVertexSize = oldVertexBuffer-\u0026gt;GetVertexSize();\n    unsigned numVertices = oldVertexBuffer-\u0026gt;GetVertexCount();\n\n    // Define a new child node for drawing\n    Node *newNode = bufNode-\u0026gt;GetChild(\"output.obj\");\n    // Little offset so both models don't totally overlap\n    newNode-\u0026gt;SetPosition(Vector3(0.0, 0.0, 0.0));\n    SharedPtr\u0026lt;Model\u0026gt; newModel(new Model(context_));\n    SharedPtr\u0026lt;VertexBuffer\u0026gt; newVertexBuffer(new VertexBuffer(context_));\n    SharedPtr\u0026lt;Geometry\u0026gt; newGeometry(new Geometry(context_));\n    newVertexBuffer-\u0026gt;SetSize(numVertices,\n                             MASK_POSITION | MASK_NORMAL | MASK_COLOR | MASK_BLENDWEIGHTS |\n                             MASK_BLENDINDICES);\n    unsigned newVertexSize = newVertexBuffer-\u0026gt;GetVertexSize();\n\n    // LOCK old and new vbo for editing reading vertex data\n    unsigned char *oldVertexData = (unsigned char *) oldVertexBuffer-\u0026gt;Lock(0, numVertices);\n    unsigned char *newVertexData = (unsigned char *) newVertexBuffer-\u0026gt;Lock(0, numVertices);\n    if (oldVertexData) {\n        unsigned oldMask = oldVertexBuffer-\u0026gt;GetElementMask();\n        unsigned oldPositionOffset = oldVertexBuffer-\u0026gt;GetElementOffset(SEM_POSITION);\n        unsigned oldNormalOffset = oldVertexBuffer-\u0026gt;GetElementOffset(SEM_NORMAL);\n        unsigned oldColorOffset = oldVertexBuffer-\u0026gt;GetElementOffset(SEM_COLOR);\n        unsigned oldBlendWeightOffset = oldVertexBuffer-\u0026gt;GetElementOffset(SEM_BLENDWEIGHTS);\n        unsigned oldBlendIndicesOffset = oldVertexBuffer-\u0026gt;GetElementOffset(SEM_BLENDINDICES);\n\n        unsigned newMask = newVertexBuffer-\u0026gt;GetElementMask();\n        unsigned newPositionOffset = newVertexBuffer-\u0026gt;GetElementOffset(SEM_POSITION);\n        unsigned newNormalOffset = newVertexBuffer-\u0026gt;GetElementOffset(SEM_NORMAL);\n        unsigned newColorOffset = newVertexBuffer-\u0026gt;GetElementOffset(SEM_COLOR);\n        unsigned newBlendWeightOffset = newVertexBuffer-\u0026gt;GetElementOffset(SEM_BLENDWEIGHTS);\n        unsigned newBlendIndicesOffset = newVertexBuffer-\u0026gt;GetElementOffset(SEM_BLENDINDICES);\n\n        for (int i = 0; i \u0026lt; numVertices; i++) {\n            // Old vertex buffer data\n            unsigned char *oldVertexPos = (oldVertexData + i * oldVertexSize +\n                                           oldPositionOffset);\n            unsigned char *oldVertexNormal = (oldVertexData + i * oldVertexSize +\n                                              oldNormalOffset);\n            unsigned char *oldVertexWeights = (oldVertexData + i * oldVertexSize +\n                                               oldBlendWeightOffset);\n            unsigned char *oldVertexWeightIndices = (oldVertexData + i * oldVertexSize +\n                                                     oldBlendIndicesOffset);\n            // New vertex buffer data\n            unsigned char *newVertexPos = (newVertexData + i * newVertexSize +\n                                           newPositionOffset);\n            unsigned char *newVertexColor = (newVertexData + i * newVertexSize +\n                                           newColorOffset);\n            unsigned char *newVertexNormal = (newVertexData + i * newVertexSize +\n                                              newNormalOffset);\n            unsigned char *newVertexWeights = (newVertexData + i * newVertexSize +\n                                               newBlendWeightOffset);\n            unsigned char *newVertexWeightIndices = (newVertexData + i * newVertexSize +\n                                                     newBlendIndicesOffset);\n            if (oldMask \u0026amp; MASK_POSITION) {\n                Vector3 \u0026amp;src_pos = *reinterpret_cast\u0026lt;Vector3 *\u0026gt;( oldVertexPos );\n                Vector3 \u0026amp;target_pos = *reinterpret_cast\u0026lt;Vector3 *\u0026gt;( newVertexPos );\n                target_pos.x_ = src_pos.x_;\n                target_pos.y_ = src_pos.y_;\n                target_pos.z_ = src_pos.z_;\n            }\n            if (oldMask \u0026amp; MASK_NORMAL) {\n                Vector3 \u0026amp;src_normal = *reinterpret_cast\u0026lt;Vector3 *\u0026gt;( oldVertexNormal );\n                Vector3 \u0026amp;target_normal = *reinterpret_cast\u0026lt;Vector3 *\u0026gt;( newVertexNormal );\n                target_normal.x_ = src_normal.x_;\n                target_normal.y_ = src_normal.y_;\n                target_normal.z_ = src_normal.z_;\n            }\n            if (oldMask \u0026amp; MASK_BLENDWEIGHTS) {\n                Vector4 \u0026amp;src_weights = *reinterpret_cast\u0026lt;Vector4 *\u0026gt;( oldVertexWeights );\n                Vector4 \u0026amp;target_weights = *reinterpret_cast\u0026lt;Vector4 *\u0026gt;( newVertexWeights );\n\n                target_weights.x_ = src_weights.x_;\n                target_weights.y_ = src_weights.y_;\n                target_weights.z_ = src_weights.z_;\n                target_weights.w_ = src_weights.w_;\n            }\n            if (oldMask \u0026amp; MASK_BLENDINDICES) {\n                unsigned int \u0026amp;src_weights = *reinterpret_cast\u0026lt;unsigned int *\u0026gt;( oldVertexWeightIndices );\n                unsigned int \u0026amp;target_weights = *reinterpret_cast\u0026lt;unsigned int *\u0026gt;( newVertexWeightIndices );\n                target_weights = src_weights;\n\n            }\n            unsigned int \u0026amp;target_color = *reinterpret_cast\u0026lt;unsigned int *\u0026gt;( newVertexColor );\n            target_color = Color(1.0,0.0,0.0,1.0).ToUInt();\n        }\n    }\n    oldVertexBuffer-\u0026gt;Unlock();\n    newVertexBuffer-\u0026gt;Unlock();\n    modelComponents[0]-\u0026gt;GetModel()-\u0026gt;GetGeometry(0,0)-\u0026gt;SetVertexBuffer(0,newVertexBuffer);\n    modelComponents[0]-\u0026gt;SetMaterial(vcolmat);\n\n    scene_-\u0026gt;AddChild(scene_a_);\n    scene_-\u0026gt;AddChild(bufNode);\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eSo let us talk about weights again. I have 4 for weights and an uint for weight indices, are those indices corresponding to the models skeleton and its bones? How does the uint split into 4 indices for the for weights?\u003c/p\u003e","post_number":12,"post_type":1,"updated_at":"2018-07-27T13:05:04.419Z","reply_count":0,"reply_to_post_number":11,"quote_count":0,"incoming_link_count":0,"reads":29,"readers_count":28,"score":5.8,"yours":false,"topic_id":4410,"topic_slug":"customgeometry-defineweights","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":2,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"reply_to_user":{"username":"simonsch","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/simonsch/{size}/1319_2.png"},"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":938,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":25432,"name":"Lasse Öörni","username":"cadaver","avatar_template":"/user_avatar/discourse.urho3d.io/cadaver/{size}/3_2.png","created_at":"2018-07-27T13:30:26.339Z","cooked":"\u003cp\u003eCheck skinning code (UpdateSkinning function) in AnimatedModel.cpp + the skinning shader transformation (GetSkinMatrix) in Transform.glsl / hlsl. In the easy case, where skeleton as a whole doesn’t go over skinning bone limit, the 8-bit indices are directly the skeleton bone indices. Otherwise they go through a per-submodel mapping.\u003c/p\u003e\n\u003cp\u003eThe lowest 8 bits (or the first byte) of the index correspond to the weight stored in the x component of the weight Vector4, the next correspond to y and so on.\u003c/p\u003e","post_number":13,"post_type":1,"updated_at":"2018-07-27T13:30:47.972Z","reply_count":2,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":0,"reads":29,"readers_count":28,"score":30.8,"yours":false,"topic_id":4410,"topic_slug":"customgeometry-defineweights","display_username":"Lasse Öörni","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":"Urho3D Author","title_is_group":false,"bookmarked":false,"actions_summary":[{"id":2,"count":1}],"moderator":false,"admin":true,"staff":true,"user_id":3,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":25459,"name":"","username":"simonsch","avatar_template":"/user_avatar/discourse.urho3d.io/simonsch/{size}/1319_2.png","created_at":"2018-07-30T08:03:04.904Z","cooked":"\u003cp\u003eJust if someone wants to know how to extract the 4 bytes from the unsigned int extracted from vbo.\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eunsigned int i1 = target_indices \u0026amp; 0x000000FF;\nunsigned int i2 = (target_indices \u0026gt;\u0026gt; 8) \u0026amp; 0x000000FF;\nunsigned int i3 = (target_indices \u0026gt;\u0026gt; 16) \u0026amp; 0x000000FF;\nunsigned int i4 = (target_indices \u0026gt;\u0026gt; 24) \u0026amp; 0x000000FF;\u003c/code\u003e\u003c/pre\u003e","post_number":14,"post_type":1,"updated_at":"2018-07-30T08:03:16.225Z","reply_count":0,"reply_to_post_number":13,"quote_count":0,"incoming_link_count":0,"reads":24,"readers_count":23,"score":19.8,"yours":false,"topic_id":4410,"topic_slug":"customgeometry-defineweights","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"reply_to_user":{"username":"cadaver","name":"Lasse Öörni","avatar_template":"/user_avatar/discourse.urho3d.io/cadaver/{size}/3_2.png"},"bookmarked":false,"actions_summary":[{"id":2,"count":1}],"moderator":false,"admin":false,"staff":false,"user_id":938,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":25461,"name":"","username":"simonsch","avatar_template":"/user_avatar/discourse.urho3d.io/simonsch/{size}/1319_2.png","created_at":"2018-07-30T12:06:24.746Z","cooked":"\u003cp\u003eI need to bother you and the community again ;).\u003c/p\u003e\n\u003cp\u003eI have the weights and their indices, now i am trying to get the bone information from the scene. Here is the Root Node:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003e    \u0026lt;node id=\"4\"\u0026gt;\n\t\t\u0026lt;attribute name=\"Is Enabled\" value=\"true\" /\u0026gt;\n\t\t\u0026lt;attribute name=\"Name\" value=\"RootNode\" /\u0026gt;\n\t\t\u0026lt;attribute name=\"Tags\" /\u0026gt;\n\t\t\u0026lt;attribute name=\"Position\" value=\"0 0 -0\" /\u0026gt;\n\t\t\u0026lt;attribute name=\"Rotation\" value=\"1 0 0 0\" /\u0026gt;\n\t\t\u0026lt;attribute name=\"Scale\" value=\"0.01 0.01 0.01\" /\u0026gt;\n\t\t\u0026lt;attribute name=\"Variables\" /\u0026gt;\n\t\t\u0026lt;node id=\"5\"\u0026gt;\n\t\t\t\u0026lt;attribute name=\"Is Enabled\" value=\"true\" /\u0026gt;\n\t\t\t\u0026lt;attribute name=\"Name\" value=\"world_offset\" /\u0026gt;\n\t\t\t\u0026lt;attribute name=\"Tags\" /\u0026gt;\n\t\t\t\u0026lt;attribute name=\"Position\" value=\"0 0 -0\" /\u0026gt;\n\t\t\t\u0026lt;attribute name=\"Rotation\" value=\"1 0 0 0\" /\u0026gt;\n\t\t\t\u0026lt;attribute name=\"Scale\" value=\"1 1 1\" /\u0026gt;\n\t\t\t\u0026lt;attribute name=\"Variables\" /\u0026gt;\n\t\t\t\u0026lt;node id=\"6\"\u0026gt;\n\t\t\t\t\u0026lt;attribute name=\"Is Enabled\" value=\"true\" /\u0026gt;\n\t\t\t\t\u0026lt;attribute name=\"Name\" value=\"base\" /\u0026gt;\n\t\t\t\t\u0026lt;attribute name=\"Tags\" /\u0026gt;\n\t\t\t\t\u0026lt;attribute name=\"Position\" value=\"0.010468 0.883459 -0.008136\" /\u0026gt;\n\t\t\t\t\u0026lt;attribute name=\"Rotation\" value=\"1 0 0 0\" /\u0026gt;\n\t\t\t\t\u0026lt;attribute name=\"Scale\" value=\"1 1 1\" /\u0026gt;\n\t\t\t\t\u0026lt;attribute name=\"Variables\" /\u0026gt;\n\t\t\t\t\u0026lt;node id=\"7\"\u0026gt;\n\t\t\t\t\t\u0026lt;attribute name=\"Is Enabled\" value=\"true\" /\u0026gt;\n\t\t\t\t\t\u0026lt;attribute name=\"Name\" value=\"spine1\" /\u0026gt;\n\t\t\t\t\t\u0026lt;attribute name=\"Tags\" /\u0026gt;\n\t\t\t\t\t\u0026lt;attribute name=\"Position\" value=\"-0.000507 0.179195 0.015135\" /\u0026gt;\n\t\t\t\t\t\u0026lt;attribute name=\"Rotation\" value=\"1 0 0 0\" /\u0026gt;\n\t\t\t\t\t\u0026lt;attribute name=\"Scale\" value=\"1 1 1\" /\u0026gt;\n\t\t\t\t\t\u0026lt;attribute name=\"Variables\" /\u0026gt;\n\t\t\t\t\t\u0026lt;node id=\"8\"\u0026gt;\n\t\t\t\t\t\t\u0026lt;attribute name=\"Is Enabled\" value=\"true\" /\u0026gt;\n\t\t\t\t\t\t\u0026lt;attribute name=\"Name\" value=\"spine2\" /\u0026gt;\n\t\t\t\t\t\t\u0026lt;attribute name=\"Tags\" /\u0026gt;\n\t\t\t\t\t\t\u0026lt;attribute name=\"Position\" value=\"-6.3e-05 0.144263 0.002484\" /\u0026gt;\n\t\t\t\t\t\t\u0026lt;attribute name=\"Rotation\" value=\"1 0 0 0\" /\u0026gt;\n\t\t\t\t\t\t\u0026lt;attribute name=\"Scale\" value=\"1 1 1\" /\u0026gt;\n\t\t\t\t\t\t\u0026lt;attribute name=\"Variables\" /\u0026gt;\n\t\t\t\t\t\t\u0026lt;node id=\"9\"\u0026gt;\n\t\t\t\t\t\t\t\u0026lt;attribute name=\"Is Enabled\" value=\"true\" /\u0026gt;\n\t\t\t\t\t\t\t\u0026lt;attribute name=\"Name\" value=\"spine3\" /\u0026gt;\n\t\t\t\t\t\t\t\u0026lt;attribute name=\"Tags\" /\u0026gt;\n\t\t\t\t\t\t\t\u0026lt;attribute name=\"Position\" value=\"-0.003294 0.206917 0.022406\" /\u0026gt;\n\t\t\t\t\t\t\t\u0026lt;attribute name=\"Rotation\" value=\"1 0 0 0\" /\u0026gt;\n\t\t\t\t\t\t\t\u0026lt;attribute name=\"Scale\" value=\"1 1 1\" /\u0026gt;\n\t\t\t\t\t\t\t\u0026lt;attribute name=\"Variables\" /\u0026gt;\n\t\t\t\t\t\t\t\u0026lt;node id=\"10\"\u0026gt;\n\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Is Enabled\" value=\"true\" /\u0026gt;\n\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Name\" value=\"spine4\" /\u0026gt;\n\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Tags\" /\u0026gt;\n\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Position\" value=\"-0.010595 0.112027 -0.018882\" /\u0026gt;\n\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Rotation\" value=\"1 0 0 0\" /\u0026gt;\n\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Scale\" value=\"1 1 1\" /\u0026gt;\n\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Variables\" /\u0026gt;\n\t\t\t\t\t\t\t\t\u0026lt;node id=\"11\"\u0026gt;\n\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Is Enabled\" value=\"true\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Name\" value=\"spine5\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Tags\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Position\" value=\"-0.000212 0.034025 -0.001683\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Rotation\" value=\"1 0 0 0\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Scale\" value=\"1 1 1\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Variables\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\u0026lt;node id=\"12\"\u0026gt;\n\t\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Is Enabled\" value=\"true\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Name\" value=\"skullbase\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Tags\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Position\" value=\"-0.005587 0.065566 -0.009266\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Rotation\" value=\"1 0 0 0\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Scale\" value=\"1 1 1\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Variables\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\t\u0026lt;node id=\"13\"\u0026gt;\n\t\t\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Is Enabled\" value=\"true\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Name\" value=\"head\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Tags\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Position\" value=\"-0.003432 0.063759 -0.005846\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Rotation\" value=\"1 0 0 0\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Scale\" value=\"1 1 1\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Variables\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\t\u0026lt;/node\u0026gt;\n\t\t\t\t\t\t\t\t\t\u0026lt;/node\u0026gt;\n\t\t\t\t\t\t\t\t\u0026lt;/node\u0026gt;\n\t\t\t\t\t\t\t\u0026lt;/node\u0026gt;\n\t\t\t\t\t\t\t\u0026lt;node id=\"14\"\u0026gt;\n\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Is Enabled\" value=\"true\" /\u0026gt;\n\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Name\" value=\"r_shoulder\" /\u0026gt;\n\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Tags\" /\u0026gt;\n\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Position\" value=\"-0.1955 -0.047464 0.045533\" /\u0026gt;\n\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Rotation\" value=\"0.998081 0.0525232 -0.0219416 0.0243751\" /\u0026gt;\n\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Scale\" value=\"1 1 1\" /\u0026gt;\n\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Variables\" /\u0026gt;\n\t\t\t\t\t\t\t\t\u0026lt;node id=\"15\"\u0026gt;\n\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Is Enabled\" value=\"true\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Name\" value=\"r_elbow\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Tags\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Position\" value=\"-0.117085 -0.24122 0.035155\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Rotation\" value=\"0.996067 0.0461258 -0.0196229 0.0730643\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Scale\" value=\"1 1 1\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Variables\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\u0026lt;node id=\"16\"\u0026gt;\n\t\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Is Enabled\" value=\"true\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Name\" value=\"r_wrist\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Tags\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Position\" value=\"-0.173698 -0.228774 0.048215\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Rotation\" value=\"0.986227 -0.154335 0.0435345 0.0405159\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Scale\" value=\"1 1 1\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Variables\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\t\u0026lt;node id=\"17\"\u0026gt;\n\t\t\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Is Enabled\" value=\"true\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Name\" value=\"r_hand\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Tags\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Position\" value=\"-0.019034 -0.021876 -0.048998\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Rotation\" value=\"1 -0.00034527 0 0\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Scale\" value=\"1 1 1\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Variables\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\t\u0026lt;/node\u0026gt;\n\t\t\t\t\t\t\t\t\t\u0026lt;/node\u0026gt;\n\t\t\t\t\t\t\t\t\u0026lt;/node\u0026gt;\n\t\t\t\t\t\t\t\u0026lt;/node\u0026gt;\n\t\t\t\t\t\t\t\u0026lt;node id=\"18\"\u0026gt;\n\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Is Enabled\" value=\"true\" /\u0026gt;\n\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Name\" value=\"l_shoulder\" /\u0026gt;\n\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Tags\" /\u0026gt;\n\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Position\" value=\"0.207959 -0.029926 -0.012704\" /\u0026gt;\n\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Rotation\" value=\"0.998255 -0.025097 -0.0123939 -0.0519856\" /\u0026gt;\n\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Scale\" value=\"1 1 1\" /\u0026gt;\n\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Variables\" /\u0026gt;\n\t\t\t\t\t\t\t\t\u0026lt;node id=\"19\"\u0026gt;\n\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Is Enabled\" value=\"true\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Name\" value=\"l_elbow\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Tags\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Position\" value=\"0.131096 -0.22705 -0.009158\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Rotation\" value=\"0.998264 0.0218539 0.0196249 -0.0510582\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Scale\" value=\"1 1 1\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Variables\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\u0026lt;node id=\"20\"\u0026gt;\n\t\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Is Enabled\" value=\"true\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Name\" value=\"l_wrist\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Tags\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Position\" value=\"0.167438 -0.226738 -0.015483\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Rotation\" value=\"0.998184 0.0328593 0.0485305 -0.0139181\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Scale\" value=\"1 1 1\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Variables\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\t\u0026lt;node id=\"21\"\u0026gt;\n\t\t\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Is Enabled\" value=\"true\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Name\" value=\"l_hand\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Tags\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Position\" value=\"0.029413 -0.037956 -0.062907\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Rotation\" value=\"1 -0.00034527 0 0\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Scale\" value=\"1 1 1\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Variables\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\t\u0026lt;/node\u0026gt;\n\t\t\t\t\t\t\t\t\t\u0026lt;/node\u0026gt;\n\t\t\t\t\t\t\t\t\u0026lt;/node\u0026gt;\n\t\t\t\t\t\t\t\u0026lt;/node\u0026gt;\n\t\t\t\t\t\t\u0026lt;/node\u0026gt;\n\t\t\t\t\t\u0026lt;/node\u0026gt;\n\t\t\t\t\u0026lt;/node\u0026gt;\n\t\t\t\t\u0026lt;node id=\"22\"\u0026gt;\n\t\t\t\t\t\u0026lt;attribute name=\"Is Enabled\" value=\"true\" /\u0026gt;\n\t\t\t\t\t\u0026lt;attribute name=\"Name\" value=\"r_hip\" /\u0026gt;\n\t\t\t\t\t\u0026lt;attribute name=\"Tags\" /\u0026gt;\n\t\t\t\t\t\u0026lt;attribute name=\"Position\" value=\"-0.094009 0.00271 1e-05\" /\u0026gt;\n\t\t\t\t\t\u0026lt;attribute name=\"Rotation\" value=\"0.999917 -0.0125657 0.00120387 0.00274575\" /\u0026gt;\n\t\t\t\t\t\u0026lt;attribute name=\"Scale\" value=\"1 1 1\" /\u0026gt;\n\t\t\t\t\t\u0026lt;attribute name=\"Variables\" /\u0026gt;\n\t\t\t\t\t\u0026lt;node id=\"23\"\u0026gt;\n\t\t\t\t\t\t\u0026lt;attribute name=\"Is Enabled\" value=\"true\" /\u0026gt;\n\t\t\t\t\t\t\u0026lt;attribute name=\"Name\" value=\"r_knee\" /\u0026gt;\n\t\t\t\t\t\t\u0026lt;attribute name=\"Tags\" /\u0026gt;\n\t\t\t\t\t\t\u0026lt;attribute name=\"Position\" value=\"-0.026486 -0.404262 0.056034\" /\u0026gt;\n\t\t\t\t\t\t\u0026lt;attribute name=\"Rotation\" value=\"0.999748 0.0218696 -0.00155574 0.00483476\" /\u0026gt;\n\t\t\t\t\t\t\u0026lt;attribute name=\"Scale\" value=\"1 1 1\" /\u0026gt;\n\t\t\t\t\t\t\u0026lt;attribute name=\"Variables\" /\u0026gt;\n\t\t\t\t\t\t\u0026lt;node id=\"24\"\u0026gt;\n\t\t\t\t\t\t\t\u0026lt;attribute name=\"Is Enabled\" value=\"true\" /\u0026gt;\n\t\t\t\t\t\t\t\u0026lt;attribute name=\"Name\" value=\"r_ankle\" /\u0026gt;\n\t\t\t\t\t\t\t\u0026lt;attribute name=\"Tags\" /\u0026gt;\n\t\t\t\t\t\t\t\u0026lt;attribute name=\"Position\" value=\"-0.029707 -0.43241 -0.004766\" /\u0026gt;\n\t\t\t\t\t\t\t\u0026lt;attribute name=\"Rotation\" value=\"0.994716 -0.0682225 0.0767137 -0.000671012\" /\u0026gt;\n\t\t\t\t\t\t\t\u0026lt;attribute name=\"Scale\" value=\"1 1 1\" /\u0026gt;\n\t\t\t\t\t\t\t\u0026lt;attribute name=\"Variables\" /\u0026gt;\n\t\t\t\t\t\t\t\u0026lt;node id=\"25\"\u0026gt;\n\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Is Enabled\" value=\"true\" /\u0026gt;\n\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Name\" value=\"r_forefoot\" /\u0026gt;\n\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Tags\" /\u0026gt;\n\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Position\" value=\"-0.039961 -0.036539 -0.114447\" /\u0026gt;\n\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Rotation\" value=\"1 0 0 0\" /\u0026gt;\n\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Scale\" value=\"1 1 1\" /\u0026gt;\n\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Variables\" /\u0026gt;\n\t\t\t\t\t\t\t\t\u0026lt;node id=\"26\"\u0026gt;\n\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Is Enabled\" value=\"true\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Name\" value=\"r_toe\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Tags\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Position\" value=\"-0.002013 3.9e-05 -0.059707\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Rotation\" value=\"1 0 0 0\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Scale\" value=\"1 1 1\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Variables\" /\u0026gt;\n\t\t\t\t\t\t\t\t\u0026lt;/node\u0026gt;\n\t\t\t\t\t\t\t\u0026lt;/node\u0026gt;\n\t\t\t\t\t\t\u0026lt;/node\u0026gt;\n\t\t\t\t\t\u0026lt;/node\u0026gt;\n\t\t\t\t\u0026lt;/node\u0026gt;\n\t\t\t\t\u0026lt;node id=\"27\"\u0026gt;\n\t\t\t\t\t\u0026lt;attribute name=\"Is Enabled\" value=\"true\" /\u0026gt;\n\t\t\t\t\t\u0026lt;attribute name=\"Name\" value=\"l_hip\" /\u0026gt;\n\t\t\t\t\t\u0026lt;attribute name=\"Tags\" /\u0026gt;\n\t\t\t\t\t\u0026lt;attribute name=\"Position\" value=\"0.094852 -0.010535 -0.00648\" /\u0026gt;\n\t\t\t\t\t\u0026lt;attribute name=\"Rotation\" value=\"0.998716 -0.0150379 -0.00910026 -0.0475184\" /\u0026gt;\n\t\t\t\t\t\u0026lt;attribute name=\"Scale\" value=\"1 1 1\" /\u0026gt;\n\t\t\t\t\t\u0026lt;attribute name=\"Variables\" /\u0026gt;\n\t\t\t\t\t\u0026lt;node id=\"28\"\u0026gt;\n\t\t\t\t\t\t\u0026lt;attribute name=\"Is Enabled\" value=\"true\" /\u0026gt;\n\t\t\t\t\t\t\u0026lt;attribute name=\"Name\" value=\"l_knee\" /\u0026gt;\n\t\t\t\t\t\t\u0026lt;attribute name=\"Tags\" /\u0026gt;\n\t\t\t\t\t\t\u0026lt;attribute name=\"Position\" value=\"0.058439 -0.390751 0.056339\" /\u0026gt;\n\t\t\t\t\t\t\u0026lt;attribute name=\"Rotation\" value=\"0.99998 -0.00315468 -0.000490237 0.0055404\" /\u0026gt;\n\t\t\t\t\t\t\u0026lt;attribute name=\"Scale\" value=\"1 1 1\" /\u0026gt;\n\t\t\t\t\t\t\u0026lt;attribute name=\"Variables\" /\u0026gt;\n\t\t\t\t\t\t\u0026lt;node id=\"29\"\u0026gt;\n\t\t\t\t\t\t\t\u0026lt;attribute name=\"Is Enabled\" value=\"true\" /\u0026gt;\n\t\t\t\t\t\t\t\u0026lt;attribute name=\"Name\" value=\"l_ankle\" /\u0026gt;\n\t\t\t\t\t\t\t\u0026lt;attribute name=\"Tags\" /\u0026gt;\n\t\t\t\t\t\t\t\u0026lt;attribute name=\"Position\" value=\"0.042653 -0.429339 -0.013703\" /\u0026gt;\n\t\t\t\t\t\t\t\u0026lt;attribute name=\"Rotation\" value=\"0.992421 -0.0870902 -0.0855505 -0.0140242\" /\u0026gt;\n\t\t\t\t\t\t\t\u0026lt;attribute name=\"Scale\" value=\"1 1 1\" /\u0026gt;\n\t\t\t\t\t\t\t\u0026lt;attribute name=\"Variables\" /\u0026gt;\n\t\t\t\t\t\t\t\u0026lt;node id=\"30\"\u0026gt;\n\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Is Enabled\" value=\"true\" /\u0026gt;\n\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Name\" value=\"l_forefoot\" /\u0026gt;\n\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Tags\" /\u0026gt;\n\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Position\" value=\"0.050877 -0.031824 -0.121819\" /\u0026gt;\n\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Rotation\" value=\"1 0 0 0\" /\u0026gt;\n\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Scale\" value=\"1 1 1\" /\u0026gt;\n\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Variables\" /\u0026gt;\n\t\t\t\t\t\t\t\t\u0026lt;node id=\"31\"\u0026gt;\n\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Is Enabled\" value=\"true\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Name\" value=\"l_toe\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Tags\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Position\" value=\"-0.000362 0.001208 -0.06159\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Rotation\" value=\"1 0 0 0\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Scale\" value=\"1 1 1\" /\u0026gt;\n\t\t\t\t\t\t\t\t\t\u0026lt;attribute name=\"Variables\" /\u0026gt;\n\t\t\t\t\t\t\t\t\u0026lt;/node\u0026gt;\n\t\t\t\t\t\t\t\u0026lt;/node\u0026gt;\n\t\t\t\t\t\t\u0026lt;/node\u0026gt;\n\t\t\t\t\t\u0026lt;/node\u0026gt;\n\t\t\t\t\u0026lt;/node\u0026gt;\n\t\t\t\u0026lt;/node\u0026gt;\n\t\t\u0026lt;/node\u0026gt;\n\t\t\u0026lt;node id=\"32\"\u0026gt;\n\t\t\t\u0026lt;attribute name=\"Is Enabled\" value=\"true\" /\u0026gt;\n\t\t\t\u0026lt;attribute name=\"Name\" value=\"model\" /\u0026gt;\n\t\t\t\u0026lt;attribute name=\"Tags\" /\u0026gt;\n\t\t\t\u0026lt;attribute name=\"Position\" value=\"0 0 -0\" /\u0026gt;\n\t\t\t\u0026lt;attribute name=\"Rotation\" value=\"1 0 0 0\" /\u0026gt;\n\t\t\t\u0026lt;attribute name=\"Scale\" value=\"1 1 1\" /\u0026gt;\n\t\t\t\u0026lt;attribute name=\"Variables\" /\u0026gt;\n\t\t\t\u0026lt;component type=\"AnimatedModel\" id=\"6\"\u0026gt;\n\t\t\t\t\u0026lt;attribute name=\"Model\" value=\"Model;Models/model.mdl\" /\u0026gt;\n\t\t\t\t\u0026lt;attribute name=\"Material\" value=\"Material;Materials/noname.xml\" /\u0026gt;\n\t\t\t\t\u0026lt;attribute name=\"Animation States\"\u0026gt;\n\t\t\t\t\t\u0026lt;variant type=\"Int\" value=\"0\" /\u0026gt;\n\t\t\t\t\u0026lt;/attribute\u0026gt;\n\t\t\t\u0026lt;/component\u0026gt;\n\t\t\u0026lt;/node\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eSo how i can get the joint information of those nodes? I tried\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003e        Node *bufNode = scene_a_-\u0026gt;GetChild(\"RootNode\")-\u0026gt;Clone();\n        bufNode-\u0026gt;GetDerivedComponents\u0026lt;StaticModel\u0026gt;(modelComponents, true);\n        bufNode-\u0026gt;GetComponent\u0026lt;StaticModel\u0026gt;()-\u0026gt;GetModel()-\u0026gt;GetSkeleton();\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eBut the bones are empty and have no transformation information. My second approach was\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003eVector\u0026lt;SharedPtr\u0026lt;Node\u0026gt; \u0026gt; bones = bufNode-\u0026gt;GetChild(\"world_offset\")-\u0026gt;GetChildren(true);\n        skinningMatrices.resize(bones.Size());\n        skinningMatrices.push_back(bufNode-\u0026gt;GetChild(\"world_offset\")-\u0026gt;GetWorldTransform());\n        for(int i = 0; i \u0026lt; bones.Size(); i++){\n            Matrix3x4 skinMat = bones[i]-\u0026gt;GetWorldTransform();\n            skinningMatrices.push_back(skinMat);\n        }\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eWhich leads to weird model morphing.\u003c/p\u003e\n\u003cp\u003eEDIT 2.0:\u003cbr\u003e\nWas wrong i just had the world transformation of my parent node in each bone. So the following code was not working.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003e    Vector\u0026lt;Bone\u0026gt; sk = animatedModel-\u0026gt;GetModel()-\u0026gt;GetSkeleton().GetBones();\n        for(int i = 0; i \u0026lt; sk.Size(); i++){\n            if(sk[i].node_)\n                Matrix3x4 skinMat = sk[i].node_-\u0026gt;GetWorldTransform();\n            Matrix3x4 skinMat = bufNode-\u0026gt;GetWorldTransform();\n            skinningMatrices.push_back(skinMat);\n        }\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThe checking if the node exists makes the code runnable but the Skeleton from the \u003ccode\u003eAnimatedModel\u003c/code\u003e seems not to refer to the scene nodes.\u003c/p\u003e","post_number":15,"post_type":1,"updated_at":"2018-07-30T16:43:49.020Z","reply_count":0,"reply_to_post_number":13,"quote_count":0,"incoming_link_count":0,"reads":24,"readers_count":23,"score":4.8,"yours":false,"topic_id":4410,"topic_slug":"customgeometry-defineweights","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":4,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"reply_to_user":{"username":"cadaver","name":"Lasse Öörni","avatar_template":"/user_avatar/discourse.urho3d.io/cadaver/{size}/3_2.png"},"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":938,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false}],"stream":[25400,25401,25406,25416,25417,25418,25419,25420,25421,25422,25423,25429,25432,25459,25461]},"timeline_lookup":[[1,1581],[3,1580],[14,1577]],"suggested_topics":[{"id":7112,"title":"What is the proper way to add more source files(.cpp and .h) to a project?","fancy_title":"What is the proper way to add more source files(.cpp and .h) to a project?","slug":"what-is-the-proper-way-to-add-more-source-files-cpp-and-h-to-a-project","posts_count":3,"reply_count":1,"highest_post_number":3,"image_url":null,"created_at":"2021-12-27T18:18:21.946Z","last_posted_at":"2021-12-28T12:19:43.514Z","bumped":true,"bumped_at":"2021-12-28T12:19:43.514Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":0,"views":195,"category_id":10,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":1498,"username":"Tryout","name":null,"avatar_template":"https://avatars.discourse-cdn.com/v4/letter/t/85f322/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":628,"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}}]},{"id":7123,"title":"Character hitboxes","fancy_title":"Character hitboxes","slug":"character-hitboxes","posts_count":24,"reply_count":16,"highest_post_number":24,"image_url":null,"created_at":"2022-01-10T19:34:24.617Z","last_posted_at":"2022-01-12T22:44:20.744Z","bumped":true,"bumped_at":"2022-01-12T22:44:20.744Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":0,"views":275,"category_id":10,"featured_link":null,"has_accepted_answer":true,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":861,"username":"GodMan","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/g/e79b87/{size}.png"}},{"extras":null,"description":"Frequent Poster, Accepted Answer","user":{"id":192,"username":"Modanung","name":"魔大农 𝞍𝞎𝝳 現招蜍","avatar_template":"/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":484,"username":"Eugene","name":"Eugene Kozlov","avatar_template":"/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":628,"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":247,"username":"Dave82","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/dave82/{size}/2369_2.png"}}]},{"id":7105,"title":"Multiple Application.UI Roots?","fancy_title":"Multiple Application.UI Roots?","slug":"multiple-application-ui-roots","posts_count":3,"reply_count":1,"highest_post_number":3,"image_url":"https://global.discourse-cdn.com/standard17/uploads/urho3d/optimized/2X/7/74b10ce575f1b69fe43be4abcb07605d74a1d27c_2_1024x544.jpeg","created_at":"2021-12-20T08:55:14.707Z","last_posted_at":"2021-12-22T02:33:05.795Z","bumped":true,"bumped_at":"2021-12-22T02:33:05.795Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":0,"views":243,"category_id":10,"featured_link":null,"has_accepted_answer":true,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":1334,"username":"najak3d","name":"Brian Knox","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/n/6a8cbe/{size}.png"}},{"extras":null,"description":"Frequent Poster, Accepted Answer","user":{"id":628,"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}}]},{"id":7067,"title":"Can the latest Urho3D version be built with VS2013?","fancy_title":"Can the latest Urho3D version be built with VS2013?","slug":"can-the-latest-urho3d-version-be-built-with-vs2013","posts_count":3,"reply_count":0,"highest_post_number":3,"image_url":null,"created_at":"2021-11-25T18:00:24.336Z","last_posted_at":"2021-11-26T17:22:21.878Z","bumped":true,"bumped_at":"2021-11-26T17:22:21.878Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":0,"views":157,"category_id":10,"featured_link":null,"has_accepted_answer":true,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":861,"username":"GodMan","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/g/e79b87/{size}.png"}},{"extras":null,"description":"Frequent Poster, Accepted Answer","user":{"id":4,"username":"weitjong","name":"Yao Wei Tjong","avatar_template":"/user_avatar/discourse.urho3d.io/weitjong/{size}/4_2.png"}}]},{"id":7129,"title":"Best Model Import Pipeline as of Jan 2022?","fancy_title":"Best Model Import Pipeline as of Jan 2022?","slug":"best-model-import-pipeline-as-of-jan-2022","posts_count":7,"reply_count":0,"highest_post_number":7,"image_url":null,"created_at":"2022-01-17T09:27:23.432Z","last_posted_at":"2022-01-17T20:37:59.458Z","bumped":true,"bumped_at":"2022-01-17T20:37:59.458Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":4,"views":170,"category_id":10,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":1334,"username":"najak3d","name":"Brian Knox","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/n/6a8cbe/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":263,"username":"1vanK","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/1vank/{size}/768_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":1038,"username":"dertom","name":"Thomas Trocha","avatar_template":"/user_avatar/discourse.urho3d.io/dertom/{size}/1815_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":192,"username":"Modanung","name":"魔大农 𝞍𝞎𝝳 現招蜍","avatar_template":"/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":1165,"username":"throwawayerino","name":"Actually Permanent","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/t/da6949/{size}.png"}}]}],"tags_descriptions":{},"id":4410,"title":"CustomGeometry - DefineWeights","fancy_title":"CustomGeometry - DefineWeights","posts_count":15,"created_at":"2018-07-26T13:29:02.418Z","views":640,"reply_count":9,"like_count":2,"last_posted_at":"2018-07-30T12:06:24.746Z","visible":true,"closed":false,"archived":false,"has_summary":false,"archetype":"regular","slug":"customgeometry-defineweights","category_id":10,"word_count":3881,"deleted_at":null,"user_id":938,"featured_link":null,"pinned_globally":false,"pinned_at":null,"pinned_until":null,"image_url":null,"slow_mode_seconds":0,"draft":null,"draft_key":"topic_4410","draft_sequence":null,"unpinned":null,"pinned":false,"current_post_number":1,"highest_post_number":15,"deleted_by":null,"actions_summary":[{"id":4,"count":0,"hidden":false,"can_act":false},{"id":8,"count":0,"hidden":false,"can_act":false},{"id":7,"count":0,"hidden":false,"can_act":false}],"chunk_size":20,"bookmarked":false,"bookmarks":[],"topic_timer":null,"message_bus_last_id":0,"participant_count":3,"show_read_indicator":false,"thumbnails":null,"slow_mode_enabled_until":null,"tags_disable_ads":false,"details":{"can_edit":false,"notification_level":1,"participants":[{"id":938,"username":"simonsch","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/simonsch/{size}/1319_2.png","post_count":9,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"trust_level":2},{"id":3,"username":"cadaver","name":"Lasse Öörni","avatar_template":"/user_avatar/discourse.urho3d.io/cadaver/{size}/3_2.png","post_count":5,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"admin":true,"trust_level":2},{"id":484,"username":"Eugene","name":"Eugene Kozlov","avatar_template":"/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png","post_count":1,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"trust_level":2}],"created_by":{"id":938,"username":"simonsch","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/simonsch/{size}/1319_2.png"},"last_poster":{"id":938,"username":"simonsch","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/simonsch/{size}/1319_2.png"}}}