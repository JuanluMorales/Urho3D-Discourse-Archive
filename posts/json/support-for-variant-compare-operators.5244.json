{"post_stream":{"posts":[{"id":30333,"name":"Leith Ketchell","username":"Leith","avatar_template":"/user_avatar/discourse.urho3d.io/leith/{size}/2384_2.png","created_at":"2019-06-22T12:43:28.762Z","cooked":"\u003cp\u003eSo far we can compare for equality / inquality of variants, given that their types match.\u003cbr\u003e\nBut we can certainly do better?\u003c/p\u003e\n\u003cp\u003eToday I started implementing a compare operator involving two variants - I offer to return the resulting compare method(s) for inclusion in the variant class itself, rather than outside it as I am being forced to do.\u003c/p\u003e\n\u003cp\u003eI don’t care if A is a float and B is an integer, I should still be able to compare them and tell which is greater or less or if they are the same.\u003c/p\u003e\n\u003cp\u003eGiven that this kind of thinking won’t work for a lot of the possible cases in Variant, it seems like a win in terms of hey, it will run relatively fast.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eCompares of most variant types won’t be supported.\u003c/li\u003e\n\u003cli\u003eCompares of any number type will be deduced using doubles.\u003c/li\u003e\n\u003cli\u003eCompares of strings will fall back to the string compare operators.\u003c/li\u003e\n\u003c/ol\u003e","post_number":1,"post_type":1,"updated_at":"2019-06-22T12:48:26.263Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":2,"reads":23,"readers_count":22,"score":14.6,"yours":false,"topic_id":5244,"topic_slug":"support-for-variant-compare-operators","display_username":"Leith Ketchell","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":"suspended user","title_is_group":false,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":1098,"hidden":false,"trust_level":1,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"user_suspended":true,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":30337,"name":"Leith Ketchell","username":"Leith","avatar_template":"/user_avatar/discourse.urho3d.io/leith/{size}/2384_2.png","created_at":"2019-06-22T13:24:47.907Z","cooked":"\u003cp\u003evoid Panic(){\u003cbr\u003e\n; // man this sucks\u003cbr\u003e\n}\u003c/p\u003e\n\u003cp\u003eVariant A(1);\u003cbr\u003e\nVariant B(2);\u003cbr\u003e\nif(A\u0026gt;B) Panic;\u003c/p\u003e\n\u003cp\u003eWe can’t\u003c/p\u003e","post_number":2,"post_type":1,"updated_at":"2019-06-22T13:25:50.058Z","reply_count":1,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":0,"reads":23,"readers_count":22,"score":9.6,"yours":false,"topic_id":5244,"topic_slug":"support-for-variant-compare-operators","display_username":"Leith Ketchell","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":"suspended user","title_is_group":false,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":1098,"hidden":false,"trust_level":1,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"user_suspended":true,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":30362,"name":"SirNate0","username":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png","created_at":"2019-06-24T06:21:51.165Z","cooked":"\u003cp\u003eI understand your goal (and I at least think it’s a good idea), but I don’t get your second post. Are you saying the initial idea wouldn’t work?\u003c/p\u003e","post_number":3,"post_type":1,"updated_at":"2019-06-24T06:21:51.165Z","reply_count":1,"reply_to_post_number":2,"quote_count":0,"incoming_link_count":0,"reads":16,"readers_count":15,"score":23.2,"yours":false,"topic_id":5244,"topic_slug":"support-for-variant-compare-operators","display_username":"SirNate0","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"reply_to_user":{"username":"Leith","name":"Leith Ketchell","avatar_template":"/user_avatar/discourse.urho3d.io/leith/{size}/2384_2.png"},"bookmarked":false,"actions_summary":[{"id":2,"count":1}],"moderator":false,"admin":false,"staff":false,"user_id":628,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":30365,"name":"Leith Ketchell","username":"Leith","avatar_template":"/user_avatar/discourse.urho3d.io/leith/{size}/2384_2.png","created_at":"2019-06-24T07:14:53.072Z","cooked":"\u003cp\u003eI’m saying that the Variant class does not support the “GreaterThan” operator, or any others, except for “Equality” - and then only when the types match exactly, not in cases where the actual types can be mapped to matching types.\u003c/p\u003e\n\u003cp\u003eAs an example of the limitations of the ONLY existing compare operator, I cannot compare a Bool with an Integer, even though we know that the true value of a Bool can only be 0 or 1.\u003c/p\u003e\n\u003cp\u003eThe following is a partial implementation of a variant compare that attempts type mapping.\u003cbr\u003e\nI stress these things: firstly, it is NOT COMPLETE, secondly, some types will NEVER be supported because they are totally incompatible, and thirdly, this implementation (currently) requires that we provide “type hints”.\u003c/p\u003e\n\u003cp\u003eComparing variants will never be case-complete nor bullet-proof, but we can definitely do better than not providing operators at all.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003e    BTNodeState VariableCompare::HandleStep(){\n\n        Urho3D::Variant vA, vB;\n                 double dA, dB;\n\n\n        switch(SourceType_A){\n            case ConditionalValueSource::Actor:\n                vA=tree_-\u0026gt;btContext_-\u0026gt;blackboard_[NameOrValue_A];\n                break;\n            case ConditionalValueSource::World:\n                vA=context_-\u0026gt;GetGlobalVar(NameOrValue_A);\n                break;\n            case ConditionalValueSource::Constant:\n                vA.FromString(ValueType_A,NameOrValue_A);\n                break;\n            default:\n                URHO3D_LOGERROR(\"Unhandled SourceType A in VariableCompare\");\n                return NS_ERROR;\n        }\n\n\n        switch(SourceType_B){\n            case ConditionalValueSource::Actor:\n                vB=tree_-\u0026gt;btContext_-\u0026gt;blackboard_[NameOrValue_B];\n                break;\n            case ConditionalValueSource::World:\n                vB=context_-\u0026gt;GetGlobalVar(NameOrValue_B);\n                break;\n            case ConditionalValueSource::Constant:\n                vB.FromString(ValueType_B,NameOrValue_B);\n                break;\n            default:\n                URHO3D_LOGERROR(\"Unhandled SourceType B in VariableCompare\");\n                return NS_ERROR;\n        }\n\n        switch(this-\u0026gt;conditionOperator_){\n            case ConditionalOperator::COND_EQUAL:\n            if(vA==vB)\n                return NS_SUCCESS;\n            else\n                return NS_FAILURE;\n            break;\n\n            case COND_GREATER:\n                double dA, dB;\n                switch(ValueType_A){\n                    case VAR_BOOL:\n                        dA=static_cast\u0026lt;double\u0026gt;(vA.GetBool());\n                        break;\n                    case VAR_FLOAT:\n                    case VAR_INT:\n                    case VAR_DOUBLE:\n                    case VAR_INT64:\n                        dA=vA.GetDouble();\n                    default:\n                        URHO3D_LOGERROR(\"Unhandled Variant Type A detected in VariableCompare node\");\n                        return NS_ERROR;\n                }\n                switch(ValueType_B){\n                    case VAR_BOOL:\n                        dB=static_cast\u0026lt;double\u0026gt;(vB.GetBool());\n                        break;\n                    case VAR_FLOAT:\n                    case VAR_INT:\n                    case VAR_DOUBLE:\n                    case VAR_INT64:\n                        dB=vB.GetDouble();\n                    default:\n                        URHO3D_LOGERROR(\"Unhandled Variant Type B detected in VariableCompare node\");\n                        return NS_ERROR;\n                }\n\n                if(dA\u0026gt;dB)\n                    return NS_SUCCESS;\n                else\n                    return NS_FAILURE;\n                break;\n\n            case (COND_GREATER | COND_EQUAL):\n                switch(ValueType_A){\n                    case VAR_BOOL:\n                        dA=static_cast\u0026lt;double\u0026gt;(vA.GetBool());\n                        break;\n                    case VAR_FLOAT:\n                    case VAR_INT:\n                    case VAR_DOUBLE:\n                    case VAR_INT64:\n                        dA=vA.GetDouble();\n                    default:\n                        URHO3D_LOGERROR(\"Unhandled Variant Type A detected in VariableCompare node\");\n                        return NS_ERROR;\n                }\n                switch(ValueType_B){\n                    case VAR_BOOL:\n                        dB=static_cast\u0026lt;double\u0026gt;(vB.GetBool());\n                        break;\n                    case VAR_FLOAT:\n                    case VAR_INT:\n                    case VAR_DOUBLE:\n                    case VAR_INT64:\n                        dB=vB.GetDouble();\n                    default:\n                        URHO3D_LOGERROR(\"Unhandled Variant Type B detected in VariableCompare node\");\n                        return NS_ERROR;\n                }\n                if(dA\u0026gt;=dB)\n                    return NS_SUCCESS;\n                else\n                    return NS_FAILURE;\n                break;\n\n            default:\n                URHO3D_LOGERROR(\"Unhandled Operator in VariableCompare\");\n                return NS_ERROR;\n        }\n    }\n\u003c/code\u003e\u003c/pre\u003e","post_number":4,"post_type":1,"updated_at":"2019-06-24T07:22:27.124Z","reply_count":0,"reply_to_post_number":3,"quote_count":0,"incoming_link_count":0,"reads":15,"readers_count":14,"score":3.0,"yours":false,"topic_id":5244,"topic_slug":"support-for-variant-compare-operators","display_username":"Leith Ketchell","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":2,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":"suspended user","title_is_group":false,"reply_to_user":{"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"},"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":1098,"hidden":false,"trust_level":1,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"user_suspended":true,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false}],"stream":[30333,30337,30362,30365]},"timeline_lookup":[[1,1250],[3,1248]],"suggested_topics":[{"id":7184,"title":"Hardware mouse cursor","fancy_title":"Hardware mouse cursor","slug":"hardware-mouse-cursor","posts_count":4,"reply_count":1,"highest_post_number":4,"image_url":null,"created_at":"2022-02-04T15:42:52.888Z","last_posted_at":"2022-02-05T04:26:17.621Z","bumped":true,"bumped_at":"2022-02-05T04:26:17.621Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":0,"views":132,"category_id":7,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":null,"description":"Original Poster","user":{"id":631,"username":"JTippetts1","name":"J Tippetts","avatar_template":"/user_avatar/discourse.urho3d.io/jtippetts1/{size}/96_2.png"}},{"extras":"latest","description":"Most Recent Poster","user":{"id":1317,"username":"Lys0gen","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/l/57b2e6/{size}.png"}}]},{"id":7330,"title":"Is it Possible to Get New Bone Positions Directly After AnimationState.AddTime() Called?","fancy_title":"Is it Possible to Get New Bone Positions Directly After AnimationState.AddTime() Called?","slug":"is-it-possible-to-get-new-bone-positions-directly-after-animationstate-addtime-called","posts_count":2,"reply_count":0,"highest_post_number":2,"image_url":null,"created_at":"2022-09-22T11:18:00.223Z","last_posted_at":"2022-09-22T13:40:17.428Z","bumped":true,"bumped_at":"2022-09-22T13:40:17.428Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":0,"views":81,"category_id":7,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest single","description":"Original Poster, Most Recent Poster","user":{"id":1456,"username":"Jens","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/j/d2c977/{size}.png"}}]},{"id":7119,"title":"How to programmatically access Morph Target in FBX file?","fancy_title":"How to programmatically access Morph Target in FBX file?","slug":"how-to-programmatically-access-morph-target-in-fbx-file","posts_count":13,"reply_count":8,"highest_post_number":13,"image_url":null,"created_at":"2022-01-03T23:01:43.070Z","last_posted_at":"2022-01-05T11:55:31.130Z","bumped":true,"bumped_at":"2022-01-05T11:55:31.130Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":1,"views":214,"category_id":16,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":null,"description":"Original Poster","user":{"id":1499,"username":"csteaderman","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/c/b487fb/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":628,"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":484,"username":"Eugene","name":"Eugene Kozlov","avatar_template":"/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png"}},{"extras":"latest","description":"Most Recent Poster","user":{"id":192,"username":"Modanung","name":"魔大农 𝞍𝞎𝝳 現招蜍","avatar_template":"/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png"}}]},{"id":7181,"title":"StaticModelGroup - Are ShaderParameters Shared?","fancy_title":"StaticModelGroup - Are ShaderParameters Shared?","slug":"staticmodelgroup-are-shaderparameters-shared","posts_count":3,"reply_count":1,"highest_post_number":3,"image_url":null,"created_at":"2022-02-02T09:31:19.658Z","last_posted_at":"2022-02-02T17:06:24.059Z","bumped":true,"bumped_at":"2022-02-02T17:06:24.059Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":2,"views":120,"category_id":10,"featured_link":null,"has_accepted_answer":true,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":1334,"username":"najak3d","name":"Brian Knox","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/n/6a8cbe/{size}.png"}},{"extras":null,"description":"Frequent Poster, Accepted Answer","user":{"id":631,"username":"JTippetts1","name":"J Tippetts","avatar_template":"/user_avatar/discourse.urho3d.io/jtippetts1/{size}/96_2.png"}}]},{"id":7112,"title":"What is the proper way to add more source files(.cpp and .h) to a project?","fancy_title":"What is the proper way to add more source files(.cpp and .h) to a project?","slug":"what-is-the-proper-way-to-add-more-source-files-cpp-and-h-to-a-project","posts_count":3,"reply_count":1,"highest_post_number":3,"image_url":null,"created_at":"2021-12-27T18:18:21.946Z","last_posted_at":"2021-12-28T12:19:43.514Z","bumped":true,"bumped_at":"2021-12-28T12:19:43.514Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":0,"views":195,"category_id":10,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":1498,"username":"Tryout","name":null,"avatar_template":"https://avatars.discourse-cdn.com/v4/letter/t/85f322/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":628,"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}}]}],"tags_descriptions":{},"id":5244,"title":"Support for Variant Compare Operators","fancy_title":"Support for Variant Compare Operators","posts_count":4,"created_at":"2019-06-22T12:43:28.708Z","views":211,"reply_count":2,"like_count":1,"last_posted_at":"2019-06-24T07:14:53.072Z","visible":true,"closed":false,"archived":false,"has_summary":false,"archetype":"regular","slug":"support-for-variant-compare-operators","category_id":7,"word_count":617,"deleted_at":null,"user_id":1098,"featured_link":null,"pinned_globally":false,"pinned_at":null,"pinned_until":null,"image_url":null,"slow_mode_seconds":0,"draft":null,"draft_key":"topic_5244","draft_sequence":null,"unpinned":null,"pinned":false,"current_post_number":1,"highest_post_number":4,"deleted_by":null,"actions_summary":[{"id":4,"count":0,"hidden":false,"can_act":false},{"id":8,"count":0,"hidden":false,"can_act":false},{"id":7,"count":0,"hidden":false,"can_act":false}],"chunk_size":20,"bookmarked":false,"bookmarks":[],"topic_timer":null,"message_bus_last_id":0,"participant_count":2,"show_read_indicator":false,"thumbnails":null,"slow_mode_enabled_until":null,"tags_disable_ads":false,"details":{"can_edit":false,"notification_level":1,"participants":[{"id":1098,"username":"Leith","name":"Leith Ketchell","avatar_template":"/user_avatar/discourse.urho3d.io/leith/{size}/2384_2.png","post_count":3,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"trust_level":1},{"id":628,"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png","post_count":1,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"trust_level":2}],"created_by":{"id":1098,"username":"Leith","name":"Leith Ketchell","avatar_template":"/user_avatar/discourse.urho3d.io/leith/{size}/2384_2.png"},"last_poster":{"id":1098,"username":"Leith","name":"Leith Ketchell","avatar_template":"/user_avatar/discourse.urho3d.io/leith/{size}/2384_2.png"}}}