{"post_stream": {"posts": [{"id": 6975, "name": "", "username": "Enhex", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png", "created_at": "2015-08-01T19:48:59.000Z", "cooked": "<p>I wanted to do a quick test to see which containers perform faster.<br>\nTried the two most common containers, vector and hash map.</p>\n<p>The test was done with Windows 7 64bit, i5-2400 processor, Visual Studio 2015.<br>\nUrho3D version 1.4.</p>\n<p><img src=\"http://puu.sh/jlEuU/ad5a15772f.png\" alt=\"\" width=\"\" height=\"\"></p>\n<p><span class=\"bbcode-b\">Code:</span> <span class=\"bbcode-i\">(warning: quick and dirty)</span><br>\n<aside class=\"onebox githubgist\">\n  <header class=\"source\">\n      <a href=\"https://gist.github.com/Enhex/9c8cf1f614267565189b\" target=\"_blank\" rel=\"nofollow noopener\">gist.github.com</a>\n  </header>\n  <article class=\"onebox-body\">\n    <h4><a href=\"https://gist.github.com/Enhex/9c8cf1f614267565189b\" target=\"_blank\" rel=\"nofollow noopener\">https://gist.github.com/Enhex/9c8cf1f614267565189b</a></h4>\n<h5>urho_vs_stdlib.cpp</h5>\n<pre><code class=\"C++\">#include &lt;chrono&gt;\n#include &lt;iostream&gt;\n\n#include &lt;vector&gt;\n#include &lt;unordered_map&gt;\n#include &lt;string&gt;\n\n#include &lt;Urho3D/Urho3D.h&gt;\n#include &lt;Urho3D/Container/Vector.h&gt;\n#include &lt;Urho3D/Container/HashMap.h&gt;</code></pre>\nThis file has been truncated. <a href=\"https://gist.github.com/Enhex/9c8cf1f614267565189b\" target=\"_blank\" rel=\"nofollow noopener\">show original</a>\n\n<p>\n</p>\n\n  </article>\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n  <div style=\"clear: both\"></div>\n</aside>\n</p>\n<p><span class=\"bbcode-b\">Conclusions:</span> <span class=\"bbcode-i\">(relative to what was tested)</span></p>\n<ul>\n<li>std::vector is faster than Urho3D::Vector.</li>\n<li>Urho3D::HashMap is faster than std::unordered_map.</li>\n<li>std::string is faster than Urho3D::String.</li>\n</ul>", "post_number": 1, "post_type": 1, "updated_at": "2017-08-30T15:27:27.313Z", "reply_count": 1, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 49, "reads": 68, "readers_count": 67, "score": 265.6, "yours": false, "topic_id": 1225, "topic_slug": "urho-vs-stdlib-small-benchmark-vs2015", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 2, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "https://gist.github.com/Enhex/9c8cf1f614267565189b", "internal": false, "reflection": false, "title": "urho_vs_stdlib.cpp \u00b7 GitHub", "clicks": 4}, {"url": "http://discourse.urho3d.io/t/coding-guidelines/3509/13", "internal": true, "reflection": true, "title": "Coding Guidelines", "clicks": 0}], "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 184, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 6976, "name": "", "username": "friesencr", "avatar_template": "/user_avatar/discourse.urho3d.io/friesencr/{size}/827_2.png", "created_at": "2015-08-01T23:23:56.000Z", "cooked": "<p>For ints you should us PODVector instead of Vector</p>", "post_number": 2, "post_type": 1, "updated_at": "2017-01-02T01:06:12.090Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 61, "readers_count": 60, "score": 12.2, "yours": false, "topic_id": 1225, "topic_slug": "urho-vs-stdlib-small-benchmark-vs2015", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Core developer", "title_is_group": false, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 15, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 6978, "name": "", "username": "Enhex", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png", "created_at": "2015-08-01T23:58:12.000Z", "cooked": "<aside class=\"quote\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/friesencr/40/827_1.png\" class=\"avatar\"> friesencr:</div>\n<blockquote>\n<p>For ints you should us PODVector instead of Vector</p>\n</blockquote>\n</aside>\n<p>Wouldn\u2019t that be comparing apples to oranges?</p>\n<p>btw would it be possible for Vector to do what PODVector does with template specialization and traits?<br>\nMaybe something like this (C++11): <a href=\"http://stackoverflow.com/questions/19154080/restricting-c-template-usage-to-pod-types\" data-bbcode=\"true\" rel=\"nofollow noopener\">http://stackoverflow.com/questions/19154080/restricting-c-template-usage-to-pod-types</a></p>", "post_number": 3, "post_type": 1, "updated_at": "2017-01-02T01:06:12.233Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 1, "incoming_link_count": 0, "reads": 61, "readers_count": 60, "score": 12.2, "yours": false, "topic_id": 1225, "topic_slug": "urho-vs-stdlib-small-benchmark-vs2015", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "http://stackoverflow.com/questions/19154080/restricting-c-template-usage-to-pod-types", "internal": false, "reflection": false, "title": "restricting c++ template usage to POD types - Stack Overflow", "clicks": 4}], "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 184, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 7003, "name": "Lasse \u00d6\u00f6rni", "username": "cadaver", "avatar_template": "/user_avatar/discourse.urho3d.io/cadaver/{size}/3_2.png", "created_at": "2015-08-03T08:19:01.000Z", "cooked": "<p>We\u2019ll still have to be a bit careful of C++11 only features. But for now, friesencr is right, PODVector should be used for ints for best performance. This can also be abused for non-POD types if the constructor/destructor don\u2019t do anything vital.</p>", "post_number": 4, "post_type": 1, "updated_at": "2017-01-02T01:06:14.065Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 59, "readers_count": 58, "score": 11.8, "yours": false, "topic_id": 1225, "topic_slug": "urho-vs-stdlib-small-benchmark-vs2015", "display_username": "Lasse \u00d6\u00f6rni", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Urho3D Author", "title_is_group": false, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": true, "staff": true, "user_id": 3, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 7016, "name": "", "username": "Enhex", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png", "created_at": "2015-08-03T14:35:49.000Z", "cooked": "<aside class=\"quote\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/cadaver/40/3_1.png\" class=\"avatar\"> cadaver:</div>\n<blockquote>\n<p>We\u2019ll still have to be a bit careful of C++11 only features. But for now, friesencr is right, PODVector should be used for ints for best performance. This can also be abused for non-POD types if the constructor/destructor don\u2019t do anything vital.</p>\n</blockquote>\n</aside>\n<p>Why the need to be careful with C++11 ?</p>", "post_number": 5, "post_type": 1, "updated_at": "2017-01-02T01:06:14.986Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 1, "incoming_link_count": 0, "reads": 55, "readers_count": 54, "score": 11.0, "yours": false, "topic_id": 1225, "topic_slug": "urho-vs-stdlib-small-benchmark-vs2015", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 184, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 7027, "name": "Lasse \u00d6\u00f6rni", "username": "cadaver", "avatar_template": "/user_avatar/discourse.urho3d.io/cadaver/{size}/3_2.png", "created_at": "2015-08-04T07:05:28.000Z", "cooked": "<p>On VS side that means upgrading to post-VS2010 versions, which can be argued to be more bloated than the previous, and don\u2019t support compiling for old OS versions (there may be some niche use of Urho like using an old VS version such as 2008 to compile for Win2000 / XP)</p>\n<p>Though I\u2019ve been using VS2013 quite exclusively for some time and personally am happy with it.</p>", "post_number": 6, "post_type": 1, "updated_at": "2017-01-02T01:06:15.787Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 51, "readers_count": 50, "score": 10.2, "yours": false, "topic_id": 1225, "topic_slug": "urho-vs-stdlib-small-benchmark-vs2015", "display_username": "Lasse \u00d6\u00f6rni", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Urho3D Author", "title_is_group": false, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": true, "staff": true, "user_id": 3, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 7029, "name": "", "username": "Enhex", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png", "created_at": "2015-08-04T12:17:44.000Z", "cooked": "<p>[quote=\u201ccadaver\u201d]On VS side that means upgrading to post-VS2010 versions, which can be argued to be more bloated than the previous, and don\u2019t support compiling for old OS versions (there may be some niche use of Urho like using an old VS version such as 2008 to compile for Win2000 / XP)</p>\n<p>Though I\u2019ve been using VS2013 quite exclusively for some time and personally am happy with it.[/quote]</p>\n<p>To me it seems like a huge sacrifice to hold back to be compatible with outdated software.<br>\nAFAIK VS2015 support at least down to win XP.</p>", "post_number": 7, "post_type": 1, "updated_at": "2017-01-02T01:06:15.920Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 1, "incoming_link_count": 0, "reads": 48, "readers_count": 47, "score": 9.6, "yours": false, "topic_id": 1225, "topic_slug": "urho-vs-stdlib-small-benchmark-vs2015", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 184, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 7031, "name": "Lasse \u00d6\u00f6rni", "username": "cadaver", "avatar_template": "/user_avatar/discourse.urho3d.io/cadaver/{size}/3_2.png", "created_at": "2015-08-04T12:44:39.000Z", "cooked": "<p>You can also go the other way around and ask what are the absolute vital reasons/features (not just convenience) for the engine/library itself to go for c++11? Bear in mind, you can always choose to use c++11 in your application code.</p>\n<p>If interested, here\u2019s the c++11 discussion for Ogre: <a href=\"http://www.ogre3d.org/forums/viewtopic.php?f=4&amp;t=80319\">ogre3d.org/forums/viewtopic.php?f=4&amp;t=80319</a></p>", "post_number": 8, "post_type": 1, "updated_at": "2017-01-02T01:06:16.088Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 48, "readers_count": 47, "score": 9.6, "yours": false, "topic_id": 1225, "topic_slug": "urho-vs-stdlib-small-benchmark-vs2015", "display_username": "Lasse \u00d6\u00f6rni", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "http://www.ogre3d.org/forums/viewtopic.php?f=4&t=80319", "internal": false, "reflection": false, "title": "Ogre Forums \u2022 View topic - C++11 Adoption stance", "clicks": 3}], "read": true, "user_title": "Urho3D Author", "title_is_group": false, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": true, "staff": true, "user_id": 3, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 7033, "name": "", "username": "jenge", "avatar_template": "/user_avatar/discourse.urho3d.io/jenge/{size}/88_2.png", "created_at": "2015-08-04T16:13:52.000Z", "cooked": "<p>I very much like that Urho3D is clean of C++11 constructs.  Nothing is keeping me from using VS2015.  We do have C++11 enabled for some ThirdParty libraries that use it very minimally.  There are also compilers on various platforms that do not support C++11.</p>", "post_number": 9, "post_type": 1, "updated_at": "2017-01-02T01:06:16.236Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 45, "readers_count": 44, "score": 9.0, "yours": false, "topic_id": 1225, "topic_slug": "urho-vs-stdlib-small-benchmark-vs2015", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 81, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 7037, "name": "", "username": "Enhex", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png", "created_at": "2015-08-04T17:07:05.000Z", "cooked": "<p>[quote=\u201ccadaver\u201d]You can also go the other way around and ask what are the absolute vital reasons/features (not just convenience) for the engine/library itself to go for c++11? Bear in mind, you can always choose to use c++11 in your application code.</p>\n<p>If interested, here\u2019s the c++11 discussion for Ogre: <a href=\"http://www.ogre3d.org/forums/viewtopic.php?f=4&amp;t=80319\" rel=\"nofollow noopener\">ogre3d.org/forums/viewtopic.php?f=4&amp;t=80319</a>[/quote]</p>\n<p>Looks like their reasoning is mainly based on ignorance and social proof. I also posted a reply there about the \u201cauto is evil\u201d nonsense.<br>\nAlso the argument that C++'s stdlib somehow de-matured also doesn\u2019t make sense.</p>\n<p>While looking for reasons is important, \u201cabsolute vital\u201d sounds like an attempt to invalidate any reason.<br>\nWhat are the \u201cabsolute vital\u201d reasons for C++ over C? What are the ones of C over ASM?<br>\nThe \u201cabsolutely vital\u201d condition doesn\u2019t make sense! Nothing is \u201cabsolutely vital\u201d if you can get the job done. With that line of reasoning we\u2019ll be still using punch cards.</p>\n<p>C++11 have features that can make code shorter, easier to read and understand, easier to maintain, and faster. What else is there to ask for?<br>\nThe discussion about C++ was started by how it can boost the performance of the most commonly used container by nearly 50%. (saying \u201cuse PODVector\u201d is like saying \u201cUse array\u201d or something else with non-matching functionality)<br>\nAlso VS2015 have great debugging tools: <a href=\"https://www.youtube.com/watch?v=NVCSuzFPzEM\" data-bbcode=\"true\" rel=\"nofollow noopener\">https://www.youtube.com/watch?v=NVCSuzFPzEM</a></p>\n<p>The only reason so far is backward compatibility with outdated compilers. Even then, how do you draw the line for how backward compatible it is? C++98? C++85?<br>\nOf course that full backward compatibility doesn\u2019t make any sense. A good heuristic is to be as advanced as possible while supporting the majority of the users.<br>\nBoth <a href=\"https://www.visualstudio.com/en-us/products/visual-studio-2013-compatibility-vs.aspx\" data-bbcode=\"true\" rel=\"nofollow noopener\">vs2013</a> and <a href=\"https://www.visualstudio.com/en-us/products/visual-studio-2015-compatibility-vs.aspx\" data-bbcode=\"true\" rel=\"nofollow noopener\">vs2015</a> are backward compatible down to win XP. And I don\u2019t think there are that many people who still use some 15+ years old version of windows.</p>\n<p>Sorry about the rant, it\u2019s just irrational to me and I had to let it out.</p>", "post_number": 10, "post_type": 1, "updated_at": "2017-01-02T01:06:16.539Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 1, "incoming_link_count": 0, "reads": 48, "readers_count": 47, "score": 9.6, "yours": false, "topic_id": 1225, "topic_slug": "urho-vs-stdlib-small-benchmark-vs2015", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "http://www.ogre3d.org/forums/viewtopic.php?f=4&t=80319", "internal": false, "reflection": false, "title": "C++11 Adoption stance - Ogre Forums", "clicks": 1}, {"url": "https://www.youtube.com/watch?v=NVCSuzFPzEM", "internal": false, "reflection": false, "title": "Debugging Performance Issues Using Visual Studio 2015 - YouTube", "clicks": 0}, {"url": "https://www.visualstudio.com/en-us/products/visual-studio-2015-compatibility-vs.aspx", "internal": false, "reflection": false, "title": "Visual Studio 2015 Compatibility", "clicks": 0}, {"url": "https://www.visualstudio.com/en-us/products/visual-studio-2013-compatibility-vs.aspx", "internal": false, "reflection": false, "clicks": 0}], "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 184, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 7038, "name": "Lasse \u00d6\u00f6rni", "username": "cadaver", "avatar_template": "/user_avatar/discourse.urho3d.io/cadaver/{size}/3_2.png", "created_at": "2015-08-04T17:37:12.000Z", "cooked": "<p>I realize it\u2019s a rant, but if we\u2019re being serious, the difference between C &amp; C++ is quite a large feature cutoff for large software such as Urho3D that could be considered \u201cabsolutely vital\u201d for sanity, if not anything else.</p>\n<p>Projects have to prioritize themselves differently, I can well understand if for some being modern in their language usage takes high priority. I believe the worst part of Urho not using C++11 is that project contributors don\u2019t get to exercise their skills in the new language features.</p>", "post_number": 11, "post_type": 1, "updated_at": "2017-01-02T01:06:16.637Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 44, "readers_count": 43, "score": 8.8, "yours": false, "topic_id": 1225, "topic_slug": "urho-vs-stdlib-small-benchmark-vs2015", "display_username": "Lasse \u00d6\u00f6rni", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Urho3D Author", "title_is_group": false, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": true, "staff": true, "user_id": 3, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 7047, "name": "", "username": "friesencr", "avatar_template": "/user_avatar/discourse.urho3d.io/friesencr/{size}/827_2.png", "created_at": "2015-08-04T21:22:05.000Z", "cooked": "<p>I hear the Magnum game engine author trip over new c++ feature bugs all the time.  Often on exotic platforms.  They are hard to detect sometimes.</p>\n<p>I am a light contributor.  I do not know c/c++ well.  I believe also that the style that Urho is written in semantically  represents the problem it is trying to solve well.  As someone who does not know c++ well the more modest use of c++ features actually allows me to learn how to code better, faster.  Through implementing my current project I have learned a great deal about pointer arithmetic and data.</p>", "post_number": 12, "post_type": 1, "updated_at": "2017-01-02T01:06:17.262Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 45, "readers_count": 44, "score": 9.0, "yours": false, "topic_id": 1225, "topic_slug": "urho-vs-stdlib-small-benchmark-vs2015", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Core developer", "title_is_group": false, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 15, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 7049, "name": "", "username": "sabotage3d", "avatar_template": "/user_avatar/discourse.urho3d.io/sabotage3d/{size}/87_2.png", "created_at": "2015-08-04T23:12:24.000Z", "cooked": "<p>I think a game engine should be generic as possible and let the user handle anything more specific. SDL2 is one of Urho\u2019s third-party libraries and it is written in C, it is used everywhere and it is extremely portable. But I am thumbs up for faster containers <img src=\"https://emoji.discourse-cdn.com/twitter/slight_smile.png?v=5\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\"></p>", "post_number": 13, "post_type": 1, "updated_at": "2017-01-02T01:06:17.387Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 43, "readers_count": 42, "score": 8.6, "yours": false, "topic_id": 1225, "topic_slug": "urho-vs-stdlib-small-benchmark-vs2015", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 151, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 7053, "name": "Lasse \u00d6\u00f6rni", "username": "cadaver", "avatar_template": "/user_avatar/discourse.urho3d.io/cadaver/{size}/3_2.png", "created_at": "2015-08-05T07:10:49.000Z", "cooked": "<p>The perf difference between a Vector and std vector is something worth investigating. Probably is related to the reallocation of strings when the vector\u2019s storage expands.</p>", "post_number": 14, "post_type": 1, "updated_at": "2017-01-02T01:06:17.655Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 3, "reads": 44, "readers_count": 43, "score": 23.8, "yours": false, "topic_id": 1225, "topic_slug": "urho-vs-stdlib-small-benchmark-vs2015", "display_username": "Lasse \u00d6\u00f6rni", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Urho3D Author", "title_is_group": false, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": true, "staff": true, "user_id": 3, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 7054, "name": "", "username": "globus", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/5f9b8f/{size}.png", "created_at": "2015-08-05T07:22:25.000Z", "cooked": "<aside class=\"quote\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/enhex/40/81_1.png\" class=\"avatar\"> Enhex:</div>\n<blockquote>\n<p> \u2026 are backward compatible down to win XP. And I don\u2019t think there are that many people who still use some 15+ years old version of windows.</p>\n</blockquote>\n</aside>\n<p>winXP - the best that has been created in Microsoft.<br>\nIt is the working environment created by the developers.<br>\nwin7-8-9-10 -\u2026 created by traders to make money.  <img src=\"https://emoji.discourse-cdn.com/twitter/wink.png?v=5\" title=\":wink:\" class=\"emoji\" alt=\":wink:\"></p>", "post_number": 15, "post_type": 1, "updated_at": "2017-01-02T01:06:17.712Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 1, "incoming_link_count": 0, "reads": 46, "readers_count": 45, "score": 9.2, "yours": false, "topic_id": 1225, "topic_slug": "urho-vs-stdlib-small-benchmark-vs2015", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 32, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 7062, "name": "", "username": "Enhex", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png", "created_at": "2015-08-05T11:18:30.000Z", "cooked": "<aside class=\"quote no-group\" data-username=\"globus\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"20\" height=\"20\" src=\"https://avatars.discourse-cdn.com/v4/letter/g/5f9b8f/40.png\" class=\"avatar\"> globus:</div>\n<blockquote>\n<p>[quote=\u201cEnhex\u201d] \u2026 are backward compatible down to win XP. And I don\u2019t think there are that many people who still use some 15+ years old version of windows.</p>\n</blockquote>\n</aside>\n<p>winXP - the best that has been created in Microsoft.<br>\nIt is the working environment created by the developers.<br>\nwin7-8-9-10 -\u2026 created by traders to make money.  <img src=\"https://emoji.discourse-cdn.com/twitter/wink.png?v=10\" title=\":wink:\" class=\"emoji\" alt=\":wink:\">[/quote]<br>\nMS always was for profit business.<br>\nWin 7 is the best IMO.<br>\nWin 9 never existed, you missed the news <img src=\"https://emoji.discourse-cdn.com/twitter/wink.png?v=10\" title=\":wink:\" class=\"emoji\" alt=\":wink:\"></p>", "post_number": 16, "post_type": 1, "updated_at": "2017-01-02T01:06:18.295Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 1, "incoming_link_count": 0, "reads": 44, "readers_count": 43, "score": 8.8, "yours": false, "topic_id": 1225, "topic_slug": "urho-vs-stdlib-small-benchmark-vs2015", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 184, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 7065, "name": "", "username": "globus", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/5f9b8f/{size}.png", "created_at": "2015-08-05T16:27:12.000Z", "cooked": "<aside class=\"quote no-group\" data-username=\"Enhex\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/enhex/40/81_2.png\" class=\"avatar\"> Enhex:</div>\n<blockquote>\n<p>Win 7 is the best IMO.</p>\n</blockquote>\n</aside>\n<p><img src=\"http://i.piccy.info/i9/f90896d6d4f906e5265302e658b94080/1438791546/46177/912050/xpshare.jpg\" alt=\"\" width=\"\" height=\"\"><br>\nBut Microsoft has completed the official support Win7.<br>\nThe next time Microsoft will say: DirextX 14 only for Windows 11.<br>\nNothing personal. Only business.  <img src=\"https://emoji.discourse-cdn.com/twitter/wink.png?v=9\" title=\":wink:\" class=\"emoji\" alt=\":wink:\"></p>", "post_number": 17, "post_type": 1, "updated_at": "2017-01-02T01:06:18.510Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 1, "incoming_link_count": 0, "reads": 42, "readers_count": 41, "score": 8.4, "yours": false, "topic_id": 1225, "topic_slug": "urho-vs-stdlib-small-benchmark-vs2015", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 32, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 7067, "name": "", "username": "1vanK", "avatar_template": "/user_avatar/discourse.urho3d.io/1vank/{size}/768_2.png", "created_at": "2015-08-05T18:39:10.000Z", "cooked": "<p>I like XP too, but new hardware is not working on it. <img src=\"https://emoji.discourse-cdn.com/twitter/slight_smile.png?v=5\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\"> So I had to go to Win7.</p>", "post_number": 18, "post_type": 1, "updated_at": "2017-01-02T01:06:18.634Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 2, "reads": 42, "readers_count": 41, "score": 18.4, "yours": false, "topic_id": 1225, "topic_slug": "urho-vs-stdlib-small-benchmark-vs2015", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": true, "admin": false, "staff": true, "user_id": 263, "hidden": false, "trust_level": 4, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 7074, "name": "", "username": "globus", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/5f9b8f/{size}.png", "created_at": "2015-08-05T21:33:24.000Z", "cooked": "<p>For this reason, I collected a computer<br>\nwith the latest hardware resources that support WinXP.</p>\n<p><span class=\"spoiler\">Motherboard: ASRock z77 extreme4-M<br>\nCPU: Intel Core i7 - 3770T<br>\nDDR3 memory<br>\nVideo: GeForce GTX 750Ti 2Gb</span><br>\nIt good but hard to find motherboard with winXP support.</p>\n<p>I use WinXP as a working environment.<br>\nFor other platforms, have plans to use the remote method compilation<br>\n(using FTP connection) or duble bootable HDD.</p>", "post_number": 19, "post_type": 1, "updated_at": "2017-01-02T01:06:19.301Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 5, "reads": 47, "readers_count": 46, "score": 34.4, "yours": false, "topic_id": 1225, "topic_slug": "urho-vs-stdlib-small-benchmark-vs2015", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 32, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 7097, "name": "", "username": "boberfly", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/b/aeb1de/{size}.png", "created_at": "2015-08-06T15:17:46.000Z", "cooked": "<p>Hi,</p>\n<p>I\u2019ve learned a lot of C++ through Urho3D and prior to that Horde3D, as well as libraries often found in the VFX industry (OpenEXR/IlmBase). There\u2019s so much to learn, but it\u2019s fun to read up on this stuff.</p>\n<p>I have on/off plans to make a plugin for Maya, and usually you need to match the compiler to the Maya version. So I\u2019m a bit concerned that is C++11 really needed?<br>\n<a href=\"http://help.autodesk.com/view/MAYAUL/2016/ENU/?guid=__files_Setting_up_your_build_environment_htm\" data-bbcode=\"true\" rel=\"nofollow noopener\">http://help.autodesk.com/view/MAYAUL/2016/ENU/?guid=__files_Setting_up_your_build_environment_htm</a><br>\nVisual Studio 2012 update 4, and this is the latest Maya! Older ones like Maya 2015 uses GCC 4.1.x for instance, it doesn\u2019t say what it uses for Linux in this documentation. Recently the library OpenSubdiv reverted some C++11-isms to keep compatibility, for instance.</p>\n<p>Not that it\u2019s a problem for Urho3D to limit itself to a 3D DCC and I don\u2019t want to force this requirement, but it\u2019s kind of nice to not go with the latest and greatest. Sure there are ways around this like make a C99 wrapper and only interface to that to keep ABI compatibility. Actually does anyone know of a convenient library to assist in making one, and not by hand? Something akin to the GL/Horde3D API would be cool and would let you wrap it to any language too.</p>\n<p>About containers, lots of hardcore game engine developers usually are huge fans of C99 for good reasons and just use constrained/minimal C++ features (templates/operator overloads/classes and minimal use of virtual functions in hot paths which is important to not cause pointer indirection which slows up in-order CPUs) and stay clear of the STD. For performance and fine-grained control reasons usually, like making explicit allocators for what you want to do without fragmentation, and for efficient cache use.<br>\n<a href=\"https://www.youtube.com/watch?v=rX0ItVEVjHc\" data-bbcode=\"true\" rel=\"nofollow noopener\">https://www.youtube.com/watch?v=rX0ItVEVjHc</a></p>\n<p>I did find this the other day:<br>\n<a href=\"https://bitbucket.org/bitsquid/foundation\" data-bbcode=\"true\" rel=\"nofollow noopener\">https://bitbucket.org/bitsquid/foundation</a><br>\nIf you saw Autodesk\u2019s announcement of Stingray, it\u2019s actually the bitsquid engine\u2026</p>\n<p>Some good info too:<br>\n<a href=\"http://bitsquid.blogspot.com.au/\" data-bbcode=\"true\" rel=\"nofollow noopener\">http://bitsquid.blogspot.com.au/</a></p>", "post_number": 20, "post_type": 1, "updated_at": "2017-01-02T01:06:20.906Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 52, "readers_count": 51, "score": 10.4, "yours": false, "topic_id": 1225, "topic_slug": "urho-vs-stdlib-small-benchmark-vs2015", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "https://bitbucket.org/bitsquid/foundation", "internal": false, "reflection": false, "title": "bitsquid / foundation \u2014 Bitbucket", "clicks": 2}, {"url": "https://www.youtube.com/watch?v=rX0ItVEVjHc", "internal": false, "reflection": false, "title": "CppCon 2014: Mike Acton \"Data-Oriented Design and C++\" - YouTube", "clicks": 0}, {"url": "http://bitsquid.blogspot.com.au/", "internal": false, "reflection": false, "title": "bitsquid: development blog", "clicks": 0}, {"url": "http://help.autodesk.com/view/MAYAUL/2016/ENU/?guid=__files_Setting_up_your_build_environment_htm", "internal": false, "reflection": false, "title": "Help", "clicks": 0}], "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 69, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 24087, "name": "", "username": "1vanK", "avatar_template": "/user_avatar/discourse.urho3d.io/1vank/{size}/768_2.png", "created_at": "2018-04-06T13:23:58.223Z", "cooked": "<p>Urho3D::SharedPtr vs std:shared_ptr (VS 2017)</p>\n<pre><code class=\"lang-auto\">#include &lt;Urho3D/Urho3DAll.h&gt;\n\n#include &lt;iostream&gt;\nusing namespace std;\n\nint main()\n{\n    Context context;\n    SharedPtr&lt;Component&gt; a, b;\n    shared_ptr&lt;Component&gt; c, d;\n\n    const long long count = 1000000LL;\n\n    for (int k = 0; k &lt; 10; k++)\n    {\n        HiresTimer timer;\n        timer.Reset();\n        for (long long i = 0; i &lt; count; i++)\n        {\n            a = new Component(&amp;context);;\n            b = a;\n        }\n        long long elapsed = timer.GetUSec(false);\n        cout &lt;&lt; \"Urho3D::SharedPtr \" &lt;&lt; elapsed &lt;&lt; \"\\n\";\n\n        timer.Reset();\n        for (long long i = 0; i &lt; count; i++)\n        {\n            c = make_shared&lt;Component&gt;(&amp;context);\n            d = c;\n        }\n        elapsed = timer.GetUSec(false);\n        cout &lt;&lt; \"std:shared_ptr \" &lt;&lt; elapsed &lt;&lt; \"\\n\";\n    }\n\n    // Prevent throw out pieces of code by compiler optimizer.\n    clog &lt;&lt; \"Ignore it: \" &lt;&lt;  b.Null() &lt;&lt; d.use_count();\n\n    // Prevent crash on exit when context deleted before objects.\n    a.Detach();\n    b.Detach();\n}\n</code></pre>\n<p>Urho3D::SharedPtr 314000<br>\nstd:shared_ptr 335000<br>\nUrho3D::SharedPtr 314000<br>\nstd:shared_ptr 344000<br>\nUrho3D::SharedPtr 315000<br>\nstd:shared_ptr 339000<br>\nUrho3D::SharedPtr 315000<br>\nstd:shared_ptr 335000<br>\nUrho3D::SharedPtr 311000<br>\nstd:shared_ptr 335000<br>\nUrho3D::SharedPtr 313000<br>\nstd:shared_ptr 333000<br>\nUrho3D::SharedPtr 316000<br>\nstd:shared_ptr 334000<br>\nUrho3D::SharedPtr 313000<br>\nstd:shared_ptr 337000<br>\nUrho3D::SharedPtr 312000<br>\nstd:shared_ptr 334000<br>\nUrho3D::SharedPtr 312000<br>\nstd:shared_ptr 339000</p>", "post_number": 21, "post_type": 1, "updated_at": "2018-04-06T13:23:58.223Z", "reply_count": 1, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 48, "readers_count": 47, "score": 14.6, "yours": false, "topic_id": 1225, "topic_slug": "urho-vs-stdlib-small-benchmark-vs2015", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": true, "admin": false, "staff": true, "user_id": 263, "hidden": false, "trust_level": 4, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 24095, "name": "", "username": "Enhex", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png", "created_at": "2018-04-06T14:30:28.197Z", "cooked": "<p>maybe it\u2019s because Urho uses intrusive reference counting, with everything inheriting from <code>RefCounted</code>?<br>\nSo we\u2019re getting 2 ref counts with <code>std::shared_ptr</code> instead of one.</p>\n<p>To fix the comparison you\u2019ll need to create a class that inherits from <code>RefCounted</code> for Urho, and the same class without inheriting from <code>RefCounted</code> for <code>std::shared_ptr</code>.</p>\n<p>This is how I corrected the code:</p>\n<pre><code class=\"lang-auto\">#include &lt;Urho3D/Urho3DAll.h&gt;\n\n#include &lt;iostream&gt;\nusing namespace std;\n\n\nstruct TestUrho : RefCounted\n{\n\tint x = 0;\n};\n\nstruct Test\n{\n\tint x = 0;\n};\n\n\nint main()\n{\n    SharedPtr&lt;TestUrho&gt; a, b;\n    shared_ptr&lt;Test&gt; c, d;\n\n    const long long count = 1000000LL;\n\n    for (int k = 0; k &lt; 10; k++)\n    {\n        HiresTimer timer;\n        timer.Reset();\n        for (long long i = 0; i &lt; count; i++)\n        {\n            a = MakeShared&lt;TestUrho&gt;();\n            b = a;\n        }\n        long long elapsed = timer.GetUSec(false);\n        cout &lt;&lt; \"Urho3D::SharedPtr \" &lt;&lt; elapsed &lt;&lt; \"\\n\";\n\n        timer.Reset();\n        for (long long i = 0; i &lt; count; i++)\n        {\n            c = make_shared&lt;Test&gt;();\n            d = c;\n        }\n        elapsed = timer.GetUSec(false);\n        cout &lt;&lt; \"std:shared_ptr \" &lt;&lt; elapsed &lt;&lt; \"\\n\";\n    }\n\n    // Prevent throw out pieces of code by compiler optimizer.\n    clog &lt;&lt; \"Ignore it: \" &lt;&lt;  b.Null() &lt;&lt; d.use_count();\n}\n</code></pre>\n<p>These are the results I got:</p>\n<pre><code class=\"lang-auto\">Urho3D::SharedPtr 140000\nstd:shared_ptr 79000\nUrho3D::SharedPtr 127000\nstd:shared_ptr 77000\nUrho3D::SharedPtr 142000\nstd:shared_ptr 78000\nUrho3D::SharedPtr 141000\nstd:shared_ptr 78000\nUrho3D::SharedPtr 126000\nstd:shared_ptr 79000\nUrho3D::SharedPtr 126000\nstd:shared_ptr 78000\nUrho3D::SharedPtr 137000\nstd:shared_ptr 78000\nUrho3D::SharedPtr 141000\nstd:shared_ptr 81000\nUrho3D::SharedPtr 130000\nstd:shared_ptr 78000\nUrho3D::SharedPtr 143000\nstd:shared_ptr 80000\n</code></pre>\n<p>it seems that in this test <code>std::shared_ptr</code> is about 50% to 80% faster than Urho\u2019s <code>SharedPtr</code>.</p>\n<p>Note: with the old code <code>SharedPtr</code> was indeed faster.</p>", "post_number": 22, "post_type": 1, "updated_at": "2018-04-06T14:30:28.197Z", "reply_count": 1, "reply_to_post_number": 21, "quote_count": 0, "incoming_link_count": 7, "reads": 44, "readers_count": 43, "score": 48.8, "yours": false, "topic_id": 1225, "topic_slug": "urho-vs-stdlib-small-benchmark-vs2015", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "reply_to_user": {"username": "1vanK", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/1vank/{size}/768_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 184, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 24097, "name": "", "username": "1vanK", "avatar_template": "/user_avatar/discourse.urho3d.io/1vank/{size}/768_2.png", "created_at": "2018-04-06T15:01:42.218Z", "cooked": "<aside class=\"quote no-group\" data-post=\"22\" data-topic=\"1225\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/enhex/40/81_1.png\" class=\"avatar\"> Enhex:</div>\n<blockquote>\n<p>maybe it\u2019s because Urho uses intrusive reference counting, with everything inheriting from RefCounted?</p>\n<p>So we\u2019re getting 2 ref counts with std::shared_ptr instead of one.</p>\n<p>To fix the comparison you\u2019ll need to create a class that inherits from RefCounted for Urho, and the same class without inheriting from RefCounted for std::shared_ptr.</p>\n<p>This is how I corrected the code:</p>\n</blockquote>\n</aside>\n<p>Refcounting preccessd only by SharedPtr class. In your example sizes of structs is different, so you have faster memory allocation for shared_ptr</p>", "post_number": 23, "post_type": 1, "updated_at": "2018-04-06T15:01:42.218Z", "reply_count": 1, "reply_to_post_number": 22, "quote_count": 1, "incoming_link_count": 0, "reads": 42, "readers_count": 41, "score": 13.4, "yours": false, "topic_id": 1225, "topic_slug": "urho-vs-stdlib-small-benchmark-vs2015", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": true, "admin": false, "staff": true, "user_id": 263, "hidden": false, "trust_level": 4, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 24098, "name": "", "username": "Enhex", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png", "created_at": "2018-04-06T15:06:46.495Z", "cooked": "<p><code>std::shared_ptr</code> adds ref count externally, and <code>Urho3D::SharedPtr</code> can only be used with classes that inherit from <code>Urho3D::RefCounted</code>, so my benchmark is correct.</p>", "post_number": 24, "post_type": 1, "updated_at": "2018-04-06T15:06:46.495Z", "reply_count": 1, "reply_to_post_number": 23, "quote_count": 0, "incoming_link_count": 1, "reads": 40, "readers_count": 39, "score": 63.0, "yours": false, "topic_id": 1225, "topic_slug": "urho-vs-stdlib-small-benchmark-vs2015", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "reply_to_user": {"username": "1vanK", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/1vank/{size}/768_2.png"}, "bookmarked": false, "actions_summary": [{"id": 2, "count": 1}], "moderator": false, "admin": false, "staff": false, "user_id": 184, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 24099, "name": "", "username": "1vanK", "avatar_template": "/user_avatar/discourse.urho3d.io/1vank/{size}/768_2.png", "created_at": "2018-04-06T15:25:02.800Z", "cooked": "<p>Ah yes, u are right!</p>\n<p>EDIT:</p>\n<pre><code class=\"lang-auto\">Urho3D::SharedPtr 133000\nstd:shared_ptr 78000\nUrho3D::SharedPtr 141000\nstd:shared_ptr 94000\nUrho3D::SharedPtr 131000\nstd:shared_ptr 77000\nUrho3D::SharedPtr 141000\nstd:shared_ptr 94000\nUrho3D::SharedPtr 125000\nstd:shared_ptr 93000\nUrho3D::SharedPtr 125000\nstd:shared_ptr 94000\nUrho3D::SharedPtr 125000\nstd:shared_ptr 95000\nUrho3D::SharedPtr 141000\nstd:shared_ptr 78000\nUrho3D::SharedPtr 141000\nstd:shared_ptr 78000\nUrho3D::SharedPtr 141000\nstd:shared_ptr 78000\n</code></pre>\n<p>with your code</p>", "post_number": 25, "post_type": 1, "updated_at": "2018-04-06T15:30:29.985Z", "reply_count": 0, "reply_to_post_number": 24, "quote_count": 0, "incoming_link_count": 0, "reads": 40, "readers_count": 39, "score": 23.0, "yours": false, "topic_id": 1225, "topic_slug": "urho-vs-stdlib-small-benchmark-vs2015", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 2, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "reply_to_user": {"username": "Enhex", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png"}, "bookmarked": false, "actions_summary": [{"id": 2, "count": 1}], "moderator": true, "admin": false, "staff": true, "user_id": 263, "hidden": false, "trust_level": 4, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 24112, "name": "", "username": "1vanK", "avatar_template": "/user_avatar/discourse.urho3d.io/1vank/{size}/768_2.png", "created_at": "2018-04-06T21:11:34.289Z", "cooked": "<p>With std pointers imposimple this thing:</p>\n<pre><code class=\"lang-auto\">void CrowdAgent::OnCrowdUpdate(dtCrowdAgent* ag, float dt)\n{\n        ...\n        // Use pointer to self to check for destruction after sending events\n        WeakPtr&lt;CrowdAgent&gt; self(this);\n        ...\n        crowdManager_-&gt;SendEvent(E_CROWD_AGENT_REPOSITION, map);\n        if (self.Expired())\n            return;\n        ...\n}</code></pre>", "post_number": 26, "post_type": 1, "updated_at": "2018-04-06T21:11:34.289Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 1, "reads": 41, "readers_count": 40, "score": 13.2, "yours": false, "topic_id": 1225, "topic_slug": "urho-vs-stdlib-small-benchmark-vs2015", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": true, "admin": false, "staff": true, "user_id": 263, "hidden": false, "trust_level": 4, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 24114, "name": "Jonathan", "username": "Sinoid", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/f19dbf/{size}.png", "created_at": "2018-04-06T21:15:06.144Z", "cooked": "<p>No it isn\u2019t. The STL way is more verbose but can do the same thing using enable_shared_from_this and dynamic_pointer_cast.</p>", "post_number": 27, "post_type": 1, "updated_at": "2018-04-06T21:15:06.144Z", "reply_count": 1, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 41, "readers_count": 40, "score": 58.2, "yours": false, "topic_id": 1225, "topic_slug": "urho-vs-stdlib-small-benchmark-vs2015", "display_username": "Jonathan", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [{"id": 2, "count": 1}], "moderator": false, "admin": false, "staff": false, "user_id": 669, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 24115, "name": "Eugene Kozlov", "username": "Eugene", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png", "created_at": "2018-04-06T21:31:43.711Z", "cooked": "<p>TBH, <code>enable_shared_from_this</code> isn\u2019t the silver bullet. No way to do things in ctor, while intrusive ptrs have no problem there.</p>", "post_number": 28, "post_type": 1, "updated_at": "2018-04-06T21:31:43.711Z", "reply_count": 1, "reply_to_post_number": 27, "quote_count": 0, "incoming_link_count": 0, "reads": 41, "readers_count": 40, "score": 13.2, "yours": false, "topic_id": 1225, "topic_slug": "urho-vs-stdlib-small-benchmark-vs2015", "display_username": "Eugene Kozlov", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Core developer", "title_is_group": false, "reply_to_user": {"username": "Sinoid", "name": "Jonathan", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/f19dbf/{size}.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 484, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 24116, "name": "", "username": "1vanK", "avatar_template": "/user_avatar/discourse.urho3d.io/1vank/{size}/768_2.png", "created_at": "2018-04-06T21:35:34.379Z", "cooked": "<p>If I understand correctly, enable_shared_from_this stores shared_ptr inside function and to allow deleting shared_ptr outside we need crazy constructions inside function to get weak_ptr from shared_ptr and delete shared_ptr</p>", "post_number": 29, "post_type": 1, "updated_at": "2018-04-06T21:36:34.738Z", "reply_count": 1, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 41, "readers_count": 40, "score": 13.2, "yours": false, "topic_id": 1225, "topic_slug": "urho-vs-stdlib-small-benchmark-vs2015", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": true, "admin": false, "staff": true, "user_id": 263, "hidden": false, "trust_level": 4, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 24121, "name": "Jonathan", "username": "Sinoid", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/f19dbf/{size}.png", "created_at": "2018-04-06T23:01:27.175Z", "cooked": "<aside class=\"quote no-group\" data-username=\"1vanK\" data-post=\"29\" data-topic=\"1225\" data-full=\"true\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/1vank/40/768_2.png\" class=\"avatar\"> 1vanK:</div>\n<blockquote>\n<p>If I understand correctly, enable_shared_from_this stores shared_ptr inside function and to allow deleting shared_ptr outside we need crazy constructions inside function to get weak_ptr from shared_ptr and delete shared_ptr</p>\n</blockquote>\n</aside>\n<p>Backwards. It only stores a weak_ptr internally, which means there\u2019s no craziness involved.</p>\n<aside class=\"quote no-group\" data-username=\"Eugene\" data-post=\"28\" data-topic=\"1225\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/eugene/40/902_2.png\" class=\"avatar\"> Eugene:</div>\n<blockquote>\n<p>No way to do things in ctor</p>\n</blockquote>\n</aside>\n<p>Clarify? You can\u2019t do a host of things in a constructor either way, virtual calls being the big one.</p>", "post_number": 30, "post_type": 1, "updated_at": "2018-04-06T23:01:27.175Z", "reply_count": 2, "reply_to_post_number": 29, "quote_count": 2, "incoming_link_count": 0, "reads": 41, "readers_count": 40, "score": 18.2, "yours": false, "topic_id": 1225, "topic_slug": "urho-vs-stdlib-small-benchmark-vs2015", "display_username": "Jonathan", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 669, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 24123, "name": "", "username": "1vanK", "avatar_template": "/user_avatar/discourse.urho3d.io/1vank/{size}/768_2.png", "created_at": "2018-04-07T00:24:06.539Z", "cooked": "<aside class=\"quote no-group\" data-username=\"Sinoid\" data-post=\"30\" data-topic=\"1225\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"20\" height=\"20\" src=\"https://avatars.discourse-cdn.com/v4/letter/s/f19dbf/40.png\" class=\"avatar\"> Sinoid:</div>\n<blockquote>\n<p>Backwards. It only stores a weak_ptr internally, which means there\u2019s no craziness involved.</p>\n</blockquote>\n</aside>\n<ol>\n<li>enable_shared_from_this requires to store weak_ptr in object, so\u2026 we get same overhead for object size, as when inheriting from Urho3D: RefCounted</li>\n<li>You can not recieve this weak_ptr directly. You can recieve only share_ptr, convert to weak_ptr and then delete shared_ptr to allow self-destruct object outside function and get correct num refs in weak_ptr inside function</li>\n</ol>\n<p>actually Urho\u2019s intrusive counter is different from boost <a href=\"https://github.com/boostorg/smart_ptr/blob/develop/include/boost/smart_ptr/intrusive_ref_counter.hpp\" class=\"inline-onebox\">smart_ptr/intrusive_ref_counter.hpp at develop \u00b7 boostorg/smart_ptr \u00b7 GitHub</a></p>\n<ol>\n<li>Urho stores count of weak refs (what for?)</li>\n<li>Urho stores ref to RefCount instead storing of count in the object itself</li>\n</ol>\n<p>EDIT: weak_from_this is part of c++17 <a href=\"http://en.cppreference.com/w/cpp/memory/enable_shared_from_this/weak_from_this\" class=\"inline-onebox\">std::enable_shared_from_this&lt;T&gt;::weak_from_this - cppreference.com</a></p>", "post_number": 31, "post_type": 1, "updated_at": "2018-04-07T00:39:55.063Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 1, "incoming_link_count": 0, "reads": 42, "readers_count": 41, "score": 8.4, "yours": false, "topic_id": 1225, "topic_slug": "urho-vs-stdlib-small-benchmark-vs2015", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 2, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "http://en.cppreference.com/w/cpp/memory/enable_shared_from_this/weak_from_this", "internal": false, "reflection": false, "title": "std::enable_shared_from_this::weak_from_this - cppreference.com", "clicks": 1}, {"url": "https://github.com/boostorg/smart_ptr/blob/develop/include/boost/smart_ptr/intrusive_ref_counter.hpp", "internal": false, "reflection": false, "title": "smart_ptr/intrusive_ref_counter.hpp at develop \u00b7 boostorg/smart_ptr \u00b7 GitHub", "clicks": 0}], "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": true, "admin": false, "staff": true, "user_id": 263, "hidden": false, "trust_level": 4, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 24125, "name": "Jonathan", "username": "Sinoid", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/f19dbf/{size}.png", "created_at": "2018-04-07T00:59:52.128Z", "cooked": "<p>I\u2019ve been using STL-only in my local fork for quite a while, I haven\u2019t had a single issue or encountered anything that could not be done that the Urho containers were doing.</p>\n<p>The switch also made it a lot easier to work with 3rd-party libraries that are almost always going to be using STL as well as concurrency primitives that I had to have for multithreaded rendering.</p>", "post_number": 32, "post_type": 1, "updated_at": "2018-04-07T01:00:21.206Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 37, "readers_count": 36, "score": 7.4, "yours": false, "topic_id": 1225, "topic_slug": "urho-vs-stdlib-small-benchmark-vs2015", "display_username": "Jonathan", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 669, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 24134, "name": "Eugene Kozlov", "username": "Eugene", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png", "created_at": "2018-04-07T07:45:31.094Z", "cooked": "<aside class=\"quote no-group\" data-username=\"Sinoid\" data-post=\"30\" data-topic=\"1225\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"20\" height=\"20\" src=\"https://avatars.discourse-cdn.com/v4/letter/s/f19dbf/40.png\" class=\"avatar\"> Sinoid:</div>\n<blockquote>\n<p>Clarify? You can\u2019t do a host of things in a constructor either way, virtual calls being the big one.</p>\n</blockquote>\n</aside>\n<p>Cannot spawn weak/shared ptr from ctor.<br>\nAnd yes, it was a problem in my day job projects.<br>\nE.g. I was working with async server, and there\u2019s no way to spawn tasks from ctor.</p>", "post_number": 33, "post_type": 1, "updated_at": "2018-04-07T07:45:31.094Z", "reply_count": 1, "reply_to_post_number": 30, "quote_count": 1, "incoming_link_count": 0, "reads": 39, "readers_count": 38, "score": 12.8, "yours": false, "topic_id": 1225, "topic_slug": "urho-vs-stdlib-small-benchmark-vs2015", "display_username": "Eugene Kozlov", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Core developer", "title_is_group": false, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 484, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 24140, "name": "", "username": "Enhex", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png", "created_at": "2018-04-07T12:12:49.130Z", "cooked": "<p>it sounds a bit dangerous to use an object that wasn\u2019t fully constructed yet, it\u2019s kinda like as if it\u2019s uninitialized.<br>\nYou can always use some helper function that construct the object, then passes it to some other function.</p>\n<p>BTW not all Urho objects need to use ref counting (ex: a subsystem with a known lifetime, usually until the program shuts down), and using std::shared_ptr gives the flexibility to choose not to.</p>", "post_number": 34, "post_type": 1, "updated_at": "2018-04-07T12:13:02.784Z", "reply_count": 1, "reply_to_post_number": 33, "quote_count": 0, "incoming_link_count": 0, "reads": 42, "readers_count": 41, "score": 13.4, "yours": false, "topic_id": 1225, "topic_slug": "urho-vs-stdlib-small-benchmark-vs2015", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "reply_to_user": {"username": "Eugene", "name": "Eugene Kozlov", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 184, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 24142, "name": "Eugene Kozlov", "username": "Eugene", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png", "created_at": "2018-04-07T13:33:13.322Z", "cooked": "<aside class=\"quote no-group\" data-post=\"34\" data-topic=\"1225\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/enhex/40/81_1.png\" class=\"avatar\"> Enhex:</div>\n<blockquote>\n<p>it sounds a bit dangerous to use an object that wasn\u2019t fully constructed yet, it\u2019s kinda like as if it\u2019s uninitialized.</p>\n</blockquote>\n</aside>\n<p>Meh, it\u2019s <em>sometimes</em> dangerous. It wasn\u2019t my case tho. Async task manager needs weak ptr just to automatically cancel tasks if owner is destroyed. And there\u2019s no way to use it from ctor, despite it\u2019s completely safe.</p>", "post_number": 35, "post_type": 1, "updated_at": "2018-04-07T13:33:13.322Z", "reply_count": 0, "reply_to_post_number": 34, "quote_count": 1, "incoming_link_count": 0, "reads": 43, "readers_count": 42, "score": 8.6, "yours": false, "topic_id": 1225, "topic_slug": "urho-vs-stdlib-small-benchmark-vs2015", "display_username": "Eugene Kozlov", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Core developer", "title_is_group": false, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 484, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 30306, "name": "", "username": "1vanK", "avatar_template": "/user_avatar/discourse.urho3d.io/1vank/{size}/768_2.png", "created_at": "2019-06-21T12:53:34.628Z", "cooked": "<p>As an experiment and optimization for cache locality, I moved refCounter from external structure into Object. WeakRefCounter still stay as external structure, so external counter created only when WeakPointers is used. In my tests, I did not see any difference of FPS. So I believe that pointers do not affect overall performance compared to other things \u2014 physics, rendering, and so on.</p>\n<p><a href=\"https://dropmefiles.com/3eAjq\" rel=\"nofollow noopener\">https://dropmefiles.com/3eAjq</a> (build without AS and LUA)</p>", "post_number": 36, "post_type": 1, "updated_at": "2019-06-21T12:53:34.628Z", "reply_count": 1, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 1, "reads": 36, "readers_count": 35, "score": 17.2, "yours": false, "topic_id": 1225, "topic_slug": "urho-vs-stdlib-small-benchmark-vs2015", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "https://dropmefiles.com/3eAjq", "internal": false, "reflection": false, "title": "DropMeFiles \u2013 free one-click file sharing service", "clicks": 2}], "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": true, "admin": false, "staff": true, "user_id": 263, "hidden": false, "trust_level": 4, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 30307, "name": "Yao Wei Tjong", "username": "weitjong", "avatar_template": "/user_avatar/discourse.urho3d.io/weitjong/{size}/4_2.png", "created_at": "2019-06-21T14:27:57.625Z", "cooked": "<p>The link is not working for me.</p>", "post_number": 37, "post_type": 1, "updated_at": "2019-06-21T14:27:57.625Z", "reply_count": 1, "reply_to_post_number": 36, "quote_count": 0, "incoming_link_count": 2, "reads": 33, "readers_count": 32, "score": 21.6, "yours": false, "topic_id": 1225, "topic_slug": "urho-vs-stdlib-small-benchmark-vs2015", "display_username": "Yao Wei Tjong", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Admin", "title_is_group": false, "reply_to_user": {"username": "1vanK", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/1vank/{size}/768_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": true, "staff": true, "user_id": 4, "hidden": false, "trust_level": 4, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 30308, "name": "", "username": "1vanK", "avatar_template": "/user_avatar/discourse.urho3d.io/1vank/{size}/768_2.png", "created_at": "2019-06-21T15:13:34.815Z", "cooked": "<p>try it <a href=\"https://drive.google.com/open?id=1hiMki-KQUsCI1m5M9vegj_gKjquS5GZf\" rel=\"nofollow noopener\">https://drive.google.com/open?id=1hiMki-KQUsCI1m5M9vegj_gKjquS5GZf</a></p>", "post_number": 38, "post_type": 1, "updated_at": "2019-06-21T15:13:34.815Z", "reply_count": 1, "reply_to_post_number": 37, "quote_count": 0, "incoming_link_count": 2, "reads": 33, "readers_count": 32, "score": 21.6, "yours": false, "topic_id": 1225, "topic_slug": "urho-vs-stdlib-small-benchmark-vs2015", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "https://drive.google.com/open?id=1hiMki-KQUsCI1m5M9vegj_gKjquS5GZf", "internal": false, "reflection": false, "clicks": 1}], "read": true, "user_title": null, "reply_to_user": {"username": "weitjong", "name": "Yao Wei Tjong", "avatar_template": "/user_avatar/discourse.urho3d.io/weitjong/{size}/4_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": true, "admin": false, "staff": true, "user_id": 263, "hidden": false, "trust_level": 4, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 30309, "name": "Yao Wei Tjong", "username": "weitjong", "avatar_template": "/user_avatar/discourse.urho3d.io/weitjong/{size}/4_2.png", "created_at": "2019-06-21T15:53:00.219Z", "cooked": "<p>It\u2019s a link to the modified source code? I had hoped to see some benchmark result or some kind of comparison result instead. <img src=\"https://emoji.discourse-cdn.com/twitter/slight_smile.png?v=9\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\"></p>", "post_number": 39, "post_type": 1, "updated_at": "2019-06-21T15:53:00.219Z", "reply_count": 1, "reply_to_post_number": 38, "quote_count": 0, "incoming_link_count": 0, "reads": 33, "readers_count": 32, "score": 11.6, "yours": false, "topic_id": 1225, "topic_slug": "urho-vs-stdlib-small-benchmark-vs2015", "display_username": "Yao Wei Tjong", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Admin", "title_is_group": false, "reply_to_user": {"username": "1vanK", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/1vank/{size}/768_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": true, "staff": true, "user_id": 4, "hidden": false, "trust_level": 4, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 30310, "name": "", "username": "1vanK", "avatar_template": "/user_avatar/discourse.urho3d.io/1vank/{size}/768_2.png", "created_at": "2019-06-21T15:56:41.172Z", "cooked": "<p>I just launch original and modified samples and recieve same FPS.</p>", "post_number": 40, "post_type": 1, "updated_at": "2019-06-21T15:56:41.172Z", "reply_count": 0, "reply_to_post_number": 39, "quote_count": 0, "incoming_link_count": 0, "reads": 35, "readers_count": 34, "score": 7.0, "yours": false, "topic_id": 1225, "topic_slug": "urho-vs-stdlib-small-benchmark-vs2015", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "reply_to_user": {"username": "weitjong", "name": "Yao Wei Tjong", "avatar_template": "/user_avatar/discourse.urho3d.io/weitjong/{size}/4_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": true, "admin": false, "staff": true, "user_id": 263, "hidden": false, "trust_level": 4, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 30312, "name": "", "username": "S.L.C", "avatar_template": "/user_avatar/discourse.urho3d.io/s.l.c/{size}/1016_2.png", "created_at": "2019-06-21T16:53:46.927Z", "cooked": "<p>Although you can\u2019t really expect to see a noticeable difference in a hello-world type of application. And a synthetic benchmark doesn\u2019t show much either. And since Urho doesn\u2019t have a complex game/application built with it. You can\u2019t do much but assume things.</p>\n<p>As for the claim in the first post that:</p>\n<aside class=\"quote no-group\" data-post=\"1\" data-topic=\"1225\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/enhex/40/81_2.png\" class=\"avatar\"> Enhex:</div>\n<blockquote>\n<ul>\n<li>std::string is faster than Urho3D::String.</li>\n</ul>\n</blockquote>\n</aside>\n<p>Well, <code>std::string</code> is likely implemented with a small buffer optimization. And  this here <code>auto s = to_string(i);</code> falls into that kind of optimization.</p>\n<p>If you would\u2019ve created a test that goes away from that optimization. And the only way i can think of doing it in order to preserve the same amount and order of operations would be to use an array of random strings, like:</p>\n<pre><code class=\"lang-cpp\">\nconst char * STRS[] = {\n    \"qZ[N.wv+tPMu7(RMmc{5Kh]u4s7@=TP2\",\n    \"p==H'h5ez6W~rBtd[cM*)B(&lt;+&gt;wm=r7m\",\n    \"XWmEmgW@-TN5E47J*-Pf^uFFkM5R#t8Z\",\n    \"VFCY{K8;/x*(a3:3-8}^&gt;Xu=5/#u%_Lb\",\n    \"Sh5K?3~F^;~HuYGE`E!KN_sw[&amp;6jz5&amp;M\",\n    \"+VR8eFE,^@\\{C@@43~?=bsFpPM-+=6c`\",\n    \"a:JH-7rG{}m7HJ9rx'dw;*e3jLy:v$Ny\",\n    \"sC%}p&amp;HFyNewS]JU&amp;(%J+9ZH4Rr#6(4?\",\n    \"Z[X2Gu%q}Q!6^FH6(aTGHwC2n=::#HGJ\",\n    \"~X4f28TJq4*$t@KyFdr'wSm23^F9nd`B\"\n};\n</code></pre>\n<p>And then insert from those strings:</p>\n<pre><code class=\"lang-cpp\">\tauto s = std::string(STRS[i%10]);\n\tstd[s] = s;\n</code></pre>\n<p>You probably would\u2019ve had a different outcome now. Because <code>std::string</code> is now a fatter structure because of that local buffer and also contains twice the validation, also because of that local buffer.</p>\n<p>Which brings me back to my original point. The fact that you cannot look at a simple test like that and hope that result to reflect on a complex real world project.</p>\n<p>And which brings me to my issue with using the standard library instead of built in structures. With which I have no problem. Just so I\u2019m clear about that. But this is a project that targets many platforms and many compilers. Which brings the main issue with using STL. The fact that it\u2019s unpredictable. Results from one implementation might not align with the results of another. Each change must take into consideration each implementation that could be used to compile this engine with. Whoever maintains the engine must have a clear view of multiple implementations instead of just one.</p>\n<p>Some implementations could have a smaller buffer used for the small buffer optimization. Some could use a bigger one. Different alignment on one implementation can introduce padding into your structures. Some could use reference counting and copy on write instead. Imagine finding the cause of a bottleneck through all these different implementations (<em>don\u2019t just assume there cannot be one, just because it\u2019s a string. you don\u2019t know what you need until you need it</em>). Not to mention that you\u2019ve now introduced exceptions into the engine. Like i said, very unpredictable and time consuming.</p>\n<p>Sure, you have tests and what not. But you broaden the scope of what developers must be familiar with.</p>\n<p>And not to mention that you can kiss goodbye to dynamic libraries. If anyone relies on that.</p>\n<p>I\u2019m not saying STL is bad. I\u2019m just saying that for a game engine with such a broad scope. It might prove to be a bit more headache than necessary.</p>\n<p>That\u2019s just my opinion. Moving into this direction wouldn\u2019t affect me that much. And I\u2019d love to see this happen and what outcome would there be. Pretty sure it\u2019ll be a valuable lesson for everyone involved (<em>including me</em>).</p>", "post_number": 41, "post_type": 1, "updated_at": "2019-06-21T16:55:27.320Z", "reply_count": 1, "reply_to_post_number": null, "quote_count": 1, "incoming_link_count": 0, "reads": 35, "readers_count": 34, "score": 57.0, "yours": false, "topic_id": 1225, "topic_slug": "urho-vs-stdlib-small-benchmark-vs2015", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [{"id": 2, "count": 1}], "moderator": false, "admin": false, "staff": false, "user_id": 180, "hidden": false, "trust_level": 0, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "user_suspended": true, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 30625, "name": "", "username": "rku", "avatar_template": "/user_avatar/discourse.urho3d.io/rku/{size}/3200_2.png", "created_at": "2019-07-05T10:36:33.930Z", "cooked": "<aside class=\"quote no-group\" data-post=\"41\" data-topic=\"1225\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/s.l.c/40/1016_2.png\" class=\"avatar\"> S.L.C:</div>\n<blockquote>\n<p>And not to mention that you can kiss goodbye to dynamic libraries. If anyone relies on that.</p>\n</blockquote>\n</aside>\n<p>What do you mean? STL works just fine when used in dynamic libraries.</p>", "post_number": 42, "post_type": 1, "updated_at": "2019-07-05T10:36:33.930Z", "reply_count": 1, "reply_to_post_number": 41, "quote_count": 1, "incoming_link_count": 0, "reads": 30, "readers_count": 29, "score": 11.0, "yours": false, "topic_id": 1225, "topic_slug": "urho-vs-stdlib-small-benchmark-vs2015", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 246, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 30629, "name": "", "username": "S.L.C", "avatar_template": "/user_avatar/discourse.urho3d.io/s.l.c/{size}/1016_2.png", "created_at": "2019-07-05T14:07:13.395Z", "cooked": "<p>Maybe. I won\u2019t argue that. But if built with the same compiler/options/STL implementation etc. Which kinda takes away from their usefulness.</p>\n<p>That being said. I (personally) wouldn\u2019t consider doing it. The conditions for it to work the way it should are quite narrow. At least that\u2019s my opinion.</p>", "post_number": 43, "post_type": 1, "updated_at": "2019-07-05T14:07:13.395Z", "reply_count": 0, "reply_to_post_number": 42, "quote_count": 0, "incoming_link_count": 0, "reads": 29, "readers_count": 28, "score": 5.8, "yours": false, "topic_id": 1225, "topic_slug": "urho-vs-stdlib-small-benchmark-vs2015", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "reply_to_user": {"username": "rku", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/rku/{size}/3200_2.png"}, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 180, "hidden": false, "trust_level": 0, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "user_suspended": true, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}], "stream": [6975, 6976, 6978, 7003, 7016, 7027, 7029, 7031, 7033, 7037, 7038, 7047, 7049, 7053, 7054, 7062, 7065, 7067, 7074, 7097, 24087, 24095, 24097, 24098, 24099, 24112, 24114, 24115, 24116, 24121, 24123, 24125, 24134, 24140, 24142, 30306, 30307, 30308, 30309, 30310, 30312, 30625, 30629]}, "timeline_lookup": [[1, 2670], [4, 2669], [6, 2668], [10, 2667], [18, 2666], [21, 1692], [26, 1691], [36, 1251], [41, 1250], [42, 1237]], "tags_descriptions": {}, "id": 1225, "title": "Urho vs stdlib Small Benchmark (VS2015)", "fancy_title": "Urho vs stdlib Small Benchmark (VS2015)", "posts_count": 43, "created_at": "2015-08-01T19:48:59.000Z", "views": 2177, "reply_count": 15, "like_count": 4, "last_posted_at": "2019-07-05T14:07:13.395Z", "visible": true, "closed": false, "archived": false, "has_summary": false, "archetype": "regular", "slug": "urho-vs-stdlib-small-benchmark-vs2015", "category_id": 9, "word_count": 3931, "deleted_at": null, "user_id": 184, "featured_link": null, "pinned_globally": false, "pinned_at": null, "pinned_until": null, "image_url": null, "slow_mode_seconds": 0, "draft": null, "draft_key": "topic_1225", "draft_sequence": null, "unpinned": null, "pinned": false, "current_post_number": 1, "highest_post_number": 43, "deleted_by": null, "actions_summary": [{"id": 4, "count": 0, "hidden": false, "can_act": false}, {"id": 8, "count": 0, "hidden": false, "can_act": false}, {"id": 7, "count": 0, "hidden": false, "can_act": false}], "chunk_size": 20, "bookmarked": false, "bookmarks": [], "topic_timer": null, "message_bus_last_id": 0, "participant_count": 13, "show_read_indicator": false, "thumbnails": null, "slow_mode_enabled_until": null, "tags_disable_ads": false, "details": {"can_edit": false, "notification_level": 1, "participants": [{"id": 263, "username": "1vanK", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/1vank/{size}/768_2.png", "post_count": 10, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "moderator": true, "trust_level": 4}, {"id": 184, "username": "Enhex", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png", "post_count": 9, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "trust_level": 2}, {"id": 3, "username": "cadaver", "name": "Lasse \u00d6\u00f6rni", "avatar_template": "/user_avatar/discourse.urho3d.io/cadaver/{size}/3_2.png", "post_count": 5, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "admin": true, "trust_level": 2}, {"id": 669, "username": "Sinoid", "name": "Jonathan", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/f19dbf/{size}.png", "post_count": 3, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "trust_level": 2}, {"id": 32, "username": "globus", "name": "", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/5f9b8f/{size}.png", "post_count": 3, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "trust_level": 1}, {"id": 484, "username": "Eugene", "name": "Eugene Kozlov", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png", "post_count": 3, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "trust_level": 2}, {"id": 15, "username": "friesencr", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/friesencr/{size}/827_2.png", "post_count": 2, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "trust_level": 1}, {"id": 4, "username": "weitjong", "name": "Yao Wei Tjong", "avatar_template": "/user_avatar/discourse.urho3d.io/weitjong/{size}/4_2.png", "post_count": 2, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "admin": true, "trust_level": 4}, {"id": 180, "username": "S.L.C", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/s.l.c/{size}/1016_2.png", "post_count": 2, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "trust_level": 0}, {"id": 81, "username": "jenge", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/jenge/{size}/88_2.png", "post_count": 1, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "trust_level": 1}, {"id": 246, "username": "rku", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/rku/{size}/3200_2.png", "post_count": 1, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "trust_level": 2}, {"id": 69, "username": "boberfly", "name": "", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/b/aeb1de/{size}.png", "post_count": 1, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "trust_level": 1}, {"id": 151, "username": "sabotage3d", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/sabotage3d/{size}/87_2.png", "post_count": 1, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "trust_level": 2}], "created_by": {"id": 184, "username": "Enhex", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/enhex/{size}/81_2.png"}, "last_poster": {"id": 180, "username": "S.L.C", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/s.l.c/{size}/1016_2.png"}, "links": [{"url": "https://gist.github.com/Enhex/9c8cf1f614267565189b", "title": "urho_vs_stdlib.cpp \u00b7 GitHub", "internal": false, "attachment": false, "reflection": false, "clicks": 4, "user_id": 184, "domain": "gist.github.com", "root_domain": "github.com"}, {"url": "http://stackoverflow.com/questions/19154080/restricting-c-template-usage-to-pod-types", "title": "restricting c++ template usage to POD types - Stack Overflow", "internal": false, "attachment": false, "reflection": false, "clicks": 4, "user_id": 184, "domain": "stackoverflow.com", "root_domain": "stackoverflow.com"}, {"url": "http://www.ogre3d.org/forums/viewtopic.php?f=4&t=80319", "title": "Ogre Forums \u2022 View topic - C++11 Adoption stance", "internal": false, "attachment": false, "reflection": false, "clicks": 3, "user_id": 3, "domain": "www.ogre3d.org", "root_domain": "ogre3d.org"}, {"url": "https://dropmefiles.com/3eAjq", "title": "DropMeFiles \u2013 free one-click file sharing service", "internal": false, "attachment": false, "reflection": false, "clicks": 2, "user_id": 263, "domain": "dropmefiles.com", "root_domain": "dropmefiles.com"}, {"url": "https://bitbucket.org/bitsquid/foundation", "title": "bitsquid / foundation \u2014 Bitbucket", "internal": false, "attachment": false, "reflection": false, "clicks": 2, "user_id": 69, "domain": "bitbucket.org", "root_domain": "bitbucket.org"}, {"url": "https://drive.google.com/open?id=1hiMki-KQUsCI1m5M9vegj_gKjquS5GZf", "title": null, "internal": false, "attachment": false, "reflection": false, "clicks": 1, "user_id": 263, "domain": "drive.google.com", "root_domain": "google.com"}, {"url": "http://www.ogre3d.org/forums/viewtopic.php?f=4&t=80319", "title": "C++11 Adoption stance - Ogre Forums", "internal": false, "attachment": false, "reflection": false, "clicks": 1, "user_id": 184, "domain": "www.ogre3d.org", "root_domain": "ogre3d.org"}, {"url": "http://en.cppreference.com/w/cpp/memory/enable_shared_from_this/weak_from_this", "title": "std::enable_shared_from_this::weak_from_this - cppreference.com", "internal": false, "attachment": false, "reflection": false, "clicks": 1, "user_id": 263, "domain": "en.cppreference.com", "root_domain": "cppreference.com"}]}, "suggested_topics": [{"id": 7347, "title": "How does Urho handle script objects each frame?", "fancy_title": "How does Urho handle script objects each frame?", "slug": "how-does-urho-handle-script-objects-each-frame", "posts_count": 3, "reply_count": 1, "highest_post_number": 3, "image_url": null, "created_at": "2022-11-08T02:33:56.461Z", "last_posted_at": "2022-11-08T14:46:09.857Z", "bumped": true, "bumped_at": "2022-11-08T14:46:09.857Z", "archetype": "regular", "unseen": false, "pinned": false, "unpinned": null, "visible": true, "closed": false, "archived": false, "bookmarked": null, "liked": null, "tags_descriptions": {}, "like_count": 0, "views": 64, "category_id": 9, "featured_link": null, "has_accepted_answer": false, "posters": [{"extras": "latest", "description": "Original Poster, Most Recent Poster", "user": {"id": 1292, "username": "evolgames", "name": "evol", "avatar_template": "/user_avatar/discourse.urho3d.io/evolgames/{size}/3169_2.png"}}, {"extras": null, "description": "Frequent Poster", "user": {"id": 628, "username": "SirNate0", "name": "SirNate0", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}}]}, {"id": 7304, "title": "Urho3D is crashing on Android 12", "fancy_title": "Urho3D is crashing on Android 12", "slug": "urho3d-is-crashing-on-android-12", "posts_count": 1, "reply_count": 0, "highest_post_number": 1, "image_url": null, "created_at": "2022-07-28T10:03:51.280Z", "last_posted_at": "2022-07-28T10:03:51.349Z", "bumped": true, "bumped_at": "2022-07-28T10:38:06.014Z", "archetype": "regular", "unseen": false, "pinned": false, "unpinned": null, "visible": true, "closed": false, "archived": false, "bookmarked": null, "liked": null, "tags_descriptions": {}, "like_count": 1, "views": 126, "category_id": 9, "featured_link": null, "has_accepted_answer": false, "posters": [{"extras": "latest single", "description": "Original Poster, Most Recent Poster", "user": {"id": 809, "username": "elix22", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/elix22/{size}/1437_2.png"}}]}, {"id": 7344, "title": "Do we give up supporting dx11\uff1f", "fancy_title": "Do we give up supporting dx11\uff1f", "slug": "do-we-give-up-supporting-dx11", "posts_count": 3, "reply_count": 1, "highest_post_number": 3, "image_url": null, "created_at": "2022-11-03T09:37:37.893Z", "last_posted_at": "2022-11-03T13:09:15.153Z", "bumped": true, "bumped_at": "2022-11-03T15:28:58.128Z", "archetype": "regular", "unseen": false, "pinned": false, "unpinned": null, "visible": true, "closed": false, "archived": false, "bookmarked": null, "liked": null, "tags_descriptions": {}, "like_count": 0, "views": 78, "category_id": 9, "featured_link": null, "has_accepted_answer": false, "posters": [{"extras": "latest", "description": "Original Poster, Most Recent Poster", "user": {"id": 1510, "username": "SoNewBee", "name": "So New Bee", "avatar_template": "/user_avatar/discourse.urho3d.io/sonewbee/{size}/3755_2.png"}}, {"extras": null, "description": "Frequent Poster", "user": {"id": 263, "username": "1vanK", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/1vank/{size}/768_2.png"}}]}, {"id": 7243, "title": "Android compile fails", "fancy_title": "Android compile fails", "slug": "android-compile-fails", "posts_count": 5, "reply_count": 2, "highest_post_number": 5, "image_url": null, "created_at": "2022-04-25T08:46:07.947Z", "last_posted_at": "2022-05-06T08:22:51.592Z", "bumped": true, "bumped_at": "2022-05-06T08:22:51.592Z", "archetype": "regular", "unseen": false, "pinned": false, "unpinned": null, "visible": true, "closed": false, "archived": false, "bookmarked": null, "liked": null, "tags_descriptions": {}, "like_count": 0, "views": 181, "category_id": 10, "featured_link": null, "has_accepted_answer": true, "posters": [{"extras": "latest", "description": "Original Poster, Most Recent Poster", "user": {"id": 856, "username": "feresmu", "name": null, "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/f/f08c70/{size}.png"}}, {"extras": null, "description": "Frequent Poster, Accepted Answer", "user": {"id": 4, "username": "weitjong", "name": "Yao Wei Tjong", "avatar_template": "/user_avatar/discourse.urho3d.io/weitjong/{size}/4_2.png"}}, {"extras": null, "description": "Frequent Poster", "user": {"id": 628, "username": "SirNate0", "name": "SirNate0", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}}]}, {"id": 7075, "title": "How pre-calculate tangents on vertices - model built in code?", "fancy_title": "How pre-calculate tangents on vertices - model built in code?", "slug": "how-pre-calculate-tangents-on-vertices-model-built-in-code", "posts_count": 4, "reply_count": 2, "highest_post_number": 4, "image_url": "https://global.discourse-cdn.com/standard17/uploads/urho3d/original/2X/0/0e9c502d8d186f6e73e694514a63271e59fe1909.jpeg", "created_at": "2021-12-01T18:50:44.369Z", "last_posted_at": "2021-12-02T04:50:34.440Z", "bumped": true, "bumped_at": "2021-12-02T04:50:34.440Z", "archetype": "regular", "unseen": false, "pinned": false, "unpinned": null, "visible": true, "closed": false, "archived": false, "bookmarked": null, "liked": null, "tags_descriptions": {}, "like_count": 3, "views": 130, "category_id": 7, "featured_link": null, "has_accepted_answer": false, "posters": [{"extras": "latest", "description": "Original Poster, Most Recent Poster", "user": {"id": 1488, "username": "ToolmakerSteve", "name": "ToolmakerSteve", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/t/ba9def/{size}.png"}}, {"extras": null, "description": "Frequent Poster", "user": {"id": 484, "username": "Eugene", "name": "Eugene Kozlov", "avatar_template": "/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png"}}]}]}