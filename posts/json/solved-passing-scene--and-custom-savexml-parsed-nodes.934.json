{"post_stream":{"posts":[{"id":5383,"name":"","username":"vivienneanthony","avatar_template":"/user_avatar/discourse.urho3d.io/vivienneanthony/{size}/942_2.png","created_at":"2015-03-16T04:43:38.000Z","cooked":"\u003cp\u003eHi\u003c/p\u003e\n\u003cp\u003eIs this valid ? In the Manager class headerI created a SharedPtr \u0026lt;Scene). I attempted clearing it then directly pointing the pointer to the pass pointer but I don’t think that is working.\u003c/p\u003e\n\u003cp\u003eViv\u003c/p\u003e\n\u003cp\u003e[code]/// Set Scene\u003cbr\u003e\nint Manager::SetScene(SharedPtr scene)\u003cbr\u003e\n{\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e/// point\nscene_ = new Scene(context_);\n\nscene_ = scene;\n\n/// Node\nNode * parentnode = scene_ -\u0026gt; GetParent();\n\nString  nodename = parentnode -\u0026gt;GetName();\n\ncout \u0026lt;\u0026lt; nodename.CString() \u0026lt;\u0026lt;endl;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e}\u003cbr\u003e\n[/code]\u003c/p\u003e","post_number":1,"post_type":1,"updated_at":"2017-01-02T01:04:12.705Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":79,"reads":22,"readers_count":21,"score":399.4,"yours":false,"topic_id":934,"topic_slug":"solved-passing-scene--and-custom-savexml-parsed-nodes","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":88,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":5384,"name":"","username":"JTippetts","avatar_template":"/user_avatar/discourse.urho3d.io/jtippetts/{size}/357_2.png","created_at":"2015-03-16T05:23:05.000Z","cooked":"\u003caside class=\"quote\"\u003e\n\u003cdiv class=\"title\"\u003e\n\u003cdiv class=\"quote-controls\"\u003e\u003c/div\u003e\n\u003cimg alt width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/vivienneanthony/40/942_1.png\" class=\"avatar\"\u003e vivienneanthony:\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003eint Manager::SetScene(SharedPtr scene)\u003cbr\u003e\n{\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e/// point\nscene_ = new Scene(context_);\n\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/aside\u003e\n\u003cp\u003eThe above creates a new scene and stores it in the pointer scene_\u003c/p\u003e\n\u003caside class=\"quote\"\u003e\n\u003cblockquote\u003e\n\u003cpre\u003e\u003ccode\u003escene_ = scene;\n\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/aside\u003e\n\u003cp\u003eThe above overwrites the newly created pointer above with the value of whatever is in scene, passed to the method. If scene is an empty pointer, scene_ is now empty. If scene is an existing Scene, then scene_ is now pointing to that existing scene. The newly created scene_ allocated above is gone.\u003c/p\u003e\n\u003caside class=\"quote\"\u003e\n\u003cblockquote\u003e\n\u003cpre\u003e\u003ccode\u003e/// Node\nNode * parentnode = scene_ -\u0026gt; GetParent();\n\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/aside\u003e\n\u003cp\u003eThe above tries to get the parent of scene_, but a Scene is a root-level Node be default. A newly constructed scene is going to have a null parent.\u003c/p\u003e\n\u003caside class=\"quote\"\u003e\n\u003cblockquote\u003e\n\u003cpre\u003e\u003ccode\u003eString  nodename = parentnode -\u0026gt;GetName();\n\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/aside\u003e\n\u003cp\u003eThe above tries to dereference the null parent of the scene to obtain its name. Dereferencing a null pointer is, of course, an error.\u003c/p\u003e\n\u003cp\u003eI honestly can’t even begin to imagine what it is you are trying to accomplish here, but I suspect that 24+ hours without sleep might be a part of the reason for that.\u003c/p\u003e","post_number":2,"post_type":1,"updated_at":"2017-01-02T01:04:12.761Z","reply_count":0,"reply_to_post_number":null,"quote_count":1,"incoming_link_count":0,"reads":22,"readers_count":21,"score":4.4,"yours":false,"topic_id":934,"topic_slug":"solved-passing-scene--and-custom-savexml-parsed-nodes","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":30,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":5385,"name":"","username":"vivienneanthony","avatar_template":"/user_avatar/discourse.urho3d.io/vivienneanthony/{size}/942_2.png","created_at":"2015-03-16T05:35:05.000Z","cooked":"\u003cp\u003eLol. yea. It’s late and I’m tired.\u003c/p\u003e\n\u003cp\u003eAfter making that note. It works. I think it’s bed time for me.\u003c/p\u003e\n\u003cp\u003eUltimately.  I want to recursively look through the Scene and save all nodes not generated including the components(Manual(Editor or in-client addition) or Automatic (NPC’S, spawn points, etc)). Then also be able to do the opposite like load.\u003c/p\u003e","post_number":3,"post_type":1,"updated_at":"2017-01-02T01:04:12.838Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":0,"reads":17,"readers_count":16,"score":3.4,"yours":false,"topic_id":934,"topic_slug":"solved-passing-scene--and-custom-savexml-parsed-nodes","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":88,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":5387,"name":"Lasse Öörni","username":"cadaver","avatar_template":"/user_avatar/discourse.urho3d.io/cadaver/{size}/3_2.png","created_at":"2015-03-16T09:07:13.000Z","cooked":"\u003caside class=\"quote\"\u003e\n\u003cdiv class=\"title\"\u003e\n\u003cdiv class=\"quote-controls\"\u003e\u003c/div\u003e\n\u003cimg alt width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/jtippetts/40/357_1.png\" class=\"avatar\"\u003e JTippetts:\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003eA newly constructed scene is going to have a null parent.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/aside\u003e\n\u003cp\u003eI would add that in normal use a scene is always going to have a null parent. Or, Urho will not specifically stop you from adding a scene as a child to another scene or another node, but it does not make sense and you can expect errors (eg. node/component ID allocation clashes) or even outright crashes to result from that.\u003c/p\u003e","post_number":4,"post_type":1,"updated_at":"2017-01-02T01:04:12.966Z","reply_count":0,"reply_to_post_number":null,"quote_count":1,"incoming_link_count":0,"reads":20,"readers_count":19,"score":4.0,"yours":false,"topic_id":934,"topic_slug":"solved-passing-scene--and-custom-savexml-parsed-nodes","display_username":"Lasse Öörni","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":"Urho3D Author","title_is_group":false,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":true,"staff":true,"user_id":3,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":5408,"name":"","username":"vivienneanthony","avatar_template":"/user_avatar/discourse.urho3d.io/vivienneanthony/{size}/942_2.png","created_at":"2015-03-17T06:20:26.000Z","cooked":"\u003cp\u003eThe new code is this. Any recommendations??\u003c/p\u003e\n\u003cp\u003e[code]\u003c/p\u003e\n\u003cp\u003e/// Main Save scene\u003cbr\u003e\nint Manager::SaveScene(int mode)\u003cbr\u003e\n{\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e/// Check if scene exist\n\nif(scene_==NULL)\n{\n    return 1;\n}\n\n/// point\nunsigned int childrencount=scene_-\u0026gt;GetNumChildren();\ncout \u0026lt;\u0026lt;  childrencount \u0026lt;\u0026lt; endl;\n\nchildren_ = scene_-\u0026gt;GetChildren();\n\n/// loop each child\nfor (Vector\u0026lt;SharedPtr\u0026lt;Node\u0026gt; \u0026gt;::Iterator i = children_.Begin(); i != children_.End(); ++i)\n{\n    /// Create a new child instance\n    Node* childnode = *i;\n\n    /// Get node infomration, check for children, and check components\n    if(childnode-\u0026gt;GetName().Find(\"Generated\",0,false)==String::NPOS)\n    {\n        cout \u0026lt;\u0026lt; \"Node :\" \u0026lt;\u0026lt; childnode-\u0026gt;GetName().CString() \u0026lt;\u0026lt;endl;\n\n        /// GET ALL NODE INFORMATION\n\n        if(childnode-\u0026gt;GetNumChildren())\n        {\n            SaveSceneNode(childnode);\n        }\n        else\n        {\n            SaveSceneNodeComponents(childnode);\n        }\n\n    }\n\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e}\u003c/p\u003e\n\u003cp\u003e/// Recursive\u003cbr\u003e\nint Manager::SaveSceneNode(Node * node)\u003cbr\u003e\n{\u003cbr\u003e\n/// Define a temporary pointer\u003cbr\u003e\nVector\u0026lt;SharedPtr \u0026gt; subchildren_;\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e/// Get children node\nsubchildren_ = node-\u0026gt;GetChildren();\n\n///IF no child exist get all components\n///ELSE\nfor (Vector\u0026lt;SharedPtr\u0026lt;Node\u0026gt; \u0026gt;::Iterator i = subchildren_.Begin(); i != subchildren_.End(); ++i)\n{\n    /// Create a new child instance\n    Node* childnode = *i;\n\n    /// Get node infomration, check for children, and check components\n    if(childnode-\u0026gt;GetName().Find(\"Generated\",0,false)==String::NPOS)\n    {\n        cout \u0026lt;\u0026lt; \"Node :\" \u0026lt;\u0026lt; childnode-\u0026gt;GetName().CString() \u0026lt;\u0026lt;endl;\n\n        // set virtual const\n        const Vector\u0026lt;AttributeInfo\u0026gt;* attributes = childnode-\u0026gt;GetAttributes();\n\n        /// loop through attributes\n        for (Vector\u0026lt;AttributeInfo\u0026gt;::ConstIterator i = attributes-\u0026gt;Begin(); i != attributes-\u0026gt;End(); ++i)\n        {\n            /// output info\n            cout \u0026lt;\u0026lt; i -\u0026gt; name_.CString() \u0026lt;\u0026lt; \" type \" \u0026lt;\u0026lt; i -\u0026gt; defaultValue_. GetTypeName ().CString() \u0026lt;\u0026lt;\" value\" \u0026lt;\u0026lt; i -\u0026gt; defaultValue_.ToString().CString()\u0026lt;\u0026lt; endl;\n        }\n\n\n        if(childnode-\u0026gt;GetNumChildren())\n        {\n            SaveSceneNode(childnode);\n        }\n        else\n        {\n            SaveSceneNodeComponents(childnode);\n        }\n    }\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e}\u003cbr\u003e\nint Manager::SaveSceneNodeComponents(Node *node)\u003cbr\u003e\n{\u003cbr\u003e\n/// Define temporary pointer for components\u003cbr\u003e\nVector\u0026lt; SharedPtr\u0026lt; Component \u0026gt; \u0026gt; \tsubcomponents_;\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e/// If node has no components\nif(node-\u0026gt;\tGetNumComponents ()==0)\n{\n    cout \u0026lt;\u0026lt; \" Node has no components\" \u0026lt;\u0026lt; endl;\n\n    return 1;\n}\n\n/// Get children node\nsubcomponents_ = node-\u0026gt;GetComponents();\n\n/// Loop through components\nfor (Vector\u0026lt;SharedPtr\u0026lt;Component\u0026gt; \u0026gt;::Iterator i = subcomponents_.Begin(); i != subcomponents_.End(); ++i)\n{\n    Component * subcomponent = *i;\n\n    cout \u0026lt;\u0026lt; subcomponent-\u0026gt;GetTypeName().CString() \u0026lt;\u0026lt;endl;\n\n\n    /// READ EACH COMPONENT AND GET ATTRIBUTES\n    if(subcomponent-\u0026gt;GetNumAttributes ())\n    {\n        /// set virtual const\n        const Vector\u0026lt;AttributeInfo\u0026gt;* attributes = subcomponent-\u0026gt;GetAttributes();\n\n        /// loop through attributes\n        for (Vector\u0026lt;AttributeInfo\u0026gt;::ConstIterator i = attributes-\u0026gt;Begin(); i != attributes-\u0026gt;End(); ++i)\n        {\n            /// output info\n            cout \u0026lt;\u0026lt; i -\u0026gt; name_.CString() \u0026lt;\u0026lt; \" type \" \u0026lt;\u0026lt; i -\u0026gt; defaultValue_. GetTypeName ().CString() \u0026lt;\u0026lt;\" value\" \u0026lt;\u0026lt; i -\u0026gt; defaultValue_.ToString().CString()\u0026lt;\u0026lt; endl;\n        }\n\n    }\n}\n\n\nreturn 1;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e}[/code]\u003c/p\u003e\n\u003cp\u003eThe result is okay but I think I have to differentiate a subchild because the output looks like one long list\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003eNode :Mushroom\nIs Enabled type Bool valuetrue\nName type String value\nPosition type Vector3 value0 0 0\nRotation type Quaternion value1 0 0 0\nScale type Vector3 value1 1 1\nVariables type VariantMap value\nNetwork Position type Vector3 value0 0 0\nNetwork Rotation type Buffer value\nNetwork Parent Node type Buffer value\nStaticModel\nIs Enabled type Bool valuetrue\nModel type ResourceRef value\nMaterial type ResourceRefList value\nIs Occluder type Bool valuefalse\nCan Be Occluded type Bool valuetrue\nCast Shadows type Bool valuefalse\nDraw Distance type Float value0\nShadow Distance type Float value0\nLOD Bias type Float value1\nMax Lights type Int value0\nView Mask type Int value-1\nLight Mask type Int value-1\nShadow Mask type Int value-1\nZone Mask type Int value-1\nOcclusion LOD Level type Int value-1\nGameObject\nGame Lifetime type Float value-1\n\n\nNode :Character\nIs Enabled type Bool valuetrue\nName type String value\nPosition type Vector3 value0 0 0\nRotation type Quaternion value1 0 0 0\nScale type Vector3 value1 1 1\nVariables type VariantMap value\nNetwork Position type Vector3 value0 0 0\nNetwork Rotation type Buffer value\nNetwork Parent Node type Buffer value\nSubNode :hips\nSubNode :thigh.L\nSubNode :shin.L\nSubNode :foot.L\nSubNode :toe.L\n Node has no components\nSubNode :thigh.R\nSubNode :shin.R\nSubNode :foot.R\nSubNode :toe.R\n Node has no components\nSubNode :spine\nSubNode :chest\nSubNode :clavicle.R\nSubNode :upper_arm.R\nSubNode :forearm.R\nSubNode :hand.R\nSubNode :thumb.02.R\nSubNode :thumb.03.R\n Node has no components\nSubNode :f_ring.01.R\n Node has no components\nSubNode :f_index.01.R\n Node has no components\nSubNode :clavicle.L\nSubNode :upper_arm.L\nSubNode :forearm.L\nSubNode :hand.L\nSubNode :thumb.02.L\nSubNode :thumb.03.L\n Node has no components\nSubNode :f_ring.01.L\n Node has no components\nSubNode :f_index.01.L\n Node has no components\nSubNode :neck\nSubNode :head\nSubNode :jaw\n Node has no components\nSubNode :eye.R\n Node has no components\nSubNode :eye.L\n Node has no components\nSubNode :CameraFirstPerson\nCamera\nIs Enabled type Bool valuetrue\nNear Clip type Float value0.1\nFar Clip type Float value1000\nFOV type Float value45\nAspect Ratio type Float value1\nFill Mode type Int value0\nAuto Aspect Ratio type Bool valuetrue\nOrthographic type Bool valuefalse\nOrthographic Size type Float value20\nZoom type Float value1\nLOD Bias type Float value1\nView Mask type Int value-1\nView Override Flags type Int value0\nProjection Offset type Vector2 value0 0\nReflection Plane type Vector4 value0 1 0 0\nClip Plane type Vector4 value0 1 0 0\nUse Reflection type Bool valuefalse\nUse Clipping type Bool valuefalse\nSubNode :CrossBox\nStaticModel\nIs Enabled type Bool valuetrue\nModel type ResourceRef value\nMaterial type ResourceRefList value\nIs Occluder type Bool valuefalse\nCan Be Occluded type Bool valuetrue\nCast Shadows type Bool valuefalse\nDraw Distance type Float value0\nShadow Distance type Float value0\nLOD Bias type Float value1\nMax Lights type Int value0\nView Mask type Int value-1\nLight Mask type Int value-1\nShadow Mask type Int value-1\nZone Mask type Int value-1\nOcclusion LOD Level type Int value-1\n\n\nNode :Camera\nIs Enabled type Bool valuetrue\nName type String value\nPosition type Vector3 value0 0 0\nRotation type Quaternion value1 0 0 0\nScale type Vector3 value1 1 1\nVariables type VariantMap value\nNetwork Position type Vector3 value0 0 0\nNetwork Rotation type Buffer value\nNetwork Parent Node type Buffer value\nCamera\nIs Enabled type Bool valuetrue\nNear Clip type Float value0.1\nFar Clip type Float value1000\nFOV type Float value45\nAspect Ratio type Float value1\nFill Mode type Int value0\nAuto Aspect Ratio type Bool valuetrue\nOrthographic type Bool valuefalse\nOrthographic Size type Float value20\nZoom type Float value1\nLOD Bias type Float value1\nView Mask type Int value-1\nView Override Flags type Int value0\nProjection Offset type Vector2 value0 0\nReflection Plane type Vector4 value0 1 0 0\nClip Plane type Vector4 value0 1 0 0\nUse Reflection type Bool valuefalse\nUse Clipping type Bool valuefalse\nGameObject\nGame Lifetime type Float value-1\u003c/code\u003e\u003c/pre\u003e","post_number":5,"post_type":1,"updated_at":"2017-01-02T01:04:14.515Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":0,"reads":22,"readers_count":21,"score":4.4,"yours":false,"topic_id":934,"topic_slug":"solved-passing-scene--and-custom-savexml-parsed-nodes","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":88,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":5412,"name":"","username":"JTippetts","avatar_template":"/user_avatar/discourse.urho3d.io/jtippetts/{size}/357_2.png","created_at":"2015-03-17T16:33:23.000Z","cooked":"\u003cp\u003eWhat is wring with using Scene::SaveXML()?\u003c/p\u003e","post_number":6,"post_type":1,"updated_at":"2017-01-02T01:04:14.840Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":0,"reads":17,"readers_count":16,"score":3.4,"yours":false,"topic_id":934,"topic_slug":"solved-passing-scene--and-custom-savexml-parsed-nodes","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":30,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":5417,"name":"","username":"vivienneanthony","avatar_template":"/user_avatar/discourse.urho3d.io/vivienneanthony/{size}/942_2.png","created_at":"2015-03-17T18:07:53.000Z","cooked":"\u003caside class=\"quote\"\u003e\n\u003cdiv class=\"title\"\u003e\n\u003cdiv class=\"quote-controls\"\u003e\u003c/div\u003e\n\u003cimg alt width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/jtippetts/40/357_1.png\" class=\"avatar\"\u003e JTippetts:\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003eWhat is wring with using Scene::SaveXML()?\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/aside\u003e\n\u003cp\u003eI have to manually go through the node structure and not save Generated and a few other types of components(like camera and others that will throw off everything). I really don’t want to modify the base Scene.cpp code to do so.\u003c/p\u003e\n\u003cp\u003eI want output that can be imported into the \u003ca href=\"http://Editor.as\" rel=\"nofollow noopener\"\u003eEditor.as\u003c/a\u003e or another Editor. I put the latest semi-close code on github.\u003c/p\u003e","post_number":7,"post_type":1,"updated_at":"2017-01-02T01:04:15.185Z","reply_count":0,"reply_to_post_number":null,"quote_count":1,"incoming_link_count":0,"reads":18,"readers_count":17,"score":3.6,"yours":false,"topic_id":934,"topic_slug":"solved-passing-scene--and-custom-savexml-parsed-nodes","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"link_counts":[{"url":"http://Editor.as","internal":false,"reflection":false,"clicks":1}],"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":88,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":5418,"name":"","username":"vivienneanthony","avatar_template":"/user_avatar/discourse.urho3d.io/vivienneanthony/{size}/942_2.png","created_at":"2015-03-17T18:12:36.000Z","cooked":"\u003cp\u003eI made some code to try to replace the Export Node or SaveXML parsing through a scene. So far the output is as follows.\u003c/p\u003e\n\u003cp\u003eAny help is appreciated? I should be able to loadXML with the output since \u003ca href=\"http://Editor.as\" rel=\"nofollow noopener\"\u003eEditor.as\u003c/a\u003e is written in Angelscript directly linking the Save XML(Differiental) will not happen soon unless a c/c++ editor becomes available.\u003c/p\u003e\n\u003cp\u003eSource code in \u003ca href=\"https://github.com/vivienneanthony/Existence/tree/development/Source/ExistenceApps/ExistenceClient\" rel=\"nofollow noopener\"\u003egithub.com/vivienneanthony/Exis … enceClient\u003c/a\u003e as manager.cpp and manager.cpp\u003c/p\u003e\n\u003cp\u003e[code]/// Main Save scene\u003cbr\u003e\nint Manager::SaveScene(int mode)\u003cbr\u003e\n{\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e/// Check if scene exist\n\nif(scene_==NULL)\n{\n    return 1;\n}\n\n\nString savesceneexport;\n\nResourceCache * cache = GetSubsystem\u0026lt;ResourceCache\u0026gt;();\nFileSystem * filesystem = GetSubsystem\u0026lt;FileSystem\u0026gt;();\n\nsavesceneexport.Append(filesystem-\u0026gt;GetProgramDir().CString());\nsavesceneexport.Append(\"CoreData/\");\nsavesceneexport.Append(\"testing.xml\");\n\nFile saveFile(context_, savesceneexport.CString(), FILE_WRITE);\n\n/// Check if the account file information exist\nif(!filesystem-\u0026gt;FileExists(savesceneexport.CString()))\n{\n    //cout \u0026lt;\u0026lt; \"\\r\\nAccount file (\"\u0026lt;\u0026lt; savesceneexport.CString() \u0026lt;\u0026lt; \") does not exist.\";\n}\n\nXMLFile * savesceneexportxml= new XMLFile(context_);\n\nXMLElement configElem = savesceneexportxml-\u0026gt; CreateRoot(\"node\");\n\n/// point\nunsigned int childrencount=scene_-\u0026gt;GetNumChildren();\ncout \u0026lt;\u0026lt;  childrencount \u0026lt;\u0026lt; endl;\n\nchildren_ = scene_-\u0026gt;GetChildren();\n\n/// loop each child\nfor (Vector\u0026lt;SharedPtr\u0026lt;Node\u0026gt; \u0026gt;::Iterator i = children_.Begin(); i != children_.End(); ++i)\n{\n    /// Create a new child instance\n    Node* childnode = *i;\n\n    /// Get node infomration, check for children, and check components\n    if((childnode-\u0026gt;GetName().Find(\"Generated\",0,false)==String::NPOS)\n        \u0026amp;\u0026amp;(childnode-\u0026gt;GetName().Find(\"Character\",0,false)==String::NPOS)\n        \u0026amp;\u0026amp;(childnode-\u0026gt;GetName().Find(\"Camera\",0,false)==String::NPOS))\n    {\n        XMLElement NodeElement = configElem. CreateChild (\"node\");\n\n        // set virtual const\n        const Vector\u0026lt;AttributeInfo\u0026gt;* attributes = childnode-\u0026gt;GetAttributes();\n\n        /// loop through attributes\n        for (Vector\u0026lt;AttributeInfo\u0026gt;::ConstIterator i = attributes-\u0026gt;Begin(); i != attributes-\u0026gt;End(); ++i)\n        {\n            XMLElement AttributeElement = NodeElement. CreateChild (\"attribute\");\n            AttributeElement.SetAttribute (\"name\", i -\u0026gt; name_);\n            AttributeElement.SetAttribute (\"value\", i -\u0026gt; defaultValue_.ToString());\n\n        }\n\n        if(childnode-\u0026gt;GetNumChildren())\n        {\n            SaveSceneNode(childnode);\n        }\n        else\n        {\n            SaveSceneNodeComponents(childnode);\n        }\n\n    }\n}\n  savesceneexportxml-\u0026gt;Save(saveFile);\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e}\u003c/p\u003e\n\u003cp\u003e/// Recursive\u003cbr\u003e\nint Manager::SaveSceneNode(Node * node)\u003cbr\u003e\n{\u003cbr\u003e\n/// Define a temporary pointer\u003cbr\u003e\nVector\u0026lt;SharedPtr \u0026gt; subchildren_;\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e/// Get children node\nsubchildren_ = node-\u0026gt;GetChildren();\n\nfor (Vector\u0026lt;SharedPtr\u0026lt;Node\u0026gt; \u0026gt;::Iterator i = subchildren_.Begin(); i != subchildren_.End(); ++i)\n{\n    /// Create a new child instance\n    Node* childnode = *i;\n\n    /// Get node infomration, check for children, and check components\n    if(childnode-\u0026gt;GetName().Find(\"Generated\",0,false)==String::NPOS)\n    {\n        ///cout \u0026lt;\u0026lt; \"SubNode :\" \u0026lt;\u0026lt; childnode-\u0026gt;GetName().CString() \u0026lt;\u0026lt;endl;\n        XMLElement NodeElement = configElem. CreateChild (\"node\");\n\n        if(childnode-\u0026gt;GetNumChildren())\n        {\n            SaveSceneNode(childnode);\n        }\n        else\n        {\n            SaveSceneNodeComponents(childnode);\n        }\n    }\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e}\u003cbr\u003e\nint Manager::SaveSceneNodeComponents(Node *node)\u003cbr\u003e\n{\u003cbr\u003e\n/// Define temporary pointer for components\u003cbr\u003e\nVector\u0026lt; SharedPtr\u0026lt; Component \u0026gt; \u0026gt; \tsubcomponents_;\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e/// If node has no components\nif(node-\u0026gt;\tGetNumComponents ()==0)\n{\n    cout \u0026lt;\u0026lt; \" Node has no components\" \u0026lt;\u0026lt; endl;\n\n    return 1;\n}\n\n/// Get children node\nsubcomponents_ = node-\u0026gt;GetComponents();\n\n/// Loop through components\nfor (Vector\u0026lt;SharedPtr\u0026lt;Component\u0026gt; \u0026gt;::Iterator i = subcomponents_.Begin(); i != subcomponents_.End(); ++i)\n{\n    Component * subcomponent = *i;\n\n  \tXMLElement componentElement = configElem.CreateChild (\"component\");\n  \tcomponentElement.SetAttribute(\"Type\", subcomponent-\u0026gt;GetTypeName());\n\n    /// READ EACH COMPONENT AND GET ATTRIBUTES\n    if(subcomponent-\u0026gt;GetNumAttributes ())\n    {\n        /// set virtual const\n        const Vector\u0026lt;AttributeInfo\u0026gt;* attributes = subcomponent-\u0026gt;GetAttributes();\n\n        /// loop through attributes\n        for (Vector\u0026lt;AttributeInfo\u0026gt;::ConstIterator i = attributes-\u0026gt;Begin(); i != attributes-\u0026gt;End(); ++i)\n        {\n            /// output info\n            ///cout \u0026lt;\u0026lt; i -\u0026gt; name_.CString() \u0026lt;\u0026lt; \" type \" \u0026lt;\u0026lt; i -\u0026gt; defaultValue_. GetTypeName ().CString() \u0026lt;\u0026lt;\" value \" \u0026lt;\u0026lt; i -\u0026gt; defaultValue_.ToString().CString()\u0026lt;\u0026lt; endl;\n            XMLElement AttributeElement = configElem. CreateChild (\"attribute\");\n            AttributeElement.SetAttribute (\"name\", i -\u0026gt; name_);\n            AttributeElement.SetAttribute (\"value\", i -\u0026gt; defaultValue_.ToString());\n        }\n\n    }\n}\n\nreturn 1;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e}[/code]\u003c/p\u003e\n\u003cp\u003eThe output is\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e\u0026lt;?xml version=\"1.0\"?\u0026gt;\n\u0026lt;node\u0026gt;\n\t\u0026lt;node\u0026gt;\n\t\t\u0026lt;attribute name=\"Is Enabled\" value=\"true\" /\u0026gt;\n\t\t\u0026lt;attribute name=\"Name\" value=\"\" /\u0026gt;\n\t\t\u0026lt;attribute name=\"Position\" value=\"0 0 0\" /\u0026gt;\n\t\t\u0026lt;attribute name=\"Rotation\" value=\"1 0 0 0\" /\u0026gt;\n\t\t\u0026lt;attribute name=\"Scale\" value=\"1 1 1\" /\u0026gt;\n\t\t\u0026lt;attribute name=\"Variables\" value=\"\" /\u0026gt;\n\t\t\u0026lt;attribute name=\"Network Position\" value=\"0 0 0\" /\u0026gt;\n\t\t\u0026lt;attribute name=\"Network Rotation\" value=\"\" /\u0026gt;\n\t\t\u0026lt;attribute name=\"Network Parent Node\" value=\"\" /\u0026gt;\n\t\u0026lt;/node\u0026gt;\n\t\u0026lt;node\u0026gt;\n\t\t\u0026lt;attribute name=\"Is Enabled\" value=\"true\" /\u0026gt;\n\t\t\u0026lt;attribute name=\"Name\" value=\"\" /\u0026gt;\n\t\t\u0026lt;attribute name=\"Position\" value=\"0 0 0\" /\u0026gt;\n\t\t\u0026lt;attribute name=\"Rotation\" value=\"1 0 0 0\" /\u0026gt;\n\t\t\u0026lt;attribute name=\"Scale\" value=\"1 1 1\" /\u0026gt;\n\t\t\u0026lt;attribute name=\"Variables\" value=\"\" /\u0026gt;\n\t\t\u0026lt;attribute name=\"Network Position\" value=\"0 0 0\" /\u0026gt;\n\t\t\u0026lt;attribute name=\"Network Rotation\" value=\"\" /\u0026gt;\n\t\t\u0026lt;attribute name=\"Network Parent Node\" value=\"\" /\u0026gt;\n\t\u0026lt;/node\u0026gt;\n\u0026lt;/node\u0026gt;\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eI’m trying to get output similiar to\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e\u0026lt;?xml version=\"1.0\"?\u0026gt;\n\u0026lt;node id=\"16777249\"\u0026gt;\n\t\u0026lt;attribute name=\"Is Enabled\" value=\"true\" /\u0026gt;\n\t\u0026lt;attribute name=\"Name\" value=\"\" /\u0026gt;\n\t\u0026lt;attribute name=\"Position\" value=\"-0.012422 0.460372 0.00271687\" /\u0026gt;\n\t\u0026lt;attribute name=\"Rotation\" value=\"1 1.30976e-06 0.000361086 6.60281e-07\" /\u0026gt;\n\t\u0026lt;attribute name=\"Scale\" value=\"1 1 1\" /\u0026gt;\n\t\u0026lt;attribute name=\"Variables\" /\u0026gt;\n\t\u0026lt;component type=\"RigidBody\" id=\"16777277\"\u0026gt;\n\t\t\u0026lt;attribute name=\"Physics Rotation\" value=\"1 1.30991e-06 0.000361086 6.34012e-07\" /\u0026gt;\n\t\t\u0026lt;attribute name=\"Physics Position\" value=\"-0.012422 0.460372 0.00271687\" /\u0026gt;\n\t\u0026lt;/component\u0026gt;\n\t\u0026lt;component type=\"CollisionShape\" id=\"16777278\"\u0026gt;\n\t\t\u0026lt;attribute name=\"Size\" value=\"1.1 1.3 3.95\" /\u0026gt;\n\t\t\u0026lt;attribute name=\"Offset Position\" value=\"0 0.13 0.3\" /\u0026gt;\n\t\u0026lt;/component\u0026gt;\n\t\u0026lt;node id=\"16777236\"\u0026gt;\n\t\t\u0026lt;attribute name=\"Is Enabled\" value=\"true\" /\u0026gt;\n\t\t\u0026lt;attribute name=\"Name\" value=\"\" /\u0026gt;\n\t\t\u0026lt;attribute name=\"Position\" value=\"0 0 0\" /\u0026gt;\n\t\t\u0026lt;attribute name=\"Rotation\" value=\"1 0 0 0\" /\u0026gt;\n\t\t\u0026lt;attribute name=\"Scale\" value=\"1 1 1\" /\u0026gt;\n\t\t\u0026lt;attribute name=\"Variables\" /\u0026gt;\n\t\t\u0026lt;component type=\"StaticModel\" id=\"16777257\"\u0026gt;\n\t\t\t\u0026lt;attribute name=\"Model\" value=\"Model;Models/airbikefoils.mdl\" /\u0026gt;\n\t\t\t\u0026lt;attribute name=\"Material\" value=\"Material;Materials/airbike.colorbase.xml\" /\u0026gt;\n\t\t\t\u0026lt;attribute name=\"Cast Shadows\" value=\"true\" /\u0026gt;\n\t\t\u0026lt;/component\u0026gt;\n\t\u0026lt;/node\u0026gt;\n\u0026lt;/node\u0026gt;\n\u003c/code\u003e\u003c/p\u003e","post_number":8,"post_type":1,"updated_at":"2017-01-02T01:04:15.254Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":1,"reads":17,"readers_count":16,"score":8.4,"yours":false,"topic_id":934,"topic_slug":"solved-passing-scene--and-custom-savexml-parsed-nodes","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"link_counts":[{"url":"https://github.com/vivienneanthony/Existence/tree/development/Source/ExistenceApps/ExistenceClient","internal":false,"reflection":false,"title":"Existence/Source/ExistenceApps/ExistenceClient at development · vivienneanthony/Existence · GitHub","clicks":2},{"url":"http://Editor.as","internal":false,"reflection":false,"clicks":0}],"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":88,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":5422,"name":"","username":"vivienneanthony","avatar_template":"/user_avatar/discourse.urho3d.io/vivienneanthony/{size}/942_2.png","created_at":"2015-03-17T21:46:09.000Z","cooked":"\u003cp\u003eThe new code produces results about 50% there. I have not figure out why the first node don’t get the right attributes. I also not sure how to get the texture information and id’s so it’s clearer.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003e/// Main Save scene\nint Manager::SaveScene(int mode)\n{\n\n    /// Check if scene exist\n\n    if(scene_==NULL)\n    {\n        return 1;\n    }\n\n\n    String savesceneexport;\n\n    ResourceCache * cache = GetSubsystem\u0026lt;ResourceCache\u0026gt;();\n    FileSystem * filesystem = GetSubsystem\u0026lt;FileSystem\u0026gt;();\n\n    savesceneexport.Append(filesystem-\u0026gt;GetProgramDir().CString());\n    savesceneexport.Append(\"CoreData/\");\n    savesceneexport.Append(\"testing.xml\");\n\n    File saveFile(context_, savesceneexport.CString(), FILE_WRITE);\n\n    /// Check if the account file information exist\n    if(!filesystem-\u0026gt;FileExists(savesceneexport.CString()))\n    {\n        //cout \u0026lt;\u0026lt; \"\\r\\nAccount file (\"\u0026lt;\u0026lt; savesceneexport.CString() \u0026lt;\u0026lt; \") does not exist.\";\n    }\n\n    XMLFile * savesceneexportxml= new XMLFile(context_);\n\n    XMLElement configElem = savesceneexportxml-\u0026gt; CreateRoot(\"node\");\n\n    /// point\n    unsigned int childrencount=scene_-\u0026gt;GetNumChildren();\n\n    /// Weak Pointer children\n    Vector\u0026lt;SharedPtr\u0026lt;Node\u0026gt; \u0026gt; children_;\n\n    children_ = scene_-\u0026gt;GetChildren();\n\n    /// loop each child\n    for (Vector\u0026lt;SharedPtr\u0026lt;Node\u0026gt; \u0026gt;::Iterator i = children_.Begin(); i != children_.End(); ++i)\n    {\n        /// Create a new child instance\n        Node* childnode = *i;\n\n        /// Get node infomration, check for children, and check components\n         if(childnode-\u0026gt;GetName().Find(\"Generated\",0,false)==String::NPOS)\n         {\n        XMLElement NodeElement = configElem. CreateChild (\"node\");\n\n        const Vector\u0026lt;AttributeInfo\u0026gt;* attributes = childnode-\u0026gt;GetAttributes();\n\n        /// loop through attributes\n        for (Vector\u0026lt;AttributeInfo\u0026gt;::ConstIterator j = attributes-\u0026gt;Begin(); j != attributes-\u0026gt;End(); ++j)\n        {\n            XMLElement AttributeElement;\n\n            AttributeElement = NodeElement. CreateChild (\"attribute\");\n            AttributeElement.SetAttribute (\"name\", j -\u0026gt; name_);\n            AttributeElement.SetAttribute (\"value\", j -\u0026gt; defaultValue_.ToString());\n\n        }\n\n        if(childnode-\u0026gt;GetNumChildren())\n        {\n            SaveSceneNode(childnode, NodeElement);\n        }\n        else\n        {\n            SaveSceneNodeComponents(childnode,NodeElement);\n        }\n\n        }\n    }\n    savesceneexportxml-\u0026gt;Save(saveFile);\n\n}\n\n/// Recursive\nint Manager::SaveSceneNode(Node * node, XMLElement parentelement)\n{\n    /// Define a temporary pointer\n    Vector\u0026lt;SharedPtr\u0026lt;Node\u0026gt; \u0026gt; subchildren_;\n\n    /// Get children node\n    subchildren_ = node-\u0026gt;GetChildren();\n\n    for (Vector\u0026lt;SharedPtr\u0026lt;Node\u0026gt; \u0026gt;::Iterator i = subchildren_.Begin(); i != subchildren_.End(); ++i)\n    {\n        /// Create a new child instance\n        Node* childnode = *i;\n\n        /// Get node infomration, check for children, and check components\n        if(childnode-\u0026gt;GetName().Find(\"Generated\",0,false)==String::NPOS)\n        {\n            ///cout \u0026lt;\u0026lt; \"SubNode :\" \u0026lt;\u0026lt; childnode-\u0026gt;GetName().CString() \u0026lt;\u0026lt;endl;\n            XMLElement NodeElement = parentelement. CreateChild (\"node\");\n\n            if(childnode-\u0026gt;GetNumChildren())\n            {\n                SaveSceneNode(childnode, parentelement);\n            }\n            else\n            {\n                SaveSceneNodeComponents(childnode,parentelement);\n            }\n        }\n    }\n}\nint Manager::SaveSceneNodeComponents(Node *node, XMLElement parentelement)\n{\n    /// Define temporary pointer for components\n    Vector\u0026lt; SharedPtr\u0026lt; Component \u0026gt; \u0026gt; \tsubcomponents_;\n\n    /// If node has no components\n    if(node-\u0026gt;\tGetNumComponents ()==0)\n    {\n        cout \u0026lt;\u0026lt; \" Node has no components\" \u0026lt;\u0026lt; endl;\n\n        return 1;\n    }\n\n    /// Get children node\n    subcomponents_ = node-\u0026gt;GetComponents();\n\n    /// Loop through components\n    for (Vector\u0026lt;SharedPtr\u0026lt;Component\u0026gt; \u0026gt;::Iterator i = subcomponents_.Begin(); i != subcomponents_.End(); ++i)\n    {\n        Component * subcomponent = *i;\n\n        XMLElement componentElement = parentelement.CreateChild (\"component\");\n        componentElement.SetAttribute(\"Type\", subcomponent-\u0026gt;GetTypeName());\n\n        /// READ EACH COMPONENT AND GET ATTRIBUTES\n        if(subcomponent-\u0026gt;GetNumAttributes ())\n        {\n            /// set virtual const\n            const Vector\u0026lt;AttributeInfo\u0026gt;* attributes = subcomponent-\u0026gt;GetAttributes();\n\n            /// loop through attributes\n            for (Vector\u0026lt;AttributeInfo\u0026gt;::ConstIterator i = attributes-\u0026gt;Begin(); i != attributes-\u0026gt;End(); ++i)\n            {\n                /// output info\n                ///cout \u0026lt;\u0026lt; i -\u0026gt; name_.CString() \u0026lt;\u0026lt; \" type \" \u0026lt;\u0026lt; i -\u0026gt; defaultValue_. GetTypeName ().CString() \u0026lt;\u0026lt;\" value \" \u0026lt;\u0026lt; i -\u0026gt; defaultValue_.ToString().CString()\u0026lt;\u0026lt; endl;\n                XMLElement AttributeElement =  componentElement. CreateChild (\"attribute\");\n                AttributeElement.SetAttribute (\"name\", i -\u0026gt; name_);\n                AttributeElement.SetAttribute (\"value\", i -\u0026gt; defaultValue_.ToString());\n            }\n\n        }\n    }\n\n    return 1;\n}\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eCurrent Results using F12 - Console (/scene file dummy /build setscene /build savescene)\u003cbr\u003e\n\u003ca href=\"http://pastebin.com/xrgGWxFR\" rel=\"nofollow noopener\"\u003epastebin.com/xrgGWxFR\u003c/a\u003e\u003c/p\u003e","post_number":9,"post_type":1,"updated_at":"2017-01-02T01:04:15.572Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":1,"reads":17,"readers_count":16,"score":8.4,"yours":false,"topic_id":934,"topic_slug":"solved-passing-scene--and-custom-savexml-parsed-nodes","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"link_counts":[{"url":"http://pastebin.com/xrgGWxFR","internal":false,"reflection":false,"title":"[C++] Customized XML generation Urho3D - Pastebin.com","clicks":3}],"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":88,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":5436,"name":"","username":"vivienneanthony","avatar_template":"/user_avatar/discourse.urho3d.io/vivienneanthony/{size}/942_2.png","created_at":"2015-03-19T06:57:42.000Z","cooked":"\u003cp\u003eI basically  dumped the method I was using.  Changing the code to the below. I need to add more functionality from the console line and maybe a load.\u003c/p\u003e\n\u003cp\u003e[code]int Manager::SaveManagedNodes(const char *filename)\u003cbr\u003e\n{\u003cbr\u003e\n/// Grab resources\u003cbr\u003e\nResourceCache * cache = GetSubsystem();\u003cbr\u003e\nFileSystem * filesystem = GetSubsystem();\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e/// Check if scene exist\nif(scene_==NULL)\n{\n    return 1;\n}\n\n/// Check if Node is empty\nif (ManagedNodes.Empty())\n{\n    return 1;\n}\n\n/// Create String\nString savesceneexport;\n\n/// Set directory\nsavesceneexport.Append(filesystem-\u0026gt;GetProgramDir().CString());\nsavesceneexport.Append(\"/\");\nsavesceneexport.Append(filename);\n\nFile saveFile(context_, savesceneexport.CString(), FILE_WRITE);\n\nXMLFile * savesceneexportxml= new XMLFile(context_);\n\nXMLElement xmfileelement = savesceneexportxml-\u0026gt; CreateRoot(\"scene\");\n\n/// Loop through components\nfor(Vector\u0026lt;Node *\u0026gt;:: Iterator it = ManagedNodes.Begin(); it != ManagedNodes.End(); ++it)\n{\n    (*it) -\u0026gt; SaveXML(xmfileelement);\n}\n\nsavesceneexportxml-\u0026gt;Save(saveFile);\n\nreturn 1;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e}\u003cbr\u003e\n[/code]\u003c/p\u003e","post_number":10,"post_type":1,"updated_at":"2017-01-02T01:04:16.597Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":0,"reads":16,"readers_count":15,"score":3.2,"yours":false,"topic_id":934,"topic_slug":"solved-passing-scene--and-custom-savexml-parsed-nodes","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":88,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false}],"stream":[5383,5384,5385,5387,5408,5412,5417,5418,5422,5436]},"timeline_lookup":[[1,2809],[5,2808],[7,2807],[10,2806]],"suggested_topics":[{"id":7098,"title":"Cartoon Fire Effect","fancy_title":"Cartoon Fire Effect","slug":"cartoon-fire-effect","posts_count":6,"reply_count":0,"highest_post_number":6,"image_url":null,"created_at":"2021-12-10T04:08:49.887Z","last_posted_at":"2021-12-12T02:49:51.076Z","bumped":true,"bumped_at":"2021-12-12T02:49:51.076Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":6,"views":274,"category_id":10,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":628,"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":192,"username":"Modanung","name":"魔大农 𝞍𝞎𝝳 現招蜍","avatar_template":"/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":861,"username":"GodMan","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/g/e79b87/{size}.png"}}]},{"id":7100,"title":"UI Sprites - Wrapping/Repeating Texture","fancy_title":"UI Sprites - Wrapping/Repeating Texture","slug":"ui-sprites-wrapping-repeating-texture","posts_count":3,"reply_count":0,"highest_post_number":3,"image_url":"https://global.discourse-cdn.com/standard17/uploads/urho3d/original/2X/5/5d95641f056666c79c67a12520276d2d9f4729ae.png","created_at":"2021-12-15T20:32:37.485Z","last_posted_at":"2021-12-16T03:28:29.146Z","bumped":true,"bumped_at":"2021-12-16T03:28:29.146Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":1,"views":193,"category_id":10,"featured_link":null,"has_accepted_answer":true,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":1317,"username":"Lys0gen","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/l/57b2e6/{size}.png"}},{"extras":null,"description":"Frequent Poster, Accepted Answer","user":{"id":628,"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}}]},{"id":7156,"title":"Manual Mesh Part Animation (e.g. Rotate a propeller)","fancy_title":"Manual Mesh Part Animation (e.g. Rotate a propeller)","slug":"manual-mesh-part-animation-e-g-rotate-a-propeller","posts_count":4,"reply_count":1,"highest_post_number":4,"image_url":null,"created_at":"2022-01-26T23:50:29.343Z","last_posted_at":"2022-01-27T05:31:02.766Z","bumped":true,"bumped_at":"2022-01-27T05:31:02.766Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":4,"views":155,"category_id":10,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":1334,"username":"najak3d","name":"Brian Knox","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/n/6a8cbe/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":631,"username":"JTippetts1","name":"J Tippetts","avatar_template":"/user_avatar/discourse.urho3d.io/jtippetts1/{size}/96_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":1038,"username":"dertom","name":"Thomas Trocha","avatar_template":"/user_avatar/discourse.urho3d.io/dertom/{size}/1815_2.png"}}]},{"id":7178,"title":"Medium-Quality Technique for Semi-Reflective/Specular Glass in Urho","fancy_title":"Medium-Quality Technique for Semi-Reflective/Specular Glass in Urho","slug":"medium-quality-technique-for-semi-reflective-specular-glass-in-urho","posts_count":3,"reply_count":0,"highest_post_number":3,"image_url":"https://global.discourse-cdn.com/standard17/uploads/urho3d/original/2X/5/51408fe152ba02eb8b92237cc9a9411c8ee922e6.jpeg","created_at":"2022-01-31T22:57:50.134Z","last_posted_at":"2022-02-01T04:32:37.418Z","bumped":true,"bumped_at":"2022-02-01T04:32:37.418Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":1,"views":154,"category_id":10,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":1334,"username":"najak3d","name":"Brian Knox","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/n/6a8cbe/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":1317,"username":"Lys0gen","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/l/57b2e6/{size}.png"}}]},{"id":7067,"title":"Can the latest Urho3D version be built with VS2013?","fancy_title":"Can the latest Urho3D version be built with VS2013?","slug":"can-the-latest-urho3d-version-be-built-with-vs2013","posts_count":3,"reply_count":0,"highest_post_number":3,"image_url":null,"created_at":"2021-11-25T18:00:24.336Z","last_posted_at":"2021-11-26T17:22:21.878Z","bumped":true,"bumped_at":"2021-11-26T17:22:21.878Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":0,"views":157,"category_id":10,"featured_link":null,"has_accepted_answer":true,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":861,"username":"GodMan","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/g/e79b87/{size}.png"}},{"extras":null,"description":"Frequent Poster, Accepted Answer","user":{"id":4,"username":"weitjong","name":"Yao Wei Tjong","avatar_template":"/user_avatar/discourse.urho3d.io/weitjong/{size}/4_2.png"}}]}],"tags_descriptions":{},"id":934,"title":"[Solved] Passing Scene_ and custom SaveXML(parsed nodes)","fancy_title":"[Solved] Passing Scene_ and custom SaveXML(parsed nodes)","posts_count":10,"created_at":"2015-03-16T04:43:38.000Z","views":440,"reply_count":0,"like_count":0,"last_posted_at":"2015-03-19T06:57:42.000Z","visible":true,"closed":false,"archived":false,"has_summary":false,"archetype":"regular","slug":"solved-passing-scene--and-custom-savexml-parsed-nodes","category_id":10,"word_count":2891,"deleted_at":null,"user_id":88,"featured_link":null,"pinned_globally":false,"pinned_at":null,"pinned_until":null,"image_url":null,"slow_mode_seconds":0,"draft":null,"draft_key":"topic_934","draft_sequence":null,"unpinned":null,"pinned":false,"current_post_number":1,"highest_post_number":10,"deleted_by":null,"actions_summary":[{"id":4,"count":0,"hidden":false,"can_act":false},{"id":8,"count":0,"hidden":false,"can_act":false},{"id":7,"count":0,"hidden":false,"can_act":false}],"chunk_size":20,"bookmarked":false,"bookmarks":[],"topic_timer":null,"message_bus_last_id":0,"participant_count":3,"show_read_indicator":false,"thumbnails":null,"slow_mode_enabled_until":null,"tags_disable_ads":false,"details":{"can_edit":false,"notification_level":1,"participants":[{"id":88,"username":"vivienneanthony","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/vivienneanthony/{size}/942_2.png","post_count":7,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"trust_level":2},{"id":30,"username":"JTippetts","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/jtippetts/{size}/357_2.png","post_count":2,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"trust_level":2},{"id":3,"username":"cadaver","name":"Lasse Öörni","avatar_template":"/user_avatar/discourse.urho3d.io/cadaver/{size}/3_2.png","post_count":1,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"admin":true,"trust_level":2}],"created_by":{"id":88,"username":"vivienneanthony","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/vivienneanthony/{size}/942_2.png"},"last_poster":{"id":88,"username":"vivienneanthony","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/vivienneanthony/{size}/942_2.png"},"links":[{"url":"http://pastebin.com/xrgGWxFR","title":"[C++] Customized XML generation Urho3D - Pastebin.com","internal":false,"attachment":false,"reflection":false,"clicks":3,"user_id":88,"domain":"pastebin.com","root_domain":"pastebin.com"},{"url":"https://github.com/vivienneanthony/Existence/tree/development/Source/ExistenceApps/ExistenceClient","title":"Existence/Source/ExistenceApps/ExistenceClient at development · vivienneanthony/Existence · GitHub","internal":false,"attachment":false,"reflection":false,"clicks":2,"user_id":88,"domain":"github.com","root_domain":"github.com"},{"url":"http://Editor.as","title":null,"internal":false,"attachment":false,"reflection":false,"clicks":1,"user_id":88,"domain":"Editor.as","root_domain":"Editor.as"}]}}