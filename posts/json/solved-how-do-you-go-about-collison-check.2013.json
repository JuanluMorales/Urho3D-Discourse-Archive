{"post_stream": {"posts": [{"id": 12032, "name": "", "username": "noals", "avatar_template": "/user_avatar/discourse.urho3d.io/noals/{size}/1995_2.png", "created_at": "2016-05-14T00:04:54.000Z", "cooked": "<p>hi,</p>\n<p>my project start to looks like something but i need to do some collision check<br>\n<a href=\"http://www.hostingpics.net/viewer.php?id=901234cooltest3.png\" data-bbcode=\"true\" rel=\"nofollow noopener\"><img src=\"http://img15.hostingpics.net/pics/901234cooltest3.png\" alt=\"\" width=\"\" height=\"\"></a></p>\n<p>after checking the wiki, i think that for each of my module, i need to add this to get a precise bounding box</p>\n<pre><code class=\"lang-auto\">//add physic        dont forget to include RigidBody and CollisionShape\n        RigidBody* m_Body=moduleNode-&gt;CreateComponent&lt;RigidBody&gt;();\n        m_Body-&gt;SetMass(0);  //0 for static object\n        m_Body-&gt;SetFriction(0.6);        // friction with other objects (like the ground)\n//add collision shape\n        CollisionShape* m_BBox=moduleNode-&gt;CreateComponent&lt;CollisionShape&gt;();      \n        m_BBox-&gt;SetTriangleMesh(cache-&gt;GetResource&lt;Model&gt;(path));</code></pre>\n<p>then i can use layers</p>\n<pre><code class=\"lang-auto\">m_body-&gt;SetCollisionLayer(2)</code></pre>\n<p>but how do you do a collision check between two bounding box ? what must i use ?<br>\nso that if a module spawn on another, i change it or delete it or whatever.</p>\n<p>and by the way, i have a little question :  is there a way to get  a list of all the scene child ?</p>\n<p>thx</p>", "post_number": 1, "post_type": 1, "updated_at": "2017-01-02T01:12:17.282Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 792, "reads": 65, "readers_count": 64, "score": 3973.0, "yours": false, "topic_id": 2013, "topic_slug": "solved-how-do-you-go-about-collison-check", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "http://www.hostingpics.net/viewer.php?id=901234cooltest3.png", "internal": false, "reflection": false, "title": "viewer.php", "clicks": 16}], "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 411, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 12034, "name": "", "username": "noals", "avatar_template": "/user_avatar/discourse.urho3d.io/noals/{size}/1995_2.png", "created_at": "2016-05-14T03:47:18.000Z", "cooked": "<p>i found this page : <a href=\"http://urho3d.github.io/documentation/1.5/_physics.html\" rel=\"nofollow noopener\">urho3d.github.io/documentation/1.5/_physics.html</a> that direct me to <a href=\"http://urho3d.github.io/documentation/1.5/class_urho3_d_1_1_rigid_body.html#ae8efeb02d37b545321b84f35ed355b34\" data-bbcode=\"true\" rel=\"nofollow noopener\">GetCollidingBodies()</a></p>\n<p>so i guess it could work with :</p>\n<pre><code class=\"lang-auto\">if(m_Body-&gt;GetCollidingBodies() != 0)  //or NULL ?\n{\n    //there is a collision with another module : do something.\n}\nelse\n{\n    //there is no collision, the module can stay here.\n}</code></pre>\n<p>i will try that and see.</p>", "post_number": 2, "post_type": 1, "updated_at": "2017-01-02T01:12:17.453Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 4, "reads": 64, "readers_count": 63, "score": 32.8, "yours": false, "topic_id": 2013, "topic_slug": "solved-how-do-you-go-about-collison-check", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "http://urho3d.github.io/documentation/1.5/class_urho3_d_1_1_rigid_body.html#ae8efeb02d37b545321b84f35ed355b34", "internal": false, "reflection": false, "title": "Urho3D - Documentation", "clicks": 16}, {"url": "http://urho3d.github.io/documentation/1.5/_physics.html", "internal": false, "reflection": false, "title": "Urho3D - Documentation", "clicks": 14}], "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 411, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 12035, "name": "", "username": "Nerrik", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/n/958977/{size}.png", "created_at": "2016-05-14T08:35:23.000Z", "cooked": "<p>in my project iam working with the E_NODECOLLISION event.</p>\n<p>[code]<br>\nSubscribeToEvent(mynode, E_NODECOLLISION, HANDLER(objectevents, HandleObjectCollision)); //for every node that should trigger something on collision</p>\n<p>void objectevents::HandleObjectCollision(StringHash eventT, VariantMap&amp; eData)<br>\n{<br>\nRigidBody* body = static_cast&lt;RigidBody*&gt;(eData[P_BODY].GetPtr());<br>\nComponent* comp;<br>\ncomp=body-&gt;GetComponent(\u201cStaticModel\u201d);<br>\nNode* myobject;<br>\nmyobject=comp-&gt;GetNode ();</p>\n<p>\u2026</p>\n<p>}[/code]</p>\n<p>I have a xml file looks like this to load and subscribe the events per level in a function:</p>\n<p>[code]&lt;?xml version=\"1.0\"?&gt;<br>\n<br>\n<br>\n<br>\n</p>\n \n    \n    \n[/code]", "post_number": 3, "post_type": 1, "updated_at": "2017-01-02T01:12:17.530Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 61, "readers_count": 60, "score": 12.2, "yours": false, "topic_id": 2013, "topic_slug": "solved-how-do-you-go-about-collison-check", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 230, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 12037, "name": "", "username": "noals", "avatar_template": "/user_avatar/discourse.urho3d.io/noals/{size}/1995_2.png", "created_at": "2016-05-14T10:55:52.000Z", "cooked": "<p>your method seems a bit complicated to me but thx anyway. i didn\u2019t tryed anything yet, i will check it out later, the SubscribeToEvent could be usefull.</p>", "post_number": 4, "post_type": 1, "updated_at": "2017-01-02T01:12:17.679Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 50, "readers_count": 49, "score": 10.0, "yours": false, "topic_id": 2013, "topic_slug": "solved-how-do-you-go-about-collison-check", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 411, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 12039, "name": "", "username": "Nerrik", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/n/958977/{size}.png", "created_at": "2016-05-14T11:51:13.000Z", "cooked": "<aside class=\"quote no-group\" data-username=\"noals\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/noals/40/1995_2.png\" class=\"avatar\"> noals:</div>\n<blockquote>\n<p>your method seems a bit complicated to me but thx anyway. i didn\u2019t tryed anything yet, i will check it out later, the SubscribeToEvent could be usefull.</p>\n</blockquote>\n</aside>\n<p>yep i try to don\u2019t hardcode too much in my game, so i need this xml solution. You can do it with urho node variables too, or just hardcode it <img src=\"https://emoji.discourse-cdn.com/twitter/wink.png?v=10\" title=\":wink:\" class=\"emoji\" alt=\":wink:\"></p>\n<p>and yep you will need SubscribeToEvent.</p>\n<p>You can also only subscribe your mainchar and look with what he collude. (setting variables or names to the nodes to choose the trigger), but then your objects don\u2019t interact between each other</p>", "post_number": 5, "post_type": 1, "updated_at": "2017-01-02T01:12:17.818Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 1, "incoming_link_count": 1, "reads": 51, "readers_count": 50, "score": 15.2, "yours": false, "topic_id": 2013, "topic_slug": "solved-how-do-you-go-about-collison-check", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 230, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 12040, "name": "Justin Miller", "username": "jmiller", "avatar_template": "/user_avatar/discourse.urho3d.io/jmiller/{size}/2367_2.png", "created_at": "2016-05-14T14:45:01.000Z", "cooked": "<aside class=\"quote no-group\" data-username=\"noals\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/noals/40/1995_2.png\" class=\"avatar\"> noals:</div>\n<blockquote>\n<p>and by the way, i have a little question :  is there a way to get  a list of all the scene child ?</p>\n</blockquote>\n</aside>\n<p>Hi,<br>\nScene::GetChildren() is one way.<br>\nHere is a quick and dirty recursive print method, copypasta untested, Using Urho head revision\u2026 should not be too different for 1.5.<br>\n<a href=\"http://urho3d.github.io/documentation/HEAD/class_urho3_d_1_1_scene.html\" data-bbcode=\"true\">Scene</a> is a type of Node, so this works with both types.</p>\n<p>[details=Code][code]<br>\ndecl:<br>\nvoid PrintTree(Urho3D::Node* node, unsigned level = 0);</p>\n<p>void SceneManager::PrintTree(Node* node, unsigned level /* = 0 */) {<br>\n// if you do not like spam<br>\n// if (node-&gt;HasComponent()) return;</p>\n<p>String s(\u2019+\u2019, level); // indentation<br>\ns += \u201c&lt;\u201d + node-&gt;GetName() + \u201c&gt;\u201d + \" pos:\" + String(node-&gt;GetPosition());</p>\n<p>URHO3D_LOGRAW(s + \u2018\\n\u2019); // opt. URHO3D_LOGINFO etc.</p>\n<p>if (!node-&gt;GetChildren().Empty()) {<br>\nconst Vector&lt;SharedPtr&gt; children(node-&gt;GetChildren()); // pre-C++11 needs a space: &lt;SharedPtr &gt;<br>\nfor (unsigned i = 0; i &lt; children.Size(); ++i) {<br>\nPrintTree(children[i], level + 1);<br>\n}<br>\n}<br>\n}<br>\n[/code][/details]</p>", "post_number": 6, "post_type": 1, "updated_at": "2017-06-29T08:03:36.433Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 1, "incoming_link_count": 8, "reads": 50, "readers_count": 49, "score": 50.0, "yours": false, "topic_id": 2013, "topic_slug": "solved-how-do-you-go-about-collison-check", "display_username": "Justin Miller", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 2, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "http://urho3d.github.io/documentation/HEAD/class_urho3_d_1_1_scene.html", "internal": false, "reflection": false, "title": "Urho3D - Documentation - Urho3D::Scene Class Reference", "clicks": 0}], "read": true, "user_title": "", "bookmarked": false, "actions_summary": [], "moderator": true, "admin": false, "staff": true, "user_id": 21, "hidden": false, "trust_level": 3, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 12043, "name": "", "username": "noals", "avatar_template": "/user_avatar/discourse.urho3d.io/noals/{size}/1995_2.png", "created_at": "2016-05-14T18:11:50.000Z", "cooked": "<p>[quote=\u201cNerrik\u201d]</p>\n<p>yep i try to don\u2019t hardcode too much in my game, so i need this xml solution. You can do it with urho node variables too, or just hardcode it <img src=\"https://emoji.discourse-cdn.com/twitter/wink.png?v=5\" title=\":wink:\" class=\"emoji\" alt=\":wink:\"></p>\n<p>and yep you will need SubscribeToEvent.</p>\n<p>You can also only subscribe your mainchar and look with what he collude. (setting variables or names to the nodes to choose the trigger), but then your objects don\u2019t interact between each other[/quote]<br>\ni also use xml, i code so that when it is compiled, you can just change the modules at your liking with the xml. (or other things later)</p>\n<pre><code class=\"lang-auto\"></code></pre>\n<p>i didn\u2019t do a character yet but i know i will at least need 3 physics layer because i think modules side by side would return a collision==true;</p>\n<p>[quote=\u201ccarnalis\u201d]</p>\n<p>Hi,<br>\nScene::GetChildren() is one way.<br>\nHere is a quick and dirty recursive print method, copypasta untested, Using Urho head revision\u2026 should not be too different for 1.5.<br>\n<a href=\"http://urho3d.github.io/documentation/HEAD/class_urho3_d_1_1_scene.html\" data-bbcode=\"true\" rel=\"nofollow noopener\">Scene</a> is a type of Node, so this works with both types.</p>\n<p>[spoiler][code]<br>\ndecl:<br>\nvoid PrintTree(Urho3D::Node* node, unsigned level = 0);</p>\n<p>void SceneManager::PrintTree(Node* node, unsigned level /* = 0 */) {<br>\n// if you do not like spam<br>\n// if (node-&gt;HasComponent()) return;</p>\n<p>String s(\u2019+\u2019, level); // indentation<br>\ns += \u201c&lt;\u201d + node-&gt;GetName() + \u201c&gt;\u201d + \" pos:\" + String(node-&gt;GetPosition());</p>\n<p>URHO3D_LOGRAW(s + \u2018\\n\u2019); // opt. URHO3D_LOGINFO etc.</p>\n<p>if (!node-&gt;GetChildren().Empty()) {<br>\nconst Vector&lt;SharedPtr&gt; children(node-&gt;GetChildren()); // pre-C++11 needs a space: &lt;SharedPtr &gt;<br>\nfor (unsigned i = 0; i &lt; children.Size(); ++i) {<br>\nPrintTree(children[i], level + 1);<br>\n}<br>\n}<br>\n}<br>\n[/code][/spoiler][/quote]<br>\nah ok, so you can make a vector of children and incremente until your pointer is* empty when you get them from the scene. thx, that\u2019s good to know. (edit: i reread and the node method too is good to know ^^)<br>\n*edit 2 &gt;&lt;</p>\n<p>i go do some tries, i also need to check the physic demo to see what <span class=\"hashtag\">#include</span> i need, etc\u2026</p>", "post_number": 7, "post_type": 1, "updated_at": "2017-01-02T01:12:18.134Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 1, "incoming_link_count": 3, "reads": 42, "readers_count": 41, "score": 38.4, "yours": false, "topic_id": 2013, "topic_slug": "solved-how-do-you-go-about-collison-check", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "http://urho3d.github.io/documentation/HEAD/class_urho3_d_1_1_scene.html", "internal": false, "reflection": false, "title": "Urho3D - Documentation - Urho3D::Scene Class Reference", "clicks": 0}], "read": true, "user_title": null, "bookmarked": false, "actions_summary": [{"id": 2, "count": 1}], "moderator": false, "admin": false, "staff": false, "user_id": 411, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 12045, "name": "", "username": "noals", "avatar_template": "/user_avatar/discourse.urho3d.io/noals/{size}/1995_2.png", "created_at": "2016-05-14T19:57:59.000Z", "cooked": "<p>another question, is it possible to change the color of the collision layer when i render it ? how should i do ?<br>\nin the physic example, you can use the SPACE key to see the physic stuff so i put different layers for the first module and the others module but i can\u2019t see the difference when rendering.</p>\n<p><a href=\"http://www.hostingpics.net/viewer.php?id=646635physicstuff.png\" data-bbcode=\"true\" rel=\"nofollow noopener\"><img src=\"http://img15.hostingpics.net/pics/646635physicstuff.png\" alt=\"\" width=\"\" height=\"\"></a></p>", "post_number": 8, "post_type": 1, "updated_at": "2017-01-02T01:12:18.354Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 40, "readers_count": 39, "score": 8.0, "yours": false, "topic_id": 2013, "topic_slug": "solved-how-do-you-go-about-collison-check", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "http://www.hostingpics.net/viewer.php?id=646635physicstuff.png", "internal": false, "reflection": false, "title": "viewer.php", "clicks": 1}], "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 411, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 12048, "name": "", "username": "Nerrik", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/n/958977/{size}.png", "created_at": "2016-05-14T21:35:24.000Z", "cooked": "<aside class=\"quote\">\n<blockquote>\n<p>i didn\u2019t do a character yet but i know i will at least need 3 physics layer because i think modules side by side would return a collision==true;</p>\n</blockquote>\n</aside>\n<p>there is also an NodeCollisionEnd event, to handle double collisions if you mean that. (with an \u201clastcollision\u201d array or something like this).</p>", "post_number": 9, "post_type": 1, "updated_at": "2017-01-02T01:12:18.586Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 40, "readers_count": 39, "score": 8.0, "yours": false, "topic_id": 2013, "topic_slug": "solved-how-do-you-go-about-collison-check", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 230, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 12051, "name": "", "username": "noals", "avatar_template": "/user_avatar/discourse.urho3d.io/noals/{size}/1995_2.png", "created_at": "2016-05-15T00:27:05.000Z", "cooked": "<p>i saw that in the doc : <a href=\"http://urho3d.github.io/documentation/1.5/_event_list.html\" data-bbcode=\"true\" rel=\"nofollow noopener\">http://urho3d.github.io/documentation/1.5/_event_list.html</a></p>\n<aside class=\"quote\">\n<blockquote>\n<p>NodeCollisionEnd</p>\n<pre><code>Body : RigidBody pointer\nOtherNode : Node pointer\nOtherBody : RigidBody pointer\nTrigger : bool\n</code></pre>\n</blockquote>\n</aside>\n<p>so if the two RigidBody are side by side, i can define them as \u201cfalse\u201d so they will not be seen as colliding ?<br>\nyes i would need that, thx.<br>\nbut how do i use it ?</p>\n<p>[quote](with an \u201clastcollision\u201d array or something like this)[/quote] ?<br>\ni\u2019m lost already lol.</p>\n<p>i put the m_Body on the same layer and i will try that tomorrow :</p>\n<p>[code]        c_light=scene-&gt;CreateChild(\u201ccollision_light\u201d);<br>\nc_light-&gt;SetPosition(Vector3(position.x_, position.y_+1, position.z_));<br>\n{<br>\nLight* Elight=e_light-&gt;CreateComponent();<br>\nElight-&gt;SetLightType(LIGHT_POINT);<br>\nElight-&gt;SetRange(2);</p>\n<pre><code>        if(m_Body-&gt;GetCollidingBodies() != 0)  //or NULL ?\n        {\n            //there is a collision with another module : do something.\n            Elight-&gt;SetBrightness(2.0);\n            Elight-&gt;SetColor(Color(1.0,0.5,0.1,1.0));\n        }\n        else\n        {\n            //there is no collision, the module can stay here.\n            Elight-&gt;SetBrightness(2.0);\n            Elight-&gt;SetColor(Color(.0,.0,1.0,1.0));\n        }\n    }[/code]\n</code></pre>\n<p>i should see an orange or a blue light if it work at all.</p>", "post_number": 10, "post_type": 1, "updated_at": "2017-01-02T01:12:18.851Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 2, "reads": 40, "readers_count": 39, "score": 18.0, "yours": false, "topic_id": 2013, "topic_slug": "solved-how-do-you-go-about-collison-check", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "http://urho3d.github.io/documentation/1.5/_event_list.html", "internal": false, "reflection": false, "title": "Urho3D - Documentation", "clicks": 3}], "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 411, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 12072, "name": "", "username": "noals", "avatar_template": "/user_avatar/discourse.urho3d.io/noals/{size}/1995_2.png", "created_at": "2016-05-16T15:04:43.000Z", "cooked": "<p>ok, i just understood that i need to check the somethingEvents.h in the source with the <a href=\"http://urho3d.github.io/documentation/1.5/_event_list.html\" data-bbcode=\"true\" rel=\"nofollow noopener\">documentation</a> to see what\u2019s going on but it\u2019s still confusing to me.</p>\n<p>[code]<br>\nSubscribeToEvent(mynode, E_NODECOLLISION, HANDLER(objectevents, HandleObjectCollision)); //for every node that should trigger something on collision</p>\n<p>void objectevents::HandleObjectCollision(StringHash eventT, VariantMap&amp; eData)<br>\n{<br>\nRigidBody* body = static_cast&lt;RigidBody*&gt;(eData[P_BODY].GetPtr());[/code]</p>\n<p><span class=\"bbcode-b\">mynode</span> ? why are you able to put it in the <span class=\"bbcode-b\">SubscribeToEvent()</span> ?<br>\ncan i name <span class=\"bbcode-b\">HandleObjectCollision</span> as i want ?<br>\nand so, <span class=\"bbcode-b\">eData[P_BODY].GetPtr()</span> point to what excatly ?</p>", "post_number": 11, "post_type": 1, "updated_at": "2017-01-02T01:12:20.484Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 35, "readers_count": 34, "score": 7.0, "yours": false, "topic_id": 2013, "topic_slug": "solved-how-do-you-go-about-collison-check", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "http://urho3d.github.io/documentation/1.5/_event_list.html", "internal": false, "reflection": false, "title": "Urho3D - Documentation", "clicks": 0}], "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 411, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 12073, "name": "", "username": "Nerrik", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/n/958977/{size}.png", "created_at": "2016-05-16T21:18:37.000Z", "cooked": "<aside class=\"quote no-group\" data-username=\"noals\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/noals/40/1995_2.png\" class=\"avatar\"> noals:</div>\n<blockquote>\n<p>ok, i just understood that i need to check the somethingEvents.h in the source with the <a href=\"http://urho3d.github.io/documentation/1.5/_event_list.html\" data-bbcode=\"true\" rel=\"noopener nofollow ugc\">documentation</a> to see what\u2019s going on but it\u2019s still confusing to me.</p>\n<pre><code class=\"lang-auto\">SubscribeToEvent(mynode, E_NODECOLLISION, HANDLER(objectevents, HandleObjectCollision)); //for every node that should trigger something on collision\n\nvoid objectevents::HandleObjectCollision(StringHash eventT, VariantMap&amp; eData)\n{\nRigidBody* body = static_cast&lt;RigidBody*&gt;(eData[P_BODY].GetPtr());\n</code></pre>\n<p><span class=\"bbcode-b\">mynode</span> ? why are you able to put it in the <span class=\"bbcode-b\">SubscribeToEvent()</span> ?<br>\ncan i name <span class=\"bbcode-b\">HandleObjectCollision</span> as i want ?<br>\nand so, <span class=\"bbcode-b\">eData[P_BODY].GetPtr()</span> point to what excatly ?</p>\n</blockquote>\n</aside>\n<p>first of all, there was some 1.5 changes:</p>\n<pre><code class=\"lang-auto\">SubscribeToEvent(mynode, E_NODECOLLISION, HANDLER(objectevents, HandleObjectCollision)); </code></pre>\n<p>should be written:</p>\n<pre><code class=\"lang-auto\">SubscribeToEvent(mynode, E_NODECOLLISION, URHO3D_HANDLER(objectevents, HandleObjectCollision));</code></pre>\n<p><span class=\"bbcode-b\">mynode</span> ? why are you able to put it in the <span class=\"bbcode-b\">SubscribeToEvent()</span> ?</p>\n<p>if it has a RigidBody and a CollisionShape, you\u2019ll can set this event on every node you want.</p>\n<p>can i name <span class=\"bbcode-b\">HandleObjectCollision</span> as i want ?<br>\nyes (Also different notes to different functions)</p>\n<p>and so, <span class=\"bbcode-b\">eData[P_BODY].GetPtr()</span> point to what excatly ?</p>\n<p>to the RigidBody of the collision target. (node rbody that get colluded by something)</p>", "post_number": 12, "post_type": 1, "updated_at": "2017-06-29T08:05:29.154Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 1, "incoming_link_count": 2, "reads": 38, "readers_count": 37, "score": 17.6, "yours": false, "topic_id": 2013, "topic_slug": "solved-how-do-you-go-about-collison-check", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 2, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 230, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 12074, "name": "", "username": "Nerrik", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/n/958977/{size}.png", "created_at": "2016-05-16T21:53:28.000Z", "cooked": "<pre><code class=\"lang-auto\">URHO3D_EVENT(E_NODECOLLISION, NodeCollision)\n{\n    URHO3D_PARAM(P_BODY, Body);                    // RigidBody pointer\n    URHO3D_PARAM(P_OTHERNODE, OtherNode);          // Node pointer\n    URHO3D_PARAM(P_OTHERBODY, OtherBody);          // RigidBody pointer\n    URHO3D_PARAM(P_TRIGGER, Trigger);              // bool\n    URHO3D_PARAM(P_CONTACTS, Contacts);            // Buffer containing position (Vector3), normal (Vector3), distance (float), impulse (float) for each contact\n}</code></pre>", "post_number": 13, "post_type": 1, "updated_at": "2017-01-02T01:12:20.630Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 1, "reads": 34, "readers_count": 33, "score": 11.8, "yours": false, "topic_id": 2013, "topic_slug": "solved-how-do-you-go-about-collison-check", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 230, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 12086, "name": "Justin Miller", "username": "jmiller", "avatar_template": "/user_avatar/discourse.urho3d.io/jmiller/{size}/2367_2.png", "created_at": "2016-05-17T02:22:44.000Z", "cooked": "<aside class=\"quote no-group\" data-username=\"noals\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/noals/40/1995_2.png\" class=\"avatar\"> noals:</div>\n<blockquote>\n<pre><code class=\"lang-auto\">SubscribeToEvent(mynode, E_NODECOLLISION, HANDLER(objectevents, HandleObjectCollision)); //for every node that should trigger something on collision\n</code></pre>\n<p><span class=\"bbcode-b\">mynode</span> ? why are you able to put it in the <span class=\"bbcode-b\">SubscribeToEvent()</span> ?</p>\n</blockquote>\n</aside>\n<p><a href=\"http://urho3d.github.io/documentation/HEAD/class_urho3_d_1_1_object.html#ac9ea95ee6f24e7fbeede16ba149dbc2d\" data-bbcode=\"true\">This class method</a> is described in the docs, events subsection <span class=\"bbcode-b\">Sending events through another object</span><br>\n<a href=\"http://urho3d.github.io/documentation/HEAD/_events.html#Events_AnotherObject\">urho3d.github.io/documentation/H \u2026 therObject</a><br>\n<a href=\"http://urho3d.github.io/documentation/1.5/_events.html#Events_AnotherObject\">urho3d.github.io/documentation/1 \u2026 therObject</a> (1.5 - same)</p>\n<p>I think that section could be clearer by giving an example of the method.</p>", "post_number": 14, "post_type": 1, "updated_at": "2017-06-29T08:05:51.209Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 1, "incoming_link_count": 0, "reads": 32, "readers_count": 31, "score": 6.4, "yours": false, "topic_id": 2013, "topic_slug": "solved-how-do-you-go-about-collison-check", "display_username": "Justin Miller", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 2, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "http://urho3d.github.io/documentation/HEAD/_events.html#Events_AnotherObject", "internal": false, "reflection": false, "title": "Urho3D - Documentation - Events", "clicks": 3}, {"url": "http://urho3d.github.io/documentation/1.5/_events.html#Events_AnotherObject", "internal": false, "reflection": false, "title": "Urho3D - Documentation", "clicks": 3}, {"url": "http://urho3d.github.io/documentation/HEAD/class_urho3_d_1_1_object.html#ac9ea95ee6f24e7fbeede16ba149dbc2d", "internal": false, "reflection": false, "title": "Urho3D - Documentation - Urho3D::Object Class Reference", "clicks": 1}], "read": true, "user_title": "", "bookmarked": false, "actions_summary": [], "moderator": true, "admin": false, "staff": true, "user_id": 21, "hidden": false, "trust_level": 3, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 12095, "name": "", "username": "noals", "avatar_template": "/user_avatar/discourse.urho3d.io/noals/{size}/1995_2.png", "created_at": "2016-05-17T09:12:42.000Z", "cooked": "<p>this <code>SubscribeToEvent(mynode, E_NODECOLLISION, HANDLER(objectevents, HandleObjectCollision))\n</code><br>\nis actually : <code>SubscribeToEvent(mynode, P_BODY, P_OTHERNODE, P_OTHERBODY, P_TRIGGER, P_CONTACTS, HANDLER(objectevents, HandleObjectCollision))</code><br>\nand im starting to get the idea but i will need to test things up anyway.</p>\n<aside class=\"quote\">\n<blockquote>\n<p>This class method is described in the docs, events subsection Sending events through another object</p>\n</blockquote>\n</aside>\n<p>yes, that\u2019s what i meant. i wasn\u2019t able to find it in the doc at this time, thx.<br>\ni though we were able to put whatever we wanted in the function somehow.</p>\n<p>yeah an exemple would be nice through i will still try the other thing again later as well</p>\n<aside class=\"quote\">\n<blockquote>\n<p>GetCollidingBodies (PODVector&lt; RigidBody * &gt; &amp;result) const</p>\n</blockquote>\n</aside>\n<p>i\u2019m rethinking my whole code now, i need a better organisation.</p>", "post_number": 15, "post_type": 1, "updated_at": "2017-01-02T01:12:22.154Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 40, "readers_count": 39, "score": 8.0, "yours": false, "topic_id": 2013, "topic_slug": "solved-how-do-you-go-about-collison-check", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 411, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 12156, "name": "", "username": "Nerrik", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/n/958977/{size}.png", "created_at": "2016-05-19T21:39:12.000Z", "cooked": "<p>come home from a party and iam drunk, but have extended the 11_Physics (1.5) sample a little bit\u2026just search for \u201c//itsnew\u201d replace the code and watch in to the log (F1)</p>\n<details>\n<summary>\n11_Physics.h</summary>\n<pre><code class=\"lang-auto\">//\n// Copyright (c) 2008-2015 the Urho3D project.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n#pragma once\n\n#include \"Sample.h\"\n\nnamespace Urho3D\n{\n\nclass Node;\nclass Scene;\n\n}\n    using namespace NodeCollision; //itsnew\n/// Physics example.\n/// This sample demonstrates:\n///     - Creating both static and moving physics objects to a scene\n///     - Displaying physics debug geometry\n///     - Using the Skybox component for setting up an unmoving sky\n///     - Saving a scene to a file and loading it to restore a previous state\nclass Physics : public Sample\n{\n    URHO3D_OBJECT(Physics, Sample);\n\npublic:\n    /// Construct.\n    Physics(Context* context);\n\n    /// Setup after engine initialization and before running the main loop.\n    virtual void Start();\n\nprotected:\n    /// Return XML patch instructions for screen joystick layout for a specific sample app, if any.\n    virtual String GetScreenJoystickPatchString() const { return\n        \"&lt;patch&gt;\"\n        \"    &lt;remove sel=\\\"/element/element[./attribute[@name='Name' and @value='Button0']]/attribute[@name='Is Visible']\\\" /&gt;\"\n        \"    &lt;replace sel=\\\"/element/element[./attribute[@name='Name' and @value='Button0']]/element[./attribute[@name='Name' and @value='Label']]/attribute[@name='Text']/@value\\\"&gt;Spawn&lt;/replace&gt;\"\n        \"    &lt;add sel=\\\"/element/element[./attribute[@name='Name' and @value='Button0']]\\\"&gt;\"\n        \"        &lt;element type=\\\"Text\\\"&gt;\"\n        \"            &lt;attribute name=\\\"Name\\\" value=\\\"MouseButtonBinding\\\" /&gt;\"\n        \"            &lt;attribute name=\\\"Text\\\" value=\\\"LEFT\\\" /&gt;\"\n        \"        &lt;/element&gt;\"\n        \"    &lt;/add&gt;\"\n        \"    &lt;remove sel=\\\"/element/element[./attribute[@name='Name' and @value='Button1']]/attribute[@name='Is Visible']\\\" /&gt;\"\n        \"    &lt;replace sel=\\\"/element/element[./attribute[@name='Name' and @value='Button1']]/element[./attribute[@name='Name' and @value='Label']]/attribute[@name='Text']/@value\\\"&gt;Debug&lt;/replace&gt;\"\n        \"    &lt;add sel=\\\"/element/element[./attribute[@name='Name' and @value='Button1']]\\\"&gt;\"\n        \"        &lt;element type=\\\"Text\\\"&gt;\"\n        \"            &lt;attribute name=\\\"Name\\\" value=\\\"KeyBinding\\\" /&gt;\"\n        \"            &lt;attribute name=\\\"Text\\\" value=\\\"SPACE\\\" /&gt;\"\n        \"        &lt;/element&gt;\"\n        \"    &lt;/add&gt;\"\n        \"&lt;/patch&gt;\";\n    }\n\nprivate:\n    /// Construct the scene content.\n    void CreateScene();\n    /// Construct an instruction text to the UI.\n    void CreateInstructions();\n    /// Set up a viewport for displaying the scene.\n    void SetupViewport();\n    /// Subscribe to application-wide logic update and post-render update events.\n    void SubscribeToEvents();\n    /// Read input and moves the camera.\n    void MoveCamera(float timeStep);\n    /// Spawn a physics object from the camera position.\n    void SpawnObject();\n    /// Handle the logic update event.\n    void HandleUpdate(StringHash eventType, VariantMap&amp; eventData);\n    /// Handle the post-render update event.\n    void HandlePostRenderUpdate(StringHash eventType, VariantMap&amp; eventData);\n    void HandleObjectCollision(StringHash eventType, VariantMap&amp; eventData); //itsnew\n    /// Flag for drawing debug geometry.\n    bool drawDebug_;\n};\n</code></pre>\n</details>\n<details>\n<summary>\n11_Physics.cpp</summary>\n<pre><code class=\"lang-auto\">//\n// Copyright (c) 2008-2015 the Urho3D project.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n#include &lt;Urho3D/Core/CoreEvents.h&gt;\n#include &lt;Urho3D/Engine/Engine.h&gt;\n#include &lt;Urho3D/Graphics/Camera.h&gt;\n#include &lt;Urho3D/Graphics/DebugRenderer.h&gt;\n#include &lt;Urho3D/Graphics/Graphics.h&gt;\n#include &lt;Urho3D/Graphics/Light.h&gt;\n#include &lt;Urho3D/Graphics/Material.h&gt;\n#include &lt;Urho3D/Graphics/Model.h&gt;\n#include &lt;Urho3D/Graphics/Octree.h&gt;\n#include &lt;Urho3D/Graphics/Renderer.h&gt;\n#include &lt;Urho3D/Graphics/Skybox.h&gt;\n#include &lt;Urho3D/Graphics/Zone.h&gt;\n#include &lt;Urho3D/Input/Input.h&gt;\n#include &lt;Urho3D/IO/File.h&gt;\n#include &lt;Urho3D/IO/FileSystem.h&gt;\n#include &lt;Urho3D/Physics/CollisionShape.h&gt;\n#include &lt;Urho3D/Physics/PhysicsWorld.h&gt;\n#include &lt;Urho3D/Physics/RigidBody.h&gt;\n#include &lt;Urho3D/Physics/PhysicsEvents.h&gt; //itsnew\n#include &lt;Urho3D/Resource/ResourceCache.h&gt;\n#include &lt;Urho3D/Scene/Scene.h&gt;\n#include &lt;Urho3D/UI/Font.h&gt;\n#include &lt;Urho3D/UI/Text.h&gt;\n#include &lt;Urho3D/UI/UI.h&gt;\n#include &lt;Urho3D/IO/Log.h&gt; //itsnew\n#include \"Physics.h\"\n\n#include &lt;Urho3D/DebugNew.h&gt;\n\nURHO3D_DEFINE_APPLICATION_MAIN(Physics)\n\n\nPhysics::Physics(Context* context) :\n    Sample(context),\n    drawDebug_(false)\n{\n}\n\nvoid Physics::Start()\n{\n    // Execute base class startup\n    Sample::Start();\n\n    // Create the scene content\n    CreateScene();\n\n    // Create the UI content\n    CreateInstructions();\n\n    // Setup the viewport for displaying the scene\n    SetupViewport();\n\n    // Hook up to the frame update and render post-update events\n    SubscribeToEvents();\n}\n\nvoid Physics::CreateScene()\n{\n    ResourceCache* cache = GetSubsystem&lt;ResourceCache&gt;();\n\n    scene_ = new Scene(context_);\n\n    // Create octree, use default volume (-1000, -1000, -1000) to (1000, 1000, 1000)\n    // Create a physics simulation world with default parameters, which will update at 60fps. Like the Octree must\n    // exist before creating drawable components, the PhysicsWorld must exist before creating physics components.\n    // Finally, create a DebugRenderer component so that we can draw physics debug geometry\n    scene_-&gt;CreateComponent&lt;Octree&gt;();\n    scene_-&gt;CreateComponent&lt;PhysicsWorld&gt;();\n    scene_-&gt;CreateComponent&lt;DebugRenderer&gt;();\n\n    // Create a Zone component for ambient lighting &amp; fog control\n    Node* zoneNode = scene_-&gt;CreateChild(\"Zone\");\n    Zone* zone = zoneNode-&gt;CreateComponent&lt;Zone&gt;();\n    zone-&gt;SetBoundingBox(BoundingBox(-1000.0f, 1000.0f));\n    zone-&gt;SetAmbientColor(Color(0.15f, 0.15f, 0.15f));\n    zone-&gt;SetFogColor(Color(1.0f, 1.0f, 1.0f));\n    zone-&gt;SetFogStart(300.0f);\n    zone-&gt;SetFogEnd(500.0f);\n\n    // Create a directional light to the world. Enable cascaded shadows on it\n    Node* lightNode = scene_-&gt;CreateChild(\"DirectionalLight\");\n    lightNode-&gt;SetDirection(Vector3(0.6f, -1.0f, 0.8f));\n    Light* light = lightNode-&gt;CreateComponent&lt;Light&gt;();\n    light-&gt;SetLightType(LIGHT_DIRECTIONAL);\n    light-&gt;SetCastShadows(true);\n    light-&gt;SetShadowBias(BiasParameters(0.00025f, 0.5f));\n    // Set cascade splits at 10, 50 and 200 world units, fade shadows out at 80% of maximum shadow distance\n    light-&gt;SetShadowCascade(CascadeParameters(10.0f, 50.0f, 200.0f, 0.0f, 0.8f));\n\n    // Create skybox. The Skybox component is used like StaticModel, but it will be always located at the camera, giving the\n    // illusion of the box planes being far away. Use just the ordinary Box model and a suitable material, whose shader will\n    // generate the necessary 3D texture coordinates for cube mapping\n    Node* skyNode = scene_-&gt;CreateChild(\"Sky\");\n    skyNode-&gt;SetScale(500.0f); // The scale actually does not matter\n    Skybox* skybox = skyNode-&gt;CreateComponent&lt;Skybox&gt;();\n    skybox-&gt;SetModel(cache-&gt;GetResource&lt;Model&gt;(\"Models/Box.mdl\"));\n    skybox-&gt;SetMaterial(cache-&gt;GetResource&lt;Material&gt;(\"Materials/Skybox.xml\"));\n\n    {\n        // Create a floor object, 1000 x 1000 world units. Adjust position so that the ground is at zero Y\n        Node* floorNode = scene_-&gt;CreateChild(\"Floor\");\n        floorNode-&gt;SetPosition(Vector3(0.0f, -0.5f, 0.0f));\n        floorNode-&gt;SetScale(Vector3(1000.0f, 1.0f, 1000.0f));\n        StaticModel* floorObject = floorNode-&gt;CreateComponent&lt;StaticModel&gt;();\n        floorObject-&gt;SetModel(cache-&gt;GetResource&lt;Model&gt;(\"Models/Box.mdl\"));\n        floorObject-&gt;SetMaterial(cache-&gt;GetResource&lt;Material&gt;(\"Materials/StoneTiled.xml\"));\n\n        // Make the floor physical by adding RigidBody and CollisionShape components. The RigidBody's default\n        // parameters make the object static (zero mass.) Note that a CollisionShape by itself will not participate\n        // in the physics simulation\n        /*RigidBody* body = */floorNode-&gt;CreateComponent&lt;RigidBody&gt;();\n        CollisionShape* shape = floorNode-&gt;CreateComponent&lt;CollisionShape&gt;();\n        // Set a box shape of size 1 x 1 x 1 for collision. The shape will be scaled with the scene node scale, so the\n        // rendering and physics representation sizes should match (the box model is also 1 x 1 x 1.)\n        shape-&gt;SetBox(Vector3::ONE);\n    }\n\n    {\n        // Create a pyramid of movable physics objects\n        for (int y = 0; y &lt; 8; ++y)\n        {\n            for (int x = -y; x &lt;= y; ++x)\n            {\n                int z=0;\n                String MyBoxname = \"x:\" + (String)float(x) + \", y:\" + (String)-(float(y + 8.0f))+\", z:\" + (String)float(z); //itsnew - generate a unique name (starting position)\n                Node* boxNode = scene_-&gt;CreateChild(MyBoxname); //itsnew\n                boxNode-&gt;SetPosition(Vector3((float)x, -(float)y + 8.0f, 0.0f));\n                StaticModel* boxObject = boxNode-&gt;CreateComponent&lt;StaticModel&gt;();\n                boxObject-&gt;SetModel(cache-&gt;GetResource&lt;Model&gt;(\"Models/Box.mdl\"));\n                boxObject-&gt;SetMaterial(cache-&gt;GetResource&lt;Material&gt;(\"Materials/StoneEnvMapSmall.xml\"));\n                boxObject-&gt;SetCastShadows(true);\n\n                // Create RigidBody and CollisionShape components like above. Give the RigidBody mass to make it movable\n                // and also adjust friction. The actual mass is not important; only the mass ratios between colliding\n                // objects are significant\n                RigidBody* body = boxNode-&gt;CreateComponent&lt;RigidBody&gt;();\n                body-&gt;SetMass(1.0f);\n                body-&gt;SetFriction(0.75f);\n                CollisionShape* shape = boxNode-&gt;CreateComponent&lt;CollisionShape&gt;();\n                shape-&gt;SetBox(Vector3::ONE);\n                SubscribeToEvent(boxNode, E_NODECOLLISION, URHO3D_HANDLER(Physics, HandleObjectCollision)); //itsnew\n            }\n        }\n    }\n\n    // Create the camera. Set far clip to match the fog. Note: now we actually create the camera node outside the scene, because\n    // we want it to be unaffected by scene load / save\n    cameraNode_ = new Node(context_);\n    Camera* camera = cameraNode_-&gt;CreateComponent&lt;Camera&gt;();\n    camera-&gt;SetFarClip(500.0f);\n\n    // Set an initial position for the camera scene node above the floor\n    cameraNode_-&gt;SetPosition(Vector3(0.0f, 5.0f, -20.0f));\n}\n\nvoid Physics::CreateInstructions()\n{\n\n    ResourceCache* cache = GetSubsystem&lt;ResourceCache&gt;();\n    UI* ui = GetSubsystem&lt;UI&gt;();\n\n    // Construct new Text object, set string to display and font to use\n    Text* instructionText = ui-&gt;GetRoot()-&gt;CreateChild&lt;Text&gt;();\n    instructionText-&gt;SetText(\n        \"Use WASD keys and mouse/touch to move\\n\"\n        \"LMB to spawn physics objects\\n\"\n        \"F5 to save scene, F7 to load\\n\"\n        \"Space to toggle physics debug geometry\"\n    );\n    instructionText-&gt;SetFont(cache-&gt;GetResource&lt;Font&gt;(\"Fonts/Anonymous Pro.ttf\"), 15);\n    // The text has multiple rows. Center them in relation to each other\n    instructionText-&gt;SetTextAlignment(HA_CENTER);\n\n    // Position the text relative to the screen center\n    instructionText-&gt;SetHorizontalAlignment(HA_CENTER);\n    instructionText-&gt;SetVerticalAlignment(VA_CENTER);\n    instructionText-&gt;SetPosition(0, ui-&gt;GetRoot()-&gt;GetHeight() / 4);\n}\n\nvoid Physics::SetupViewport()\n{\n    Renderer* renderer = GetSubsystem&lt;Renderer&gt;();\n\n    // Set up a viewport to the Renderer subsystem so that the 3D scene can be seen\n    SharedPtr&lt;Viewport&gt; viewport(new Viewport(context_, scene_, cameraNode_-&gt;GetComponent&lt;Camera&gt;()));\n    renderer-&gt;SetViewport(0, viewport);\n}\n\nvoid Physics::SubscribeToEvents()\n{\n    // Subscribe HandleUpdate() function for processing update events\n    SubscribeToEvent(E_UPDATE, URHO3D_HANDLER(Physics, HandleUpdate));\n\n    // Subscribe HandlePostRenderUpdate() function for processing the post-render update event, during which we request\n    // debug geometry\n    SubscribeToEvent(E_POSTRENDERUPDATE, URHO3D_HANDLER(Physics, HandlePostRenderUpdate));\n}\n\nvoid Physics::MoveCamera(float timeStep)\n{\n    // Do not move if the UI has a focused element (the console)\n    if (GetSubsystem&lt;UI&gt;()-&gt;GetFocusElement())\n        return;\n\n    Input* input = GetSubsystem&lt;Input&gt;();\n\n    // Movement speed as world units per second\n    const float MOVE_SPEED = 20.0f;\n    // Mouse sensitivity as degrees per pixel\n    const float MOUSE_SENSITIVITY = 0.1f;\n\n    // Use this frame's mouse motion to adjust camera node yaw and pitch. Clamp the pitch between -90 and 90 degrees\n    IntVector2 mouseMove = input-&gt;GetMouseMove();\n    yaw_ += MOUSE_SENSITIVITY * mouseMove.x_;\n    pitch_ += MOUSE_SENSITIVITY * mouseMove.y_;\n    pitch_ = Clamp(pitch_, -90.0f, 90.0f);\n\n    // Construct new orientation for the camera scene node from yaw and pitch. Roll is fixed to zero\n    cameraNode_-&gt;SetRotation(Quaternion(pitch_, yaw_, 0.0f));\n\n    // Read WASD keys and move the camera scene node to the corresponding direction if they are pressed\n    if (input-&gt;GetKeyDown('W'))\n        cameraNode_-&gt;Translate(Vector3::FORWARD * MOVE_SPEED * timeStep);\n    if (input-&gt;GetKeyDown('S'))\n        cameraNode_-&gt;Translate(Vector3::BACK * MOVE_SPEED * timeStep);\n    if (input-&gt;GetKeyDown('A'))\n        cameraNode_-&gt;Translate(Vector3::LEFT * MOVE_SPEED * timeStep);\n    if (input-&gt;GetKeyDown('D'))\n        cameraNode_-&gt;Translate(Vector3::RIGHT * MOVE_SPEED * timeStep);\n\n    // \"Shoot\" a physics object with left mousebutton\n    if (input-&gt;GetMouseButtonPress(MOUSEB_LEFT))\n        SpawnObject();\n\n    // Check for loading/saving the scene. Save the scene to the file Data/Scenes/Physics.xml relative to the executable\n    // directory\n    if (input-&gt;GetKeyPress(KEY_F5))\n    {\n        File saveFile(context_, GetSubsystem&lt;FileSystem&gt;()-&gt;GetProgramDir() + \"Data/Scenes/Physics.xml\", FILE_WRITE);\n        scene_-&gt;SaveXML(saveFile);\n    }\n    if (input-&gt;GetKeyPress(KEY_F7))\n    {\n        File loadFile(context_, GetSubsystem&lt;FileSystem&gt;()-&gt;GetProgramDir() + \"Data/Scenes/Physics.xml\", FILE_READ);\n        scene_-&gt;LoadXML(loadFile);\n    }\n\n    // Toggle physics debug geometry with space\n    if (input-&gt;GetKeyPress(KEY_SPACE))\n        drawDebug_ = !drawDebug_;\n}\n\nvoid Physics::SpawnObject()\n{\n    ResourceCache* cache = GetSubsystem&lt;ResourceCache&gt;();\n\n    // Create a smaller box at camera position\n    Node* boxNode = scene_-&gt;CreateChild(\"SmallBox\");\n    boxNode-&gt;SetPosition(cameraNode_-&gt;GetPosition());\n    boxNode-&gt;SetRotation(cameraNode_-&gt;GetRotation());\n    boxNode-&gt;SetScale(0.25f);\n    StaticModel* boxObject = boxNode-&gt;CreateComponent&lt;StaticModel&gt;();\n    boxObject-&gt;SetModel(cache-&gt;GetResource&lt;Model&gt;(\"Models/Box.mdl\"));\n    boxObject-&gt;SetMaterial(cache-&gt;GetResource&lt;Material&gt;(\"Materials/StoneEnvMapSmall.xml\"));\n    boxObject-&gt;SetCastShadows(true);\n\n    // Create physics components, use a smaller mass also\n    RigidBody* body = boxNode-&gt;CreateComponent&lt;RigidBody&gt;();\n    body-&gt;SetMass(0.25f);\n    body-&gt;SetFriction(0.75f);\n    CollisionShape* shape = boxNode-&gt;CreateComponent&lt;CollisionShape&gt;();\n    shape-&gt;SetBox(Vector3::ONE);\n\n    const float OBJECT_VELOCITY = 10.0f;\n\n    // Set initial velocity for the RigidBody based on camera forward vector. Add also a slight up component\n    // to overcome gravity better\n    body-&gt;SetLinearVelocity(cameraNode_-&gt;GetRotation() * Vector3(0.0f, 0.25f, 1.0f) * OBJECT_VELOCITY);\n}\n\nvoid Physics::HandleUpdate(StringHash eventType, VariantMap&amp; eventData)\n{\n    using namespace Update;\n\n    // Take the frame time step, which is stored as a float\n    float timeStep = eventData[P_TIMESTEP].GetFloat();\n\n    // Move the camera, scale movement with time step\n    MoveCamera(timeStep);\n}\n\nvoid Physics::HandlePostRenderUpdate(StringHash eventType, VariantMap&amp; eventData)\n{\n    // If draw debug mode is enabled, draw physics debug geometry. Use depth test to make the result easier to interpret\n    if (drawDebug_)\n        scene_-&gt;GetComponent&lt;PhysicsWorld&gt;()-&gt;DrawDebugGeometry(true);\n}\n\n\n//itsnew all now.......\n\n\nvoid Physics::HandleObjectCollision(StringHash eventT, VariantMap&amp; eData)\n{\n\nRigidBody* body = static_cast&lt;RigidBody*&gt;(eData[P_BODY].GetPtr());\nComponent* comp;\ncomp=body-&gt;GetComponent(\"StaticModel\");\nNode* myobject;\nmyobject=comp-&gt;GetNode ();\nString nodename=myobject-&gt;GetName();\n\n\nNode* otherNode = static_cast&lt;Node*&gt;(eData[P_OTHERNODE].GetPtr());\nString othernodename=otherNode-&gt;GetName();\n\nURHO3D_LOGRAW(\"\\n nodename: \" + nodename + \" collude with: \" + othernodename);\n\n\n}\n</code></pre>\n</details>\n<p>its no rockedsience\u2026</p>", "post_number": 16, "post_type": 1, "updated_at": "2017-06-29T08:08:33.461Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 1, "reads": 40, "readers_count": 39, "score": 28.0, "yours": false, "topic_id": 2013, "topic_slug": "solved-how-do-you-go-about-collison-check", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 2, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [{"id": 2, "count": 1}], "moderator": false, "admin": false, "staff": false, "user_id": 230, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 12236, "name": "", "username": "noals", "avatar_template": "/user_avatar/discourse.urho3d.io/noals/{size}/1995_2.png", "created_at": "2016-05-26T14:58:34.000Z", "cooked": "<p>it took me some time but i rewrited my stuff and i tryed your method to see what it actually does but it doesn\u2019t seem to return anything at all.<br>\ni just got this message in the terminal :</p>\n<p>[quote]warning btCollisionDispatcher::needsCollision: static-static collision!<br>\n[/quote]<br>\ni guess i need a static-static collision test but that don\u2019t help me much at this point.<br>\nwhat should i use ?</p>\n<p>the code i tryed :</p>\n<pre><code class=\"lang-auto\">        SubscribeToEvent(E_NODECOLLISION, URHO3D_HANDLER(projet, HandleCollisionUpdate)); //collision test  \n\n    void HandleCollisionUpdate(StringHash eventType, VariantMap&amp; eventData)\n    {\n\n        RigidBody* body = static_cast&lt;RigidBody*&gt;(eventData[P_BODY].GetPtr());\n        Component* comp;\n        comp=body-&gt;GetComponent(\"AnimatedModel\");\n        Node* myobject;\n        myobject=comp-&gt;GetNode ();\n        String nodename=myobject-&gt;GetName();\n\n\n        Node* otherNode = static_cast&lt;Node*&gt;(eventData[P_OTHERNODE].GetPtr());\n        String othernodename=otherNode-&gt;GetName();\n\n        URHO3D_LOGRAW(\"\\n nodename: \" + nodename + \" collide with: \" + othernodename);\n    }</code></pre>\n<p><a href=\"http://www.hostingpics.net/viewer.php?id=605187collisiontest.png\" data-bbcode=\"true\" rel=\"nofollow noopener\"><img src=\"http://img15.hostingpics.net/pics/605187collisiontest.png\" alt=\"\" width=\"\" height=\"\"></a></p>", "post_number": 17, "post_type": 1, "updated_at": "2017-01-02T01:12:32.275Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 1, "reads": 40, "readers_count": 39, "score": 13.0, "yours": false, "topic_id": 2013, "topic_slug": "solved-how-do-you-go-about-collison-check", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "http://www.hostingpics.net/viewer.php?id=605187collisiontest.png", "internal": false, "reflection": false, "title": "viewer.php", "clicks": 0}], "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 411, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 12237, "name": "", "username": "Nerrik", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/n/958977/{size}.png", "created_at": "2016-05-26T17:55:43.000Z", "cooked": "<p>you dont give the SubscribeToEvent a node.<br>\nSubscribeToEvent(E_NODECOLLISION, URHO3D_HANDLER(projet, HandleCollisionUpdate)); //collision test</p>\n<p>but you have set this event to a specific node  that should send this event on a collision (with whatever)</p>\n<p>nodes: <a href=\"http://urho3d.github.io/documentation/1.3/class_urho3_d_1_1_node.html\" data-bbcode=\"true\" rel=\"nofollow noopener\">http://urho3d.github.io/documentation/1.3/class_urho3_d_1_1_node.html</a></p>\n<p>SubscribeToEvent(<span class=\"bbcode-b\">boxNode</span>, E_NODECOLLISION, URHO3D_HANDLER(Physics, HandleObjectCollision)); //itsnew</p>\n<p>this nodes also should have a rigidbody: <a href=\"http://urho3d.github.io/documentation/1.5/class_urho3_d_1_1_rigid_body.html\" data-bbcode=\"true\" rel=\"nofollow noopener\">http://urho3d.github.io/documentation/1.5/class_urho3_d_1_1_rigid_body.html</a><br>\nand a collisionshape: <a href=\"http://urho3d.github.io/documentation/1.5/class_urho3_d_1_1_collision_shape.html\" data-bbcode=\"true\" rel=\"nofollow noopener\">http://urho3d.github.io/documentation/1.5/class_urho3_d_1_1_collision_shape.html</a></p>\n<p>AND</p>\n<pre><code>void HandleCollisionUpdate(StringHash eventType, VariantMap&amp; eventData)\n</code></pre>\n<p>normaly it should be wirtten:<br>\nvoid YOURCLASSNAME::HandleCollisionUpdate(StringHash eventType, VariantMap&amp; eventData)</p>\n<p>so</p>\n<p>SubscribeToEvent(<span class=\"bbcode-b\">boxNode</span>, E_NODECOLLISION, URHO3D_HANDLER(YOURCLASSNAME, HandleObjectCollision)); //itsnew</p>\n<p>can point to the right class and function(void)</p>", "post_number": 18, "post_type": 1, "updated_at": "2017-01-02T01:12:32.349Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 35, "readers_count": 34, "score": 7.0, "yours": false, "topic_id": 2013, "topic_slug": "solved-how-do-you-go-about-collison-check", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "http://urho3d.github.io/documentation/1.3/class_urho3_d_1_1_node.html", "internal": false, "reflection": false, "title": "Urho3D - Documentation", "clicks": 2}, {"url": "http://urho3d.github.io/documentation/1.5/class_urho3_d_1_1_rigid_body.html", "internal": false, "reflection": false, "title": "Urho3D - Documentation", "clicks": 1}, {"url": "http://urho3d.github.io/documentation/1.5/class_urho3_d_1_1_collision_shape.html", "internal": false, "reflection": false, "title": "Urho3D - Documentation", "clicks": 0}], "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 230, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 12239, "name": "", "username": "noals", "avatar_template": "/user_avatar/discourse.urho3d.io/noals/{size}/1995_2.png", "created_at": "2016-05-27T01:28:36.000Z", "cooked": "<p>ok, sorry if i\u2019m annoying but be rassured that i am as much or even more annoyed than you could be.<br>\nthis shit doesn\u2019t really make sense to me when trying to include it in my code so i will describe what i understand and what i don\u2019t plus my actual problem in hope you will can enlight me.</p>\n<p>first of all, i have my urho3D main class that represent my project :</p>\n<pre><code class=\"lang-auto\">class projet : public Application\n{\n    URHO3D_OBJECT(projet, Application)</code></pre>\n<p>and within the virtual void Start(), i have the SubscribeToEvent stuff including :</p>\n<p><code>\n        SubscribeToEvent(E_UPDATE, URHO3D_HANDLER(projet, HandleUpdate));\n        SubscribeToEvent(E_POSTRENDERUPDATE,URHO3D_HANDLER(projet,HandlePostRenderUpdate));     \n        SubscribeToEvent(E_KEYDOWN, URHO3D_HANDLER(projet, HandleKeyDown));</code><br>\nso no problem here.</p>\n<p>then, i have a \u201cDungeon\u201d class in separates files that use  r_Rooms (for random rooms), r_Cors (for random corridors), r_Juncs (for random junctions) and Module classes to build the dungeon.<br>\nexample, the first loaded module :</p>\n<pre><code class=\"lang-auto\">Dungeon::Dungeon(int MODULE_MAX, Scene* scene, ResourceCache* cache)\n{\n   MODULE_COUNT = 0;\n   roomJuncSwitch = 0;\n\n   while(MODULE_COUNT&lt;MODULE_MAX)\n   {\n       if(mainExitList.size()==0)\n       {\n            room_p = new r_Rooms(); //i start with a room\n            module_p = new Module(MODULE_COUNT, room_p-&gt;type, room_p-&gt;std_name, \n                                  room_p-&gt;exits, room_p-&gt;path, room_p-&gt;texturepath,\n                                  scene, cache);\n            \n            for(int x=0;x&lt;module_p-&gt;exitList.size();x++)\n            {\n                mainExitList.push_back(module_p-&gt;exitList[x]);\n            }       \n\n            temp_Body = module_p-&gt;m_Body;  \n            MODULE_COUNT++;\n        }\n        else\n        {</code></pre>\n<p>each module object have its Node, AnimatedModel, RigidBody and CollisionShape that i can access with the pointer <span class=\"bbcode-b\">module_p-&gt;</span> and that should be this node that is collision tested for each loaded module\u2026<br>\nso i need to put the subscribeToEvent stuff within my class i guess but that\u2019s where i don\u2019t really get it.</p>\n<p>if i want to make a fonction within my class, first i declare it as a public member :</p>\n<pre><code class=\"lang-auto\"></code></pre>\n<p>and then, in the .cpp, i can define what the function does :</p>\n<p><code>\nvoid Dungeon::testCollision(Node* whatever)\n{\n    collisionTest(whatever);\n}</code></p>\n<p>but here, i guess i should have something like this in my class.h public member :</p>\n<pre><code class=\"lang-auto\"></code></pre>\n<p>but i also guess it won\u2019t work if it isn\u2019t define in the projet class so i\u2019m not sure how to use it<br>\nand for the function :</p>\n<p>[code]void Dungeon(?)::HandleCollisionUpdate(StringHash eventType, VariantMap&amp; eventData)<br>\n{</p>\n<pre><code>    RigidBody* body = static_cast&lt;RigidBody*&gt;(eventData[P_BODY].GetPtr());\n    Component* comp;\n    comp=body-&gt;GetComponent(\"AnimatedModel\");\n    Node* myobject;\n    myobject=comp-&gt;GetNode ();\n    String nodename=myobject-&gt;GetName();[/code]\n</code></pre>\n<p>i guess i have to put it in my class.cpp somehow but since it\u2019s a function definition, can i put it in the constructor of my class ?<br>\nanyway, i kinda understand a few things but with this method i\u2019m lost, i don\u2019t know where to put what because i don\u2019t need it in the main.cpp and the way the function is defined just confuse me.</p>\n<p>you have the main.cpp,  the class.h and the class.cpp.    what do you write in each stuff for an event to work ?</p>", "post_number": 19, "post_type": 1, "updated_at": "2017-01-02T01:12:32.501Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 5, "reads": 35, "readers_count": 34, "score": 32.0, "yours": false, "topic_id": 2013, "topic_slug": "solved-how-do-you-go-about-collison-check", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 411, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 12240, "name": "", "username": "Dave82", "avatar_template": "/user_avatar/discourse.urho3d.io/dave82/{size}/2369_2.png", "created_at": "2016-05-27T02:47:06.000Z", "cooked": "<p>Thats because you doing it wrong.Are you trying to make a wrapper or i can\u2019t really understand what are you trying to do ? <img src=\"https://emoji.discourse-cdn.com/twitter/confused.png?v=5\" title=\":confused:\" class=\"emoji\" alt=\":confused:\"></p>\n<p>You don\u2019t have SubscribeToEvent in your class because its not derived from Urho3D::Object\u2026 Here are few advices :</p>\n<p>Get rid of these Module , Dungeon and other classes you try to implement.You don\u2019t need them. Urho doesn\u2019t work this way. Follow the rules that the developers <a href=\"http://provided.In\" rel=\"nofollow noopener\">provided.In</a> this case Component based programming.<br>\nInstead of creating a Dungeon and other external classes , you should use Urho3d::Node and add your collision body , AnimatedModel etc components to it. Define a Corridor , and Dungeon components derived from Urho3D::LogicComponent. Now you have a valid Urho Object that can properly subscribed to events , collision checks and network updates.</p>", "post_number": 20, "post_type": 1, "updated_at": "2017-01-02T01:12:32.583Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 31, "readers_count": 30, "score": 6.2, "yours": false, "topic_id": 2013, "topic_slug": "solved-how-do-you-go-about-collison-check", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "http://provided.In", "internal": false, "reflection": false, "clicks": 2}], "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 247, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 12241, "name": "", "username": "noals", "avatar_template": "/user_avatar/discourse.urho3d.io/noals/{size}/1995_2.png", "created_at": "2016-05-27T03:46:17.000Z", "cooked": "<p>i use nodes and pointers, in my module class :</p>\n<p><span class=\"bbcode-b\">.h</span></p>\n<pre><code class=\"lang-auto\">class Module\n{\n    public:\n    Node* m_Node;\n    AnimatedModel* m_Object;\n    RigidBody* m_Body;\n    CollisionShape* m_BBox;\n    Node* light;    \n\n    ExitList exitList;\n\n    Module (int m_COUNT, \n            int type, std::string std_name, int exits, String path, String texturepath,\n            Scene* scene, ResourceCache* cache);\n            \n    private:\n};</code></pre>\n<p><span class=\"bbcode-b\">.cpp</span></p>\n<p>[code]<br>\nModule::Module(int m_COUNT,<br>\nint type, std::string std_name, int exits, String path, String texturepath,<br>\nScene* scene, ResourceCache* cache)<br>\n{</p>\n<pre><code>std::string std_sceneName = IntString(m_COUNT, std_name);\nString sceneName = string2urhoString(std_sceneName);\n//m_Node = new Node();\nm_Node = scene-&gt;CreateChild(sceneName);\nm_Node-&gt;SetWorldPosition(Vector3::ZERO);   //room.position          \nm_Node-&gt;SetWorldRotation(Quaternion::IDENTITY);   //room.rotation (1,0,0,0) \n\n//m_Object = new AnimatedModel();    \nm_Object=m_Node-&gt;CreateComponent&lt;AnimatedModel&gt;();\nm_Object-&gt;SetModel(cache-&gt;GetResource&lt;Model&gt;(path));\nm_Object-&gt;SetMaterial(cache-&gt;GetResource&lt;Material&gt;(texturepath));\n</code></pre>\n<p>//add physic<br>\n//m_Body = new RigidBody();<br>\nm_Body = m_Node-&gt;CreateComponent();<br>\nm_Body-&gt;SetMass(0);  //0 for static object<br>\nm_Body-&gt;SetFriction(0.6);        // friction with other objects (like the ground)<br>\nm_Body-&gt;SetCollisionLayer(1);<br>\n//add collision shape<br>\n//m_BBox = new CollisionShape();<br>\nm_BBox = m_Node-&gt;CreateComponent();<br>\nm_BBox-&gt;SetTriangleMesh(cache-&gt;GetResource(path));</p>\n<p>//etc\u2026[/code]</p>\n<p>the Module constructor use infos from the \u201crooms\u201d, \u201ccors\u201d and \u201cjuncs\u201d that return infos from a .xml, like the \u201cpath\u201d to load the model.<br>\ni simplified my code so it doesn\u2019t have X time the same function repeated again and again and i needed to separate the code this way because i needed a before rendering step and a while rendering step plus the differentiation of each module type \u201crooms\u201d, \u201ccors\u201d, etc\u2026 so i can chose which one i want.</p>\n<p>basicaly, what i had in mind after seeing the GetCollidingBody() function was to make a vector of RigidBody pointer from previously loaded module so i can compare the last loaded module rigidbody with the vector and return true or whatever if there is a collision, but already the GetCollidingBody() is a void function so i don\u2019t know how to use it either. i need to check the source to see what\u2019s going on i think.</p>\n<p>few month ago, i wasn\u2019t able to initialize class members properly. now i kinda understand classes but i didn\u2019t learned about derived one yet.<br>\ni guess it\u2019s maybe the time to do that.</p>", "post_number": 21, "post_type": 1, "updated_at": "2017-01-02T01:12:32.647Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 32, "readers_count": 31, "score": 6.4, "yours": false, "topic_id": 2013, "topic_slug": "solved-how-do-you-go-about-collison-check", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 411, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 12242, "name": "", "username": "Dave82", "avatar_template": "/user_avatar/discourse.urho3d.io/dave82/{size}/2369_2.png", "created_at": "2016-05-27T04:23:51.000Z", "cooked": "<p>Well i HIGHLY RECOMMEND to look up some c++ tutorials and books and practice few months before you jump into Urho3d\u2026 It is completely abstract and relies on polymorphism and other \u201cdesign standards\u201d that i don\u2019t think it could be understand by trial and error\u2026 Once again you don\u2019t need the Module and Corridor and other classes ! It\u2019s not that is unnecessary but it won\u2019t work ! It is absolutely against the whole c++ Urho Component based programming concept. Try it as  i suggested in my previous post.Use Nodes for Modules and create components for Corridors and other stuff\u2026 That\u2019s the ONLY way it will ever work.</p>\n<p>If you using your own classes which are not derived form Urho3D::Object , it breaks the OOP rules of the engine.You can\u2019t access the Urho context from outside.</p>\n<p>But if i were you i would start reading/watching some c++ tutorials first because this way it will take ages to take a leap forward<br>\nRegards</p>", "post_number": 22, "post_type": 1, "updated_at": "2017-01-02T01:12:32.719Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 27, "readers_count": 26, "score": 5.4, "yours": false, "topic_id": 2013, "topic_slug": "solved-how-do-you-go-about-collison-check", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 247, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 12243, "name": "", "username": "noals", "avatar_template": "/user_avatar/discourse.urho3d.io/noals/{size}/1995_2.png", "created_at": "2016-05-27T06:07:45.000Z", "cooked": "<p>well, i ask for a collision test method and i get a whole framework.</p>\n<p>you\u2019re telling me the whole urho3D concept is about object, component and the kind.<br>\nin the doc, there is only that kinda :<br>\n<a href=\"http://urho3d.github.io/documentation/1.4/_object_types.html\" data-bbcode=\"true\" rel=\"nofollow noopener\">http://urho3d.github.io/documentation/1.4/_object_types.html</a><br>\nand in the wiki as a \u201clatest activity\u201d :<br>\n<a href=\"http://urho3d.wikia.com/wiki/Creating_your_own_C%2B%2B_components\" data-bbcode=\"true\" rel=\"nofollow noopener\">http://urho3d.wikia.com/wiki/Creating_your_own_C%2B%2B_components</a><br>\nthose are not for beginner like me when i check some .cpp in the source as examples, can\u2019t i use bullet or something directly ?</p>\n<p>there is no way to actually test if 2 RigidBody are colliding not having to write a whole urho3D object or whatever ?!  <img src=\"https://emoji.discourse-cdn.com/twitter/angry.png?v=5\" title=\":angry:\" class=\"emoji\" alt=\":angry:\"></p>", "post_number": 23, "post_type": 1, "updated_at": "2017-01-02T01:12:32.782Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 26, "readers_count": 25, "score": 5.2, "yours": false, "topic_id": 2013, "topic_slug": "solved-how-do-you-go-about-collison-check", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "http://urho3d.github.io/documentation/1.4/_object_types.html", "internal": false, "reflection": false, "title": "Urho3D - Documentation", "clicks": 4}, {"url": "http://urho3d.wikia.com/wiki/Creating_your_own_C%2B%2B_components", "internal": false, "reflection": false, "title": "Creating your own C++ components | Urho3D Wiki | Fandom powered by Wikia", "clicks": 4}], "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 411, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 12250, "name": "", "username": "noals", "avatar_template": "/user_avatar/discourse.urho3d.io/noals/{size}/1995_2.png", "created_at": "2016-05-28T04:52:31.000Z", "cooked": "<p>i will try to use bullet directly with its library.</p>\n<p>from urho i can get the bullet collision shape</p>\n<p><code>btCollisionShape * \tGetCollisionShape () const\n \tReturn Bullet collision shape. </code></p>\n<p>with bullet, i can create a btCollisionObject and assign it the collision shape</p>\n<pre><code class=\"lang-auto\"></code></pre>\n<p>then i should be able somehow to test the collision with contactTest() or contactPairTest() from bullet<br>\nwhat annoy me is that it seem i will still need to use simulation steps while it isn\u2019t really needed yet for my need but i will see how it goes anyway.</p>", "post_number": 24, "post_type": 1, "updated_at": "2017-01-02T01:12:33.303Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 1, "reads": 23, "readers_count": 22, "score": 9.6, "yours": false, "topic_id": 2013, "topic_slug": "solved-how-do-you-go-about-collison-check", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 411, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 12260, "name": "", "username": "noals", "avatar_template": "/user_avatar/discourse.urho3d.io/noals/{size}/1995_2.png", "created_at": "2016-05-29T04:21:28.000Z", "cooked": "<p>well\u2026</p>\n<p>i get a Program received signal SIGSEGV, Segmentation fault because of the second line :</p>\n<pre><code class=\"lang-auto\">    bt_BBox = m_BBox-&gt;GetCollisionShape();  //urho BBox to bullet BBox (collision shape)\n    bt_CollisionObj-&gt;setCollisionShape(bt_BBox); //bullet collision object</code></pre>\n<p>and i don\u2019t know what argument is needed to get a PhysicsWorld pointer</p>\n<pre><code class=\"lang-auto\">    PhysicsWorld* urhoPhysics = scene-&gt;GetComponent&lt;PhysicsWorld&gt;( ??? );</code></pre>\n<p>how come physic in engines is never user friendly ?<br>\nand how come there is no understandable tutorial about urho custom objects and components while it seem to be the base of the engine ?</p>\n<p>edit: bah, i guess i will just use bullet as it come and won\u2019t use urho3D physic at all. it will be simplier, i saw i can use .obj from blender to bullet so that should be ok.</p>", "post_number": 25, "post_type": 1, "updated_at": "2017-01-02T01:12:34.036Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 1, "reads": 28, "readers_count": 27, "score": 10.6, "yours": false, "topic_id": 2013, "topic_slug": "solved-how-do-you-go-about-collison-check", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 411, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 12262, "name": "", "username": "Dave82", "avatar_template": "/user_avatar/discourse.urho3d.io/dave82/{size}/2369_2.png", "created_at": "2016-05-29T06:43:23.000Z", "cooked": "<p>[quote]how come physic in engines is never user friendly ?<br>\nand how come there is no understandable tutorial about urho custom objects and components while it seem to be the base of the engine ?[/quote]</p>\n<p>I never saw an engine where using Physics is easier than Urho.<br>\nObject oriented  and component based programming are <span class=\"bbcode-b\">NOT</span> Urho features but c++ and other OOP language features.You can\u2019t expect form anyone here to explain you the basics of c++.<br>\nThe tutorials are extremely straightforward and explain the engine usage very well.</p>\n<aside class=\"quote\">\n<blockquote>\n<p>edit: bah, i guess i will just use bullet as it come and won\u2019t use urho3D physic at all. it will be simplier, i saw i can use .obj from blender to bullet so that should be ok.</p>\n</blockquote>\n</aside>\n<p>That\u2019s bad idea ! Don\u2019t use the engine\u2019s lower layer if you\u2019re not a experienced programmer.After few days your code will turn into an unreadable spagetti and no one can help you afterewards.</p>", "post_number": 26, "post_type": 1, "updated_at": "2017-01-02T01:12:34.212Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 2, "reads": 28, "readers_count": 27, "score": 15.6, "yours": false, "topic_id": 2013, "topic_slug": "solved-how-do-you-go-about-collison-check", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 247, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 12263, "name": "", "username": "noals", "avatar_template": "/user_avatar/discourse.urho3d.io/noals/{size}/1995_2.png", "created_at": "2016-05-29T08:25:33.000Z", "cooked": "<p>i would like to try as you say but i don\u2019t really know what i must do exaclty.</p>\n<p>when i check <a href=\"http://www.tutorialspoint.com/cplusplus/cpp_inheritance.htm\" data-bbcode=\"true\" rel=\"nofollow noopener\">HERE</a>, it doesn\u2019t seem very hard to me to derive a class (and i kinda understand the custom component thing) but which class must i derive from ?<br>\nmust i do some kind of Node, Component, LogicComponent, AnimatedModel ? i\u2019m confused.</p>\n<p>and then, that\u2019s when i derive the class that i must add the SubscribeToEvent ? i\u2019m confused by the organisation/hierarchy of it all.</p>", "post_number": 27, "post_type": 1, "updated_at": "2017-01-02T01:12:34.288Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 26, "readers_count": 25, "score": 5.2, "yours": false, "topic_id": 2013, "topic_slug": "solved-how-do-you-go-about-collison-check", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "http://www.tutorialspoint.com/cplusplus/cpp_inheritance.htm", "internal": false, "reflection": false, "title": "C++ Inheritance", "clicks": 3}], "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 411, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 12266, "name": "", "username": "Nerrik", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/n/958977/{size}.png", "created_at": "2016-05-29T14:55:38.000Z", "cooked": "<p>you can look into the characterdemo(or other samples with more than one class) source how to implement a new class as a urho3d logiccomponent. In the characterdemo it is the \u201cCharacter\u201d class.</p>\n<aside class=\"quote\">\n<blockquote>\n<p>and then, that\u2019s when i derive the class that i must add the SubscribeToEvent ? i\u2019m confused by the organisation/hierarchy of it all.</p>\n</blockquote>\n</aside>\n<p>You dont have to subscribe your event into an diffrent class. You can do it in every class you want. (it only has to be a \u201curho3d class\u201d)</p>", "post_number": 28, "post_type": 1, "updated_at": "2017-01-02T01:12:34.548Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 1, "reads": 25, "readers_count": 24, "score": 10.0, "yours": false, "topic_id": 2013, "topic_slug": "solved-how-do-you-go-about-collison-check", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 230, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 12267, "name": "", "username": "noals", "avatar_template": "/user_avatar/discourse.urho3d.io/noals/{size}/1995_2.png", "created_at": "2016-05-29T16:31:32.000Z", "cooked": "<p>ok, now i kinda see what i must do but the how seems more difficult to me.<br>\nfrom what i understand, i should end up adding the logic component to my module node and so urho should do the collision check for me as long as i can define the component well.<br>\nexample :</p>\n<pre><code class=\"lang-auto\"></code></pre>\n<p>or i could even do a new urho Object for my rooms, corridors, modules, \u2026 but it seems even harder.</p>\n<p>this is a new level of abstraction to me.<br>\ni\u2019m puzzled by how things are initialized, i need to get into it and try things, i will surely have more questions about it later.</p>", "post_number": 29, "post_type": 1, "updated_at": "2017-01-02T01:12:34.611Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 25, "readers_count": 24, "score": 5.0, "yours": false, "topic_id": 2013, "topic_slug": "solved-how-do-you-go-about-collison-check", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 411, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 12268, "name": "", "username": "Nerrik", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/n/958977/{size}.png", "created_at": "2016-05-29T16:54:34.000Z", "cooked": "<aside class=\"quote\">\n<blockquote>\n<p>from what i understand, i should end up adding the logic component to my module node and so urho should do the collision check for me as long as i can define the component well.</p>\n</blockquote>\n</aside>\n<p>thats right (if you call up the function with the SubscribeToEvent command from your CollisionTester class in the mainclass - one time)</p>", "post_number": 30, "post_type": 1, "updated_at": "2017-01-02T01:12:34.686Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 25, "readers_count": 24, "score": 5.0, "yours": false, "topic_id": 2013, "topic_slug": "solved-how-do-you-go-about-collison-check", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 230, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 12269, "name": "", "username": "TheComet", "avatar_template": "/user_avatar/discourse.urho3d.io/thecomet/{size}/1493_2.png", "created_at": "2016-05-29T16:56:25.000Z", "cooked": "<aside class=\"quote no-group\" data-username=\"noals\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/noals/40/1995_2.png\" class=\"avatar\"> noals:</div>\n<blockquote>\n<p>i\u2019m puzzled by how things are initialized, i need to get into it and try things, i will surely have more questions about it later.</p>\n</blockquote>\n</aside>\n<p>During start-up, all components that can be instantiated are registered to the context object. The best way to learn about this mechanism is by writing your own component. Example:</p>\n<p>[code]class MyComponent : public Urho3D::Component {<br>\npublic:<br>\nMyComponent(Urho3D::Context* context) : Component(context) {}</p>\n<pre><code>static void RegisterObject(Urho3D::Context* context)\n{\n    context-&gt;RegisterFactory&lt;MyComponent&gt;(\"Custom Component\");\n}\n</code></pre>\n<p>};[/code]</p>\n<p>If you were to try and execute the following code without registering your component:</p>\n<pre><code class=\"lang-auto\">node_ = CreateComponent&lt;MyComponent&gt;();</code></pre>\n<p>then Urho3D would not know how to create \u201cMyComponent\u201d. It will return a default component that does nothing instead of instantiating MyComponent (or it might return NULL, I\u2019m not sure any more).</p>\n<p>You have to first register your component once:</p>\n<p><code>// Do this once\nMyComponent::RegisterObject(context_);</code></p>\n<p>And now CreateComponent(); will do what you expect it to do.</p>\n<p>You can look in Object.h:241 to see how it is implemented.</p>", "post_number": 31, "post_type": 1, "updated_at": "2017-01-02T01:12:34.756Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 1, "incoming_link_count": 0, "reads": 27, "readers_count": 26, "score": 5.4, "yours": false, "topic_id": 2013, "topic_slug": "solved-how-do-you-go-about-collison-check", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Community repository maintainer", "title_is_group": false, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 37, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 12280, "name": "", "username": "noals", "avatar_template": "/user_avatar/discourse.urho3d.io/noals/{size}/1995_2.png", "created_at": "2016-05-31T08:19:16.000Z", "cooked": "<p>i have a little question.</p>\n<p>i use the Ragdolls sample as example.<br>\nin the CreateRagdoll.cpp:115, there is that :</p>\n<p><code>void CreateRagdoll::CreateRagdollBone(const String&amp; boneName, ShapeType type, const Vector3&amp; size, const Vector3&amp; position,\n    const Quaternion&amp; rotation)\n{\n    // Find the correct child scene node recursively\n    Node* boneNode = node_-&gt;GetChild(boneName, true);</code><br>\n<span class=\"bbcode-b\">node_</span> is actually the node on which the ragdoll is created right ?<br>\nthe same node the custom component is assigned to with :</p>\n<p><code>protected:\n    /// Handle node being assigned.\n    virtual void OnNodeSet(Node* node);</code></p>\n<p>i guess it is that but since i don\u2019t see it being initialized, i wonder where it come from.<br>\nthis <span class=\"bbcode-b\">node_</span> is a member of what originally ?</p>", "post_number": 32, "post_type": 1, "updated_at": "2017-01-02T01:12:35.559Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 1, "reads": 23, "readers_count": 22, "score": 9.6, "yours": false, "topic_id": 2013, "topic_slug": "solved-how-do-you-go-about-collison-check", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 411, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 12282, "name": "Lasse \u00d6\u00f6rni", "username": "cadaver", "avatar_template": "/user_avatar/discourse.urho3d.io/cadaver/{size}/3_2.png", "created_at": "2016-05-31T10:45:27.000Z", "cooked": "<p>It\u2019s a member of the Component base class, and has been initialized when the component was created to the node.</p>", "post_number": 33, "post_type": 1, "updated_at": "2017-01-02T01:12:35.699Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 22, "readers_count": 21, "score": 4.4, "yours": false, "topic_id": 2013, "topic_slug": "solved-how-do-you-go-about-collison-check", "display_username": "Lasse \u00d6\u00f6rni", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Urho3D Author", "title_is_group": false, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": true, "staff": true, "user_id": 3, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 12297, "name": "", "username": "noals", "avatar_template": "/user_avatar/discourse.urho3d.io/noals/{size}/1995_2.png", "created_at": "2016-06-01T00:20:12.000Z", "cooked": "<aside class=\"quote\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/cadaver/40/3_1.png\" class=\"avatar\"> cadaver:</div>\n<blockquote>\n<p>It\u2019s a member of the Component base class, and has been initialized when the component was created to the node.</p>\n</blockquote>\n</aside>\n<pre><code class=\"lang-auto\">    /// Scene node.\n    Node* node_;\n    /// Unique ID within the scene.\n    unsigned id_;\n    /// Network update queued flag.\n    bool networkUpdate_;\n    /// Enabled flag.\n    bool enabled_;</code></pre>\n<p>thx, that\u2019s great.</p>", "post_number": 34, "post_type": 1, "updated_at": "2017-01-02T01:12:36.853Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 1, "incoming_link_count": 0, "reads": 21, "readers_count": 20, "score": 4.2, "yours": false, "topic_id": 2013, "topic_slug": "solved-how-do-you-go-about-collison-check", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 411, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 12325, "name": "", "username": "noals", "avatar_template": "/user_avatar/discourse.urho3d.io/noals/{size}/1995_2.png", "created_at": "2016-06-02T13:37:32.000Z", "cooked": "<p>the dumb question of the day.</p>\n<p>i initialized my component like that :</p>\n<pre><code class=\"lang-auto\">        Node* m_Node = my_scene-&gt;CreateChild(\"Test\");\n        m_Node-&gt;CreateComponent&lt;Module&gt;();</code></pre>\n<p>but then, how do i use component\u2019s functions that are public member ?<br>\ncan i make a pointer of a component or something ?</p>", "post_number": 35, "post_type": 1, "updated_at": "2017-01-02T01:12:38.786Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 19, "readers_count": 18, "score": 3.8, "yours": false, "topic_id": 2013, "topic_slug": "solved-how-do-you-go-about-collison-check", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 411, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 12326, "name": "Lasse \u00d6\u00f6rni", "username": "cadaver", "avatar_template": "/user_avatar/discourse.urho3d.io/cadaver/{size}/3_2.png", "created_at": "2016-06-02T13:57:03.000Z", "cooked": "<p>To retrieve a component for calling its functions, it\u2019s easiest to use the template overload of GetComponent:</p>\n<pre><code class=\"lang-auto\">Module* module = m_Node-&gt;GetComponent&lt;Module&gt;();\nmodule-&gt;MyFunction();</code></pre>", "post_number": 36, "post_type": 1, "updated_at": "2017-01-02T01:12:38.850Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 7, "reads": 22, "readers_count": 21, "score": 39.4, "yours": false, "topic_id": 2013, "topic_slug": "solved-how-do-you-go-about-collison-check", "display_username": "Lasse \u00d6\u00f6rni", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": "Urho3D Author", "title_is_group": false, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": true, "staff": true, "user_id": 3, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 12327, "name": "", "username": "noals", "avatar_template": "/user_avatar/discourse.urho3d.io/noals/{size}/1995_2.png", "created_at": "2016-06-02T14:37:45.000Z", "cooked": "<p>ok thx.</p>", "post_number": 37, "post_type": 1, "updated_at": "2017-01-02T01:12:38.910Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 24, "readers_count": 23, "score": 4.8, "yours": false, "topic_id": 2013, "topic_slug": "solved-how-do-you-go-about-collison-check", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 411, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 12328, "name": "", "username": "noals", "avatar_template": "/user_avatar/discourse.urho3d.io/noals/{size}/1995_2.png", "created_at": "2016-06-02T15:32:16.000Z", "cooked": "<p>well, i\u2019m at the same point.</p>\n<aside class=\"quote\">\n<blockquote>\n<p>warning btCollisionDispatcher::needsCollision: static-static collision!</p>\n</blockquote>\n</aside>\n<p>why shouldn\u2019t i be able to do some static-static collision check ? did i miss something ?</p>\n<pre><code class=\"lang-auto\">//add physic         \n    RigidBody* m_Body = node_-&gt;CreateComponent&lt;RigidBody&gt;();\n    m_Body-&gt;SetMass(0);  //0 for static object</code></pre>\n<p>my component is made like that :</p>\n<p>CreateModule.h</p>\n<pre><code class=\"lang-auto\">#pragma once\n\n#include &lt;Urho3D/Physics/CollisionShape.h&gt;\n#include \"ModuleInfos.h\"\n\nusing namespace Urho3D;\n\n/// Custom component (that creates a ragdoll upon collision.)\nclass Module : public Component\n{\n    URHO3D_OBJECT(Module, Component);\n    \npublic:\n    /// Construct.\n    Module(Context* context);\n\n    //ExitList exitList;\n\t\n    void createRoom(Scene* scene, ResourceCache* cache);\n    void createCor(Scene* scene, ResourceCache* cache);\n    void createJunc(Scene* scene, ResourceCache* cache);\n\n\t\n    \nprotected:\n    /// Handle node being assigned.\n    virtual void OnNodeSet(Node* node);\n    \nprivate:\n    /// Handle scene node's physics collision.\n    void OnCollisionEvent(StringHash eventType, VariantMap&amp; eventData);\n    \n\n//to load different modules type infos\n    r_Rooms* room_p;\n    r_Cors* cor_p;\n    r_Juncs* junc_p;\n};</code></pre>\n<p>CreateModule.cpp</p>\n<pre><code class=\"lang-auto\">\n#include &lt;Urho3D/Engine/Application.h&gt;\n#include &lt;Urho3D/Engine/Engine.h&gt;\n#include &lt;Urho3D/Input/Input.h&gt;\n#include &lt;Urho3D/Input/InputEvents.h&gt;\n#include &lt;Urho3D/Graphics/Graphics.h&gt;\n\n#include &lt;Urho3D/Resource/ResourceCache.h&gt;\n#include &lt;Urho3D/Scene/Scene.h&gt;\n#include &lt;Urho3D/Math/Vector3.h&gt;\n#include &lt;Urho3D/Math/Quaternion.h&gt;\n#include &lt;Urho3D/Graphics/Model.h&gt;\n#include &lt;Urho3D/Graphics/AnimatedModel.h&gt;\n#include &lt;Urho3D/Graphics/Material.h&gt;\n#include &lt;string&gt;\n#include &lt;vector&gt;\n\n#include \"fonctions.h\"\n#include \"conversions.h\"\n#include \"Counts.h\"\n#include \"Exit.h\"\n\n#include \"tinyxml2.h\"\n#include &lt;Urho3D/IO/Log.h&gt;\n#include &lt;Urho3D/DebugNew.h&gt;\n\n//physic\n#include &lt;Urho3D/Physics/CollisionShape.h&gt;\n//#include &lt;Urho3D/Physics/PhysicsWorld.h&gt;\n#include &lt;Urho3D/Physics/RigidBody.h&gt;\n#include &lt;Urho3D/Physics/PhysicsEvents.h&gt;\n\n\n#include \"CreateModule.h\"\n#include \"ModuleInfos.h\"\n\n\nusing namespace Urho3D;\n\n\n\nModule::Module(Context* context) :\n    Component(context)\n{\n}\n\nvoid Module::createRoom(Scene* scene, ResourceCache* cache)\n{\n    room_p = new r_Rooms();\n\t\n    std::string std_sceneName = IntString(id_, room_p-&gt;std_name);\n    String sceneName = string2urhoString(std_sceneName);\n\n    node_ = scene-&gt;CreateChild(sceneName);\n    node_-&gt;SetWorldPosition(Vector3::ZERO);   //room.position          \n    node_-&gt;SetWorldRotation(Quaternion::IDENTITY);   //room.rotation (1,0,0,0) \n    \n    //m_Object = new AnimatedModel();    \n    AnimatedModel* m_Object = node_-&gt;CreateComponent&lt;AnimatedModel&gt;();\n    m_Object-&gt;SetModel(cache-&gt;GetResource&lt;Model&gt;(room_p-&gt;path));\n    m_Object-&gt;SetMaterial(cache-&gt;GetResource&lt;Material&gt;(room_p-&gt;texturepath));\n    \n//add physic          \n    RigidBody* m_Body = node_-&gt;CreateComponent&lt;RigidBody&gt;();\n    m_Body-&gt;SetMass(0);  //0 for static object\n    m_Body-&gt;SetFriction(0.6);        // friction with other objects (like the ground)\n    m_Body-&gt;SetCollisionLayer(1);\n//add collision shape\n    CollisionShape* m_BBox = node_-&gt;CreateComponent&lt;CollisionShape&gt;();\n    m_BBox-&gt;SetTriangleMesh(cache-&gt;GetResource&lt;Model&gt;(room_p-&gt;path));\n\n\n//add light\n    Node* light=node_-&gt;CreateChild(\"m_light\");\n    light-&gt;SetPosition(Vector3(0, 5, 0));\n    {\n        Light* Mlight=light-&gt;CreateComponent&lt;Light&gt;();\n        Mlight-&gt;SetLightType(LIGHT_POINT);\n        Mlight-&gt;SetRange(20);\n        Mlight-&gt;SetBrightness(1.0);\n        Mlight-&gt;SetColor(Color(.8,.8,.8,1.0));\n    }\n\n}\n\nvoid Module::createCor(Scene* scene, ResourceCache* cache)\n{\n   //same thing...\n}\n\nvoid Module::createJunc(Scene* scene, ResourceCache* cache)\n{\n   //same thing...\n}\n\n//protected\nvoid Module::OnNodeSet(Node* node)\n{\n    // If the node pointer is non-null, this component has been created into a scene node. Subscribe to physics collisions that concern this scene node\n    if (node)\n    {\n        SubscribeToEvent(node, E_NODECOLLISION, URHO3D_HANDLER(Module, OnCollisionEvent)); \n    }\n}\n\n//private\nvoid Module::OnCollisionEvent(StringHash eventType, VariantMap&amp; eventData)\n{\n    using namespace NodeCollision;\n\n    // Get the other colliding body\n    RigidBody* otherBody = static_cast&lt;RigidBody*&gt;(eventData[P_OTHERBODY].GetPtr());\n\n    if (otherBody)\n    {\n\n        URHO3D_LOGINFO(\"collide\"); \n\n        // Finally remove self from the scene node. Note that this must be the last operation performed in the function\n        //Remove();  ??\n    }\n}</code></pre>", "post_number": 38, "post_type": 1, "updated_at": "2017-01-02T01:12:38.969Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 27, "readers_count": 26, "score": 5.4, "yours": false, "topic_id": 2013, "topic_slug": "solved-how-do-you-go-about-collison-check", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 411, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 12329, "name": "", "username": "Lumak", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/l/8491ac/{size}.png", "created_at": "2016-06-02T17:00:40.000Z", "cooked": "<p>[quote=\u201cnoals\u201d]well, i\u2019m at the same point.</p>\n<aside class=\"quote\">\n<blockquote>\n<p>warning btCollisionDispatcher::needsCollision: static-static collision!</p>\n</blockquote>\n</aside>\n<p>why shouldn\u2019t i be able to do some static-static collision check ? did i miss something ?<br>\n[/quote]</p>\n<p>There shouldn\u2019t be a static-static collision check in Bullet, as you don\u2019t expect static geometries to move.  That is the point of static objects.</p>\n<p>If you\u2019re trying to place objects randomly in the scene, what I\u2019d suggest is that you set the mass of &gt; 0 so you can get a collision call back and rely on dynamic-static collision callback.  And once it\u2019s placed properly in the world <span class=\"bbcode-b\">then</span> set the mass back to 0.</p>", "post_number": 39, "post_type": 1, "updated_at": "2017-01-02T01:12:39.053Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 1, "incoming_link_count": 1, "reads": 30, "readers_count": 29, "score": 11.0, "yours": false, "topic_id": 2013, "topic_slug": "solved-how-do-you-go-about-collison-check", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 256, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 12330, "name": "", "username": "noals", "avatar_template": "/user_avatar/discourse.urho3d.io/noals/{size}/1995_2.png", "created_at": "2016-06-02T17:04:08.000Z", "cooked": "<p>i think i misunderstood the warning message :</p>\n<aside class=\"quote\">\n<blockquote>\n<p>warning btCollisionDispatcher::needsCollision: static-static collision!</p>\n</blockquote>\n</aside>\n<p>i fast checked the bullet forum and it seems that the collision actually happen and bullet just warn me that it is a collision between 2 static models. (and that\u2019s what i want here)</p>\n<p>but if the collision happens, then i don\u2019t understand urho3D again because this part of code don\u2019t do what i expect it to do :</p>\n<pre><code class=\"lang-auto\">\nvoid Module::OnCollisionEvent(StringHash eventType, VariantMap&amp; eventData)\n{\n    using namespace NodeCollision;\n\n    // Get the other colliding body\n    RigidBody* otherBody = static_cast&lt;RigidBody*&gt;(eventData[P_OTHERBODY].GetPtr());\n\n    if (otherBody)\n    {\n        URHO3D_LOGINFO(\"collide\");\n    }\n}</code></pre>\n<p>it doesn\u2019t show \u201ccollide\u201d in my log.</p>", "post_number": 40, "post_type": 1, "updated_at": "2017-01-02T01:12:39.122Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 42, "readers_count": 41, "score": 8.4, "yours": false, "topic_id": 2013, "topic_slug": "solved-how-do-you-go-about-collison-check", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 411, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 12333, "name": "", "username": "noals", "avatar_template": "/user_avatar/discourse.urho3d.io/noals/{size}/1995_2.png", "created_at": "2016-06-02T17:10:14.000Z", "cooked": "<p>[quote=\u201cLumak\u201d][quote=\u201cnoals\u201d]well, i\u2019m at the same point.</p>\n<aside class=\"quote\">\n<blockquote>\n<p>warning btCollisionDispatcher::needsCollision: static-static collision!</p>\n</blockquote>\n</aside>\n<p>why shouldn\u2019t i be able to do some static-static collision check ? did i miss something ?<br>\n[/quote]</p>\n<p>There shouldn\u2019t be a static-static collision check in Bullet, as you don\u2019t expect static geometries to move.  That is the point of static objects.</p>\n<p>If you\u2019re trying to place objects randomly in the scene, what I\u2019d suggest is that you set the mass of &gt; 0 so you can get a collision call back and rely on dynamic-static collision callback.  And once it\u2019s placed properly in the world <span class=\"bbcode-b\">then</span> set the mass back to 0.[/quote]</p>\n<p>we posted at the same time. ^^;</p>\n<p>i though about this solution while thinking about my problem but you\u2019re right,  i don\u2019t want my module to move. i will check about call back, i\u2019m not familiar with this either.</p>", "post_number": 41, "post_type": 1, "updated_at": "2017-01-02T01:12:39.311Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 1, "incoming_link_count": 5, "reads": 37, "readers_count": 36, "score": 32.4, "yours": false, "topic_id": 2013, "topic_slug": "solved-how-do-you-go-about-collison-check", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 411, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 12334, "name": "", "username": "Lumak", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/l/8491ac/{size}.png", "created_at": "2016-06-02T17:14:17.000Z", "cooked": "<p>The warning:<br>\nprintf(\u201cwarning btCollisionDispatcher::needsCollision: static-static collision!\\n\u201d);</p>\n<p>is reported in bullet\u2019s code, specifiacally in:<br>\nbool\tbtCollisionDispatcher::needsCollision(const btCollisionObject* body0,const btCollisionObject* body1) - in btCollisionDispatcher.cpp</p>\n<p>And because of it, it never reports back to Urho.  There are two choices to your solution: 1) write static-static collision dispatcher as complained in btCollisionDispatcher.cpp 2) temporarily assign some mass to a placing object.</p>", "post_number": 42, "post_type": 1, "updated_at": "2017-01-02T01:12:39.383Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 1, "reads": 38, "readers_count": 37, "score": 12.6, "yours": false, "topic_id": 2013, "topic_slug": "solved-how-do-you-go-about-collison-check", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 256, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 12335, "name": "", "username": "Lumak", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/l/8491ac/{size}.png", "created_at": "2016-06-02T17:17:00.000Z", "cooked": "<p>Ha, you posted your conclusion as I was typing another response.</p>\n<p>I think you\u2019re on the right track now. good luck!</p>", "post_number": 43, "post_type": 1, "updated_at": "2017-01-02T01:12:39.442Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 32, "readers_count": 31, "score": 6.4, "yours": false, "topic_id": 2013, "topic_slug": "solved-how-do-you-go-about-collison-check", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 256, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 12343, "name": "", "username": "noals", "avatar_template": "/user_avatar/discourse.urho3d.io/noals/{size}/1995_2.png", "created_at": "2016-06-03T07:24:53.000Z", "cooked": "<p>still doesn\u2019t work, dunno what\u2019s wrong with my code.<br>\nthis doesn\u2019t do anything :</p>\n<pre><code class=\"lang-auto\">void Module::OnCollisionEvent(StringHash eventType, VariantMap&amp; eventData)\n{\n    using namespace NodeCollision;\n    RigidBody* otherBody = static_cast&lt;RigidBody*&gt;(eventData[P_OTHERBODY].GetPtr());\n\n    if (otherBody-&gt;GetMass() &gt; 0.0f)\n    {\n        URHO3D_LOGINFO(\"collide\");\n        Light* light;\n        light = node_-&gt;GetComponent&lt;Light&gt;();\n        light-&gt;SetColor(Color(.8,.4,.4,1.0));\n    }\n}</code></pre>\n<p>and i set my RigidBody like that so my modules are non-static but they don\u2019t move either.</p>\n<pre><code class=\"lang-auto\">    m_Body-&gt;SetMass(1);  //0 for static object\n\tm_Body-&gt;SetUseGravity(false);\n\tm_Body-&gt;SetTrigger(true);\t //In trigger mode collisions are reported but do not apply forces. </code></pre>\n<p>and my component is registered in my main.cpp</p>\n<pre><code class=\"lang-auto\">    projet(Context* context) : Application(context)\n    {\n        context-&gt;RegisterFactory&lt;Module&gt;();\n    }</code></pre>", "post_number": 44, "post_type": 1, "updated_at": "2017-01-02T01:12:39.942Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 2, "reads": 37, "readers_count": 36, "score": 17.4, "yours": false, "topic_id": 2013, "topic_slug": "solved-how-do-you-go-about-collison-check", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 411, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 12345, "name": "", "username": "noals", "avatar_template": "/user_avatar/discourse.urho3d.io/noals/{size}/1995_2.png", "created_at": "2016-06-03T13:16:54.000Z", "cooked": "<p>the component doesn\u2019t even work at all.</p>\n<pre><code class=\"lang-auto\">void Module::OnNodeSet(Node* node)\n{\n    // If the node pointer is non-null, this component has been created into a scene node. Subscribe to physics collisions that concern this scene node\n    if (node)\n    {\n        SubscribeToEvent(node, E_NODECOLLISIONSTART, URHO3D_HANDLER(Module, OnCollisionEvent));\n        URHO3D_LOGINFO(\"node set\");\n    }\n}</code></pre>\n<p>this actually return me \u201cnode set\u201d in the log but that\u2019s all this fucking component can do !<br>\nin my main.cpp, if i try to move the node with the component on it with SetWorldPosition(), nothing move at all.</p>\n<p>i\u2019m losing my time with this shit.  <img src=\"https://emoji.discourse-cdn.com/twitter/imp.png?v=5\" title=\":imp:\" class=\"emoji\" alt=\":imp:\"><br>\nhow da fuck do this shit work really ?!</p>\n<p>main</p>\n<p>[spoiler][code]//engine<br>\n<span class=\"hashtag\">#include</span> &lt;Urho3D/Engine/Application.h&gt;<br>\n<span class=\"hashtag\">#include</span> &lt;Urho3D/Engine/Engine.h&gt;<br>\n<span class=\"hashtag\">#include</span> &lt;Urho3D/Input/Input.h&gt;<br>\n<span class=\"hashtag\">#include</span> &lt;Urho3D/Input/InputEvents.h&gt;<br>\n<span class=\"hashtag\">#include</span> &lt;Urho3D/Graphics/Graphics.h&gt;</p>\n<p><span class=\"hashtag\">#include</span> &lt;Urho3D/Resource/ResourceCache.h&gt;<br>\n<span class=\"hashtag\">#include</span> &lt;Urho3D/Scene/Scene.h&gt;<br>\n<span class=\"hashtag\">#include</span> &lt;Urho3D/Scene/SceneEvents.h&gt;<br>\n<span class=\"hashtag\">#include</span> &lt;Urho3D/Graphics/Octree.h&gt;<br>\n<span class=\"hashtag\">#include</span> &lt;Urho3D/Graphics/DebugRenderer.h&gt;<br>\n<span class=\"hashtag\">#include</span> &lt;Urho3D/Graphics/Camera.h&gt;<br>\n<span class=\"hashtag\">#include</span> &lt;Urho3D/Graphics/Viewport.h&gt;<br>\n<span class=\"hashtag\">#include</span> &lt;Urho3D/Graphics/Renderer.h&gt;</p>\n<p><span class=\"hashtag\">#include</span> &lt;Urho3D/Graphics/Model.h&gt;<br>\n<span class=\"hashtag\">#include</span> &lt;Urho3D/Graphics/StaticModel.h&gt;<br>\n<span class=\"hashtag\">#include</span> &lt;Urho3D/Graphics/AnimatedModel.h&gt;<br>\n<span class=\"hashtag\">#include</span> &lt;Urho3D/Graphics/Material.h&gt;</p>\n<p><span class=\"hashtag\">#include</span> &lt;Urho3D/Graphics/Light.h&gt;</p>\n<p><span class=\"hashtag\">#include</span> &lt;Urho3D/Core/CoreEvents.h&gt;</p>\n<p><span class=\"hashtag\">#include</span> &lt;Urho3D/Math/Vector3.h&gt;</p>\n<p><span class=\"hashtag\">#include</span> &lt;Urho3D/UI/Window.h&gt;<br>\n<span class=\"hashtag\">#include</span> &lt;Urho3D/UI/Text.h&gt;<br>\n<span class=\"hashtag\">#include</span> &lt;Urho3D/UI/Font.h&gt;<br>\n<span class=\"hashtag\">#include</span> &lt;Urho3D/UI/UI.h&gt;<br>\n<span class=\"hashtag\">#include</span> &lt;Urho3D/IO/Log.h&gt;</p>\n<p>//my class<br>\n<span class=\"hashtag\">#include</span> \u201cCreateModule.<code></code>h\u201d<br>\n<span class=\"hashtag\">#include</span> \u201cExit.h\u201d<br>\n<span class=\"hashtag\">#include</span> \u201cCounts.h\u201d</p>\n<p>//include<br>\n<span class=\"hashtag\">#include</span> <br>\n<span class=\"hashtag\">#include</span> <br>\n<span class=\"hashtag\">#include</span> </p>\n<p>//physic<br>\n<span class=\"hashtag\">#include</span> &lt;Urho3D/Physics/PhysicsWorld.h&gt;<br>\n<span class=\"hashtag\">#include</span> &lt;Urho3D/Physics/PhysicsEvents.h&gt;</p>\n<p>using namespace Urho3D;</p>\n<p>class projet : public Application<br>\n{<br>\nURHO3D_OBJECT(projet, Application)</p>\n<p>public:</p>\n<p>////______________________<br>\n////    DEFINITION</p>\n<pre><code>SharedPtr&lt;Scene&gt; my_scene;\n\n//about camera\nSharedPtr&lt;Node&gt; camNode;\n\n//physic\nbool drawDebug_;\n\n//about text\nWindow* window;\nText* text;\n\nprojet(Context* context) : Application(context)\n{\n</code></pre>\n<p>// Register an object factory for our custom CreateRagdoll component so that we can create them to scene nodes<br>\ncontext-&gt;RegisterFactory();<br>\n//context-&gt;RegisterFactory();<br>\n}</p>\n<pre><code>virtual void Setup()\n{\n    engineParameters_[\"FullScreen\"]=false;\n    engineParameters_[\"WindowWidth\"]=1280;\n    engineParameters_[\"WindowHeight\"]=720;\n    engineParameters_[\"WindowResizable\"]=true;\n}\n\nvirtual void Start()\n{\n\n    ResourceCache* cache=GetSubsystem&lt;ResourceCache&gt;();\n\n    my_scene=new Scene(context_);\n    my_scene-&gt;CreateComponent&lt;Octree&gt;();\n    my_scene-&gt;CreateComponent&lt;DebugRenderer&gt;();\n</code></pre>\n<p>//physic</p>\n<pre><code>    my_scene-&gt;CreateComponent&lt;PhysicsWorld&gt;(); \n</code></pre>\n<p>////___________________<br>\n////    MODULES</p>\n<pre><code>    //Dungeon dungeon(100, my_scene, cache);\n    \n    Node* m_Node = my_scene-&gt;CreateChild(\"Test\");\n    m_Node-&gt;CreateComponent&lt;Module&gt;();\n    Module* m_comp = m_Node-&gt;GetComponent&lt;Module&gt;();\n    m_comp-&gt;createRoom(my_scene, cache);\n\n    Node* m_Node2 = my_scene-&gt;CreateChild(\"Test2\");\n    m_Node2-&gt;CreateComponent&lt;Module&gt;();\n    Module* m_comp2 = m_Node2-&gt;GetComponent&lt;Module&gt;();\n    m_comp2-&gt;createCor(my_scene, cache);\n    m_comp2-&gt;SetWorldPosition(Vector3(0,2,0)); //i tryed with the node as well\n    \n\n\n    URHO3D_LOGINFO(\"test_main\"); \n</code></pre>\n<p>////__________________<br>\n////    CAMERA</p>\n<p>using namespace Urho3D;<br>\ncamNode=my_scene-&gt;CreateChild(\u201ccamNode\u201d);<br>\nCamera* camObject=camNode-&gt;CreateComponent();<br>\ncamObject-&gt;SetFarClip(2000);<br>\ncamNode-&gt;SetWorldPosition(Vector3(0,20,-20));     //x =blender y //y =blender z hauteur //z =blender x profondeur<br>\ncamNode-&gt;LookAt(Vector3::ZERO);</p>\n<pre><code>    //camera light\n    {\n        Light* light=camNode-&gt;CreateComponent&lt;Light&gt;();\n        light-&gt;SetLightType(LIGHT_POINT);\n        light-&gt;SetRange(25);\n        light-&gt;SetBrightness(2.0);\n        light-&gt;SetColor(Color(.8,1,.8,1.0));\n    }\n</code></pre>\n<p>////________________<br>\n////    TEXT</p>\n<pre><code>    std::string str = (\"\"); \n    {\n        std::ostringstream ss;\n        ss;\n          //&lt;&lt;\" module count = \"&lt;&lt;dungeon.MODULE_COUNT\n          //&lt;&lt;\"\\n free exit = \"&lt;&lt;dungeon.mainExitList.size();\n\n        std::string s(ss.str());\n        str.append(s/*.substr(0,60)*/);\n    }\n    String s(str.c_str(),str.size());\n\n    window=new Window(context_);\n    GetSubsystem&lt;UI&gt;()-&gt;GetRoot()-&gt;AddChild(window);\n    window-&gt;SetStyle(\"Window\");\n    window-&gt;SetSize(500,200);\n    window-&gt;SetColor(Color(.0,.15,.3,.5));\n    window-&gt;SetAlignment(HA_LEFT,VA_TOP);\n\n    text=new Text(context_);\n    text-&gt;SetFont(cache-&gt;GetResource&lt;Font&gt;(\"Fonts/Anonymous Pro.ttf\"),14);\n    text-&gt;SetColor(Color(.8,.85,.9));\n    text-&gt;SetAlignment(HA_LEFT,VA_TOP);\n    text-&gt;SetText(s); //s\n    window-&gt;AddChild(text);\n</code></pre>\n<p>////__________________<br>\n////    RENDER</p>\n<pre><code>    Renderer* renderer=GetSubsystem&lt;Renderer&gt;();\n    SharedPtr&lt;Viewport&gt; viewport(new Viewport(context_,my_scene,camNode-&gt;GetComponent&lt;Camera&gt;()));\n    renderer-&gt;SetViewport(0,viewport);\n</code></pre>\n<p>////__________________<br>\n////    EVENTS</p>\n<pre><code>//SubscribeToEvent(E_BEGINFRAME,URHO3D_HANDLER(projet,HandleBeginFrame));\n//SubscribeToEvent(E_KEYDOWN,URHO3D_HANDLER(projet,HandleKeyDown));\n//SubscribeToEvent(E_UIMOUSECLICK,URHO3D_HANDLER(projet,HandleControlClicked));\n    SubscribeToEvent(E_UPDATE, URHO3D_HANDLER(projet, HandleUpdate));\n\n//SubscribeToEvent(E_POSTUPDATE,URHO3D_HANDLER(projet,HandlePostUpdate));\n//SubscribeToEvent(E_RENDERUPDATE,URHO3D_HANDLER(projet,HandleRenderUpdate));\n    SubscribeToEvent(E_POSTRENDERUPDATE,URHO3D_HANDLER(projet,HandlePostRenderUpdate));     \n//SubscribeToEvent(E_ENDFRAME,URHO3D_HANDLER(projet,HandleEndFrame));\n    SubscribeToEvent(E_KEYDOWN, URHO3D_HANDLER(projet, HandleKeyDown));\n\n\n}\n\nvirtual void Stop()\n{\n}\n</code></pre>\n<p>////________</p>\n<pre><code>void HandleUpdate(StringHash eventType,VariantMap&amp; eventData)\n{\n    float timeStep=eventData[Update::P_TIMESTEP].GetFloat();\nfloat MOVE_SPEED=50.0f;\n    Input* input=GetSubsystem&lt;Input&gt;();\n\nif(input-&gt;GetQualifierDown(1))  // 1 is shift, 2 is ctrl, 4 is alt\n        MOVE_SPEED*=4;\n\n    if(input-&gt;GetKeyDown('D')) //rotate sens inverse horizontal\n        camNode-&gt;Translate(Vector3(1,0, 0)*MOVE_SPEED*timeStep);\n    if(input-&gt;GetKeyDown('Q')) //sens montre horizontal\n        camNode-&gt;Translate(Vector3(-1,0,0)*MOVE_SPEED*timeStep);\n    if(input-&gt;GetKeyDown('Z')) //zoom avant\n        camNode-&gt;Translate(Vector3(0,0,1)*MOVE_SPEED*timeStep);\n    if(input-&gt;GetKeyDown('S')) //zoom arriere\n        camNode-&gt;Translate(Vector3(0,0,-1)*MOVE_SPEED*timeStep);\nif(input-&gt;GetKeyDown('E')) //rotate sens inverse vertical\n        camNode-&gt;Translate(Vector3(0,1,0)*MOVE_SPEED*timeStep);\n    if(input-&gt;GetKeyDown('A')) //sens montre vertical\n        camNode-&gt;Translate(Vector3(0,-1,0)*MOVE_SPEED*timeStep);\n    if (input-&gt;GetKeyPress(KEY_SPACE)) // Toggle physics debug geometry with space\n        drawDebug_ = !drawDebug_;\n\nif(!GetSubsystem&lt;Input&gt;()-&gt;IsMouseGrabbed())\n{\n    IntVector2 mouseMove=input-&gt;GetMouseMove();\n    \n    if(mouseMove.x_&gt;-2000000000&amp;&amp;mouseMove.y_&gt;-2000000000)\n        {\n\tcamNode-&gt;LookAt(Vector3::ZERO); //look at 0,0,0\n        }\n}\n        \n\n\n}\n</code></pre>\n<p>////_______</p>\n<p>////________</p>\n<pre><code>void HandlePostRenderUpdate(StringHash eventType, VariantMap&amp; eventData)\n{\n// If draw debug mode is enabled, draw physics debug geometry. Use depth test to make the result easier to interpret\n    if (drawDebug_)\n        my_scene-&gt;GetComponent&lt;PhysicsWorld&gt;()-&gt;DrawDebugGeometry(true);\n}\n</code></pre>\n<p>////________</p>\n<pre><code>void HandleKeyDown(StringHash eventType, VariantMap&amp; eventData)\n{\n    using namespace KeyDown;\n\n    Graphics* graphics=GetSubsystem&lt;Graphics&gt;();\n    int key = eventData[P_KEY].GetInt();\n\n    if (key == KEY_ESC) //ESC to quit\n    {\n        engine_-&gt;Exit();\n    }\n    else if(key == KEY_TAB) //TAB to toggle mouse cursor\n    {\n        GetSubsystem&lt;Input&gt;()-&gt;SetMouseVisible(!GetSubsystem&lt;Input&gt;()-&gt;IsMouseVisible());\n        GetSubsystem&lt;Input&gt;()-&gt;SetMouseGrabbed(!GetSubsystem&lt;Input&gt;()-&gt;IsMouseGrabbed()); \n    }\nelse if(key == 'W') //W for fullscreen\n{\n    graphics-&gt;ToggleFullscreen();\n}\n    else if(key == 'I')\n    {\n        //GetSubsystem&lt;UI&gt;()-&gt;menu-&gt;ShowPopup ();\n    }\n}\n</code></pre>\n<p>////________</p>\n<p>};<br>\nURHO3D_DEFINE_APPLICATION_MAIN(projet)<br>\n[/code][/spoiler]</p>\n<p>comp.h</p>\n<p>[spoiler][code]//<br>\n// Copyright \u00a9 2008-2015 the Urho3D project.<br>\n//<br>\n// Permission is hereby granted, free of charge, to any person obtaining a copy<br>\n// of this software and associated documentation files (the \u201cSoftware\u201d), to deal<br>\n// in the Software without restriction, including without limitation the rights<br>\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell<br>\n// copies of the Software, and to permit persons to whom the Software is<br>\n// furnished to do so, subject to the following conditions:<br>\n//<br>\n// The above copyright notice and this permission notice shall be included in<br>\n// all copies or substantial portions of the Software.<br>\n//<br>\n// THE SOFTWARE IS PROVIDED \u201cAS IS\u201d, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR<br>\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,<br>\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE<br>\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER<br>\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,<br>\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN<br>\n// THE SOFTWARE.<br>\n//</p>\n<p><span class=\"hashtag\">#pragma</span> once</p>\n<p><span class=\"hashtag\">#include</span> &lt;Urho3D/Physics/CollisionShape.h&gt;<br>\n<span class=\"hashtag\">#include</span> \u201cModuleInfos.h\u201d</p>\n<p>using namespace Urho3D;</p>\n<p>/// Custom component (that creates a ragdoll upon collision.)<br>\nclass Module : public Component<br>\n{<br>\nURHO3D_OBJECT(Module, Component);</p>\n<p>public:<br>\n/// Construct.<br>\nModule(Context* context);</p>\n<pre><code>void createRoom(Scene* scene, ResourceCache* cache);\nvoid createCor(Scene* scene, ResourceCache* cache);\nvoid createJunc(Scene* scene, ResourceCache* cache);\n\nint type;\nint exits;\n</code></pre>\n<p>protected:<br>\n/// Handle node being assigned.<br>\nvirtual void OnNodeSet(Node* node);</p>\n<p>private:<br>\n/// Handle scene node\u2019s physics collision.<br>\nvoid OnCollisionEvent(StringHash eventType, VariantMap&amp; eventData);</p>\n<p>/*<br>\n/// Make a bone physical by adding RigidBody and CollisionShape components.<br>\nvoid CreateRagdollBone(const String&amp; boneName, ShapeType type, const Vector3&amp; size, const Vector3&amp; position, const Quaternion&amp; rotation);<br>\n/// Join two bones with a Constraint component.<br>\nvoid CreateRagdollConstraint(const String&amp; boneName, const String&amp; parentName, ConstraintType type, const Vector3&amp; axis, const Vector3&amp; parentAxis, const Vector2&amp; highLimit, const Vector2&amp; lowLimit, bool disableCollision = true);<br>\n*/</p>\n<p>//to load different modules type infos<br>\nr_Rooms* room_p;<br>\nr_Cors* cor_p;<br>\nr_Juncs* junc_p;<br>\n};[/code][/spoiler]</p>\n<p>comp.cpp</p>\n<p>[spoiler][code]//<br>\n// Copyright \u00a9 2008-2015 the Urho3D project.<br>\n//<br>\n// Permission is hereby granted, free of charge, to any person obtaining a copy<br>\n// of this software and associated documentation files (the \u201cSoftware\u201d), to deal<br>\n// in the Software without restriction, including without limitation the rights<br>\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell<br>\n// copies of the Software, and to permit persons to whom the Software is<br>\n// furnished to do so, subject to the following conditions:<br>\n//<br>\n// The above copyright notice and this permission notice shall be included in<br>\n// all copies or substantial portions of the Software.<br>\n//<br>\n// THE SOFTWARE IS PROVIDED \u201cAS IS\u201d, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR<br>\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,<br>\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE<br>\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER<br>\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,<br>\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN<br>\n// THE SOFTWARE.<br>\n//<br>\n<span class=\"hashtag\">#include</span> &lt;Urho3D/Engine/Application.h&gt;<br>\n<span class=\"hashtag\">#include</span> &lt;Urho3D/Engine/Engine.h&gt;<br>\n<span class=\"hashtag\">#include</span> &lt;Urho3D/Input/Input.h&gt;<br>\n<span class=\"hashtag\">#include</span> &lt;Urho3D/Input/InputEvents.h&gt;<br>\n<span class=\"hashtag\">#include</span> &lt;Urho3D/Graphics/Graphics.h&gt;</p>\n<p><span class=\"hashtag\">#include</span> &lt;Urho3D/Resource/ResourceCache.h&gt;<br>\n<span class=\"hashtag\">#include</span> &lt;Urho3D/Scene/Scene.h&gt;<br>\n<span class=\"hashtag\">#include</span> &lt;Urho3D/Math/Vector3.h&gt;<br>\n<span class=\"hashtag\">#include</span> &lt;Urho3D/Math/Quaternion.h&gt;<br>\n<span class=\"hashtag\">#include</span> &lt;Urho3D/Graphics/Model.h&gt;<br>\n<span class=\"hashtag\">#include</span> &lt;Urho3D/Graphics/AnimatedModel.h&gt;<br>\n<span class=\"hashtag\">#include</span> &lt;Urho3D/Graphics/Material.h&gt;<br>\n<span class=\"hashtag\">#include</span> <br>\n<span class=\"hashtag\">#include</span> </p>\n<p><span class=\"hashtag\">#include</span> \u201cfonctions.h\u201d<br>\n<span class=\"hashtag\">#include</span> \u201cconversions.h\u201d<br>\n<span class=\"hashtag\">#include</span> \u201cCounts.h\u201d<br>\n<span class=\"hashtag\">#include</span> \u201cExit.h\u201d</p>\n<p><span class=\"hashtag\">#include</span> \u201ctinyxml2.h\u201d<br>\n<span class=\"hashtag\">#include</span> &lt;Urho3D/IO/Log.h&gt;<br>\n<span class=\"hashtag\">#include</span> &lt;Urho3D/DebugNew.h&gt;</p>\n<p>//physic<br>\n<span class=\"hashtag\">#include</span> &lt;Urho3D/Physics/CollisionShape.h&gt;<br>\n//<span class=\"hashtag\">#include</span> &lt;Urho3D/Physics/PhysicsWorld.h&gt;<br>\n<span class=\"hashtag\">#include</span> &lt;Urho3D/Physics/RigidBody.h&gt;<br>\n<span class=\"hashtag\">#include</span> &lt;Urho3D/Physics/PhysicsEvents.h&gt;</p>\n<p><span class=\"hashtag\">#include</span> \u201cCreateModule.h\u201d<br>\n<span class=\"hashtag\">#include</span> \u201cModuleInfos.h\u201d<br>\n//<span class=\"hashtag\">#include</span> \u201cCreateExit.h\u201d</p>\n<p>using namespace Urho3D;</p>\n<p>Module::Module(Context* context) :<br>\nComponent(context),<br>\ntype(0),<br>\nexits(0)<br>\n{<br>\n//context-&gt;RegisterFactory();<br>\n}</p>\n<p>void Module::createRoom(Scene* scene, ResourceCache* cache)<br>\n{<br>\nroom_p = new r_Rooms();<br>\ntype = 0;<br>\nexits = room_p-&gt;exits;</p>\n<pre><code>std::string std_sceneName = IntString(id_, room_p-&gt;std_name);\nString sceneName = string2urhoString(std_sceneName);\n\nnode_ = scene-&gt;CreateChild(sceneName);\nnode_-&gt;SetWorldPosition(Vector3::ZERO);   //room.position          \nnode_-&gt;SetWorldRotation(Quaternion::IDENTITY);   //room.rotation (1,0,0,0) \n\n//m_Object = new AnimatedModel();    \nAnimatedModel* m_Object = node_-&gt;CreateComponent&lt;AnimatedModel&gt;();\nm_Object-&gt;SetModel(cache-&gt;GetResource&lt;Model&gt;(room_p-&gt;path));\nm_Object-&gt;SetMaterial(cache-&gt;GetResource&lt;Material&gt;(room_p-&gt;texturepath));\n</code></pre>\n<p>//add physic<br>\nRigidBody* m_Body = node_-&gt;CreateComponent();<br>\nm_Body-&gt;SetMass(1);  //0 for static object<br>\nm_Body-&gt;SetUseGravity(false);<br>\nm_Body-&gt;SetTrigger(true);<br>\nm_Body-&gt;SetFriction(0.6);        // friction with other objects (like the ground)<br>\nm_Body-&gt;SetCollisionLayer(1);</p>\n<p>//add collision shape<br>\nCollisionShape* m_BBox = node_-&gt;CreateComponent();<br>\nm_BBox-&gt;SetTriangleMesh(cache-&gt;GetResource(room_p-&gt;path));</p>\n<p>//add light<br>\nNode* light=node_-&gt;CreateChild(\u201cm_light\u201d);<br>\nlight-&gt;SetPosition(Vector3(0, 5, 0));<br>\n{<br>\nLight* Mlight=light-&gt;CreateComponent();<br>\nMlight-&gt;SetLightType(LIGHT_POINT);<br>\nMlight-&gt;SetRange(20);<br>\nMlight-&gt;SetBrightness(1.0);<br>\nMlight-&gt;SetColor(Color(.8,.8,.8,1.0));<br>\n}<br>\n/*<br>\nfor(int x=0; x&lt;exits; x++)<br>\n{</p>\n<pre><code>\tstd::string std_exitName = stringInt(\"exit\",x);\n    String name = string2urhoString(std_exitName);\n\t\n    Node* exitNode = node_-&gt;GetChild(name, true);\n\texitNode-&gt;CreateComponent&lt;Exit&gt;();\n\t\n\t\n\t//make a vector there ?\n\t\n\tExit* tempExit = exitNode-&gt;GetComponent&lt;Exit&gt;();\n\ttempExit-&gt;type = 0;\n\n\t\n\t\n\texit.type=room_p-&gt;type;\n    exit.position = exit.e_Node-&gt;GetWorldPosition();\n    exit.module_pos = Vector3::ZERO;\n    exitList.push_back(exit);            \n}\n*/\n</code></pre>\n<p>}</p>\n<p>void Module::createCor(Scene* scene, ResourceCache* cache)<br>\n{<br>\ncor_p = new r_Cors();<br>\ntype = 1;<br>\nexits = cor_p-&gt;exits;</p>\n<pre><code>std::string std_sceneName = IntString(id_, cor_p-&gt;std_name);\nString sceneName = string2urhoString(std_sceneName);\n\nnode_ = scene-&gt;CreateChild(sceneName);\nnode_-&gt;SetWorldPosition(Vector3::ZERO);   //room.position          \nnode_-&gt;SetWorldRotation(Quaternion::IDENTITY);   //room.rotation (1,0,0,0) \n\n//m_Object = new AnimatedModel();    \nAnimatedModel* m_Object = node_-&gt;CreateComponent&lt;AnimatedModel&gt;();\nm_Object-&gt;SetModel(cache-&gt;GetResource&lt;Model&gt;(cor_p-&gt;path));\nm_Object-&gt;SetMaterial(cache-&gt;GetResource&lt;Material&gt;(cor_p-&gt;texturepath));\n</code></pre>\n<p>//add physic<br>\nRigidBody* m_Body = node_-&gt;CreateComponent();<br>\nm_Body-&gt;SetMass(1);  //0 for static object<br>\nm_Body-&gt;SetUseGravity(false);<br>\nm_Body-&gt;SetTrigger(true);<br>\nm_Body-&gt;SetFriction(0.6);        // friction with other objects (like the ground)<br>\nm_Body-&gt;SetCollisionLayer(1);</p>\n<p>//add collision shape<br>\nCollisionShape* m_BBox = node_-&gt;CreateComponent();<br>\nm_BBox-&gt;SetTriangleMesh(cache-&gt;GetResource(cor_p-&gt;path));</p>\n<p>//add light<br>\nNode* light=node_-&gt;CreateChild(\u201cm_light\u201d);<br>\nlight-&gt;SetPosition(Vector3(0, 5, 0));<br>\n{<br>\nLight* Mlight=light-&gt;CreateComponent();<br>\nMlight-&gt;SetLightType(LIGHT_POINT);<br>\nMlight-&gt;SetRange(20);<br>\nMlight-&gt;SetBrightness(1.0);<br>\nMlight-&gt;SetColor(Color(.8,.8,.8,1.0));<br>\n}<br>\n/*<br>\nfor(int x=0; x&lt;cor_p-&gt;exits; x++)<br>\n{<br>\nExit tempExit;</p>\n<pre><code>    std::string std_exitName = stringInt(\"exit\",x);\n    exit.name = string2urhoString(std_exitName);\n    exit.type=cor_p-&gt;type;\n    exit.e_Node = node_-&gt;GetChild(exit.name, true);\n    exit.position = exit.e_Node-&gt;GetWorldPosition();\n    exit.module_pos = Vector3::ZERO;\n    exitList.push_back(exit);            \n}*/\n</code></pre>\n<p>}</p>\n<p>void Module::createJunc(Scene* scene, ResourceCache* cache)<br>\n{<br>\njunc_p = new r_Juncs();<br>\ntype = 2;<br>\nexits = junc_p-&gt;exits;</p>\n<pre><code>std::string std_sceneName = IntString(id_, junc_p-&gt;std_name);\nString sceneName = string2urhoString(std_sceneName);\n\nnode_ = scene-&gt;CreateChild(sceneName);\nnode_-&gt;SetWorldPosition(Vector3::ZERO);   //room.position          \nnode_-&gt;SetWorldRotation(Quaternion::IDENTITY);   //room.rotation (1,0,0,0) \n\n//m_Object = new AnimatedModel();    \nAnimatedModel* m_Object = node_-&gt;CreateComponent&lt;AnimatedModel&gt;();\nm_Object-&gt;SetModel(cache-&gt;GetResource&lt;Model&gt;(junc_p-&gt;path));\nm_Object-&gt;SetMaterial(cache-&gt;GetResource&lt;Material&gt;(junc_p-&gt;texturepath));\n</code></pre>\n<p>//add physic<br>\nRigidBody* m_Body = node_-&gt;CreateComponent();<br>\nm_Body-&gt;SetMass(1);  //0 for static object<br>\nm_Body-&gt;SetUseGravity(false);<br>\nm_Body-&gt;SetTrigger(true);<br>\nm_Body-&gt;SetFriction(0.6);        // friction with other objects (like the ground)<br>\nm_Body-&gt;SetCollisionLayer(1);</p>\n<p>//add collision shape<br>\nCollisionShape* m_BBox = node_-&gt;CreateComponent();<br>\nm_BBox-&gt;SetTriangleMesh(cache-&gt;GetResource(junc_p-&gt;path));</p>\n<p>//add light<br>\nNode* light=node_-&gt;CreateChild(\u201cm_light\u201d);<br>\nlight-&gt;SetPosition(Vector3(0, 5, 0));<br>\n{<br>\nLight* Mlight=light-&gt;CreateComponent();<br>\nMlight-&gt;SetLightType(LIGHT_POINT);<br>\nMlight-&gt;SetRange(20);<br>\nMlight-&gt;SetBrightness(1.0);<br>\nMlight-&gt;SetColor(Color(.8,.8,.8,1.0));<br>\n}<br>\n/*<br>\nfor(int x=0; x&lt;junc_p-&gt;exits; x++)<br>\n{<br>\nExit tempExit;</p>\n<pre><code>    std::string std_exitName = stringInt(\"exit\",x);\n    exit.name = string2urhoString(std_exitName);\n    exit.type=junc_p-&gt;type;\n    exit.e_Node = node_-&gt;GetChild(exit.name, true);\n    exit.position = exit.e_Node-&gt;GetWorldPosition();\n    exit.module_pos = Vector3::ZERO;\n    exitList.push_back(exit);            \n}*/\n</code></pre>\n<p>}</p>\n<p>//protected<br>\nvoid Module::OnNodeSet(Node* node)<br>\n{<br>\n// If the node pointer is non-null, this component has been created into a scene node. Subscribe to physics collisions that concern this scene node<br>\nif (node)<br>\n{<br>\nSubscribeToEvent(node, E_NODECOLLISIONSTART, URHO3D_HANDLER(Module, OnCollisionEvent));<br>\nURHO3D_LOGINFO(\u201cnode set\u201d);<br>\n}<br>\n}</p>\n<p>//private<br>\nvoid Module::OnCollisionEvent(StringHash eventType, VariantMap&amp; eventData)<br>\n{<br>\nusing namespace NodeCollision;</p>\n<pre><code>// Get the other colliding body\nRigidBody* otherBody = static_cast&lt;RigidBody*&gt;(eventData[P_OTHERBODY].GetPtr());\n\n//Node* otherNode = static_cast&lt;Node*&gt;(eventData[P_OTHERNODE].GetPtr());\n\nif (otherBody-&gt;GetMass() &gt; 0.0f)\n{\n\n    URHO3D_LOGINFO(\"collide\");\n    Light* light;\n    light = node_-&gt;GetComponent&lt;Light&gt;();\n    light-&gt;SetColor(Color(.8,.4,.4,1.0));\n\n//m_Body-&gt;SetMass(1);  //0 for static object\n//m_Body-&gt;SetUseGravity(false);\n//m_Body-&gt;SetTrigger(true);\t\t\n\t\n    // Finally remove self from the scene node. Note that this must be the last operation performed in the function\n    //Remove();  \n}\n</code></pre>\n<p>}[/code][/spoiler]</p>", "post_number": 45, "post_type": 1, "updated_at": "2017-01-02T01:12:40.094Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 2, "reads": 34, "readers_count": 33, "score": 16.8, "yours": false, "topic_id": 2013, "topic_slug": "solved-how-do-you-go-about-collison-check", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 411, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 12346, "name": "", "username": "noals", "avatar_template": "/user_avatar/discourse.urho3d.io/noals/{size}/1995_2.png", "created_at": "2016-06-03T13:36:06.000Z", "cooked": "<p>i will try with a logic component.</p>\n<p>edit: or not, because i shouldn\u2019t need real time to set my module\u2019s position at the beginning of my app.</p>\n<p>dunno what to do.</p>", "post_number": 46, "post_type": 1, "updated_at": "2017-01-02T01:12:40.219Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 27, "readers_count": 26, "score": 5.4, "yours": false, "topic_id": 2013, "topic_slug": "solved-how-do-you-go-about-collison-check", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 411, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 12354, "name": "", "username": "Lumak", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/l/8491ac/{size}.png", "created_at": "2016-06-03T20:24:23.000Z", "cooked": "<p>Alright, there are a couple of things you can try.<br>\nFirst, remove setting up the body as a trigger, i.e. m_Body-&gt;SetTrigger(true); &lt;-- comment this out.<br>\nSecond, there are other collision events you can register for.  Try these: E_PHYSICSCOLLISION, E_NODECOLLISION.<span class=\"bbcode-b\">E_PHYSICSCOLLISION</span> event is ongoing, meaning that as long as there is a collision occurring you\u2019ll get an event callbck - it doesn\u2019t stop with just an initial collision call like E_NODECOLLISIONSTART.<br>\nThird, remove any conditionals in your OnCollisionEvent() function and just log what\u2019s coming in.<br>\nLastly, I highly recommend working with Urho3D/Samples for starters.  Add bits of your code to test just to learn how things work. It might end up saving you weeks of trouble.</p>\n<p>Good luck!</p>", "post_number": 47, "post_type": 1, "updated_at": "2017-01-02T01:12:40.791Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 20, "reads": 28, "readers_count": 27, "score": 105.6, "yours": false, "topic_id": 2013, "topic_slug": "solved-how-do-you-go-about-collison-check", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 256, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 12356, "name": "", "username": "noals", "avatar_template": "/user_avatar/discourse.urho3d.io/noals/{size}/1995_2.png", "created_at": "2016-06-03T22:02:45.000Z", "cooked": "<p>what about the component update ?<br>\nall this is pointless if my component doesn\u2019t even follow the node it is attached to.<br>\nthe advantage for me with this component thing is that i can move it and rotate it using the node.</p>\n<p>really, there should be templates examples for component, logic component, object with their essential requirements. (or not essential as a plus, for common usages, but commented as such !)<br>\nhere instead of 3 clear examples, i have to deal with 41 of them kinda\u2026</p>\n<aside class=\"quote\">\n<blockquote>\n<p>First, remove setting up the body as a trigger, i.e. m_Body-&gt;SetTrigger(true); &lt;-- comment this out.</p>\n</blockquote>\n</aside>\n<p>why ?<br>\ni want my module as static in the physic world but i need them as non-static to test collision so i set them with :</p>\n<p>[quote]SetUseGravity (bool enable)<br>\nSet whether gravity is applied to rigid body. [/quote]<br>\nand</p>\n<p>[quote]SetTrigger (bool enable)<br>\nSet rigid body trigger mode. In trigger mode collisions are reported but do not apply forces. [/quote]<br>\nand when the collision check is done, i can make them static again and disable the trigger mode so the physic doesn\u2019t mess up with my modules\u2019s position when i\u2019m placing them.</p>", "post_number": 48, "post_type": 1, "updated_at": "2017-01-02T01:12:40.932Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 6, "reads": 28, "readers_count": 27, "score": 35.6, "yours": false, "topic_id": 2013, "topic_slug": "solved-how-do-you-go-about-collison-check", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 411, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 12358, "name": "", "username": "Lumak", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/l/8491ac/{size}.png", "created_at": "2016-06-03T23:06:26.000Z", "cooked": "<p>You\u2019ll get a better understanding of Urho3D physic, components, and callbacks by looking at 11_Physics demo.</p>\n<p>Try adding a subscription to E_NODECOLLISIONSTART and see how that works.  Then try PHYSICSCOLLISION.  Then try setting SetTrigger() and see what happens.</p>\n<p>If you can observe those behaviors, my bet is you can fix what\u2019s wrong with yours.</p>", "post_number": 49, "post_type": 1, "updated_at": "2017-01-02T01:12:41.072Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 27, "readers_count": 26, "score": 5.4, "yours": false, "topic_id": 2013, "topic_slug": "solved-how-do-you-go-about-collison-check", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 256, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 12362, "name": "", "username": "Dave82", "avatar_template": "/user_avatar/discourse.urho3d.io/dave82/{size}/2369_2.png", "created_at": "2016-06-04T15:36:04.000Z", "cooked": "<p>[quote]what about the component update ?<br>\nall this is pointless if my component doesn\u2019t even follow the node it is attached to.<br>\nthe advantage for me with this component thing is that i can move it and rotate it using the node.[/quote]</p>\n<p>Components doesn\u2019t have transforms , nodes do ! How do you expect your Module component to move in 3d space ? It\u2019s not a transformable entity it is just a component ! you expect to move based on what exacly ?</p>\n<p>[quote]i\u2019m losing my time with this shit.<br>\nhow da fuck do this shit work really ?![/quote]</p>\n<p>Well, how about learning the basics first as i previously suggested ? I think Urho3d\u2019s structure is extremely well designed and could be understand in no time if you first learn c++ and Component based programming.<br>\nIf you stuck with trivial things like how to add components to nodes , imagine how confusing it will be once you get into game logic programming and other nasty stuff which requires good understanding of c++ ?</p>\n<p>[quote]this actually return me \u201cnode set\u201d in the log but that\u2019s all this fucking component can do !<br>\nin my main.cpp, if i try to move the node with the component on it with SetWorldPosition(), nothing move at all.[/quote]</p>\n<p>The code you posted doesn\u2019t make sense to me at all. How about using Nodes for modules.Create one component called (lets say) <a href=\"http://Element.In\" rel=\"nofollow noopener\">Element.In</a> this Element component\u2019s Start() function add you necessary urho components AnimatedModel , Light , RigidBody etc. If you need extra parameters and functions just implement it to Element component. You can override Update() or FixedUpdate() etc in your Element and do per frame updates there. Other things i want to point out is :<br>\nyour code is so overcomplicated for such a simple task you want to <a href=\"http://achive.By\" rel=\"nofollow noopener\">achive.By</a> simplifying the code i can garantee you could get the same effect with only 10-15 lines of code\u2026</p>\n<pre><code class=\"lang-auto\"></code></pre>\n<p>Your module is a <a href=\"http://component.It\" rel=\"nofollow noopener\">component.It</a> is unnecessary to pass the cache and scene pointers because those are already part of your Component.Use GetScene() anywehre in you Module to get the scene and use GetSubsystem<a>Urho3D::Cache</a>() to get the cache</p>\n<pre><code class=\"lang-auto\"></code></pre>\n<p>You dynamically allocate memory but you never delete them in you code , thus you extremely leaking memory. Do you understand how dynamic memory allocation/deallocation works in c++ ?</p>\n<pre><code class=\"lang-auto\"></code></pre>\n<p>You still using std::string and i already stated that it is a bad <a href=\"http://idea.It\" rel=\"nofollow noopener\">idea.It</a>\u2019s trivial to link against the stdlib on linux and windows but on other platforms may not be that simple.Also if you try to compile your game on a system that does not implement the std::string you\u2019re doomed. Same goes for std::vector. Urho3d has it\u2019s own Vector and String containers that the developers can guarantee will compile on every platform they support.If you use std:: i don\u2019t think they can guarantee anything. Urho\u2019s string and vector work exacly the same way as the std:: containers.</p>\n<p><code>exitNode-&gt;CreateComponent&lt;Exit&gt;();   \nExit* tempExit = exitNode-&gt;GetComponent&lt;Exit&gt;();</code><br>\nWhats wrong with</p>\n<pre><code class=\"lang-auto\"></code></pre>\n<p><code>exit.position = exit.e_Node-&gt;GetWorldPosition();\nexit.module_pos = Vector3::ZERO;\nexitList.push_back(exit);</code><br>\nThis doesn\u2019t make any sense.Why you need a separate component for this ? I would suggest you could use node-&gt;SetVar() GetVar() for parameters like these.Or simply implement them in the Element component i suggested.</p>", "post_number": 50, "post_type": 1, "updated_at": "2017-01-02T01:12:41.341Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 27, "readers_count": 26, "score": 5.4, "yours": false, "topic_id": 2013, "topic_slug": "solved-how-do-you-go-about-collison-check", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "link_counts": [{"url": "http://Element.In", "internal": false, "reflection": false, "title": "Die Technologiefirma mit BaFin-Lizenz | Element Insurance", "clicks": 0}, {"url": "http://component.It", "internal": false, "reflection": false, "clicks": 0}, {"url": "http://idea.It", "internal": false, "reflection": false, "title": "Nosenzo Insurance Brokers Srl - Home", "clicks": 0}, {"url": "http://achive.By", "internal": false, "reflection": false, "clicks": 0}], "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 247, "hidden": false, "trust_level": 2, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 12368, "name": "", "username": "noals", "avatar_template": "/user_avatar/discourse.urho3d.io/noals/{size}/1995_2.png", "created_at": "2016-06-05T03:58:17.000Z", "cooked": "<p>first, i want things done. then, i optimize my code or whatever.</p>\n<p>my first step is having my maze generated without problems, and to do so, i need a collision check.<br>\ni don\u2019t really need the whole physical simulation right now, i just need something that tell me when two modules are colliding, that\u2019s all.</p>\n<p>you guys told me to use events.<br>\nfrom there already it became a mess because i didn\u2019t know about events and i wanted it to work in my class and not in the main.cpp and then you told me about components, etc\u2026</p>\n<p>so right now, i will test some events in my main.cpp and see how it goes.</p>", "post_number": 51, "post_type": 1, "updated_at": "2017-01-02T01:12:41.726Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 23, "readers_count": 22, "score": 4.6, "yours": false, "topic_id": 2013, "topic_slug": "solved-how-do-you-go-about-collison-check", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 411, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 12369, "name": "", "username": "noals", "avatar_template": "/user_avatar/discourse.urho3d.io/noals/{size}/1995_2.png", "created_at": "2016-06-05T04:59:37.000Z", "cooked": "<p>so here is my try :</p>\n<pre><code class=\"lang-auto\">//engine\n#include &lt;Urho3D/Engine/Application.h&gt;\n#include &lt;Urho3D/Engine/Engine.h&gt;\n#include &lt;Urho3D/Input/Input.h&gt;\n#include &lt;Urho3D/Input/InputEvents.h&gt;\n#include &lt;Urho3D/Graphics/Graphics.h&gt;\n\n#include &lt;Urho3D/Resource/ResourceCache.h&gt;\n#include &lt;Urho3D/Scene/Scene.h&gt;\n#include &lt;Urho3D/Scene/SceneEvents.h&gt;\n#include &lt;Urho3D/Graphics/Octree.h&gt;\n#include &lt;Urho3D/Graphics/DebugRenderer.h&gt;\n#include &lt;Urho3D/Graphics/Camera.h&gt;\n#include &lt;Urho3D/Graphics/Viewport.h&gt;\n#include &lt;Urho3D/Graphics/Renderer.h&gt;\n\n#include &lt;Urho3D/Graphics/Model.h&gt;\n#include &lt;Urho3D/Graphics/StaticModel.h&gt;\n#include &lt;Urho3D/Graphics/AnimatedModel.h&gt;\n#include &lt;Urho3D/Graphics/Material.h&gt;\n\n#include &lt;Urho3D/Graphics/Light.h&gt;\n\n#include &lt;Urho3D/Core/CoreEvents.h&gt;\n\n#include &lt;Urho3D/Math/Vector3.h&gt;\n\n#include &lt;Urho3D/UI/Window.h&gt;\n#include &lt;Urho3D/UI/Text.h&gt;\n#include &lt;Urho3D/UI/Font.h&gt;\n#include &lt;Urho3D/UI/UI.h&gt;\n\n//my class\n#include \"Modules.h\"\n#include \"Exit.h\"\n#include \"Counts.h\"\n\n//include\n#include &lt;string&gt;\n#include &lt;iostream&gt;\n#include &lt;sstream&gt;\n\n//just for testing\n#include \"conversions.h\"\n#include \"fonctions.h\"\n#include &lt;Urho3D/IO/Log.h&gt;\n\n//physic\n#include &lt;Urho3D/Physics/CollisionShape.h&gt;//test\n#include &lt;Urho3D/Physics/PhysicsWorld.h&gt;\n#include &lt;Urho3D/Physics/RigidBody.h&gt;//test\n#include &lt;Urho3D/Physics/PhysicsEvents.h&gt;\n\n\n\nusing namespace NodeCollision;\nusing namespace Urho3D;\n\n\nclass projet : public Application\n{\n    URHO3D_OBJECT(projet, Application)\n\npublic:\n\n////______________________\n////    DEFINITION    \n\n\n    SharedPtr&lt;Scene&gt; my_scene;\n\n    //about camera\n    SharedPtr&lt;Node&gt; camNode;\n\n    //physic\n    bool drawDebug_;\n\n    //about text\n    Window* window;\n    Text* text;\n\n    projet(Context* context) : Application(context)\n    {\n    }\n\n    virtual void Setup()\n    {\n        engineParameters_[\"FullScreen\"]=false;\n        engineParameters_[\"WindowWidth\"]=1280;\n        engineParameters_[\"WindowHeight\"]=720;\n        engineParameters_[\"WindowResizable\"]=true;\n    }\n\n    virtual void Start()\n    {\n\n        ResourceCache* cache=GetSubsystem&lt;ResourceCache&gt;();\n\n        my_scene=new Scene(context_);\n        my_scene-&gt;CreateComponent&lt;Octree&gt;();\n        my_scene-&gt;CreateComponent&lt;DebugRenderer&gt;();\n//physic\n        my_scene-&gt;CreateComponent&lt;PhysicsWorld&gt;();\n\n\n////___________________\n////    MODULES    \n\n        \n        //Dungeon dungeon(600, my_scene, cache);\n\n\n    Node* m_Node = my_scene-&gt;CreateChild(\"1\");\n    m_Node-&gt;SetWorldPosition(Vector3::ZERO);   //room.position          \n    m_Node-&gt;SetWorldRotation(Quaternion::IDENTITY);   //room.rotation (1,0,0,0) \n     \n    AnimatedModel* m_Object=m_Node-&gt;CreateComponent&lt;AnimatedModel&gt;();\n    m_Object-&gt;SetModel(cache-&gt;GetResource&lt;Model&gt;(\"Models/room0.mdl\"));\n    m_Object-&gt;SetMaterial(cache-&gt;GetResource&lt;Material&gt;(\"Materials/blank.xml\"));\n              \n    RigidBody* m_Body = m_Node-&gt;CreateComponent&lt;RigidBody&gt;();\n    m_Body-&gt;SetMass(0);  //0 for static object\n    //m_Body-&gt;SetUseGravity(false);\n    //m_Body-&gt;SetTrigger(true);\n    m_Body-&gt;SetFriction(0.6);        // friction with other objects (like the ground)\n    m_Body-&gt;SetCollisionLayer(1);\n\n    CollisionShape* m_BBox = m_Node-&gt;CreateComponent&lt;CollisionShape&gt;();\n    m_BBox-&gt;SetTriangleMesh(cache-&gt;GetResource&lt;Model&gt;(\"Models/room0.mdl\"));\n        \n    Node* light=m_Node-&gt;CreateChild(\"m_light\");\n    light-&gt;SetPosition(Vector3(0, 5, 0));\n    {\n        Light* Mlight=light-&gt;CreateComponent&lt;Light&gt;();\n        Mlight-&gt;SetLightType(LIGHT_POINT);\n        Mlight-&gt;SetRange(20);\n        Mlight-&gt;SetBrightness(1.0);\n        Mlight-&gt;SetColor(Color(.8,.8,.8,1.0));\n    }\n\n\n    Node* m_Node2 = my_scene-&gt;CreateChild(\"2\");\n    m_Node2-&gt;SetWorldPosition(Vector3(0,3,0));   //room.position          \n    m_Node2-&gt;SetWorldRotation(Quaternion::IDENTITY);   //room.rotation (1,0,0,0) \n     \n    AnimatedModel* m_Object2=m_Node2-&gt;CreateComponent&lt;AnimatedModel&gt;();\n    m_Object2-&gt;SetModel(cache-&gt;GetResource&lt;Model&gt;(\"Models/cor0.mdl\"));\n    m_Object2-&gt;SetMaterial(cache-&gt;GetResource&lt;Material&gt;(\"Materials/blank.xml\"));\n              \n    RigidBody* m_Body2 = m_Node2-&gt;CreateComponent&lt;RigidBody&gt;();\n    m_Body2-&gt;SetMass(1);  //0 for static object\n    //m_Body2-&gt;SetUseGravity(false);\n    //m_Body2-&gt;SetTrigger(true);\n    m_Body2-&gt;SetFriction(0.6);        // friction with other objects (like the ground)\n    m_Body2-&gt;SetCollisionLayer(1);\n\n    CollisionShape* m_BBox2 = m_Node2-&gt;CreateComponent&lt;CollisionShape&gt;();\n    m_BBox2-&gt;SetTriangleMesh(cache-&gt;GetResource&lt;Model&gt;(\"Models/cor0.mdl\"));\n\n\n\n////__________________\n////    CAMERA        \n\n\n        camNode=my_scene-&gt;CreateChild(\"camNode\");\n        Camera* camObject=camNode-&gt;CreateComponent&lt;Camera&gt;();\n        camObject-&gt;SetFarClip(2000);\n\tcamNode-&gt;SetWorldPosition(Vector3(0,20,-20));     //x =blender y //y =blender z hauteur //z =blender x profondeur\n\tcamNode-&gt;LookAt(Vector3::ZERO);\n\n        //camera light\n        {\n            Light* light=camNode-&gt;CreateComponent&lt;Light&gt;();\n            light-&gt;SetLightType(LIGHT_POINT);\n            light-&gt;SetRange(25);\n            light-&gt;SetBrightness(2.0);\n            light-&gt;SetColor(Color(.8,1,.8,1.0));\n        }\n\n////________________\n////    TEXT    \n\n\n        std::string str = (\"\"); \n        {\n            std::ostringstream ss;\n            ss;\n              //&lt;&lt;\" module count = \"&lt;&lt;dungeon.MODULE_COUNT\n              //&lt;&lt;\"\\n free exit = \"&lt;&lt;dungeon.mainExitList.size();\n\n            std::string s(ss.str());\n            str.append(s/*.substr(0,60)*/);\n        }\n        String s(str.c_str(),str.size());\n\n        window=new Window(context_);\n        GetSubsystem&lt;UI&gt;()-&gt;GetRoot()-&gt;AddChild(window);\n        window-&gt;SetStyle(\"Window\");\n        window-&gt;SetSize(500,200);\n        window-&gt;SetColor(Color(.0,.15,.3,.5));\n        window-&gt;SetAlignment(HA_LEFT,VA_TOP);\n\n        text=new Text(context_);\n        text-&gt;SetFont(cache-&gt;GetResource&lt;Font&gt;(\"Fonts/Anonymous Pro.ttf\"),14);\n        text-&gt;SetColor(Color(.8,.85,.9));\n        text-&gt;SetAlignment(HA_LEFT,VA_TOP);\n        text-&gt;SetText(s); //s\n        window-&gt;AddChild(text);\n\n\n////__________________\n////    RENDER    \n\n\n        Renderer* renderer=GetSubsystem&lt;Renderer&gt;();\n        SharedPtr&lt;Viewport&gt; viewport(new Viewport(context_,my_scene,camNode-&gt;GetComponent&lt;Camera&gt;()));\n        renderer-&gt;SetViewport(0,viewport);\n\n\n////__________________\n////    EVENTS    \n\n\n    //SubscribeToEvent(E_BEGINFRAME,URHO3D_HANDLER(projet,HandleBeginFrame));\n    //SubscribeToEvent(E_KEYDOWN,URHO3D_HANDLER(projet,HandleKeyDown));\n    //SubscribeToEvent(E_UIMOUSECLICK,URHO3D_HANDLER(projet,HandleControlClicked));\n        SubscribeToEvent(E_UPDATE, URHO3D_HANDLER(projet, HandleUpdate));\n    //SubscribeToEvent(E_POSTUPDATE,URHO3D_HANDLER(projet,HandlePostUpdate));\n\n        SubscribeToEvent(m_Node, E_NODECOLLISION, URHO3D_HANDLER(projet, OnNodeCollisionEvent));\n        SubscribeToEvent(E_PHYSICSCOLLISION, URHO3D_HANDLER(projet, OnCollisionEvent));\n\n    //SubscribeToEvent(E_RENDERUPDATE,URHO3D_HANDLER(projet,HandleRenderUpdate));\n        SubscribeToEvent(E_POSTRENDERUPDATE,URHO3D_HANDLER(projet,HandlePostRenderUpdate));     \n    //SubscribeToEvent(E_ENDFRAME,URHO3D_HANDLER(projet,HandleEndFrame));\n        SubscribeToEvent(E_KEYDOWN, URHO3D_HANDLER(projet, HandleKeyDown));\n    }\n\n    virtual void Stop()\n    {\n    }\n\n\n////________\n\n\n    void HandleUpdate(StringHash eventType,VariantMap&amp; eventData)\n    {\n        float timeStep=eventData[Update::P_TIMESTEP].GetFloat();\n\tfloat MOVE_SPEED=50.0f;\n        Input* input=GetSubsystem&lt;Input&gt;();\n\n\tif(input-&gt;GetQualifierDown(1))  // 1 is shift, 2 is ctrl, 4 is alt\n            MOVE_SPEED*=4;\n\n        if(input-&gt;GetKeyDown('D')) //rotate sens inverse horizontal\n            camNode-&gt;Translate(Vector3(1,0, 0)*MOVE_SPEED*timeStep);\n        if(input-&gt;GetKeyDown('Q')) //sens montre horizontal\n            camNode-&gt;Translate(Vector3(-1,0,0)*MOVE_SPEED*timeStep);\n        if(input-&gt;GetKeyDown('Z')) //zoom avant\n            camNode-&gt;Translate(Vector3(0,0,1)*MOVE_SPEED*timeStep);\n        if(input-&gt;GetKeyDown('S')) //zoom arriere\n            camNode-&gt;Translate(Vector3(0,0,-1)*MOVE_SPEED*timeStep);\n\tif(input-&gt;GetKeyDown('E')) //rotate sens inverse vertical\n            camNode-&gt;Translate(Vector3(0,1,0)*MOVE_SPEED*timeStep);\n        if(input-&gt;GetKeyDown('A')) //sens montre vertical\n            camNode-&gt;Translate(Vector3(0,-1,0)*MOVE_SPEED*timeStep);\n        if (input-&gt;GetKeyPress(KEY_SPACE)) // Toggle physics debug geometry with space\n            drawDebug_ = !drawDebug_;\n\n\tif(!GetSubsystem&lt;Input&gt;()-&gt;IsMouseGrabbed())\n\t{\n\t    IntVector2 mouseMove=input-&gt;GetMouseMove();\n\t    \n\t    if(mouseMove.x_&gt;-2000000000&amp;&amp;mouseMove.y_&gt;-2000000000)\n            {\n\t\tcamNode-&gt;LookAt(Vector3::ZERO); //look at 0,0,0\n            }\n\t}\n            \n\n\n    }\n\n////________\n\n\n    void OnNodeCollisionEvent(StringHash eventType, VariantMap&amp; eventData)\n    {\n        URHO3D_LOGINFO(\"OnNodeCollisionEvent\");\n    }\n\n\n    void OnCollisionEvent(StringHash eventType, VariantMap&amp; eventData)\n    {\n        //RigidBody* body = static_cast&lt;RigidBody*&gt;(eventData[P_BODY].GetPtr());\n        URHO3D_LOGINFO(\"OnCollisionEvent\");\n    }\n\n////________\n\n    void HandlePostRenderUpdate(StringHash eventType, VariantMap&amp; eventData)\n    {\n    // If draw debug mode is enabled, draw physics debug geometry. Use depth test to make the result easier to interpret\n        if (drawDebug_)\n            my_scene-&gt;GetComponent&lt;PhysicsWorld&gt;()-&gt;DrawDebugGeometry(true);\n    }\n\n////________\n\n    void HandleKeyDown(StringHash eventType, VariantMap&amp; eventData)\n    {\n        using namespace KeyDown;\n\n        Graphics* graphics=GetSubsystem&lt;Graphics&gt;();\n        int key = eventData[P_KEY].GetInt();\n\n        if (key == KEY_ESC) //ESC to quit\n        {\n            engine_-&gt;Exit();\n        }\n        else if(key == KEY_TAB) //TAB to toggle mouse cursor\n        {\n            GetSubsystem&lt;Input&gt;()-&gt;SetMouseVisible(!GetSubsystem&lt;Input&gt;()-&gt;IsMouseVisible());\n            GetSubsystem&lt;Input&gt;()-&gt;SetMouseGrabbed(!GetSubsystem&lt;Input&gt;()-&gt;IsMouseGrabbed()); \n        }\n\telse if(key == 'W') //W for fullscreen\n\t{\n\t    graphics-&gt;ToggleFullscreen();\n\t}\n        else if(key == 'I')\n        {\n            //GetSubsystem&lt;UI&gt;()-&gt;menu-&gt;ShowPopup ();\n        }\n    }\n\n\n////________\n\n\n};\nURHO3D_DEFINE_APPLICATION_MAIN(projet)\n</code></pre>\n<p>it load my 2 test module, and the second module just fall through the first one.</p>\n<p>1/ why the physic simulation isn\u2019t working at all ? i have a static and a non-static, i guess the non-static should somehow bounce on the static no ?<br>\n2/ and why none of my events return a thing in the log ?</p>", "post_number": 52, "post_type": 1, "updated_at": "2017-01-02T01:12:41.790Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 1, "reads": 26, "readers_count": 25, "score": 10.2, "yours": false, "topic_id": 2013, "topic_slug": "solved-how-do-you-go-about-collison-check", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 411, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 12380, "name": "", "username": "noals", "avatar_template": "/user_avatar/discourse.urho3d.io/noals/{size}/1995_2.png", "created_at": "2016-06-06T01:16:03.000Z", "cooked": "<p>at least, i was able to get something working and so i found out what my problem is.</p>\n<pre><code class=\"lang-auto\"></code></pre>\n<p>if i set my collision shape as a box, it work like a charm but it doesn\u2019t do anything with SetTriangleMesh and my custom shape.<br>\ni recall having see something about it somewhere, i through it was in the API but doesn\u2019t seem so or it was edited while i was trying stuff.<br>\nit was saying that the SetTriangleMesh thing is not activated by default or something and i don\u2019t remember what it was saying to fix it.</p>\n<p>so, how can i make my room0.mdl well recognized by the physic engine ?</p>", "post_number": 53, "post_type": 1, "updated_at": "2017-01-02T01:12:42.539Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 22, "readers_count": 21, "score": 4.4, "yours": false, "topic_id": 2013, "topic_slug": "solved-how-do-you-go-about-collison-check", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 411, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 12385, "name": "", "username": "noals", "avatar_template": "/user_avatar/discourse.urho3d.io/noals/{size}/1995_2.png", "created_at": "2016-06-06T04:06:52.000Z", "cooked": "<p>found out, it was in the wiki.</p>\n<aside class=\"quote\">\n<blockquote>\n<p>Note: triangle mesh on triangle mesh collisions are disabled per default. See PhysicsWorld::SetInternalEdge(bool enable) <a href=\"http://urho3d.github.io/documentation/1.32/class_urho3_d_1_1_physics_world.html\" rel=\"nofollow noopener\">urho3d.github.io/documentation/1 \u2026 world.html</a>. </p>\n</blockquote>\n</aside>\n<p>im using windows right now, i program with ubuntu but i will test it next time in hope it will work at last\u2026 &gt;&lt;</p>", "post_number": 54, "post_type": 1, "updated_at": "2017-01-02T01:12:42.911Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 0, "reads": 21, "readers_count": 20, "score": 4.2, "yours": false, "topic_id": 2013, "topic_slug": "solved-how-do-you-go-about-collison-check", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 411, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 12425, "name": "", "username": "noals", "avatar_template": "/user_avatar/discourse.urho3d.io/noals/{size}/1995_2.png", "created_at": "2016-06-07T13:24:08.000Z", "cooked": "<pre><code class=\"lang-auto\">        PhysicsWorld* physicWorld = my_scene-&gt;CreateComponent&lt;PhysicsWorld&gt;();\n        physicWorld-&gt;SetInternalEdge(true);</code></pre>\n<p>doesn\u2019t work either. i\u2019m kinda losing hope\u2026<br>\nis there another method to get .mdl collision shapes well recognized by the engine ?<br>\ncould it be a .mdl issue ? a setting in blender, i wonder.</p>", "post_number": 55, "post_type": 1, "updated_at": "2017-01-02T01:12:45.724Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 1, "reads": 21, "readers_count": 20, "score": 9.2, "yours": false, "topic_id": 2013, "topic_slug": "solved-how-do-you-go-about-collison-check", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 411, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 12453, "name": "", "username": "noals", "avatar_template": "/user_avatar/discourse.urho3d.io/noals/{size}/1995_2.png", "created_at": "2016-06-09T13:23:19.000Z", "cooked": "<p>i\u2019m a bit disappointed but convex hulls seems to work so i will try with that.</p>\n<aside class=\"quote no-group\" data-username=\"Dave82\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/dave82/40/2369_2.png\" class=\"avatar\"> Dave82:</div>\n<blockquote>\n<p>Components doesn\u2019t have transforms , nodes do ! How do you expect your Module component to move in 3d space ? It\u2019s not a transformable entity it is just a component ! you expect to move based on what exacly ?</p>\n</blockquote>\n</aside>\n<p>yes, i\u2019m trying to derive from Node but it confuse me more than ever.</p>\n<aside class=\"quote no-group\" data-username=\"Dave82\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/dave82/40/2369_2.png\" class=\"avatar\"> Dave82:</div>\n<blockquote>\n<p>your code is so overcomplicated for such a simple task you want to achive.By simplifying the code i can garantee you could get the same effect with only 10-15 lines of code\u2026</p>\n</blockquote>\n</aside>\n<p>i would like to know how to do that, each time i try a different thing but it end up a mess anyway.<br>\ni use std::string because it is needed for tinyxml2. i had difficulties using PugiXML, tinyxml2 was more convenient to me.<br>\nand then, there is all the mess around.</p>\n<p>the xml (so i can change modules not having to recompile)</p>\n<p>[spoiler][code]</p>\n\n\n\n\n\n\n\n\n\n\n\n<p>[/code][/spoiler]</p>\n<p>a class to check the number of modules by type and the number of module i will want to load. (i need to add some code if a value is 0 or the app will crash)</p>\n<p>[spoiler][code]xmlCounts::xmlCounts()<br>\n{</p>\n<pre><code>tinyxml2::XMLDocument modules;\nmodules.Parse(\"Data/Scripts/Modules.xml\");\nif(modules.LoadFile(\"Data/Scripts/Modules.xml\") == tinyxml2::XML_NO_ERROR)\n{\n    tinyxml2::XMLNode* root = modules.FirstChild();\n    tinyxml2::XMLElement* infos = root-&gt;FirstChildElement(\"infos\");\n    infos-&gt;QueryIntAttribute(\"room_count\", &amp;room);\n    infos-&gt;QueryIntAttribute(\"cor_count\", &amp;cor);\n    infos-&gt;QueryIntAttribute(\"junc_count\", &amp;junc);\n    infos-&gt;QueryIntAttribute(\"toLoad\", &amp;toLoad);\n}\n</code></pre>\n<p>}[/code][/spoiler]</p>\n<p>then i use xml again to get module infos</p>\n<p>[spoiler][code]r_Rooms::r_Rooms()<br>\n{</p>\n<pre><code>xmlCounts m_counts;\n\ntype=0;\nint roomNbr = chooseRandomNbr(m_counts.room);\nstd::string std_name = stringInt(\"room\",roomNbr);\nconst char* ROOMX = std_name.c_str(); //std::string to const char*\n    \ntinyxml2::XMLDocument modulesXML;\nmodulesXML.Parse(\"Data/Scripts/Modules.xml\");\nif(modulesXML.LoadFile(\"Data/Scripts/Modules.xml\") == tinyxml2::XML_NO_ERROR)\n{\n        tinyxml2::XMLNode* root = modulesXML.FirstChild();\n        tinyxml2::XMLElement* roomXML = root-&gt;FirstChildElement(ROOMX);\n        roomXML-&gt;QueryIntAttribute(\"exits\", &amp;exits);\n        std::string std_path = roomXML-&gt;Attribute(\"path\");                \n        std::string std_texturepath = roomXML-&gt;Attribute(\"texturepath\");\n        path = string2urhoString(std_path); //to urho String\n        texturepath = string2urhoString(std_texturepath); //to urho String\n         \n}\n</code></pre>\n<p>}[/code][/spoiler]</p>\n<p>and then, i need something to create a urho node with a module with AnimatedModel, a vector of child node or something with its exits (bones that i get position from) and its RigidBody and CollisionShape so i can register it with a collision event to test collision and move it at will when i build the dungeon.<br>\nhow would you do that because i don\u2019t know how to organise it for the best.</p>\n<aside class=\"quote no-group\" data-username=\"Dave82\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/dave82/40/2369_2.png\" class=\"avatar\"> Dave82:</div>\n<blockquote>\n<p>Do you understand how dynamic memory allocation/deallocation works in c++ ?</p>\n</blockquote>\n</aside>\n<p>yes a little. i know i don\u2019t free the memory where i should\u2026 ^^;</p>\n<aside class=\"quote no-group\" data-username=\"Dave82\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"20\" height=\"20\" src=\"https://sjc6.discourse-cdn.com/standard17/user_avatar/discourse.urho3d.io/dave82/40/2369_2.png\" class=\"avatar\"> Dave82:</div>\n<blockquote>\n<p>This doesn\u2019t make any sense.Why you need a separate component for this ? I would suggest you could use node-&gt;SetVar() GetVar() for parameters like these.Or simply implement them in the Element component i suggested.</p>\n</blockquote>\n</aside>\n<p>basicaly, one exit is a child node that represent a bone of the module. i use those to get my exits positions to calculate modules placement when i build the dungeon.</p>\n<p>anyway, thx for your patience, any help is appreciated, it\u2019s just that i tryed a few things before and each time i was kinda stuck at physic so it\u2019s very frustrating for me as i\u2019m kinda very close to exceed this limit.</p>", "post_number": 56, "post_type": 1, "updated_at": "2017-01-02T01:12:47.595Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 1, "incoming_link_count": 0, "reads": 27, "readers_count": 26, "score": 5.4, "yours": false, "topic_id": 2013, "topic_slug": "solved-how-do-you-go-about-collison-check", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 411, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}, {"id": 12480, "name": "", "username": "noals", "avatar_template": "/user_avatar/discourse.urho3d.io/noals/{size}/1995_2.png", "created_at": "2016-06-12T04:48:11.000Z", "cooked": "<p>it\u2019s with convex hulls but it works at last.<br>\njust added this component :</p>\n<p>OnCollision.h</p>\n<pre><code class=\"lang-auto\">#pragma once\n\nusing namespace Urho3D;\n\nclass OnCollision : public Component\n{\n    URHO3D_OBJECT(OnCollision, Component);\n    \npublic:\n    OnCollision(Context* context);\n\nprotected:\n    /// Handle node being assigned.\n    virtual void OnNodeSet(Node* node);\n    \nprivate:\n    /// Handle scene node's physics collision.\n    void OnCollisionEvent(StringHash eventType, VariantMap&amp; eventData);\n};</code></pre>\n<p>OnCollision.cpp</p>\n<pre><code class=\"lang-auto\">#include \"OnCollision.h\"\n\nusing namespace Urho3D;\n\nOnCollision::OnCollision(Context* context) :\n    Component(context)\n{\n\n}\n\n\n//protected\nvoid OnCollision::OnNodeSet(Node* node)\n{\n    // If the node pointer is non-null, this component has been created into a scene node. Subscribe to physics collisions that concern this scene node\n    if (node)\n    {\n        SubscribeToEvent(node, E_NODECOLLISIONSTART, URHO3D_HANDLER(OnCollision, OnCollisionEvent));\n        URHO3D_LOGINFO(\"node set\");\n    }\n}\n\n//private\nvoid OnCollision::OnCollisionEvent(StringHash eventType, VariantMap&amp; eventData)\n{\n    using namespace NodeCollision;\n\n    // Get the other colliding body\n    RigidBody* otherBody = static_cast&lt;RigidBody*&gt;(eventData[P_OTHERBODY].GetPtr());\n\n        URHO3D_LOGINFO(\"collide\");\n\t\t\n        // Finally remove self from the scene node. Note that this must be the last operation performed in the function\n        //Remove();  \n}</code></pre>\n<p>log</p>\n<aside class=\"quote\">\n<blockquote>\n<p>[Sun Jun 12 06:19:47 2016] INFO: Opened log file Urho3D.log<br>\n[Sun Jun 12 06:19:47 2016] INFO: Created 3 worker threads<br>\n[Sun Jun 12 06:19:47 2016] INFO: Added resource path /home/noname/Bureau/projet_build/bin/Data/<br>\n[Sun Jun 12 06:19:47 2016] INFO: Added resource path /home/noname/Bureau/projet_build/bin/CoreData/<br>\n[Sun Jun 12 06:19:47 2016] DEBUG: Skipped autoload path \u2018Autoload\u2019 as it does not exist, check the documentation on how to set the \u2018resource prefix path\u2019<br>\n[Sun Jun 12 06:19:47 2016] INFO: Set screen mode 1280x720 windowed resizable<br>\n[Sun Jun 12 06:19:47 2016] INFO: Initialized input<br>\n[Sun Jun 12 06:19:47 2016] INFO: Initialized user interface<br>\n[Sun Jun 12 06:19:47 2016] DEBUG: Loading resource Textures/Ramp.png<br>\n[Sun Jun 12 06:19:47 2016] DEBUG: Loading temporary resource Textures/Ramp.xml<br>\n[Sun Jun 12 06:19:47 2016] DEBUG: Loading resource Textures/Spot.png<br>\n[Sun Jun 12 06:19:47 2016] DEBUG: Loading temporary resource Textures/Spot.xml<br>\n[Sun Jun 12 06:19:47 2016] DEBUG: Loading resource Techniques/NoTexture.xml<br>\n[Sun Jun 12 06:19:47 2016] DEBUG: Loading resource RenderPaths/Forward.xml<br>\n[Sun Jun 12 06:19:47 2016] INFO: Initialized renderer<br>\n[Sun Jun 12 06:19:47 2016] ERROR: Could not initialize audio output<br>\n[Sun Jun 12 06:19:47 2016] DEBUG: Loading resource UI/MessageBox.xml<br>\n[Sun Jun 12 06:19:47 2016] DEBUG: Loading UI layout UI/MessageBox.xml<br>\n[Sun Jun 12 06:19:47 2016] INFO: Initialized engine<br>\n[Sun Jun 12 06:19:47 2016] DEBUG: Loading resource Models/room2.mdl        &lt;---- first model<br>\n[Sun Jun 12 06:19:47 2016] DEBUG: Loading resource Materials/blank.xml<br>\n[Sun Jun 12 06:19:47 2016] DEBUG: Loading resource Techniques/Diff.xml<br>\n[Sun Jun 12 06:19:47 2016] DEBUG: Loading resource Textures/grid_8x8.png<br>\n[Sun Jun 12 06:19:47 2016] INFO: node set        &lt;----<br>\n[Sun Jun 12 06:19:47 2016] DEBUG: Loading resource Models/cor1.mdl        &lt;---- second model<br>\n[Sun Jun 12 06:19:47 2016] INFO: node set        &lt;----<br>\n[Sun Jun 12 06:19:47 2016] DEBUG: Loading resource Fonts/Anonymous Pro.ttf<br>\n[Sun Jun 12 06:19:47 2016] DEBUG: Font face Anonymous Pro (14pt) has 624 glyphs<br>\n[Sun Jun 12 06:19:47 2016] DEBUG: Reloading shaders<br>\n[Sun Jun 12 06:19:47 2016] DEBUG: Loading resource Shaders/GLSL/LitSolid.glsl<br>\n[Sun Jun 12 06:19:47 2016] DEBUG: Compiled vertex shader LitSolid(PERPIXEL POINTLIGHT SKINNED)<br>\n[Sun Jun 12 06:19:47 2016] DEBUG: Compiled pixel shader LitSolid(AMBIENT DIFFMAP PERPIXEL POINTLIGHT SPECULAR)<br>\n[Sun Jun 12 06:19:47 2016] DEBUG: Linked vertex shader LitSolid(PERPIXEL POINTLIGHT SKINNED) and pixel shader LitSolid(AMBIENT DIFFMAP PERPIXEL POINTLIGHT SPECULAR)<br>\n[Sun Jun 12 06:19:47 2016] DEBUG: Loading resource Shaders/GLSL/Stencil.glsl<br>\n[Sun Jun 12 06:19:47 2016] DEBUG: Compiled vertex shader Stencil()<br>\n[Sun Jun 12 06:19:47 2016] DEBUG: Compiled pixel shader Stencil()<br>\n[Sun Jun 12 06:19:47 2016] DEBUG: Linked vertex shader Stencil() and pixel shader Stencil()<br>\n[Sun Jun 12 06:19:47 2016] DEBUG: Compiled pixel shader LitSolid(DIFFMAP PERPIXEL POINTLIGHT SPECULAR)<br>\n[Sun Jun 12 06:19:47 2016] DEBUG: Linked vertex shader LitSolid(PERPIXEL POINTLIGHT SKINNED) and pixel shader LitSolid(DIFFMAP PERPIXEL POINTLIGHT SPECULAR)<br>\n[Sun Jun 12 06:19:47 2016] DEBUG: Loading resource Shaders/GLSL/Basic.glsl<br>\n[Sun Jun 12 06:19:47 2016] DEBUG: Compiled vertex shader Basic(VERTEXCOLOR)<br>\n[Sun Jun 12 06:19:47 2016] DEBUG: Compiled pixel shader Basic(VERTEXCOLOR)<br>\n[Sun Jun 12 06:19:47 2016] DEBUG: Linked vertex shader Basic(VERTEXCOLOR) and pixel shader Basic(VERTEXCOLOR)<br>\n[Sun Jun 12 06:19:47 2016] INFO: OnCollisionEvent<br>\n[Sun Jun 12 06:19:47 2016] INFO: collide        &lt;----<br>\n[Sun Jun 12 06:19:47 2016] INFO: collide        &lt;----<br>\n[Sun Jun 12 06:19:47 2016] INFO: OnCollisionEvent<br>\n[Sun Jun 12 06:19:47 2016] INFO: OnCollisionEvent<br>\n[Sun Jun 12 06:19:47 2016] INFO: OnCollisionEvent<br>\n[Sun Jun 12 06:19:47 2016] INFO: OnCollisionEvent<br>\n[Sun Jun 12 06:19:47 2016] INFO: OnCollisionEvent<br>\n[Sun Jun 12 06:19:47 2016] INFO: OnCollisionEvent<br>\n[Sun Jun 12 06:19:47 2016] INFO: OnCollisionEvent<br>\n[Sun Jun 12 06:19:47 2016] INFO: OnCollisionEvent<br>\n[Sun Jun 12 06:19:47 2016] INFO: OnCollisionEvent<br>\n[Sun Jun 12 06:19:47 2016] INFO: OnCollisionEvent<br>\netc\u2026</p>\n</blockquote>\n</aside>\n<p>now, i just need to find a way to avoid collision between module that are next to each other but it shouldn\u2019t be too hard now that i understand the events better :</p>\n<pre><code class=\"lang-auto\">URHO3D_EVENT(E_NODECOLLISION, NodeCollision)\n{\n    URHO3D_PARAM(P_BODY, Body);                    // RigidBody pointer\n    URHO3D_PARAM(P_OTHERNODE, OtherNode);          // Node pointer\n    URHO3D_PARAM(P_OTHERBODY, OtherBody);          // RigidBody pointer\n    URHO3D_PARAM(P_TRIGGER, Trigger);              // bool\n    URHO3D_PARAM(P_CONTACTS, Contacts);            // Buffer containing position (Vector3), normal (Vector3), distance (float), impulse (float) for each contact\n}</code></pre>\n<p>thx.</p>", "post_number": 57, "post_type": 1, "updated_at": "2017-01-02T01:12:49.554Z", "reply_count": 0, "reply_to_post_number": null, "quote_count": 0, "incoming_link_count": 3, "reads": 30, "readers_count": 29, "score": 21.0, "yours": false, "topic_id": 2013, "topic_slug": "solved-how-do-you-go-about-collison-check", "display_username": "", "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_bg_color": null, "flair_color": null, "version": 1, "can_edit": false, "can_delete": false, "can_recover": false, "can_wiki": false, "read": true, "user_title": null, "bookmarked": false, "actions_summary": [], "moderator": false, "admin": false, "staff": false, "user_id": 411, "hidden": false, "trust_level": 1, "deleted_at": null, "user_deleted": false, "edit_reason": null, "can_view_edit_history": true, "wiki": false, "can_accept_answer": false, "can_unaccept_answer": false, "accepted_answer": false}], "stream": [12032, 12034, 12035, 12037, 12039, 12040, 12043, 12045, 12048, 12051, 12072, 12073, 12074, 12086, 12095, 12156, 12236, 12237, 12239, 12240, 12241, 12242, 12243, 12250, 12260, 12262, 12263, 12266, 12267, 12268, 12269, 12280, 12282, 12297, 12325, 12326, 12327, 12328, 12329, 12330, 12333, 12334, 12335, 12343, 12345, 12346, 12354, 12356, 12358, 12362, 12368, 12369, 12380, 12385, 12425, 12453, 12480]}, "timeline_lookup": [[1, 2384], [7, 2383], [11, 2382], [12, 2381], [16, 2378], [17, 2372], [18, 2371], [24, 2370], [25, 2369], [32, 2367], [34, 2366], [35, 2365], [40, 2364], [47, 2363], [51, 2362], [53, 2361], [55, 2360], [56, 2358], [57, 2355]], "tags_descriptions": {}, "id": 2013, "title": "[SOLVED]how do you go about collison check?", "fancy_title": "[SOLVED]how do you go about collison check?", "posts_count": 57, "created_at": "2016-05-14T00:04:54.000Z", "views": 2289, "reply_count": 0, "like_count": 2, "last_posted_at": "2016-06-12T04:48:11.000Z", "visible": true, "closed": false, "archived": false, "has_summary": true, "archetype": "regular", "slug": "solved-how-do-you-go-about-collison-check", "category_id": 10, "word_count": 14375, "deleted_at": null, "user_id": 411, "featured_link": null, "pinned_globally": false, "pinned_at": null, "pinned_until": null, "image_url": null, "slow_mode_seconds": 0, "draft": null, "draft_key": "topic_2013", "draft_sequence": null, "unpinned": null, "pinned": false, "current_post_number": 1, "highest_post_number": 57, "deleted_by": null, "actions_summary": [{"id": 4, "count": 0, "hidden": false, "can_act": false}, {"id": 8, "count": 0, "hidden": false, "can_act": false}, {"id": 7, "count": 0, "hidden": false, "can_act": false}], "chunk_size": 20, "bookmarked": false, "bookmarks": [], "topic_timer": null, "message_bus_last_id": 0, "participant_count": 7, "show_read_indicator": false, "thumbnails": null, "slow_mode_enabled_until": null, "tags_disable_ads": false, "details": {"can_edit": false, "notification_level": 1, "participants": [{"id": 411, "username": "noals", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/noals/{size}/1995_2.png", "post_count": 34, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "trust_level": 1}, {"id": 230, "username": "Nerrik", "name": "", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/n/958977/{size}.png", "post_count": 9, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "trust_level": 2}, {"id": 256, "username": "Lumak", "name": "", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/l/8491ac/{size}.png", "post_count": 5, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "trust_level": 2}, {"id": 247, "username": "Dave82", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/dave82/{size}/2369_2.png", "post_count": 4, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "trust_level": 2}, {"id": 21, "username": "jmiller", "name": "Justin Miller", "avatar_template": "/user_avatar/discourse.urho3d.io/jmiller/{size}/2367_2.png", "post_count": 2, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "moderator": true, "trust_level": 3}, {"id": 3, "username": "cadaver", "name": "Lasse \u00d6\u00f6rni", "avatar_template": "/user_avatar/discourse.urho3d.io/cadaver/{size}/3_2.png", "post_count": 2, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "admin": true, "trust_level": 2}, {"id": 37, "username": "TheComet", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/thecomet/{size}/1493_2.png", "post_count": 1, "primary_group_name": null, "flair_name": null, "flair_url": null, "flair_color": null, "flair_bg_color": null, "trust_level": 2}], "created_by": {"id": 411, "username": "noals", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/noals/{size}/1995_2.png"}, "last_poster": {"id": 411, "username": "noals", "name": "", "avatar_template": "/user_avatar/discourse.urho3d.io/noals/{size}/1995_2.png"}, "links": [{"url": "http://urho3d.github.io/documentation/1.5/class_urho3_d_1_1_rigid_body.html#ae8efeb02d37b545321b84f35ed355b34", "title": "Urho3D - Documentation", "internal": false, "attachment": false, "reflection": false, "clicks": 16, "user_id": 411, "domain": "urho3d.github.io", "root_domain": "urho3d.github.io"}, {"url": "http://urho3d.github.io/documentation/1.5/_physics.html", "title": "Urho3D - Documentation", "internal": false, "attachment": false, "reflection": false, "clicks": 14, "user_id": 411, "domain": "urho3d.github.io", "root_domain": "urho3d.github.io"}, {"url": "http://urho3d.wikia.com/wiki/Creating_your_own_C%2B%2B_components", "title": "Creating your own C++ components | Urho3D Wiki | Fandom powered by Wikia", "internal": false, "attachment": false, "reflection": false, "clicks": 4, "user_id": 411, "domain": "urho3d.wikia.com", "root_domain": "wikia.com"}, {"url": "http://urho3d.github.io/documentation/1.4/_object_types.html", "title": "Urho3D - Documentation", "internal": false, "attachment": false, "reflection": false, "clicks": 4, "user_id": 411, "domain": "urho3d.github.io", "root_domain": "urho3d.github.io"}, {"url": "http://www.tutorialspoint.com/cplusplus/cpp_inheritance.htm", "title": "C++ Inheritance", "internal": false, "attachment": false, "reflection": false, "clicks": 3, "user_id": 411, "domain": "www.tutorialspoint.com", "root_domain": "tutorialspoint.com"}, {"url": "http://urho3d.github.io/documentation/1.5/_event_list.html", "title": "Urho3D - Documentation", "internal": false, "attachment": false, "reflection": false, "clicks": 3, "user_id": 411, "domain": "urho3d.github.io", "root_domain": "urho3d.github.io"}, {"url": "http://urho3d.github.io/documentation/1.5/_events.html#Events_AnotherObject", "title": "Urho3D - Documentation", "internal": false, "attachment": false, "reflection": false, "clicks": 3, "user_id": 21, "domain": "urho3d.github.io", "root_domain": "urho3d.github.io"}, {"url": "http://urho3d.github.io/documentation/HEAD/_events.html#Events_AnotherObject", "title": "Urho3D - Documentation - Events", "internal": false, "attachment": false, "reflection": false, "clicks": 3, "user_id": 21, "domain": "urho3d.github.io", "root_domain": "urho3d.github.io"}, {"url": "http://provided.In", "title": null, "internal": false, "attachment": false, "reflection": false, "clicks": 2, "user_id": 247, "domain": "provided.In", "root_domain": "provided.In"}, {"url": "http://urho3d.github.io/documentation/1.3/class_urho3_d_1_1_node.html", "title": "Urho3D - Documentation", "internal": false, "attachment": false, "reflection": false, "clicks": 2, "user_id": 230, "domain": "urho3d.github.io", "root_domain": "urho3d.github.io"}, {"url": "http://urho3d.github.io/documentation/HEAD/class_urho3_d_1_1_object.html#ac9ea95ee6f24e7fbeede16ba149dbc2d", "title": "Urho3D - Documentation - Urho3D::Object Class Reference", "internal": false, "attachment": false, "reflection": false, "clicks": 1, "user_id": 21, "domain": "urho3d.github.io", "root_domain": "urho3d.github.io"}, {"url": "http://urho3d.github.io/documentation/1.5/class_urho3_d_1_1_rigid_body.html", "title": "Urho3D - Documentation", "internal": false, "attachment": false, "reflection": false, "clicks": 1, "user_id": 230, "domain": "urho3d.github.io", "root_domain": "urho3d.github.io"}]}, "suggested_topics": [{"id": 7080, "title": "Build urho3d source on windows 10 - cmake - \"Error in configuration process, project files may be invalid\"", "fancy_title": "Build urho3d source on windows 10 - cmake - &ldquo;Error in configuration process, project files may be invalid&rdquo;", "slug": "build-urho3d-source-on-windows-10-cmake-error-in-configuration-process-project-files-may-be-invalid", "posts_count": 8, "reply_count": 4, "highest_post_number": 8, "image_url": null, "created_at": "2021-12-03T01:55:53.267Z", "last_posted_at": "2021-12-06T22:46:59.584Z", "bumped": true, "bumped_at": "2021-12-06T22:46:59.584Z", "archetype": "regular", "unseen": false, "pinned": false, "unpinned": null, "visible": true, "closed": false, "archived": false, "bookmarked": null, "liked": null, "tags_descriptions": {}, "like_count": 1, "views": 324, "category_id": 10, "featured_link": null, "has_accepted_answer": false, "posters": [{"extras": null, "description": "Original Poster", "user": {"id": 1488, "username": "ToolmakerSteve", "name": "ToolmakerSteve", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/t/ba9def/{size}.png"}}, {"extras": null, "description": "Frequent Poster", "user": {"id": 628, "username": "SirNate0", "name": "SirNate0", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}}, {"extras": "latest", "description": "Most Recent Poster", "user": {"id": 631, "username": "JTippetts1", "name": "J Tippetts", "avatar_template": "/user_avatar/discourse.urho3d.io/jtippetts1/{size}/96_2.png"}}]}, {"id": 7083, "title": "Using custom models in Xamarin.Forms shared project", "fancy_title": "Using custom models in Xamarin.Forms shared project", "slug": "using-custom-models-in-xamarin-forms-shared-project", "posts_count": 3, "reply_count": 1, "highest_post_number": 3, "image_url": null, "created_at": "2021-12-03T08:34:21.895Z", "last_posted_at": "2021-12-03T11:40:30.983Z", "bumped": true, "bumped_at": "2021-12-03T11:40:30.983Z", "archetype": "regular", "unseen": false, "pinned": false, "unpinned": null, "visible": true, "closed": false, "archived": false, "bookmarked": null, "liked": null, "tags_descriptions": {}, "like_count": 0, "views": 198, "category_id": 10, "featured_link": null, "has_accepted_answer": false, "posters": [{"extras": "latest", "description": "Original Poster, Most Recent Poster", "user": {"id": 1493, "username": "Nikolai", "name": "Nikolai Miroshnichenko", "avatar_template": "/user_avatar/discourse.urho3d.io/nikolai/{size}/3632_2.png"}}, {"extras": null, "description": "Frequent Poster", "user": {"id": 192, "username": "Modanung", "name": "\u9b54\u5927\u519c \ud835\udf8d\ud835\udf8e\ud835\udf73 \u73fe\u62db\u870d", "avatar_template": "/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png"}}]}, {"id": 7097, "title": "View Physics event for ConvexCast", "fancy_title": "View Physics event for ConvexCast", "slug": "view-physics-event-for-convexcast", "posts_count": 11, "reply_count": 5, "highest_post_number": 11, "image_url": null, "created_at": "2021-12-09T23:56:27.507Z", "last_posted_at": "2021-12-12T20:20:02.788Z", "bumped": true, "bumped_at": "2021-12-12T20:20:02.788Z", "archetype": "regular", "unseen": false, "pinned": false, "unpinned": null, "visible": true, "closed": false, "archived": false, "bookmarked": null, "liked": null, "tags_descriptions": {}, "like_count": 6, "views": 206, "category_id": 10, "featured_link": null, "has_accepted_answer": true, "posters": [{"extras": "latest", "description": "Original Poster, Most Recent Poster", "user": {"id": 861, "username": "GodMan", "name": "", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/e79b87/{size}.png"}}, {"extras": null, "description": "Frequent Poster, Accepted Answer", "user": {"id": 192, "username": "Modanung", "name": "\u9b54\u5927\u519c \ud835\udf8d\ud835\udf8e\ud835\udf73 \u73fe\u62db\u870d", "avatar_template": "/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png"}}, {"extras": null, "description": "Frequent Poster", "user": {"id": 628, "username": "SirNate0", "name": "SirNate0", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}}]}, {"id": 7115, "title": "Is it possbile to use one billboard for a lens flare?", "fancy_title": "Is it possbile to use one billboard for a lens flare?", "slug": "is-it-possbile-to-use-one-billboard-for-a-lens-flare", "posts_count": 17, "reply_count": 4, "highest_post_number": 17, "image_url": null, "created_at": "2022-01-02T03:10:48.953Z", "last_posted_at": "2022-01-03T21:37:51.953Z", "bumped": true, "bumped_at": "2022-01-03T21:37:51.953Z", "archetype": "regular", "unseen": false, "pinned": false, "unpinned": null, "visible": true, "closed": false, "archived": false, "bookmarked": null, "liked": null, "tags_descriptions": {}, "like_count": 4, "views": 275, "category_id": 10, "featured_link": null, "has_accepted_answer": true, "posters": [{"extras": "latest", "description": "Original Poster, Most Recent Poster", "user": {"id": 861, "username": "GodMan", "name": "", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/e79b87/{size}.png"}}, {"extras": null, "description": "Frequent Poster, Accepted Answer", "user": {"id": 192, "username": "Modanung", "name": "\u9b54\u5927\u519c \ud835\udf8d\ud835\udf8e\ud835\udf73 \u73fe\u62db\u870d", "avatar_template": "/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png"}}, {"extras": null, "description": "Frequent Poster", "user": {"id": 628, "username": "SirNate0", "name": "SirNate0", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}}]}, {"id": 7065, "title": "Angelscript: Loading a char file into a 2D array: how?", "fancy_title": "Angelscript: Loading a char file into a 2D array: how?", "slug": "angelscript-loading-a-char-file-into-a-2d-array-how", "posts_count": 7, "reply_count": 4, "highest_post_number": 7, "image_url": null, "created_at": "2021-11-24T09:20:05.420Z", "last_posted_at": "2021-11-28T11:19:39.689Z", "bumped": true, "bumped_at": "2021-11-28T11:26:00.375Z", "archetype": "regular", "unseen": false, "pinned": false, "unpinned": null, "visible": true, "closed": false, "archived": false, "bookmarked": null, "liked": null, "tags_descriptions": {}, "like_count": 4, "views": 239, "category_id": 10, "featured_link": null, "has_accepted_answer": true, "posters": [{"extras": "latest", "description": "Original Poster, Most Recent Poster", "user": {"id": 1491, "username": "xlat", "name": "Alex Kuch", "avatar_template": "/user_avatar/discourse.urho3d.io/xlat/{size}/3620_2.png"}}, {"extras": null, "description": "Frequent Poster, Accepted Answer", "user": {"id": 983, "username": "tarzeron", "name": "", "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/t/ecae2f/{size}.png"}}, {"extras": null, "description": "Frequent Poster", "user": {"id": 192, "username": "Modanung", "name": "\u9b54\u5927\u519c \ud835\udf8d\ud835\udf8e\ud835\udf73 \u73fe\u62db\u870d", "avatar_template": "/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png"}}]}]}