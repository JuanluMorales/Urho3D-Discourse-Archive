{"post_stream":{"posts":[{"id":1559,"name":"","username":"Bluemoon","avatar_template":"/user_avatar/discourse.urho3d.io/bluemoon/{size}/348_2.png","created_at":"2014-06-02T21:46:47.000Z","cooked":"\u003cp\u003eSince Blender is my one and only 3D modeling suit (for now \u003cimg src=\"https://emoji.discourse-cdn.com/twitter/question.png?v=5\" title=\":question:\" class=\"emoji\" alt=\":question:\"\u003e ), I have gotten so used to its camera navigation and orbiting key combinations, so I thought of implementing a simple Orbiting Camera in Urho3D having blenders key combinations as follows\u003c/p\u003e\n\u003cp\u003e//These ones are already Implemented in Urho3D Editor\u003cbr\u003e\nkey_1    =    Front\u003cbr\u003e\nKey_1 + ctrl =   Back\u003cbr\u003e\nKey_3    =   Right\u003cbr\u003e\nKey_3 + Ctrl = Left\u003cbr\u003e\nKey_7    = Top\u003cbr\u003e\nKey_7 + Ctrl  = Under\u003cbr\u003e\nKey_W    = Forward\u003cbr\u003e\nKey_S     =  Back\u003c/p\u003e\n\u003cp\u003e//Additional combinations\u003cbr\u003e\nAlt + LMB     =  Orbit\u003cbr\u003e\nShift + Alt + LMB  = Pan\u003cbr\u003e\nMouseWheel = Forward and Back\u003c/p\u003e\n\u003cp\u003eBelow is a simple code that loads a plane and the ever popular mushroom  \u003cimg src=\"https://emoji.discourse-cdn.com/twitter/smiley.png?v=5\" title=\":smiley:\" class=\"emoji\" alt=\":smiley:\"\u003e just in case someone might need it\u003c/p\u003e\n\u003cp\u003eUrho3DSample.h\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003e#ifndef __urho3dsample_h_\n#define __urho3dsample_h_\n\n#include \u0026lt;Application.h\u0026gt;\n#include \u0026lt;Engine.h\u0026gt;\n#include \u0026lt;InputEvents.h\u0026gt;\n#include \u0026lt;Scene.h\u0026gt;\n#include \u0026lt;Node.h\u0026gt;\n\nenum CameraPosition\n{\n    CAM_FRONT = 100,\n    CAM_BACK,\n    CAM_RIGHT,\n    CAM_LEFT,\n    CAM_UP,\n    CAM_DOWN\n};\n\nusing namespace Urho3D;\n\nclass Urho3DSample : public Application\n{\npublic:\n    Urho3DSample(Urho3D::Context* context);\n    \n    virtual void Setup();\n    virtual void Start();\n    virtual void Stop();\n\n    void HandleKeyDown(StringHash eventType, VariantMap\u0026amp; eventData);\n    void HandleUpdate(StringHash eventType, VariantMap\u0026amp; eventData);\n\nprivate:\n    void CreateScene();\n    void SetupViewport();\n\n    void SetupOrbitingCam();\n    void UpdateOrbitingCam();\n    void SetCameraPosition(CameraPosition pos);\n\n\n    void OnKeyPressed(int key);\n\n    void SubscribeToEvents();\n\n    SharedPtr\u0026lt;Scene\u0026gt; scene_;\n\n    SharedPtr\u0026lt;Node\u0026gt; cameraNode_;\n    SharedPtr\u0026lt;Node\u0026gt; camPitchNode_;\n    SharedPtr\u0026lt;Node\u0026gt; camYawNode_;\n    SharedPtr\u0026lt;Node\u0026gt; camBaseNode_;\n};\n\n\n#endif // #ifndef __urho3dsample_h_\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eUrho3DSample.cpp\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003e#include \"Urho3DSample.h\"\n\n\n\n#include \u0026lt;Renderer.h\u0026gt;\n#include \u0026lt;ResourceCache.h\u0026gt;\n#include \u0026lt;Light.h\u0026gt;\n#include \u0026lt;StaticModel.h\u0026gt;\n#include \u0026lt;Model.h\u0026gt;\n#include \u0026lt;Material.h\u0026gt;\n#include \u0026lt;Camera.h\u0026gt;\n#include \u0026lt;Viewport.h\u0026gt;\n#include \u0026lt;CoreEvents.h\u0026gt;\n#include \u0026lt;Input.h\u0026gt;\n#include \u0026lt;Octree.h\u0026gt;\n\n\nUrho3DSample::Urho3DSample(Urho3D::Context *context) : Application(context)\n{\n}\n\nvoid Urho3DSample::Setup()\n{\n}\n\nvoid Urho3DSample::Start()\n{\n    CreateScene();\n\n    SetupOrbitingCam();\n\n    SetupViewport();\n\n    SubscribeToEvents();\n}\n\nvoid Urho3DSample::Stop()\n{\n}\n\nvoid Urho3DSample::HandleKeyDown(Urho3D::StringHash eventType, Urho3D::VariantMap \u0026amp;eventData)\n{\n    using namespace Urho3D::KeyDown;\n    // Check for pressing ESC. Note the engine_ member variable for convenience access to the Engine object\n    int key = eventData[P_KEY].GetInt();\n    if (key == Urho3D::KEY_ESC)\n        engine_-\u0026gt;Exit();\n    else\n    {\n        OnKeyPressed(key);\n    }\n}\n\nvoid Urho3DSample::HandleUpdate(StringHash eventType, VariantMap \u0026amp;eventData)\n{\n    UpdateOrbitingCam();\n}\n\nvoid Urho3DSample::CreateScene()\n{\n    ResourceCache* cache = GetSubsystem\u0026lt;ResourceCache\u0026gt;();\n    scene_ = new Scene(context_);\n\n    scene_-\u0026gt;CreateComponent\u0026lt;Octree\u0026gt;();\n\n    Node* planeNode = scene_-\u0026gt;CreateChild(\"Plane\");\n    planeNode-\u0026gt;SetScale(Vector3(100.0f, 1.0f, 100.0f));\n\n    StaticModel* planeObject = planeNode-\u0026gt;CreateComponent\u0026lt;StaticModel\u0026gt;();\n    planeObject-\u0026gt;SetModel(cache-\u0026gt;GetResource\u0026lt;Model\u0026gt;(\"Models/Plane.mdl\"));\n    planeObject-\u0026gt;SetMaterial(cache-\u0026gt;GetResource\u0026lt;Material\u0026gt;(\"Materials/StoneTiled.xml\"));\n\n    Node* modelNode = scene_-\u0026gt;CreateChild(\"ModelNode\");\n    modelNode-\u0026gt;SetScale(0.3f);\n\n    StaticModel* model = modelNode-\u0026gt;CreateComponent\u0026lt;StaticModel\u0026gt;();\n    model-\u0026gt;SetModel(cache-\u0026gt;GetResource\u0026lt;Model\u0026gt;(\"Models/Mushroom.mdl\"));\n    model-\u0026gt;SetMaterial(cache-\u0026gt;GetResource\u0026lt;Material\u0026gt;(\"Materials/Mushroom.xml\"));\n\n\n    Node* lightNode = scene_-\u0026gt;CreateChild(\"DirectionalLightNode\");\n    lightNode-\u0026gt;SetDirection(Vector3(0.6f, -1.0f, 0.8f));\n\n\n    Light* light = lightNode-\u0026gt;CreateComponent\u0026lt;Light\u0026gt;();\n    light-\u0026gt;SetLightType(LIGHT_DIRECTIONAL);\n    light-\u0026gt;SetCastShadows(true);\n}\n\nvoid Urho3DSample::SetupViewport()\n{\n    Renderer* renderer = GetSubsystem\u0026lt;Renderer\u0026gt;();\n\n    SharedPtr\u0026lt;Viewport\u0026gt; viewport(new Viewport(context_, scene_, cameraNode_-\u0026gt;GetComponent\u0026lt;Camera\u0026gt;()));\n    renderer-\u0026gt;SetViewport(0,viewport);\n}\n\nvoid Urho3DSample::SetupOrbitingCam()\n{\n    camBaseNode_ = scene_-\u0026gt;CreateChild(\"Base Cam Node\");\n    camYawNode_ = camBaseNode_-\u0026gt;CreateChild(\"Cam Yaw Node\");\n    camPitchNode_ = camYawNode_-\u0026gt;CreateChild(\"Cam Pitch Node\");\n\n    cameraNode_ = camPitchNode_-\u0026gt;CreateChild(\"Cam Node\");\n    cameraNode_-\u0026gt;CreateComponent\u0026lt;Camera\u0026gt;();\n\n    cameraNode_-\u0026gt;TranslateRelative(Vector3(0,0,-10));\n}\n\nvoid Urho3DSample::UpdateOrbitingCam()\n{\n    Input* input = GetSubsystem\u0026lt;Input\u0026gt;();\n    float dist;\n\n\n    if(input-\u0026gt;GetMouseButtonDown(MOUSEB_LEFT))\n    {\n        if(input-\u0026gt;GetKeyDown(KEY_ALT) \u0026amp;\u0026amp; input-\u0026gt;GetKeyDown(KEY_SHIFT))\n        {\n            //Pan around the Screen\n            dist = (cameraNode_-\u0026gt;GetPosition().Length()) / 500;\n            Matrix3 rotationMatrix = cameraNode_-\u0026gt;GetWorldTransform().RotationMatrix();\n\n            Vector3 direction = rotationMatrix * Vector3(input-\u0026gt;GetMouseMoveX() * -dist, input-\u0026gt;GetMouseMoveY() * dist,0);\n\n\n            camBaseNode_-\u0026gt;TranslateRelative(direction);\n\n        }\n        else if(input-\u0026gt;GetKeyDown(KEY_ALT))\n        {\n            //Orbit at a pivot\n            camPitchNode_-\u0026gt;Pitch(input-\u0026gt;GetMouseMoveY() * 0.25f);\n            camYawNode_-\u0026gt;Yaw(input-\u0026gt;GetMouseMoveX() * 0.25f);\n\n        }\n    }\n    else if(input-\u0026gt;GetMouseMoveWheel() != 0)\n    {\n        cameraNode_-\u0026gt;TranslateRelative(Vector3(0,0,input-\u0026gt;GetMouseMoveWheel() * 0.5));\n    }\n    //In Forward and Backwards movement in case of laptop touchpad\n    else if(input-\u0026gt;GetKeyDown('W'))\n    {\n        cameraNode_-\u0026gt;TranslateRelative(Vector3(0,0,0.07f));\n    }\n    else if(input-\u0026gt;GetKeyDown('S'))\n    {\n        cameraNode_-\u0026gt;TranslateRelative(Vector3(0,0,-0.07f));\n    }\n}\n\nvoid Urho3DSample::SetCameraPosition(CameraPosition pos)\n{\n    camPitchNode_-\u0026gt;SetRotation(Quaternion(0.0f,0.0f,0.0f));\n    camYawNode_-\u0026gt;SetRotation(Quaternion(0.0f,0.0f,0.0f));\n\n    switch(pos)\n    {\n    //case CAM_FRONT:\n    //there is no need for this since the cam is already\n    //positioned at CAM_FRONT after the orientation of the cam nodes are\n    //reset\n\n    case CAM_BACK:\n        camYawNode_-\u0026gt;Yaw(180);\n        break;\n    case CAM_RIGHT:\n        camYawNode_-\u0026gt;Yaw(-90);\n        break;\n    case CAM_LEFT:\n        camYawNode_-\u0026gt;Yaw(90);\n        break;\n    case CAM_UP:\n        camPitchNode_-\u0026gt;Pitch(-90);\n        break;\n    case CAM_DOWN:\n        camPitchNode_-\u0026gt;Pitch(90);\n        break;\n\n    }\n}\n\nvoid Urho3DSample::OnKeyPressed(int key)\n{\n    Input* input = GetSubsystem\u0026lt;Input\u0026gt;();\n    bool ctrlDown = input-\u0026gt;GetKeyDown(KEY_CTRL);\n\n    switch(key)\n    {\n    case '1':\n        SetCameraPosition(ctrlDown ? CAM_BACK : CAM_FRONT);\n        break;\n\n    case '3':\n        SetCameraPosition(ctrlDown ? CAM_LEFT : CAM_RIGHT);\n        break;\n\n    case '7':\n        SetCameraPosition(ctrlDown ? CAM_UP :  CAM_DOWN );\n        break;\n\n    }\n\n}\n\nvoid Urho3DSample::SubscribeToEvents()\n{\n    SubscribeToEvent(E_KEYDOWN, HANDLER(Urho3DSample, HandleKeyDown));\n    SubscribeToEvent(E_UPDATE, HANDLER(Urho3DSample, HandleUpdate));\n}\n\n\nDEFINE_APPLICATION_MAIN(Urho3DSample)\u003c/code\u003e\u003c/pre\u003e","post_number":1,"post_type":1,"updated_at":"2017-01-02T00:59:24.680Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":57,"reads":11,"readers_count":10,"score":287.2,"yours":false,"topic_id":288,"topic_slug":"orbiting-camera","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":94,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false}],"stream":[1559]},"timeline_lookup":[[1,3095]],"suggested_topics":[{"id":7099,"title":":fallen_leaf: Polynomials \u0026 Harmonics","fancy_title":":fallen_leaf: Polynomials \u0026amp; Harmonics","slug":"polynomials-harmonics","posts_count":6,"reply_count":0,"highest_post_number":7,"image_url":null,"created_at":"2021-12-13T05:06:04.641Z","last_posted_at":"2021-12-27T23:27:39.489Z","bumped":true,"bumped_at":"2021-12-27T23:27:39.489Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"unicode_title":"🍂 Polynomials \u0026 Harmonics","tags_descriptions":{},"like_count":6,"views":392,"category_id":13,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest single","description":"Original Poster, Most Recent Poster","user":{"id":192,"username":"Modanung","name":"魔大农 𝞍𝞎𝝳 現招蜍","avatar_template":"/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png"}}]},{"id":7103,"title":":test_tube: DebugRenderer as GUI","fancy_title":":test_tube: DebugRenderer as GUI","slug":"debugrenderer-as-gui","posts_count":4,"reply_count":1,"highest_post_number":4,"image_url":null,"created_at":"2021-12-17T02:25:06.606Z","last_posted_at":"2021-12-18T01:09:27.738Z","bumped":true,"bumped_at":"2021-12-18T01:09:27.738Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"unicode_title":"🧪 DebugRenderer as GUI","tags_descriptions":{},"like_count":4,"views":267,"category_id":13,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":192,"username":"Modanung","name":"魔大农 𝞍𝞎𝝳 現招蜍","avatar_template":"/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":861,"username":"GodMan","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/g/e79b87/{size}.png"}}]},{"id":7110,"title":"Resource fetch define","fancy_title":"Resource fetch define","slug":"resource-fetch-define","posts_count":2,"reply_count":0,"highest_post_number":2,"image_url":null,"created_at":"2021-12-27T12:28:55.126Z","last_posted_at":"2021-12-27T17:00:37.699Z","bumped":true,"bumped_at":"2021-12-27T17:00:37.699Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":7,"views":184,"category_id":13,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":null,"description":"Original Poster","user":{"id":192,"username":"Modanung","name":"魔大农 𝞍𝞎𝝳 現招蜍","avatar_template":"/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png"}},{"extras":"latest","description":"Most Recent Poster","user":{"id":1304,"username":"lebrewer","name":"lebrewer","avatar_template":"/user_avatar/discourse.urho3d.io/lebrewer/{size}/2811_2.png"}}]},{"id":7120,"title":"Log Error Once Macro","fancy_title":"Log Error Once Macro","slug":"log-error-once-macro","posts_count":1,"reply_count":0,"highest_post_number":1,"image_url":null,"created_at":"2022-01-04T02:24:37.857Z","last_posted_at":"2022-01-04T02:24:37.925Z","bumped":true,"bumped_at":"2022-01-04T02:24:37.925Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":3,"views":143,"category_id":13,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest single","description":"Original Poster, Most Recent Poster","user":{"id":628,"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}}]},{"id":7343,"title":"Zone's AmbientColor LightMask","fancy_title":"Zone\u0026rsquo;s AmbientColor LightMask","slug":"zones-ambientcolor-lightmask","posts_count":3,"reply_count":0,"highest_post_number":3,"image_url":null,"created_at":"2022-10-27T17:25:15.253Z","last_posted_at":"2022-10-28T17:16:58.872Z","bumped":true,"bumped_at":"2022-10-28T17:16:58.872Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":1,"views":72,"category_id":10,"featured_link":null,"has_accepted_answer":true,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":1456,"username":"Jens","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/j/d2c977/{size}.png"}},{"extras":null,"description":"Frequent Poster, Accepted Answer","user":{"id":484,"username":"Eugene","name":"Eugene Kozlov","avatar_template":"/user_avatar/discourse.urho3d.io/eugene/{size}/902_2.png"}}]}],"tags_descriptions":{},"id":288,"title":"Orbiting Camera","fancy_title":"Orbiting Camera","posts_count":1,"created_at":"2014-06-02T21:46:47.000Z","views":562,"reply_count":0,"like_count":0,"last_posted_at":"2014-06-02T21:46:47.000Z","visible":true,"closed":false,"archived":false,"has_summary":false,"archetype":"regular","slug":"orbiting-camera","category_id":13,"word_count":727,"deleted_at":null,"user_id":94,"featured_link":null,"pinned_globally":false,"pinned_at":null,"pinned_until":null,"image_url":null,"slow_mode_seconds":0,"draft":null,"draft_key":"topic_288","draft_sequence":null,"unpinned":null,"pinned":false,"current_post_number":1,"highest_post_number":1,"deleted_by":null,"actions_summary":[{"id":4,"count":0,"hidden":false,"can_act":false},{"id":8,"count":0,"hidden":false,"can_act":false},{"id":7,"count":0,"hidden":false,"can_act":false}],"chunk_size":20,"bookmarked":false,"bookmarks":[],"topic_timer":null,"message_bus_last_id":0,"participant_count":1,"show_read_indicator":false,"thumbnails":null,"slow_mode_enabled_until":null,"tags_disable_ads":false,"details":{"can_edit":false,"notification_level":1,"participants":[{"id":94,"username":"Bluemoon","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/bluemoon/{size}/348_2.png","post_count":1,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"trust_level":2}],"created_by":{"id":94,"username":"Bluemoon","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/bluemoon/{size}/348_2.png"},"last_poster":{"id":94,"username":"Bluemoon","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/bluemoon/{size}/348_2.png"}}}