{"post_stream":{"posts":[{"id":10073,"name":"","username":"Aramis","avatar_template":"/user_avatar/discourse.urho3d.io/aramis/{size}/124_2.png","created_at":"2016-02-08T21:22:33.000Z","cooked":"\u003cp\u003eHello!\u003c/p\u003e\n\u003cp\u003eI’m trying to replicatea a scene, everything is fine, except the animated models.\u003cbr\u003e\nI’ve read the Urho’s documentation about Network replication (\u003ca href=\"http://urho3d.github.io/documentation/1.5/_network.html\" data-bbcode=\"true\" rel=\"nofollow noopener\"\u003ehttp://urho3d.github.io/documentation/1.5/_network.html\u003c/a\u003e). It basically tells that animations are replicated through AnimationController. I’ve modified the Character example and the Scene replication to try this out.\u003c/p\u003e\n\u003cp\u003eI thought  that it would have worked, since in Character example the Jack model uses the animation controller, and it is \u003cspan class=\"bbcode-b\"\u003eNOT \u003c/span\u003ecreated as local (both Jack and the AnimationController can be replicated).\u003c/p\u003e\n\u003cp\u003eThis part of the code shows this:\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003evoid CreateCharacter()\n{\n    characterNode = scene_.CreateChild(\"Jack\");\n    AnimatedModel@ object = characterNode.CreateComponent(\"AnimatedModel\");\n    object.model = cache.GetResource(\"Model\", \"Models/Jack.mdl\");\n    object.material = cache.GetResource(\"Material\", \"Materials/Jack.xml\");\n    [...]\n    characterNode.CreateComponent(\"AnimationController\");\n}\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eI also tryed to find how it was done in the NinjaSnowWar, I couldn’t find where the animationController was created, it was only referenced in \u003ca href=\"http://Ninja.as\" rel=\"nofollow noopener\"\u003eNinja.as\u003c/a\u003e.\u003cbr\u003e\nAlso, why it had an index? Is it for the multiple players?\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003e\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eHere are the two scripts I’m using to test the Animation Replication:\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"http://Server.as\" rel=\"nofollow noopener\"\u003eServer.as\u003c/a\u003e (Character example with replication server)\u003c/p\u003e\n\u003cp\u003e[spoiler]\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “Scripts/Utilities/Sample.as”\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e “Scripts/Utilities/Touch.as”\u003c/p\u003e\n\u003cp\u003econst uint SERVER_PORT = 2345;\u003c/p\u003e\n\u003cp\u003econst int CTRL_FORWARD = 1;\u003cbr\u003e\nconst int CTRL_BACK = 2;\u003cbr\u003e\nconst int CTRL_LEFT = 4;\u003cbr\u003e\nconst int CTRL_RIGHT = 8;\u003cbr\u003e\nconst int CTRL_JUMP = 16;\u003c/p\u003e\n\u003cp\u003econst float MOVE_FORCE = 0.8f;\u003cbr\u003e\nconst float INAIR_MOVE_FORCE = 0.02f;\u003cbr\u003e\nconst float BRAKE_FORCE = 0.2f;\u003cbr\u003e\nconst float JUMP_FORCE = 7.0f;\u003cbr\u003e\nconst float YAW_SENSITIVITY = 0.1f;\u003cbr\u003e\nconst float INAIR_THRESHOLD_TIME = 0.1f;\u003cbr\u003e\nbool firstPerson = false; // First person camera flag\u003c/p\u003e\n\u003cp\u003eNode@ characterNode;\u003c/p\u003e\n\u003cp\u003e// Record for each connected client\u003cbr\u003e\nclass Client\u003cbr\u003e\n{\u003cbr\u003e\nConnection@ connection;\u003cbr\u003e\nNode@ object;\u003cbr\u003e\n}\u003cbr\u003e\nArray clients;\u003c/p\u003e\n\u003cp\u003evoid Start()\u003cbr\u003e\n{\u003cbr\u003e\nSampleStart();\u003cbr\u003e\nCreateScene();\u003cbr\u003e\nnetwork.StartServer(SERVER_PORT);\u003cbr\u003e\nCreateCharacter();\u003cbr\u003e\nSubscribeToEvents();\u003cbr\u003e\n}\u003c/p\u003e\n\u003cp\u003evoid CreateScene()\u003cbr\u003e\n{\u003cbr\u003e\nscene_ = Scene();\u003cbr\u003e\nscene_.CreateComponent(“Octree”);\u003cbr\u003e\nscene_.CreateComponent(“PhysicsWorld”);\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003ecameraNode = scene_.CreateChild(\"CamCam\");\nCamera@ camera = cameraNode.CreateComponent(\"Camera\");\ncamera.farClip = 300.0f;\nrenderer.viewports[0] = Viewport(scene_, camera);\n\nNode@ zoneNode = scene_.CreateChild(\"Zone\");\nZone@ zone = zoneNode.CreateComponent(\"Zone\");\nzone.boundingBox = BoundingBox(-1000.0f, 1000.0f);\nzone.ambientColor = Color(0.15f, 0.15f, 0.15f);\nzone.fogColor = Color(0.5f, 0.5f, 0.7f);\nzone.fogStart = 100.0f;\nzone.fogEnd = 300.0f;\n\nNode@ lightNode = scene_.CreateChild(\"DirectionalLight\");\nlightNode.direction = Vector3(0.6f, -1.0f, 0.8f);\nLight@ light = lightNode.CreateComponent(\"Light\");\nlight.lightType = LIGHT_DIRECTIONAL;\nlight.castShadows = true;\nlight.shadowBias = BiasParameters(0.00025f, 0.5f);\nlight.shadowCascade = CascadeParameters(10.0f, 50.0f, 200.0f, 0.0f, 0.8f);\n\n// Create the floor object\nNode@ floorNode = scene_.CreateChild(\"Floor\");\nfloorNode.position = Vector3(0.0f, -0.5f, 0.0f);\nfloorNode.scale = Vector3(200.0f, 1.0f, 200.0f);\nStaticModel@ object = floorNode.CreateComponent(\"StaticModel\");\nobject.model = cache.GetResource(\"Model\", \"Models/Box.mdl\");\nobject.material = cache.GetResource(\"Material\", \"Materials/Stone.xml\");\n\nRigidBody@ body = floorNode.CreateComponent(\"RigidBody\");\nbody.collisionLayer = 2;\nCollisionShape@ shape = floorNode.CreateComponent(\"CollisionShape\");\nshape.SetBox(Vector3(1.0f, 1.0f, 1.0f));\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e}\u003c/p\u003e\n\u003cp\u003evoid CreateCharacter()\u003cbr\u003e\n{\u003cbr\u003e\ncharacterNode = scene_.CreateChild(“Jack”);\u003cbr\u003e\ncharacterNode.position = Vector3(0.0f, 1.0f, 0.0f);\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e// Create the rendering component + animation controller\nAnimatedModel@ object = characterNode.CreateComponent(\"AnimatedModel\");\nobject.model = cache.GetResource(\"Model\", \"Models/Jack.mdl\");\nobject.material = cache.GetResource(\"Material\", \"Materials/Jack.xml\");\nobject.castShadows = true;\ncharacterNode.CreateComponent(\"AnimationController\");\n\n// Set the head bone for manual control\nobject.skeleton.GetBone(\"Bip01_Head\").animated = false;\n\n// Create rigidbody, and set non-zero mass so that the body becomes dynamic\nRigidBody@ body = characterNode.CreateComponent(\"RigidBody\");\nbody.collisionLayer = 1;\nbody.mass = 1.0f;\n\n// Set zero angular factor so that physics doesn't turn the character on its own.\n// Instead we will control the character yaw manually\nbody.angularFactor = Vector3(0.0f, 0.0f, 0.0f);\n\n// Set the rigidbody to signal collision also when in rest, so that we get ground collisions properly\nbody.collisionEventMode = COLLISION_ALWAYS;\n\n// Set a capsule shape for collision\nCollisionShape@ shape = characterNode.CreateComponent(\"CollisionShape\");\nshape.SetCapsule(0.7f, 1.8f, Vector3(0.0f, 0.9f, 0.0f));\n\n// Create the character logic object, which takes care of steering the rigidbody\ncharacterNode.CreateScriptObject(scriptFile, \"Character\");\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e}\u003c/p\u003e\n\u003cp\u003evoid SubscribeToEvents()\u003cbr\u003e\n{\u003cbr\u003e\n// Subscribe to Update event for setting the character controls before physics simulation\u003cbr\u003e\nSubscribeToEvent(“Update”, “HandleUpdate”);\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e// Subscribe to PostUpdate event for updating the camera position after physics simulation\nSubscribeToEvent(\"PostUpdate\", \"HandlePostUpdate\");\n\n// Unsubscribe the SceneUpdate event from base class as the camera node is being controlled in HandlePostUpdate() in this sample\nUnsubscribeFromEvent(\"SceneUpdate\");\n\nSubscribeToEvent(\"ClientConnected\", \"HandleClientConnected\");\nSubscribeToEvent(\"ClientDisconnected\", \"HandleClientDisconnected\");\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e}\u003c/p\u003e\n\u003cp\u003evoid HandleUpdate(StringHash eventType, VariantMap\u0026amp; eventData)\u003cbr\u003e\n{\u003cbr\u003e\nif (characterNode is null)\u003cbr\u003e\nreturn;\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eCharacter@ character = cast\u0026lt;Character\u0026gt;(characterNode.scriptObject);\nif (character is null)\n    return;\n\n// Clear previous controls\ncharacter.controls.Set(CTRL_FORWARD | CTRL_BACK | CTRL_LEFT | CTRL_RIGHT | CTRL_JUMP, false);\n\n// Update controls using touch utility\nif (touchEnabled)\n    UpdateTouches(character.controls);\n\n// Update controls using keys (desktop)\nif (ui.focusElement is null)\n{\n    if (touchEnabled || !useGyroscope)\n    {\n        character.controls.Set(CTRL_FORWARD, input.keyDown['W']);\n        character.controls.Set(CTRL_BACK, input.keyDown['S']);\n        character.controls.Set(CTRL_LEFT, input.keyDown['A']);\n        character.controls.Set(CTRL_RIGHT, input.keyDown['D']);\n    }\n    character.controls.Set(CTRL_JUMP, input.keyDown[KEY_SPACE]);\n\n    // Add character yaw \u0026amp; pitch from the mouse motion or touch input\n    if (touchEnabled)\n    {\n        for (uint i = 0; i \u0026lt; input.numTouches; ++i)\n        {\n            TouchState@ state = input.touches[i];\n            if (state.touchedElement is null) // Touch on empty space\n            {\n                Camera@ camera = cameraNode.GetComponent(\"Camera\");\n                if (camera is null)\n                    return;\n\n                character.controls.yaw += TOUCH_SENSITIVITY * camera.fov / graphics.height * state.delta.x;\n                character.controls.pitch += TOUCH_SENSITIVITY * camera.fov / graphics.height * state.delta.y;\n            }\n        }\n    }\n    else\n    {\n        character.controls.yaw += input.mouseMoveX * YAW_SENSITIVITY;\n        character.controls.pitch += input.mouseMoveY * YAW_SENSITIVITY;\n    }\n    // Limit pitch\n    character.controls.pitch = Clamp(character.controls.pitch, -80.0f, 80.0f);\n    // Set rotation already here so that it's updated every rendering frame instead of every physics frame\n    characterNode.rotation = Quaternion(character.controls.yaw, Vector3(0.0f, 1.0f, 0.0f));\n\n    // Switch between 1st and 3rd person\n    if (input.keyPress['F'])\n        firstPerson = !firstPerson;\n\n    // Turn on/off gyroscope on mobile platform\n    if (input.keyPress['G'])\n        useGyroscope = !useGyroscope;\n\n    // Check for loading / saving the scene\n    if (input.keyPress[KEY_F5])\n    {\n        File saveFile(fileSystem.programDir + \"Data/Scenes/CharacterDemo.xml\", FILE_WRITE);\n        scene_.SaveXML(saveFile);\n    }\n    if (input.keyPress[KEY_F7])\n    {\n        File loadFile(fileSystem.programDir + \"Data/Scenes/CharacterDemo.xml\", FILE_READ);\n        scene_.LoadXML(loadFile);\n        // After loading we have to reacquire the character scene node, as it has been recreated\n        // Simply find by name as there's only one of them\n        characterNode = scene_.GetChild(\"Jack\", true);\n        if (characterNode is null)\n            return;\n    }\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e}\u003c/p\u003e\n\u003cp\u003evoid HandlePostUpdate(StringHash eventType, VariantMap\u0026amp; eventData)\u003cbr\u003e\n{\u003cbr\u003e\nif (characterNode is null)\u003cbr\u003e\nreturn;\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eCharacter@ character = cast\u0026lt;Character\u0026gt;(characterNode.scriptObject);\nif (character is null)\n    return;\n\n// Get camera lookat dir from character yaw + pitch\nQuaternion rot = characterNode.rotation;\nQuaternion dir = rot * Quaternion(character.controls.pitch, Vector3(1.0f, 0.0f, 0.0f));\n\n// Turn head to camera pitch, but limit to avoid unnatural animation\nNode@ headNode = characterNode.GetChild(\"Bip01_Head\", true);\nfloat limitPitch = Clamp(character.controls.pitch, -45.0f, 45.0f);\nQuaternion headDir = rot * Quaternion(limitPitch, Vector3(1.0f, 0.0f, 0.0f));\n// This could be expanded to look at an arbitrary target, now just look at a point in front\nVector3 headWorldTarget = headNode.worldPosition + headDir * Vector3(0.0f, 0.0f, 1.0f);\nheadNode.LookAt(headWorldTarget, Vector3(0.0f, 1.0f, 0.0f));\n// Correct head orientation because LookAt assumes Z = forward, but the bone has been authored differently (Y = forward)\nheadNode.Rotate(Quaternion(0.0f, 90.0f, 90.0f));\n\nif (firstPerson)\n{\n    // First person camera: position to the head bone + offset slightly forward \u0026amp; up\n    cameraNode.position = headNode.worldPosition + rot * Vector3(0.0f, 0.15f, 0.2f);\n    cameraNode.rotation = dir;\n}\nelse\n{\n    // Third person camera: position behind the character\n    Vector3 aimPoint = characterNode.position + rot * Vector3(0.0f, 1.7f, 0.0f); // You can modify x Vector3 value to translate the fixed character position (indicative range[-2;2])\n\n    // Collide camera ray with static physics objects (layer bitmask 2) to ensure we see the character properly\n    Vector3 rayDir = dir * Vector3(0.0f, 0.0f, -1.0f); // For indoor scenes you can use dir * Vector3(0.0, 0.0, -0.5) to prevent camera from crossing the walls\n    float rayDistance = cameraDistance;\n    PhysicsRaycastResult result = scene_.physicsWorld.RaycastSingle(Ray(aimPoint, rayDir), rayDistance, 2);\n    if (result.body !is null)\n        rayDistance = Min(rayDistance, result.distance);\n    rayDistance = Clamp(rayDistance, CAMERA_MIN_DIST, cameraDistance);\n\n    cameraNode.position = aimPoint + rayDir * rayDistance;\n    cameraNode.rotation = dir;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e}\u003c/p\u003e\n\u003cp\u003eclass Character : ScriptObject\u003cbr\u003e\n{\u003cbr\u003e\n// Character controls.\u003cbr\u003e\nControls controls;\u003cbr\u003e\n// Grounded flag for movement.\u003cbr\u003e\nbool onGround = false;\u003cbr\u003e\n// Jump flag.\u003cbr\u003e\nbool okToJump = true;\u003cbr\u003e\n// In air timer. Due to possible physics inaccuracy, character can be off ground for max. 1/10 second and still be allowed to move.\u003cbr\u003e\nfloat inAirTimer = 0.0f;\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003evoid Start()\n{\n    SubscribeToEvent(node, \"NodeCollision\", \"HandleNodeCollision\");\n}\n\nvoid Load(Deserializer\u0026amp; deserializer)\n{\n    controls.yaw = deserializer.ReadFloat();\n    controls.pitch = deserializer.ReadFloat();\n}\n\nvoid Save(Serializer\u0026amp; serializer)\n{\n    serializer.WriteFloat(controls.yaw);\n    serializer.WriteFloat(controls.pitch);\n}\n\nvoid HandleNodeCollision(StringHash eventType, VariantMap\u0026amp; eventData)\n{\n    VectorBuffer contacts = eventData[\"Contacts\"].GetBuffer();\n\n    while (!contacts.eof)\n    {\n        Vector3 contactPosition = contacts.ReadVector3();\n        Vector3 contactNormal = contacts.ReadVector3();\n        float contactDistance = contacts.ReadFloat();\n        float contactImpulse = contacts.ReadFloat();\n\n        // If contact is below node center and mostly vertical, assume it's a ground contact\n        if (contactPosition.y \u0026lt; (node.position.y + 1.0f))\n        {\n            float level = Abs(contactNormal.y);\n            if (level \u0026gt; 0.75)\n                onGround = true;\n        }\n    }\n}\n\nvoid FixedUpdate(float timeStep)\n{\n    /// \\todo Could cache the components for faster access instead of finding them each frame\n    RigidBody@ body = node.GetComponent(\"RigidBody\");\n    AnimationController@ animCtrl = node.GetComponent(\"AnimationController\");\n\n    // Update the in air timer. Reset if grounded\n    if (!onGround)\n        inAirTimer += timeStep;\n    else\n        inAirTimer = 0.0f;\n    // When character has been in air less than 1/10 second, it's still interpreted as being on ground\n    bool softGrounded = inAirTimer \u0026lt; INAIR_THRESHOLD_TIME;\n\n    // Update movement \u0026amp; animation\n    Quaternion rot = node.rotation;\n    Vector3 moveDir(0.0f, 0.0f, 0.0f);\n    Vector3 velocity = body.linearVelocity;\n    // Velocity on the XZ plane\n    Vector3 planeVelocity(velocity.x, 0.0f, velocity.z);\n\n    if (controls.IsDown(CTRL_FORWARD))\n        moveDir += Vector3(0.0f, 0.0f, 1.0f);\n    if (controls.IsDown(CTRL_BACK))\n        moveDir += Vector3(0.0f, 0.0f, -1.0f);\n    if (controls.IsDown(CTRL_LEFT))\n        moveDir += Vector3(-1.0f, 0.0f, 0.0f);\n    if (controls.IsDown(CTRL_RIGHT))\n        moveDir += Vector3(1.0f, 0.0f, 0.0f);\n\n    // Normalize move vector so that diagonal strafing is not faster\n    if (moveDir.lengthSquared \u0026gt; 0.0f)\n        moveDir.Normalize();\n\n    // If in air, allow control, but slower than when on ground\n    body.ApplyImpulse(rot * moveDir * (softGrounded ? MOVE_FORCE : INAIR_MOVE_FORCE));\n\n    if (softGrounded)\n    {\n        // When on ground, apply a braking force to limit maximum ground velocity\n        Vector3 brakeForce = -planeVelocity * BRAKE_FORCE;\n        body.ApplyImpulse(brakeForce);\n\n        // Jump. Must release jump control inbetween jumps\n        if (controls.IsDown(CTRL_JUMP))\n        {\n            if (okToJump)\n            {\n                body.ApplyImpulse(Vector3(0.0f, 1.0f, 0.0f) * JUMP_FORCE);\n                okToJump = false;\n            }\n        }\n        else\n            okToJump = true;\n    }\n\n    // Play walk animation if moving on ground, otherwise fade it out\n    if (softGrounded \u0026amp;\u0026amp; !moveDir.Equals(Vector3(0.0f, 0.0f, 0.0f)))\n        animCtrl.PlayExclusive(\"Models/Jack_Walk.ani\", 0, true, 0.2f);\n    else\n        animCtrl.Stop(\"Models/Jack_Walk.ani\", 0.2f);\n    // Set walk animation speed proportional to velocity\n    animCtrl.SetSpeed(\"Models/Jack_Walk.ani\", planeVelocity.length * 0.3f);\n\n    // Reset grounded flag for next frame\n    onGround = false;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e}\u003c/p\u003e\n\u003cp\u003evoid HandleClientConnected(StringHash eventType, VariantMap\u0026amp; eventData)\u003cbr\u003e\n{\u003cbr\u003e\nConnection@ newConnection = eventData[“Connection”].GetPtr();\u003cbr\u003e\nnewConnection.scene = scene_;\u003cbr\u003e\nClient newClient;\u003cbr\u003e\nnewClient.connection = newConnection;\u003cbr\u003e\nclients.Push(newClient);\u003cbr\u003e\n}\u003c/p\u003e\n\u003cp\u003evoid HandleClientDisconnected(StringHash eventType, VariantMap\u0026amp; eventData)\u003cbr\u003e\n{\u003cbr\u003e\nConnection@ connection = eventData[“Connection”].GetPtr();\u003cbr\u003e\nfor (uint i = 0; i \u0026lt; clients.length; ++i)\u003cbr\u003e\n{\u003cbr\u003e\nif (clients[i].connection is connection)\u003cbr\u003e\n{\u003cbr\u003e\nclients.Erase(i);\u003cbr\u003e\nbreak;\u003cbr\u003e\n}\u003cbr\u003e\n}\u003cbr\u003e\n}\u003cbr\u003e\nString patchInstructions = “no.”;[/spoiler]\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"http://Client.as\" rel=\"nofollow noopener\"\u003eClient.as\u003c/a\u003e (just replicates the character demo scene)\u003c/p\u003e\n\u003cp\u003e[spoiler]\u003cspan class=\"hashtag\"\u003e#include\u003c/span\u003e \"Scripts/Utilities/Sample.as\"\u003cbr\u003e\nString patchInstructions = “null”;\u003c/p\u003e\n\u003cp\u003econst uint SERVER_PORT = 2345;\u003c/p\u003e\n\u003cp\u003eclass Client\u003cbr\u003e\n{\u003cbr\u003e\nConnection@ connection;\u003cbr\u003e\n}\u003c/p\u003e\n\u003cp\u003evoid Start()\u003cbr\u003e\n{\u003cbr\u003e\nSampleStart();\u003cbr\u003e\nCreateScene();\u003cbr\u003e\nSetupViewport();\u003cbr\u003e\nSubscribeToEvents();\u003cbr\u003e\n}\u003cbr\u003e\nvoid CreateScene()\u003cbr\u003e\n{\u003cbr\u003e\nscene_ = Scene();\u003cbr\u003e\nscene_.CreateComponent(“Octree”, LOCAL);\u003cbr\u003e\nscene_.CreateComponent(“PhysicsWorld”, LOCAL);\u003cbr\u003e\nString address;\u003cbr\u003e\naddress = “localhost”;\u003cbr\u003e\nnetwork.Connect(address, SERVER_PORT, scene_);\u003cbr\u003e\ncameraNode = Node(“Camera”);\u003cbr\u003e\nCamera@ camera =  cameraNode.CreateComponent(“Camera”);\u003cbr\u003e\ncamera.farClip = 300.0f;\u003cbr\u003e\n}\u003cbr\u003e\nvoid SetupViewport()\u003cbr\u003e\n{\u003cbr\u003e\n// Set up a viewport to the Renderer subsystem so that the 3D scene can be seen\u003cbr\u003e\nViewport@ viewport = Viewport(scene_, cameraNode.GetComponent(“Camera”));\u003cbr\u003e\nrenderer.viewports[0] = viewport;\u003cbr\u003e\n}\u003cbr\u003e\nvoid SubscribeToEvents()\u003cbr\u003e\n{\u003cbr\u003e\nSubscribeToEvent(“Update”, “HandleUpdate”);\u003cbr\u003e\n}\u003cbr\u003e\nvoid HandleUpdate(StringHash eventType, VariantMap\u0026amp; eventData)\u003cbr\u003e\n{\u003cbr\u003e\ncameraNode.set_position(scene_.GetChild(“CamCam”).position);\u003cbr\u003e\ncameraNode.set_rotation(scene_.GetChild(“CamCam”).rotation);\u003cbr\u003e\n}[/spoiler]\u003c/p\u003e\n\u003cp\u003eTo test the script, you need to start the \u003ca href=\"http://Server.as\" rel=\"nofollow noopener\"\u003eServer.as\u003c/a\u003e first then the \u003ca href=\"http://Client.as\" rel=\"nofollow noopener\"\u003eClient.as\u003c/a\u003e. Use this \u003cspan class=\"bbcode-b\"\u003e.bat\u003c/span\u003e to help test.\u003c/p\u003e\n\u003cp\u003e\u003cspan class=\"spoiler\"\u003estart Urho3DPlayer.exe \u003ca href=\"http://Server.as\" rel=\"nofollow noopener\"\u003eServer.as\u003c/a\u003e -w -x 800 -y 600\u003cbr\u003e\nSLEEP 1000\u003cbr\u003e\nstart Urho3DPlayer.exe \u003ca href=\"http://Client.as\" rel=\"nofollow noopener\"\u003eClient.as\u003c/a\u003e -w -x 700 -y 500\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003eIf you prefer, I’ve uploaded the entire example (4MB) on my bitbucket. Download it here -\u0026gt;\u003ca href=\"http://aramis.bitbucket.org/downloads/temp/AnimRep.zip\" rel=\"nofollow noopener\"\u003earamis.bitbucket.org/downloads/temp/AnimRep.zip\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eBest regards,\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eAramis\u003c/li\u003e\n\u003c/ul\u003e","post_number":1,"post_type":1,"updated_at":"2017-01-02T01:09:56.253Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":112,"reads":23,"readers_count":22,"score":564.6,"yours":false,"topic_id":1762,"topic_slug":"scene-replication-animationcontroller","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"link_counts":[{"url":"http://urho3d.github.io/documentation/1.5/_network.html","internal":false,"reflection":false,"title":"Urho3D - Documentation","clicks":3},{"url":"http://aramis.bitbucket.org/downloads/temp/AnimRep.zip","internal":false,"reflection":false,"title":"Bitbucket | The Git solution for professional teams","clicks":3},{"url":"http://Ninja.as","internal":false,"reflection":false,"title":"we're currently doing some maintenance","clicks":2},{"url":"http://Client.as","internal":false,"reflection":false,"clicks":1},{"url":"http://Server.as","internal":false,"reflection":false,"clicks":0}],"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":213,"hidden":false,"trust_level":1,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":10149,"name":"","username":"rasteron","avatar_template":"/user_avatar/discourse.urho3d.io/rasteron/{size}/55_2.png","created_at":"2016-02-13T02:33:50.000Z","cooked":"\u003cp\u003eHey Aramis,\u003c/p\u003e\n\u003cp\u003eCheck out the \u003cspan class=\"bbcode-b\"\u003eNinja.xml\u003c/span\u003e object under \u003cspan class=\"bbcode-b\"\u003e/Data/Objects\u003c/span\u003e, it is created in that file along with other stuff.\u003c/p\u003e\n\u003cp\u003eNinja.xml\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003e...\t\n\u0026lt;component type=\"AnimationController\" id=\"7\"\u0026gt;\n  \u0026lt;attribute name=\"Animations\" /\u0026gt;\n\u0026lt;/component\u0026gt;\u003c/code\u003e\u003c/pre\u003e\n\u003caside class=\"quote\"\u003e\n\u003cblockquote\u003e\n\u003cp\u003eAlso, why it had an index? Is it for the multiple players? \u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/aside\u003e\n\u003cp\u003eYes NSW is multiplayer ready, but this part searches for the animation component starting with node 0. This code is also a good example so your model’s default pose is not displayed and load your preferred idle animation instead, as commented there… \u003cimg src=\"https://emoji.discourse-cdn.com/twitter/wink.png?v=5\" title=\":wink:\" class=\"emoji\" alt=\":wink:\"\u003e\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003e// Start playing the idle animation immediately, even before the first physics update\n        AnimationController@ animCtrl = node.children[0].GetComponent(\"AnimationController\");\n        animCtrl.PlayExclusive(\"Models/NinjaSnowWar/Ninja_Idle3.ani\", LAYER_MOVE, true);\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eHope that helps.\u003c/p\u003e","post_number":2,"post_type":1,"updated_at":"2019-07-20T13:46:30.909Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":2,"reads":16,"readers_count":15,"score":13.2,"yours":false,"topic_id":1762,"topic_slug":"scene-replication-animationcontroller","display_username":"","primary_group_name":null,"flair_name":null,"flair_url":null,"flair_bg_color":null,"flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":54,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":true}],"stream":[10073,10149]},"timeline_lookup":[[1,2479],[2,2475]],"suggested_topics":[{"id":7087,"title":"Android how to get error message sometimes little change gives me just crash","fancy_title":"Android how to get error message sometimes little change gives me just crash","slug":"android-how-to-get-error-message-sometimes-little-change-gives-me-just-crash","posts_count":2,"reply_count":0,"highest_post_number":2,"image_url":null,"created_at":"2021-12-05T16:59:59.376Z","last_posted_at":"2021-12-05T18:17:02.335Z","bumped":true,"bumped_at":"2021-12-05T18:17:02.335Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":0,"views":153,"category_id":10,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":null,"description":"Original Poster","user":{"id":1436,"username":"Maco","name":"Maco","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/m/90ced4/{size}.png"}},{"extras":"latest","description":"Most Recent Poster","user":{"id":1317,"username":"Lys0gen","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/l/57b2e6/{size}.png"}}]},{"id":7098,"title":"Cartoon Fire Effect","fancy_title":"Cartoon Fire Effect","slug":"cartoon-fire-effect","posts_count":6,"reply_count":0,"highest_post_number":6,"image_url":null,"created_at":"2021-12-10T04:08:49.887Z","last_posted_at":"2021-12-12T02:49:51.076Z","bumped":true,"bumped_at":"2021-12-12T02:49:51.076Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":6,"views":274,"category_id":10,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":628,"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":192,"username":"Modanung","name":"魔大农 𝞍𝞎𝝳 現招蜍","avatar_template":"/user_avatar/discourse.urho3d.io/modanung/{size}/3290_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":861,"username":"GodMan","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/g/e79b87/{size}.png"}}]},{"id":7138,"title":"Build fails (linking phase) on Linux","fancy_title":"Build fails (linking phase) on Linux","slug":"build-fails-linking-phase-on-linux","posts_count":4,"reply_count":0,"highest_post_number":4,"image_url":null,"created_at":"2022-01-20T03:08:29.663Z","last_posted_at":"2022-01-21T15:27:41.192Z","bumped":true,"bumped_at":"2022-01-21T15:27:41.192Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":3,"views":178,"category_id":10,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":null,"description":"Original Poster","user":{"id":1502,"username":"jasperry","name":"Jason Perry","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/j/5fc32e/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":1038,"username":"dertom","name":"Thomas Trocha","avatar_template":"/user_avatar/discourse.urho3d.io/dertom/{size}/1815_2.png"}},{"extras":"latest","description":"Most Recent Poster","user":{"id":1304,"username":"lebrewer","name":"lebrewer","avatar_template":"/user_avatar/discourse.urho3d.io/lebrewer/{size}/2811_2.png"}}]},{"id":7185,"title":"Update Ray ray direction","fancy_title":"Update Ray ray direction","slug":"update-ray-ray-direction","posts_count":5,"reply_count":1,"highest_post_number":5,"image_url":null,"created_at":"2022-02-05T00:28:45.414Z","last_posted_at":"2022-02-05T20:19:51.238Z","bumped":true,"bumped_at":"2022-02-05T20:19:51.238Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":0,"views":144,"category_id":10,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":861,"username":"GodMan","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/g/e79b87/{size}.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":628,"username":"SirNate0","name":"SirNate0","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/s/9f8e36/{size}.png"}}]},{"id":7067,"title":"Can the latest Urho3D version be built with VS2013?","fancy_title":"Can the latest Urho3D version be built with VS2013?","slug":"can-the-latest-urho3d-version-be-built-with-vs2013","posts_count":3,"reply_count":0,"highest_post_number":3,"image_url":null,"created_at":"2021-11-25T18:00:24.336Z","last_posted_at":"2021-11-26T17:22:21.878Z","bumped":true,"bumped_at":"2021-11-26T17:22:21.878Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags_descriptions":{},"like_count":0,"views":157,"category_id":10,"featured_link":null,"has_accepted_answer":true,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":861,"username":"GodMan","name":"","avatar_template":"https://avatars.discourse-cdn.com/v4/letter/g/e79b87/{size}.png"}},{"extras":null,"description":"Frequent Poster, Accepted Answer","user":{"id":4,"username":"weitjong","name":"Yao Wei Tjong","avatar_template":"/user_avatar/discourse.urho3d.io/weitjong/{size}/4_2.png"}}]}],"tags_descriptions":{},"id":1762,"title":"Scene Replication - AnimationController","fancy_title":"Scene Replication - AnimationController","posts_count":2,"created_at":"2016-02-08T21:22:33.000Z","views":570,"reply_count":0,"like_count":0,"last_posted_at":"2016-02-13T02:33:50.000Z","visible":true,"closed":false,"archived":false,"has_summary":false,"archetype":"regular","slug":"scene-replication-animationcontroller","category_id":10,"word_count":2148,"deleted_at":null,"user_id":213,"featured_link":null,"pinned_globally":false,"pinned_at":null,"pinned_until":null,"image_url":null,"slow_mode_seconds":0,"draft":null,"draft_key":"topic_1762","draft_sequence":null,"unpinned":null,"pinned":false,"current_post_number":1,"highest_post_number":2,"deleted_by":null,"actions_summary":[{"id":4,"count":0,"hidden":false,"can_act":false},{"id":8,"count":0,"hidden":false,"can_act":false},{"id":7,"count":0,"hidden":false,"can_act":false}],"chunk_size":20,"bookmarked":false,"bookmarks":[],"topic_timer":null,"message_bus_last_id":0,"participant_count":2,"show_read_indicator":false,"thumbnails":null,"slow_mode_enabled_until":null,"tags_disable_ads":false,"accepted_answer":{"post_number":2,"username":"rasteron","excerpt":"Hey Aramis, \nCheck out the Ninja.xml object under /Data/Objects, it is created in that file along with other stuff. \nNinja.xml \n...\t\n\u0026lt;component type=\u0026quot;AnimationController\u0026quot; id=\u0026quot;7\u0026quot;\u0026gt;\n  \u0026lt;attribute name=\u0026quot;Animations\u0026quot; /\u0026gt;\n\u0026lt;/component\u0026gt;\n\nYes NSW is multiplayer ready, but this part searches for the animation co\u0026hellip;"},"details":{"can_edit":false,"notification_level":1,"participants":[{"id":54,"username":"rasteron","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/rasteron/{size}/55_2.png","post_count":1,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"trust_level":2},{"id":213,"username":"Aramis","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/aramis/{size}/124_2.png","post_count":1,"primary_group_name":null,"flair_name":null,"flair_url":null,"flair_color":null,"flair_bg_color":null,"trust_level":1}],"created_by":{"id":213,"username":"Aramis","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/aramis/{size}/124_2.png"},"last_poster":{"id":54,"username":"rasteron","name":"","avatar_template":"/user_avatar/discourse.urho3d.io/rasteron/{size}/55_2.png"},"links":[{"url":"http://aramis.bitbucket.org/downloads/temp/AnimRep.zip","title":"Bitbucket | The Git solution for professional teams","internal":false,"attachment":false,"reflection":false,"clicks":3,"user_id":213,"domain":"aramis.bitbucket.org","root_domain":"bitbucket.org"},{"url":"http://urho3d.github.io/documentation/1.5/_network.html","title":"Urho3D - Documentation","internal":false,"attachment":false,"reflection":false,"clicks":3,"user_id":213,"domain":"urho3d.github.io","root_domain":"urho3d.github.io"},{"url":"http://Ninja.as","title":"we're currently doing some maintenance","internal":false,"attachment":false,"reflection":false,"clicks":2,"user_id":213,"domain":"Ninja.as","root_domain":"Ninja.as"},{"url":"http://Client.as","title":null,"internal":false,"attachment":false,"reflection":false,"clicks":1,"user_id":213,"domain":"Client.as","root_domain":"Client.as"}]}}